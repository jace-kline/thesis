m4trace:/usr/share/aclocal-1.16/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.16'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.16.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.16/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.16.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.16/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.16/cond-if.m4:23: -1- AC_DEFUN([AM_COND_IF], [m4_ifndef([_AM_COND_VALUE_$1],
	   [m4_fatal([$0: no such condition "$1"])])dnl
_AM_COND_IF([$1])dnl
if test -z "$$1_TRUE"; then :
  m4_n([$2])[]dnl
m4_ifval([$3],
[_AM_COND_ELSE([$1])dnl
else
  $3
])dnl
_AM_COND_ENDIF([$1])dnl
fi[]dnl
])
m4trace:/usr/share/aclocal-1.16/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.16/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.16/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.16/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.16/depout.m4:11: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  AS_CASE([$CONFIG_FILES],
          [*\'*], [eval set x "$CONFIG_FILES"],
          [*], [set x $CONFIG_FILES])
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`AS_ECHO(["$am_mf"]) | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`AS_DIRNAME(["$am_mf"])`
    am_filepart=`AS_BASENAME(["$am_mf"])`
    AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles]) || am_rc=$?
  done
  if test $am_rc -ne 0; then
    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  Try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).])
  fi
  AS_UNSET([am_dirpart])
  AS_UNSET([am_filepart])
  AS_UNSET([am_mf])
  AS_UNSET([am_rc])
  rm -f conftest-deps.mk
}
])
m4trace:/usr/share/aclocal-1.16/depout.m4:62: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"])])
m4trace:/usr/share/aclocal-1.16/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <https://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.16/init.m4:186: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.16/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.16/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.16/make.m4:13: -1- AC_DEFUN([AM_MAKE_INCLUDE], [AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
  AS_CASE([$?:`cat confinc.out 2>/dev/null`],
      ['0:this is the am__doit target'],
      [AS_CASE([$s],
          [BSD], [am__include='.include' am__quote='"'],
          [am__include='include' am__quote=''])])
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
AC_MSG_RESULT([${_am_result}])
AC_SUBST([am__include])])
m4trace:/usr/share/aclocal-1.16/make.m4:42: -1- m4_pattern_allow([^am__quote$])
m4trace:/usr/share/aclocal-1.16/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.16/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.16/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.16/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.16/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.16/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.16/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.16/sanity.m4:11: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.16/silent.m4:12: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.16/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.16/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.16/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.16/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/00gnulib.m4:24: -1- AC_DEFUN([gl_COMPILER_CLANG], [
dnl AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([whether the compiler is clang],
    [gl_cv_compiler_clang],
    [dnl Use _AC_COMPILE_IFELSE instead of AC_EGREP_CPP, to avoid error
     dnl "circular dependency of AC_LANG_COMPILER(C)" if AC_PROG_CC has
     dnl not yet been invoked.
     _AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[
           #ifdef __clang__
           barfbarf
           #endif
           ]],[[]])
        ],
        [gl_cv_compiler_clang=no],
        [gl_cv_compiler_clang=yes])
    ])
])
m4trace:m4/00gnulib.m4:43: -1- AC_DEFUN([gl_COMPILER_PREPARE_CHECK_DECL], [
dnl AC_REQUIRE([AC_PROG_CC])
dnl AC_REQUIRE([gl_COMPILER_CLANG])
  AC_CACHE_CHECK([for compiler option needed when checking for declarations],
    [gl_cv_compiler_check_decl_option],
    [if test $gl_cv_compiler_clang = yes; then
       dnl Test whether the compiler supports the option
       dnl '-Werror=implicit-function-declaration'.
       save_ac_compile="$ac_compile"
       ac_compile="$ac_compile -Werror=implicit-function-declaration"
       dnl Use _AC_COMPILE_IFELSE instead of AC_COMPILE_IFELSE, to avoid a
       dnl warning "AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS".
       _AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[]])],
         [gl_cv_compiler_check_decl_option='-Werror=implicit-function-declaration'],
         [gl_cv_compiler_check_decl_option=none])
       ac_compile="$save_ac_compile"
     else
       gl_cv_compiler_check_decl_option=none
     fi
    ])
  if test "x$gl_cv_compiler_check_decl_option" != xnone; then
    ac_compile_for_check_decl="$ac_compile $gl_cv_compiler_check_decl_option"
  else
    ac_compile_for_check_decl="$ac_compile"
  fi
])
m4trace:m4/00gnulib.m4:85: -1- AC_DEFUN([gl_00GNULIB])
m4trace:m4/__inline.m4:7: -1- AC_DEFUN([gl___INLINE], [
  AC_CACHE_CHECK([whether the compiler supports the __inline keyword],
    [gl_cv_c___inline],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
         [[typedef int foo_t;
           static __inline foo_t foo (void) { return 0; }]],
         [[return foo ();]])],
       [gl_cv_c___inline=yes],
       [gl_cv_c___inline=no])])
  if test $gl_cv_c___inline = yes; then
    AC_DEFINE([HAVE___INLINE], [1],
      [Define to 1 if the compiler supports the keyword '__inline'.])
  fi
])
m4trace:m4/absolute-header.m4:22: -1- AC_DEFUN([gl_ABSOLUTE_HEADER], [AC_REQUIRE([AC_CANONICAL_HOST])
AC_LANG_PREPROC_REQUIRE()dnl
m4_foreach_w([gl_HEADER_NAME], [$1],
  [AS_VAR_PUSHDEF([gl_absolute_header],
                  [gl_cv_absolute_]m4_defn([gl_HEADER_NAME]))dnl
  AC_CACHE_CHECK([absolute name of <]m4_defn([gl_HEADER_NAME])[>],
    [gl_absolute_header],
    [AS_VAR_PUSHDEF([ac_header_exists],
                    [ac_cv_header_]m4_defn([gl_HEADER_NAME]))dnl
    AC_CHECK_HEADERS_ONCE(m4_defn([gl_HEADER_NAME]))dnl
    if test AS_VAR_GET([ac_header_exists]) = yes; then
      gl_ABSOLUTE_HEADER_ONE(m4_defn([gl_HEADER_NAME]))
    fi
    AS_VAR_POPDEF([ac_header_exists])dnl
    ])dnl
  AC_DEFINE_UNQUOTED(AS_TR_CPP([ABSOLUTE_]m4_defn([gl_HEADER_NAME])),
                     ["AS_VAR_GET([gl_absolute_header])"],
                     [Define this to an absolute name of <]m4_defn([gl_HEADER_NAME])[>.])
  AS_VAR_POPDEF([gl_absolute_header])dnl
])dnl
])
m4trace:m4/absolute-header.m4:52: -1- AC_DEFUN([gl_ABSOLUTE_HEADER_ONE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_LANG_CONFTEST([AC_LANG_SOURCE([[#include <]]m4_dquote([$1])[[>]])])
  dnl AIX "xlc -E" and "cc -E" omit #line directives for header files
  dnl that contain only a #include of other header files and no
  dnl non-comment tokens of their own. This leads to a failure to
  dnl detect the absolute name of <dirent.h>, <signal.h>, <poll.h>
  dnl and others. The workaround is to force preservation of comments
  dnl through option -C. This ensures all necessary #line directives
  dnl are present. GCC supports option -C as well.
  case "$host_os" in
    aix*) gl_absname_cpp="$ac_cpp -C" ;;
    *)    gl_absname_cpp="$ac_cpp" ;;
  esac
changequote(,)
  case "$host_os" in
    mingw*)
      dnl For the sake of native Windows compilers (excluding gcc),
      dnl treat backslash as a directory separator, like /.
      dnl Actually, these compilers use a double-backslash as
      dnl directory separator, inside the
      dnl   # line "filename"
      dnl directives.
      gl_dirsep_regex='[/\\]'
      ;;
    *)
      gl_dirsep_regex='\/'
      ;;
  esac
  dnl A sed expression that turns a string into a basic regular
  dnl expression, for use within "/.../".
  gl_make_literal_regex_sed='s,[]$^\\.*/[],\\&,g'
  gl_header_literal_regex=`echo '$1' \
                           | sed -e "$gl_make_literal_regex_sed"`
  gl_absolute_header_sed="/${gl_dirsep_regex}${gl_header_literal_regex}/"'{
      s/.*"\(.*'"${gl_dirsep_regex}${gl_header_literal_regex}"'\)".*/\1/
      s|^/[^/]|//&|
      p
      q
    }'
changequote([,])
  dnl eval is necessary to expand gl_absname_cpp.
  dnl Ultrix and Pyramid sh refuse to redirect output of eval,
  dnl so use subshell.
  AS_VAR_SET([gl_cv_absolute_]AS_TR_SH([[$1]]),
[`(eval "$gl_absname_cpp conftest.$ac_ext") 2>&AS_MESSAGE_LOG_FD |
  sed -n "$gl_absolute_header_sed"`])
])
m4trace:m4/acl.m4:11: -1- AC_DEFUN([gl_FUNC_ACL_ARG], [
  gl_need_lib_has_acl=
  AC_ARG_ENABLE([acl],
    AS_HELP_STRING([--disable-acl], [do not support ACLs]),
    , [enable_acl=auto])
])
m4trace:m4/acl.m4:20: -1- AC_DEFUN([gl_FUNC_ACL], [
  AC_REQUIRE([gl_FUNC_ACL_ARG])
  AC_CHECK_FUNCS_ONCE([fchmod])
  LIB_ACL=
  use_acl=0
  if test "$enable_acl" != no; then
    dnl On all platforms, the ACL related API is declared in <sys/acl.h>.
    AC_CHECK_HEADERS([sys/acl.h])
    if test $ac_cv_header_sys_acl_h = yes; then
      ac_save_LIBS=$LIBS

      dnl Test for POSIX-draft-like API (GNU/Linux, FreeBSD, Mac OS X,
      dnl IRIX, Tru64, Cygwin >= 2.5).
      dnl -lacl is needed on GNU/Linux, -lpacl on OSF/1.
      if test $use_acl = 0; then
        AC_SEARCH_LIBS([acl_get_file], [acl pacl],
          [if test "$ac_cv_search_acl_get_file" != "none required"; then
             LIB_ACL=$ac_cv_search_acl_get_file
           fi
           AC_CHECK_FUNCS(
             [acl_get_file acl_get_fd acl_set_file acl_set_fd \
              acl_free acl_from_mode acl_from_text \
              acl_delete_def_file acl_extended_file \
              acl_delete_fd_np acl_delete_file_np \
              acl_copy_ext_native acl_create_entry_np \
              acl_to_short_text acl_free_text])
           # If the acl_get_file bug is detected, don't enable the ACL support.
           gl_ACL_GET_FILE([use_acl=1], [])
           if test $use_acl = 1; then
             dnl On GNU/Linux, an additional API is declared in <acl/libacl.h>.
             AC_CHECK_HEADERS([acl/libacl.h])
             AC_REPLACE_FUNCS([acl_entries])
             AC_CACHE_CHECK([for ACL_FIRST_ENTRY],
               [gl_cv_acl_ACL_FIRST_ENTRY],
               [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
[[#include <sys/types.h>
#include <sys/acl.h>
int type = ACL_FIRST_ENTRY;]])],
                  [gl_cv_acl_ACL_FIRST_ENTRY=yes],
                  [gl_cv_acl_ACL_FIRST_ENTRY=no])])
             if test $gl_cv_acl_ACL_FIRST_ENTRY = yes; then
               AC_DEFINE([HAVE_ACL_FIRST_ENTRY], [1],
                 [Define to 1 if the constant ACL_FIRST_ENTRY exists.])
             fi
             dnl On Mac OS X, other types of ACLs are supported.
             AC_CACHE_CHECK([for ACL_TYPE_EXTENDED],
               [gl_cv_acl_ACL_TYPE_EXTENDED],
               [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
[[#include <sys/types.h>
#include <sys/acl.h>
int type = ACL_TYPE_EXTENDED;]])],
                  [gl_cv_acl_ACL_TYPE_EXTENDED=yes],
                  [gl_cv_acl_ACL_TYPE_EXTENDED=no])])
             if test $gl_cv_acl_ACL_TYPE_EXTENDED = yes; then
               AC_DEFINE([HAVE_ACL_TYPE_EXTENDED], [1],
                 [Define to 1 if the ACL type ACL_TYPE_EXTENDED exists.])
             fi
           else
             LIB_ACL=
           fi
          ])
      fi

      dnl Test for Solaris API (Solaris, Cygwin).
      if test $use_acl = 0; then
        AC_CHECK_FUNCS([facl])
        if test $ac_cv_func_facl = yes; then
          AC_SEARCH_LIBS([acl_trivial], [sec],
            [if test "$ac_cv_search_acl_trivial" != "none required"; then
               LIB_ACL=$ac_cv_search_acl_trivial
             fi
            ])
          AC_CHECK_FUNCS([acl_trivial])
          use_acl=1
        fi
      fi

      dnl Test for HP-UX API.
      if test $use_acl = 0; then
        AC_CHECK_FUNCS([getacl])
        if test $ac_cv_func_getacl = yes; then
          use_acl=1
        fi
        dnl Test for HP-UX 11.11 API.
        AC_CHECK_HEADERS([aclv.h], [], [], [#include <sys/types.h>])
      fi

      dnl Test for AIX API (AIX 5.3 or newer).
      if test $use_acl = 0; then
        AC_CHECK_FUNCS([aclx_get])
        if test $ac_cv_func_aclx_get = yes; then
          use_acl=1
        fi
      fi

      dnl Test for older AIX API.
      if test $use_acl = 0 || test "$ac_cv_func_aclx_get" = yes; then
        AC_CHECK_FUNCS([statacl])
        if test $ac_cv_func_statacl = yes; then
          use_acl=1
        fi
      fi

      dnl Test for NonStop Kernel API.
      if test $use_acl = 0; then
        AC_CHECK_FUNCS([aclsort])
        if test $ac_cv_func_aclsort = yes; then
          use_acl=1
        fi
      fi

      LIBS=$ac_save_LIBS
    fi

    if test "$enable_acl$use_acl" = yes0; then
      AC_MSG_ERROR([ACLs enabled but support not detected])
    elif test "$enable_acl$use_acl" = auto0; then
      AC_MSG_WARN([libacl development library was not found or not usable.])
      AC_MSG_WARN([AC_PACKAGE_NAME will be built without ACL support.])
    fi
  fi
  test -n "$gl_need_lib_has_acl" && LIB_HAS_ACL=$LIB_ACL
  AC_SUBST([LIB_ACL])
  AC_DEFINE_UNQUOTED([USE_ACL], [$use_acl],
    [Define to nonzero if you want access control list support.])
  USE_ACL=$use_acl
  AC_SUBST([USE_ACL])
])
m4trace:m4/acl.m4:157: -1- AC_DEFUN([gl_ACL_GET_FILE], [
  AC_CACHE_CHECK([for working acl_get_file], [gl_cv_func_working_acl_get_file],
    [gl_cv_func_working_acl_get_file=no
     AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
           #include <sys/acl.h>
           #include <errno.h>
          ]],
          [[acl_t acl = acl_get_file (".", ACL_TYPE_ACCESS);
            return acl ? acl_free (acl) != 0 : errno == ENOENT;
          ]])],
       [if test $cross_compiling = yes; then
          gl_cv_func_working_acl_get_file="guessing yes"
        elif ./conftest$ac_exeext; then
          gl_cv_func_working_acl_get_file=yes
        fi])])
  AS_IF([test "$gl_cv_func_working_acl_get_file" != no], [$1], [$2])
])
m4trace:m4/acl.m4:180: -1- AC_DEFUN([gl_FILE_HAS_ACL], [
  AC_REQUIRE([gl_FUNC_ACL_ARG])
  if test "$enable_acl" != no; then
    AC_CACHE_CHECK([for getxattr with XATTR_NAME_POSIX_ACL macros],
      [gl_cv_getxattr_with_posix_acls],
      [gl_cv_getxattr_with_posix_acls=no
       AC_LINK_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/types.h>
              #include <sys/xattr.h>
              #include <linux/xattr.h>
            ]],
            [[ssize_t a = getxattr (".", XATTR_NAME_POSIX_ACL_ACCESS, 0, 0);
              ssize_t b = getxattr (".", XATTR_NAME_POSIX_ACL_DEFAULT, 0, 0);
              return a < 0 || b < 0;
            ]])],
         [gl_cv_getxattr_with_posix_acls=yes])])
  fi
  if test "$gl_cv_getxattr_with_posix_acls" = yes; then
    LIB_HAS_ACL=
    AC_DEFINE([GETXATTR_WITH_POSIX_ACLS], 1,
      [Define to 1 if getxattr works with XATTR_NAME_POSIX_ACL_ACCESS
       and XATTR_NAME_POSIX_ACL_DEFAULT.])
  else
    dnl Set gl_need_lib_has_acl to a nonempty value, so that any
    dnl later gl_FUNC_ACL call will set LIB_HAS_ACL=$LIB_ACL.
    gl_need_lib_has_acl=1
    LIB_HAS_ACL=$LIB_ACL
  fi
  AC_SUBST([LIB_HAS_ACL])
])
m4trace:m4/af_alg.m4:9: -1- AC_DEFUN_ONCE([gl_AF_ALG], [
  AC_REQUIRE([gl_SYS_SOCKET_H])
  AC_REQUIRE([AC_C_INLINE])

  dnl Check whether linux/if_alg.h has needed features.
  AC_CACHE_CHECK([whether linux/if_alg.h has struct sockaddr_alg.],
    [gl_cv_header_linux_if_alg_salg],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <sys/socket.h>
                          #include <linux/if_alg.h>
                          struct sockaddr_alg salg = {
                            .salg_family = AF_ALG,
                            .salg_type = "hash",
                            .salg_name = "sha1",
                          };]])],
       [gl_cv_header_linux_if_alg_salg=yes],
       [gl_cv_header_linux_if_alg_salg=no])])
  if test "$gl_cv_header_linux_if_alg_salg" = yes; then
    AC_DEFINE([HAVE_LINUX_IF_ALG_H], [1],
      [Define to 1 if you have 'struct sockaddr_alg' defined.])
  fi

  dnl The default is to not use AF_ALG if available,
  dnl as it's system dependent as to whether the kernel
  dnl routines are faster than libcrypto for example.
  use_af_alg=no
  AC_ARG_WITH([linux-crypto],
    [AS_HELP_STRING([[--with-linux-crypto]],
       [use Linux kernel cryptographic API (if available) for the hash functions
        MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512 on files])],
    [use_af_alg=$withval],
    [use_af_alg=no])
  dnl We cannot use it if it is not available.
  if test "$gl_cv_header_linux_if_alg_salg" != yes; then
    if test "$use_af_alg" != no; then
      AC_MSG_WARN([Linux kernel cryptographic API not found])
    fi
    use_af_alg=no
  fi

  if test "$use_af_alg" != no; then
    USE_AF_ALG=1
  else
    USE_AF_ALG=0
  fi
  AC_DEFINE_UNQUOTED([USE_LINUX_CRYPTO_API], [$USE_AF_ALG],
    [Define to 1 if you want to use the Linux kernel cryptographic API.])
])
m4trace:m4/alignalloc.m4:6: -1- AC_DEFUN([gl_ALIGNALLOC], [
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([posix_memalign])
])
m4trace:m4/alloca.m4:8: -1- AC_DEFUN([gl_FUNC_ALLOCA], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  if test $ac_cv_func_alloca_works = no; then
    gl_PREREQ_ALLOCA
  fi

  # Define an additional variable used in the Makefile substitution.
  if test $ac_cv_working_alloca_h = yes; then
    AC_CACHE_CHECK([for alloca as a compiler built-in], [gl_cv_rpl_alloca], [
      AC_EGREP_CPP([Need own alloca], [
#if defined __GNUC__ || defined _AIX || defined _MSC_VER
        Need own alloca
#endif
        ], [gl_cv_rpl_alloca=yes], [gl_cv_rpl_alloca=no])
    ])
    if test $gl_cv_rpl_alloca = yes; then
      dnl OK, alloca can be implemented through a compiler built-in.
      AC_DEFINE([HAVE_ALLOCA], [1],
        [Define to 1 if you have 'alloca' after including <alloca.h>,
         a header that may be supplied by this distribution.])
      GL_GENERATE_ALLOCA_H=true
    else
      dnl alloca exists as a library function, i.e. it is slow and probably
      dnl a memory leak. Don't define HAVE_ALLOCA in this case.
      GL_GENERATE_ALLOCA_H=false
    fi
  else
    GL_GENERATE_ALLOCA_H=true
  fi

  if test $ac_cv_working_alloca_h = yes; then
    HAVE_ALLOCA_H=1
  else
    HAVE_ALLOCA_H=0
  fi
  AC_SUBST([HAVE_ALLOCA_H])
])
m4trace:m4/alloca.m4:49: -1- AC_DEFUN([gl_PREREQ_ALLOCA], [:])
m4trace:m4/arpa_inet_h.m4:9: -1- AC_DEFUN_ONCE([gl_ARPA_INET_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_ARPA_INET_H_DEFAULTS])

  AC_CHECK_HEADERS_ONCE([arpa/inet.h])
  if test $ac_cv_header_arpa_inet_h = yes; then
    HAVE_ARPA_INET_H=1
  else
    HAVE_ARPA_INET_H=0
  fi
  AC_SUBST([HAVE_ARPA_INET_H])
  dnl <arpa/inet.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([arpa/inet.h])

  AC_REQUIRE([gl_FEATURES_H])

  gl_PREREQ_SYS_H_WS2TCPIP

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* On some systems, this header is not self-consistent.  */
#if !(defined __GLIBC__ || defined __UCLIBC__)
# include <sys/socket.h>
#endif
#ifdef __TANDEM
# include <netdb.h>
#endif
#include <arpa/inet.h>
    ]], [inet_ntop inet_pton])
])
m4trace:m4/arpa_inet_h.m4:47: -1- AC_DEFUN([gl_ARPA_INET_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_ARPA_INET_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/arpa_inet_h.m4:57: -1- AC_DEFUN([gl_ARPA_INET_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_ARPA_INET_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_INET_NTOP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_INET_PTON])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_ARPA_INET_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_ARPA_INET_H_DEFAULTS])
])
m4trace:m4/arpa_inet_h.m4:67: -1- AC_DEFUN([gl_ARPA_INET_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_INET_NTOP=1;  AC_SUBST([HAVE_DECL_INET_NTOP])
  HAVE_DECL_INET_PTON=1;  AC_SUBST([HAVE_DECL_INET_PTON])
  REPLACE_INET_NTOP=0;    AC_SUBST([REPLACE_INET_NTOP])
  REPLACE_INET_PTON=0;    AC_SUBST([REPLACE_INET_PTON])
])
m4trace:m4/assert.m4:11: -1- AC_DEFUN([gl_ASSERT], [
  AC_MSG_CHECKING([whether to enable assertions])
  AC_ARG_ENABLE([assert],
    [AS_HELP_STRING([--disable-assert], [turn off assertions])],
    [AS_IF([test "x$enableval" = xno],
      [AC_DEFINE([NDEBUG], [1],
        [Define to 1 if assertions should be disabled.])],
      [test "x$enableval" != xyes],
      [AC_MSG_WARN([invalid argument supplied to --enable-assert])
      enable_assert=yes])],
    [enable_assert=yes])
  AC_MSG_RESULT([$enable_assert])
])
m4trace:m4/atoll.m4:7: -1- AC_DEFUN([gl_FUNC_ATOLL], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_CHECK_FUNCS([atoll])
  if test $ac_cv_func_atoll = no; then
    HAVE_ATOLL=0
  fi
])
m4trace:m4/atoll.m4:17: -1- AC_DEFUN([gl_PREREQ_ATOLL], [
  :
])
m4trace:m4/autobuild.m4:10: -1- AC_DEFUN([AB_INIT], [
  AC_REQUIRE([AC_CANONICAL_BUILD])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if test -z "$AB_PACKAGE"; then
    AB_PACKAGE=${PACKAGE_NAME:-$PACKAGE}
  fi
  AC_MSG_NOTICE([autobuild project... $AB_PACKAGE])

  if test -z "$AB_VERSION"; then
    AB_VERSION=${PACKAGE_VERSION:-$VERSION}
  fi
  AC_MSG_NOTICE([autobuild revision... $AB_VERSION])

  hostname=`hostname`
  if test "$hostname"; then
    AC_MSG_NOTICE([autobuild hostname... $hostname])
  fi

  m4_if([$1],[],,[AC_MSG_NOTICE([autobuild mode... $1])])

  date=`TZ=UTC0 date +%Y%m%dT%H%M%SZ`
  if test "$?" != 0; then
    date=`date`
  fi
  if test "$date"; then
    AC_MSG_NOTICE([autobuild timestamp... $date])
  fi
])
m4trace:m4/backupfile.m4:8: -1- AC_DEFUN([gl_BACKUPFILE], [
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_DIRENT_D_INO])
  AC_REQUIRE([AC_SYS_LONG_FILE_NAMES])
  AC_CHECK_FUNCS_ONCE([pathconf])
])
m4trace:m4/base32.m4:7: -1- AC_DEFUN([gl_FUNC_BASE32], [
  gl_PREREQ_BASE32
])
m4trace:m4/base32.m4:13: -1- AC_DEFUN([gl_PREREQ_BASE32], [
  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/base64.m4:7: -1- AC_DEFUN([gl_FUNC_BASE64], [
  gl_PREREQ_BASE64
])
m4trace:m4/base64.m4:13: -1- AC_DEFUN([gl_PREREQ_BASE64], [
  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/bison.m4:44: -1- AC_DEFUN([gl_PROG_BISON], [
  AC_CHECK_PROGS([$1], [bison])
  if test -z "$[$1]"; then
    ac_verc_fail=yes
  else
    cat >conftest.y <<_ACEOF
%require "$2"
%%
exp:
_ACEOF
    AC_MSG_CHECKING([for bison $2 or newer])
    ac_prog_version=`$$1 --version 2>&1 | sed -n 's/^.*GNU Bison.* \([[0-9]]*\.[[0-9.]]*\).*$/\1/p'`
    : ${ac_prog_version:='v. ?.??'}
    if $$1 conftest.y -o conftest.c 2>/dev/null; then
      ac_prog_version="$ac_prog_version, ok"
      ac_verc_fail=no
    else
      ac_prog_version="$ac_prog_version, bad"
      ac_verc_fail=yes
    fi
    rm -f conftest.y conftest.c
    AC_MSG_RESULT([$ac_prog_version])
  fi
  if test $ac_verc_fail = yes; then
    [$1]=:
  fi
  AC_SUBST([$1])
])
m4trace:m4/bison.m4:76: -1- AC_DEFUN([gl_BISON], [
  : ${YACC='bison -o y.tab.c'}
dnl
dnl Declaring YACC & YFLAGS precious will not be necessary after GNULIB
dnl requires an Autoconf greater than 2.59c, but it will probably still be
dnl useful to override the description of YACC in the --help output, re
dnl parse-datetime.y assuming 'bison -o y.tab.c'.
  AC_ARG_VAR([YACC],
[The "Yet Another C Compiler" implementation to use.  Defaults to
'bison -o y.tab.c'.  Values other than 'bison -o y.tab.c' will most likely
break on most systems.])dnl
  AC_ARG_VAR([YFLAGS],
[YFLAGS contains the list arguments that will be passed by default to Bison.
This script will default YFLAGS to the empty string to avoid a default value of
'-d' given by some make applications.])dnl
])
m4trace:m4/boottime.m4:21: -1- AC_DEFUN([GNULIB_BOOT_TIME], [
  AC_CHECK_FUNCS([sysctl])
  AC_CHECK_HEADERS_ONCE([sys/param.h])
  AC_CHECK_HEADERS([sys/sysctl.h], [], [],
    [AC_INCLUDES_DEFAULT
     [#if HAVE_SYS_PARAM_H
       #include <sys/param.h>
      #endif]])
  AC_CHECK_HEADERS_ONCE([utmp.h utmpx.h OS.h])
  AC_CACHE_CHECK(
    [whether we can get the system boot time],
    [gnulib_cv_have_boot_time],
    [
      AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
[AC_INCLUDES_DEFAULT
#if HAVE_SYSCTL && HAVE_SYS_SYSCTL_H
# if HAVE_SYS_PARAM_H
#  include <sys/param.h> /* needed for OpenBSD 3.0 */
# endif
# include <sys/sysctl.h>
#endif
#if HAVE_UTMPX_H
# include <utmpx.h>
#elif HAVE_UTMP_H
# include <utmp.h>
#endif
#if HAVE_OS_H
# include <OS.h>
#endif
],
[[
#if (defined BOOT_TIME                              \
     || (defined CTL_KERN && defined KERN_BOOTTIME) \
     || HAVE_OS_H)
/* your system *does* have the infrastructure to determine boot time */
#else
please_tell_us_how_to_determine_boot_time_on_your_system
#endif
]])],
       [gnulib_cv_have_boot_time=yes],
       [gnulib_cv_have_boot_time=no])
    ])
  AS_IF([test $gnulib_cv_have_boot_time = yes], [$1], [$2])
])
m4trace:m4/btowc.m4:7: -1- AC_DEFUN([gl_FUNC_BTOWC], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  dnl Check whether <wchar.h> is usable at all, first. Otherwise the test
  dnl program below may lead to an endless loop. See
  dnl <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=42440>.
  AC_REQUIRE([gl_WCHAR_H_INLINE_OK])

  AC_CHECK_FUNCS_ONCE([btowc])
  if test $ac_cv_func_btowc = no; then
    HAVE_BTOWC=0
  else

    AC_REQUIRE([AC_PROG_CC])
    AC_REQUIRE([gt_LOCALE_FR])
    AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

    dnl Cygwin 1.7.2 btowc('\0') is WEOF, not 0.
    AC_CACHE_CHECK([whether btowc(0) is correct],
      [gl_cv_func_btowc_nul],
      [
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <wchar.h>
int main ()
{
  if (btowc ('\0') != 0)
    return 1;
  return 0;
}]])],
          [gl_cv_func_btowc_nul=yes],
          [gl_cv_func_btowc_nul=no],
          [
changequote(,)dnl
           case "$host_os" in
                      # Guess no on Cygwin.
             cygwin*) gl_cv_func_btowc_nul="guessing no" ;;
                      # Guess yes on native Windows.
             mingw*)  gl_cv_func_btowc_nul="guessing yes" ;;
                      # Guess yes otherwise.
             *)       gl_cv_func_btowc_nul="guessing yes" ;;
           esac
changequote([,])dnl
          ])
      ])

    dnl IRIX 6.5 btowc(EOF) is 0xFF, not WEOF.
    AC_CACHE_CHECK([whether btowc(EOF) is correct],
      [gl_cv_func_btowc_eof],
      [
        dnl Initial guess, used when cross-compiling or when no suitable locale
        dnl is present.
changequote(,)dnl
        case "$host_os" in
                  # Guess no on IRIX.
          irix*)  gl_cv_func_btowc_eof="guessing no" ;;
                  # Guess yes on native Windows.
          mingw*) gl_cv_func_btowc_eof="guessing yes" ;;
                  # Guess yes otherwise.
          *)      gl_cv_func_btowc_eof="guessing yes" ;;
        esac
changequote([,])dnl
        if test $LOCALE_FR != none; then
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdio.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR") != NULL)
    {
      if (btowc (EOF) != WEOF)
        return 1;
    }
  return 0;
}]])],
            [gl_cv_func_btowc_eof=yes],
            [gl_cv_func_btowc_eof=no],
            [:])
        fi
      ])

    case "$gl_cv_func_btowc_nul" in
      *yes) ;;
      *) REPLACE_BTOWC=1 ;;
    esac
    case "$gl_cv_func_btowc_eof" in
      *yes) ;;
      *) REPLACE_BTOWC=1 ;;
    esac
  fi
])
m4trace:m4/btowc.m4:103: -1- AC_DEFUN([gl_PREREQ_BTOWC], [
  :
])
m4trace:m4/builtin-expect.m4:10: -1- AC_DEFUN([gl___BUILTIN_EXPECT], [
  AC_CACHE_CHECK([for __builtin_expect],
    [gl_cv___builtin_expect],
    [AC_LINK_IFELSE(
       [AC_LANG_SOURCE([[
         int
         main (int argc, char **argv)
         {
           argc = __builtin_expect (argc, 100);
           return argv[argc != 100][0];
         }]])],
       [gl_cv___builtin_expect=yes],
       [AC_LINK_IFELSE(
          [AC_LANG_SOURCE([[
             #include <builtins.h>
             int
             main (int argc, char **argv)
             {
               argc = __builtin_expect (argc, 100);
               return argv[argc != 100][0];
             }]])],
          [gl_cv___builtin_expect="in <builtins.h>"],
          [gl_cv___builtin_expect=no])])])
  if test "$gl_cv___builtin_expect" = yes; then
    AC_DEFINE([HAVE___BUILTIN_EXPECT], [1])
  elif test "$gl_cv___builtin_expect" = "in <builtins.h>"; then
    AC_DEFINE([HAVE___BUILTIN_EXPECT], [2])
  fi
  AH_VERBATIM([HAVE___BUILTIN_EXPECT],
    [/* Define to 1 if the compiler supports __builtin_expect,
   and to 2 if <builtins.h> does.  */
#undef HAVE___BUILTIN_EXPECT
#ifndef HAVE___BUILTIN_EXPECT
# define __builtin_expect(e, c) (e)
#elif HAVE___BUILTIN_EXPECT == 2
# include <builtins.h>
#endif
    ])
])
m4trace:m4/byteswap.m4:9: -1- AC_DEFUN([gl_BYTESWAP], [
  dnl Prerequisites of lib/byteswap.in.h.
  AC_CHECK_HEADERS([byteswap.h], [
    GL_GENERATE_BYTESWAP_H=false
  ], [
    GL_GENERATE_BYTESWAP_H=true
  ])
])
m4trace:m4/c-strtod.m4:11: -1- AC_DEFUN([gl_C_STRTOD], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gt_FUNC_USELOCALE])

  AC_CHECK_HEADERS_ONCE([xlocale.h])
  dnl We can't use AC_CHECK_FUNC here, because strtod_l() is defined as a
  dnl static inline function when compiling for Android 7.1 or older.
  AC_CACHE_CHECK([for strtod_l], [gl_cv_func_strtod_l],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
            #include <locale.h>
            #if HAVE_XLOCALE_H
            # include <xlocale.h>
            #endif
            locale_t loc;
          ]],
          [[char *end;
            return strtod_l("0",&end,loc) < 0.0;
          ]])
       ],
       [gl_cv_func_strtod_l=yes],
       [gl_cv_func_strtod_l=no])
    ])
  if test $gl_cv_func_strtod_l = yes; then
    HAVE_STRTOD_L=1
  else
    HAVE_STRTOD_L=0
  fi
  AC_DEFINE_UNQUOTED([HAVE_STRTOD_L], [$HAVE_STRTOD_L],
    [Define to 1 if the system has the 'strtod_l' function.])
])
m4trace:m4/c-strtod.m4:46: -1- AC_DEFUN([gl_C_STRTOLD], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gt_FUNC_USELOCALE])
  AC_CHECK_FUNCS([strtold_l])
])
m4trace:m4/calloc.m4:18: -1- AC_DEFUN([_AC_FUNC_CALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether calloc (0, n) and calloc (n, 0) return nonnull],
    [ac_cv_func_calloc_0_nonnull],
    [if test $cross_compiling != yes; then
       ac_cv_func_calloc_0_nonnull=yes
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [AC_INCLUDES_DEFAULT],
            [[int result = 0;
              char * volatile p = calloc (0, 0);
              if (!p)
                result |= 1;
              free (p);
              return result;
            ]])],
         [],
         [ac_cv_func_calloc_0_nonnull=no])
     else
       case "$host_os" in
                        # Guess yes on glibc systems.
         *-gnu* | gnu*) ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # Guess yes on musl systems.
         *-musl*)       ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # Guess yes on native Windows.
         mingw*)        ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # If we don't know, obey --enable-cross-guesses.
         *)             ac_cv_func_calloc_0_nonnull="$gl_cross_guess_normal" ;;
       esac
     fi
    ])
  AS_CASE([$ac_cv_func_calloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/calloc.m4:57: -1- AC_DEFUN([gl_FUNC_CALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_CALLOC_POSIX])
  REPLACE_CALLOC_FOR_CALLOC_GNU="$REPLACE_CALLOC_FOR_CALLOC_POSIX"
  if test $REPLACE_CALLOC_FOR_CALLOC_GNU = 0; then
    _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC_FOR_CALLOC_GNU=1])
  fi
])
m4trace:m4/calloc.m4:72: -1- AC_DEFUN([gl_FUNC_CALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
    REPLACE_CALLOC_FOR_CALLOC_POSIX=1
  fi
  dnl Although in theory we should also test for size_t overflow,
  dnl in practice testing for ptrdiff_t overflow suffices
  dnl since PTRDIFF_MAX <= SIZE_MAX on all known Gnulib porting targets.
  dnl A separate size_t test would slow down 'configure'.
])
m4trace:m4/canon-host.m4:7: -1- AC_DEFUN([gl_PREREQ_CANON_HOST], [
  :
])
m4trace:m4/canonicalize.m4:11: -1- AC_DEFUN([gl_FUNC_CANONICALIZE_FILENAME_MODE], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_CHECK_FUNCS_ONCE([canonicalize_file_name faccessat])
  AC_REQUIRE([gl_DOUBLE_SLASH_ROOT])
  AC_REQUIRE([gl_FUNC_REALPATH_WORKS])
  if test $ac_cv_func_canonicalize_file_name = no; then
    HAVE_CANONICALIZE_FILE_NAME=0
  else
    case "$gl_cv_func_realpath_works" in
      *yes) ;;
      *)    REPLACE_CANONICALIZE_FILE_NAME=1 ;;
    esac
  fi
])
m4trace:m4/canonicalize.m4:29: -1- AC_DEFUN([gl_CANONICALIZE_LGPL], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CANONICALIZE_LGPL_SEPARATE])
  if test $ac_cv_func_canonicalize_file_name = no; then
    HAVE_CANONICALIZE_FILE_NAME=0
    if test $ac_cv_func_realpath = no; then
      HAVE_REALPATH=0
    else
      case "$gl_cv_func_realpath_works" in
        *yes) ;;
        *)    REPLACE_REALPATH=1 ;;
      esac
    fi
  else
    case "$gl_cv_func_realpath_works" in
      *yes)
        ;;
      *)
        REPLACE_CANONICALIZE_FILE_NAME=1
        REPLACE_REALPATH=1
        ;;
    esac
  fi
])
m4trace:m4/canonicalize.m4:57: -1- AC_DEFUN([gl_CANONICALIZE_LGPL_SEPARATE], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_CHECK_FUNCS_ONCE([canonicalize_file_name faccessat])

  dnl On native Windows, we use _getcwd(), regardless whether getcwd() is
  dnl available through the linker option '-loldnames'.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*) ;;
    *)      AC_CHECK_FUNCS([getcwd]) ;;
  esac

  AC_REQUIRE([gl_DOUBLE_SLASH_ROOT])
  AC_REQUIRE([gl_FUNC_REALPATH_WORKS])
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/canonicalize.m4:79: -1- AC_DEFUN([gl_FUNC_REALPATH_WORKS], [
  AC_CHECK_FUNCS_ONCE([realpath lstat])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether realpath works], [gl_cv_func_realpath_works], [
    rm -rf conftest.a conftest.d
    touch conftest.a
    # Assume that if we have lstat, we can also check symlinks.
    if test $ac_cv_func_lstat = yes; then
      ln -s conftest.a conftest.l
    fi
    mkdir conftest.d
    AC_RUN_IFELSE([
      AC_LANG_PROGRAM([[
        ]GL_NOCRASH[
        #include <errno.h>
        #include <stdlib.h>
        #include <string.h>
      ]], [[
        int result = 0;
        /* This test fails on Solaris 10.  */
        {
          char *name = realpath ("conftest.a", NULL);
          if (!(name && *name == '/'))
            result |= 1;
          free (name);
        }
        /* This test fails on older versions of Cygwin.  */
        {
          char *name = realpath ("conftest.b/../conftest.a", NULL);
          if (name != NULL)
            result |= 2;
          free (name);
        }
        /* This test fails on Cygwin 2.9.  */
        #if HAVE_LSTAT
        {
          char *name = realpath ("conftest.l/../conftest.a", NULL);
          if (name != NULL || errno != ENOTDIR)
            result |= 4;
          free (name);
        }
        #endif
        /* This test fails on Mac OS X 10.13, OpenBSD 6.0.  */
        {
          char *name = realpath ("conftest.a/", NULL);
          if (name != NULL)
            result |= 8;
          free (name);
        }
        /* This test fails on AIX 7, Solaris 10.  */
        {
          char *name1 = realpath (".", NULL);
          char *name2 = realpath ("conftest.d//./..", NULL);
          if (! name1 || ! name2 || strcmp (name1, name2))
            result |= 16;
          free (name1);
          free (name2);
        }
        #ifdef __linux__
        /* On Linux, // is the same as /. See also double-slash-root.m4.
           realpath() should respect this.
           This test fails on musl libc 1.2.2.  */
        {
          char *name = realpath ("//", NULL);
          if (! name || strcmp (name, "/"))
            result |= 32;
          free (name);
        }
        #endif
        return result;
      ]])
     ],
     [gl_cv_func_realpath_works=yes],
     [case $? in
        32) gl_cv_func_realpath_works=nearly ;;
        *)  gl_cv_func_realpath_works=no ;;
      esac
     ],
     [case "$host_os" in
                       # Guess yes on glibc systems.
        *-gnu* | gnu*) gl_cv_func_realpath_works="guessing yes" ;;
                       # Guess 'nearly' on musl systems.
        *-musl*)       gl_cv_func_realpath_works="guessing nearly" ;;
                       # Guess no on Cygwin.
        cygwin*)       gl_cv_func_realpath_works="guessing no" ;;
                       # Guess no on native Windows.
        mingw*)        gl_cv_func_realpath_works="guessing no" ;;
                       # If we don't know, obey --enable-cross-guesses.
        *)             gl_cv_func_realpath_works="$gl_cross_guess_normal" ;;
      esac
     ])
    rm -rf conftest.a conftest.l conftest.d
  ])
  case "$gl_cv_func_realpath_works" in
    *yes)
      AC_DEFINE([FUNC_REALPATH_WORKS], [1],
        [Define to 1 if realpath() can malloc memory, always gives an absolute path, and handles leading slashes and a trailing slash correctly.])
      ;;
    *nearly)
      AC_DEFINE([FUNC_REALPATH_NEARLY_WORKS], [1],
        [Define to 1 if realpath() can malloc memory, always gives an absolute path, and handles a trailing slash correctly.])
      ;;
  esac
])
m4trace:m4/chdir-long.m4:16: -1- AC_DEFUN([gl_FUNC_CHDIR_LONG], [
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])
  AC_CACHE_CHECK([whether this system supports file names of any length],
    [gl_cv_have_unlimited_file_name_length],
    [AC_EGREP_CPP([have_arbitrary_file_name_length_limit],
                  gl_PATHMAX_SNIPPET[
#ifdef PATH_MAX
have_arbitrary_file_name_length_limit
#endif],
    [gl_cv_have_unlimited_file_name_length=no],
    [gl_cv_have_unlimited_file_name_length=yes])])
])
m4trace:m4/chdir-long.m4:30: -1- AC_DEFUN([gl_PREREQ_CHDIR_LONG], [:])
m4trace:m4/check-decl.m4:14: -1- AC_DEFUN([gl_CHECK_DECLS], [
  AC_CHECK_HEADERS_ONCE([grp.h pwd.h])
  headers='
#include <sys/types.h>

#include <unistd.h>

#if HAVE_GRP_H
# include <grp.h>
#endif

#if HAVE_PWD_H
# include <pwd.h>
#endif
'
  AC_CHECK_DECLS([
    getgrgid,
    getpwuid,
    ttyname], , , $headers)

  AC_CHECK_DECLS_ONCE([geteuid])
  AC_CHECK_DECLS_ONCE([getlogin])
  AC_CHECK_DECLS_ONCE([getuid])
])
m4trace:m4/chown.m4:19: -1- AC_DEFUN([AC_FUNC_CHOWN], [
  AC_REQUIRE([AC_TYPE_UID_T])dnl
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CHECK_HEADERS([unistd.h])
  AC_CACHE_CHECK([for working chown],
    [ac_cv_func_chown_works],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [AC_INCLUDES_DEFAULT
           [#include <fcntl.h>
          ]GL_MDA_DEFINES],
          [[
            char *f = "conftest.chown";
            struct stat before, after;

            if (creat (f, 0600) < 0)
              return 1;
            if (stat (f, &before) < 0)
              return 1;
            if (chown (f, (uid_t) -1, (gid_t) -1) == -1)
              return 1;
            if (stat (f, &after) < 0)
              return 1;
            return ! (before.st_uid == after.st_uid && before.st_gid == after.st_gid);
          ]])
       ],
       [ac_cv_func_chown_works=yes],
       [ac_cv_func_chown_works=no],
       [case "$host_os" in # ((
                           # Guess yes on Linux systems.
          linux-* | linux) ac_cv_func_chown_works="guessing yes" ;;
                           # Guess yes on glibc systems.
          *-gnu* | gnu*)   ac_cv_func_chown_works="guessing yes" ;;
                           # Guess no on native Windows.
          mingw*)          ac_cv_func_chown_works="guessing no" ;;
                           # If we don't know, obey --enable-cross-guesses.
          *)               ac_cv_func_chown_works="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -f conftest.chown
    ])
  case "$ac_cv_func_chown_works" in
    *yes)
      AC_DEFINE([HAVE_CHOWN], [1],
        [Define to 1 if your system has a working `chown' function.])
      ;;
  esac
])
m4trace:m4/chown.m4:69: -1- AC_DEFUN_ONCE([gl_FUNC_CHOWN], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_TYPE_UID_T])
  AC_REQUIRE([AC_FUNC_CHOWN])
  AC_REQUIRE([gl_FUNC_CHOWN_FOLLOWS_SYMLINK])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([chown fchown])

  dnl mingw lacks chown altogether.
  if test $ac_cv_func_chown = no; then
    HAVE_CHOWN=0
  else
    dnl Some old systems treated chown like lchown.
    case "$gl_cv_func_chown_follows_symlink" in
      *yes) ;;
      *) REPLACE_CHOWN=1 ;;
    esac

    dnl Some old systems tried to use uid/gid -1 literally.
    case "$ac_cv_func_chown_works" in
      *no)
        AC_DEFINE([CHOWN_FAILS_TO_HONOR_ID_OF_NEGATIVE_ONE], [1],
          [Define if chown is not POSIX compliant regarding IDs of -1.])
        REPLACE_CHOWN=1
        ;;
    esac

    dnl Solaris 9 ignores trailing slash.
    dnl FreeBSD 7.2 mishandles trailing slash on symlinks.
    dnl Likewise for AIX 7.1.
    AC_CACHE_CHECK([whether chown honors trailing slash],
      [gl_cv_func_chown_slash_works],
      [touch conftest.file && rm -f conftest.link
       AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <unistd.h>
#include <stdlib.h>
#include <errno.h>
]GL_MDA_DEFINES],
        [[if (symlink ("conftest.file", "conftest.link")) return 1;
          if (chown ("conftest.link/", getuid (), getgid ()) == 0) return 2;
        ]])],
        [gl_cv_func_chown_slash_works=yes],
        [gl_cv_func_chown_slash_works=no],
        [case "$host_os" in
                    # Guess yes on glibc systems.
           *-gnu*)  gl_cv_func_chown_slash_works="guessing yes" ;;
                    # Guess yes on musl systems.
           *-musl*) gl_cv_func_chown_slash_works="guessing yes" ;;
                    # If we don't know, obey --enable-cross-guesses.
           *)       gl_cv_func_chown_slash_works="$gl_cross_guess_normal" ;;
         esac
        ])
      rm -f conftest.link conftest.file])
    case "$gl_cv_func_chown_slash_works" in
      *yes) ;;
      *)
        AC_DEFINE([CHOWN_TRAILING_SLASH_BUG], [1],
          [Define to 1 if chown mishandles trailing slash.])
        REPLACE_CHOWN=1
        ;;
    esac

    dnl OpenBSD fails to update ctime if ownership does not change.
    AC_CACHE_CHECK([whether chown always updates ctime],
      [gl_cv_func_chown_ctime_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <unistd.h>
#include <stdlib.h>
#include <errno.h>
#include <fcntl.h>
#include <sys/stat.h>
]GL_MDA_DEFINES],
        [[struct stat st1, st2;
          if (close (creat ("conftest.file", 0600))) return 1;
          if (stat ("conftest.file", &st1)) return 2;
          sleep (1);
          if (chown ("conftest.file", st1.st_uid, st1.st_gid)) return 3;
          if (stat ("conftest.file", &st2)) return 4;
          if (st2.st_ctime <= st1.st_ctime) return 5;
        ]])],
        [gl_cv_func_chown_ctime_works=yes],
        [gl_cv_func_chown_ctime_works=no],
        [case "$host_os" in
                    # Guess yes on glibc systems.
           *-gnu*)  gl_cv_func_chown_ctime_works="guessing yes" ;;
                    # Guess yes on musl systems.
           *-musl*) gl_cv_func_chown_ctime_works="guessing yes" ;;
                    # If we don't know, obey --enable-cross-guesses.
           *)       gl_cv_func_chown_ctime_works="$gl_cross_guess_normal" ;;
         esac
        ])
      rm -f conftest.file])
    case "$gl_cv_func_chown_ctime_works" in
      *yes) ;;
      *)
        AC_DEFINE([CHOWN_CHANGE_TIME_BUG], [1], [Define to 1 if chown fails
          to change ctime when at least one argument was not -1.])
        REPLACE_CHOWN=1
        ;;
    esac
  fi
])
m4trace:m4/chown.m4:174: -1- AC_DEFUN_ONCE([gl_FUNC_CHOWN_FOLLOWS_SYMLINK], [
  AC_CACHE_CHECK(
    [whether chown dereferences symlinks],
    [gl_cv_func_chown_follows_symlink],
    [
      AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <errno.h>
]GL_MDA_DEFINES[
        int
        main ()
        {
          int result = 0;
          char const *dangling_symlink = "conftest.dangle";

          unlink (dangling_symlink);
          if (symlink ("conftest.no-such", dangling_symlink))
            abort ();

          /* Exit successfully on a conforming system,
             i.e., where chown must fail with ENOENT.  */
          if (chown (dangling_symlink, getuid (), getgid ()) == 0)
            result |= 1;
          if (errno != ENOENT)
            result |= 2;
          return result;
        }
        ]])],
        [gl_cv_func_chown_follows_symlink=yes],
        [gl_cv_func_chown_follows_symlink=no],
        [gl_cv_func_chown_follows_symlink="guessing yes"]
      )
    ]
  )

  case "$gl_cv_func_chown_follows_symlink" in
    *yes) ;;
    *)
      AC_DEFINE([CHOWN_MODIFIES_SYMLINK], [1],
        [Define if chown modifies symlinks.])
      ;;
  esac
])
m4trace:m4/clock_time.m4:13: -1- AC_DEFUN([gl_CLOCK_TIME], [
  dnl Persuade glibc and Solaris <time.h> to declare these functions.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  # Solaris 2.5.1 needs -lposix4 to get the clock_gettime function.
  # Solaris 7 prefers the library name -lrt to the obsolescent name -lposix4.

  # Save and restore LIBS so e.g., -lrt, isn't added to it.  Otherwise, *all*
  # programs in the package would end up linked with that potentially-shared
  # library, inducing unnecessary run-time overhead.
  LIB_CLOCK_GETTIME=
  AC_SUBST([LIB_CLOCK_GETTIME])
  gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([clock_gettime], [rt posix4],
                   [test "$ac_cv_search_clock_gettime" = "none required" ||
                    LIB_CLOCK_GETTIME=$ac_cv_search_clock_gettime])
    AC_CHECK_FUNCS([clock_getres clock_gettime clock_settime])
  LIBS=$gl_saved_libs
])
m4trace:m4/close.m4:7: -1- AC_DEFUN([gl_FUNC_CLOSE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_CLOSE=1
    fi
  ])
  m4_ifdef([gl_PREREQ_SYS_H_WINSOCK2], [
    gl_PREREQ_SYS_H_WINSOCK2
    if test $UNISTD_H_HAVE_WINSOCK2_H = 1; then
      dnl Even if the 'socket' module is not used here, another part of the
      dnl application may use it and pass file descriptors that refer to
      dnl sockets to the close() function. So enable the support for sockets.
      REPLACE_CLOSE=1
    fi
  ])
  dnl Replace close() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    if test $REPLACE_CLOSE = 0; then
      gl_TEST_FCHDIR
      if test $HAVE_FCHDIR = 0; then
        REPLACE_CLOSE=1
      fi
    fi
  ])
])
m4trace:m4/closedir.m4:7: -1- AC_DEFUN([gl_FUNC_CLOSEDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_FUNCS([closedir])
  if test $ac_cv_func_closedir = no; then
    HAVE_CLOSEDIR=0
  fi
  dnl Replace closedir() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      if test $HAVE_CLOSEDIR = 1; then
        REPLACE_CLOSEDIR=1
      fi
    fi
  ])
  dnl Replace closedir() for supporting the gnulib-defined dirfd() function.
  case $host_os,$HAVE_CLOSEDIR in
    os2*,1)
      REPLACE_CLOSEDIR=1;;
  esac
])
m4trace:m4/codeset.m4:10: -1- AC_DEFUN([AM_LANGINFO_CODESET], [
  AC_CACHE_CHECK([for nl_langinfo and CODESET], [am_cv_langinfo_codeset],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <langinfo.h>]],
          [[char* cs = nl_langinfo(CODESET); return !cs;]])],
       [am_cv_langinfo_codeset=yes],
       [am_cv_langinfo_codeset=no])
    ])
  if test $am_cv_langinfo_codeset = yes; then
    AC_DEFINE([HAVE_LANGINFO_CODESET], [1],
      [Define if you have <langinfo.h> and nl_langinfo(CODESET).])
  fi
])
m4trace:m4/config-h.m4:12: -1- AC_DEFUN([gl_CONFIG_H], [AC_CONFIG_COMMANDS_PRE([test "X$DEFS" = X-DHAVE_CONFIG_H && DEFS=])])
m4trace:m4/configmake.m4:14: -1- AC_DEFUN([gl_CONFIGMAKE_PREP], [
  if test "x$lispdir" = x; then
    AC_SUBST([lispdir], ['${datarootdir}/emacs/site-lisp'])
  fi
  dnl Added in autoconf 2.70.
  if test "x$runstatedir" = x; then
    AC_SUBST([runstatedir], ['${localstatedir}/run'])
  fi

  dnl Automake 1.11 provides pkglibexecdir merely without AC_SUBST.
  dnl This blind use of AC_SUBST is safe.
  AC_SUBST([pkglibexecdir], ['${libexecdir}/${PACKAGE}'])
])
m4trace:m4/copy-file-range.m4:7: -1- AC_DEFUN([gl_FUNC_COPY_FILE_RANGE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl Persuade glibc <unistd.h> to declare copy_file_range.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Use AC_LINK_IFELSE, rather than AC_CHECK_FUNCS or a variant,
  dnl since we don't want AC_CHECK_FUNCS's checks for glibc stubs.
  dnl Programs that use copy_file_range must fall back on read+write
  dnl anyway, and there's little point to substituting the Gnulib stub
  dnl for a glibc stub.
  AC_CACHE_CHECK([for copy_file_range], [gl_cv_func_copy_file_range],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <unistd.h>
          ]],
          [[ssize_t (*func) (int, off_t *, int, off_t *, size_t, unsigned)
              = copy_file_range;
            return func (0, 0, 0, 0, 0, 0) & 127;
          ]])
       ],
       [gl_cv_func_copy_file_range=yes],
       [gl_cv_func_copy_file_range=no])
    ])

  if test "$gl_cv_func_copy_file_range" != yes; then
    HAVE_COPY_FILE_RANGE=0
  else
    AC_DEFINE([HAVE_COPY_FILE_RANGE], 1,
      [Define to 1 if the function copy_file_range exists.])

    case $host_os in
      linux*)
        AC_CACHE_CHECK([whether copy_file_range is known to work],
          [gl_cv_copy_file_range_known_to_work],
          [AC_COMPILE_IFELSE(
             [AC_LANG_PROGRAM(
                [[#include <linux/version.h>
                ]],
                [[#if LINUX_VERSION_CODE < KERNEL_VERSION (5, 3, 0)
                   #error "copy_file_range is buggy"
                  #endif
                ]])],
             [gl_cv_copy_file_range_known_to_work=yes],
             [gl_cv_copy_file_range_known_to_work=no])])
        if test "$gl_cv_copy_file_range_known_to_work" = no; then
          REPLACE_COPY_FILE_RANGE=1
        fi;;
    esac
  fi
])
m4trace:m4/ctype_h.m4:7: -1- AC_DEFUN_ONCE([gl_CTYPE_H], [
  AC_REQUIRE([gl_CTYPE_H_DEFAULTS])

  dnl <ctype.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_NEXT_HEADERS([ctype.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <ctype.h>
    ]], [isblank])
])
m4trace:m4/ctype_h.m4:24: -1- AC_DEFUN([gl_CTYPE_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_CTYPE_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/ctype_h.m4:34: -1- AC_DEFUN([gl_CTYPE_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_CTYPE_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISBLANK])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_CTYPE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_CTYPE_H_DEFAULTS])
])
m4trace:m4/ctype_h.m4:43: -1- AC_DEFUN([gl_CTYPE_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_ISBLANK=1;   AC_SUBST([HAVE_ISBLANK])
])
m4trace:m4/cycle-check.m4:7: -1- AC_DEFUN([gl_CYCLE_CHECK], [:])
m4trace:m4/d-ino.m4:15: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_DIRENT_D_INO], [AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
   AC_CACHE_CHECK([for d_ino member in directory struct],
                  [gl_cv_struct_dirent_d_ino],
     [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <sys/types.h>
             #include <sys/stat.h>
             #include <dirent.h>
           ]],
           [[DIR *dp = opendir (".");
             struct dirent *e;
             struct stat st;
             if (! dp)
               return 1;
             e = readdir (dp);
             if (! e)
               { closedir (dp); return 2; }
             if (lstat (e->d_name, &st) != 0)
               { closedir (dp); return 3; }
             if (e->d_ino != st.st_ino)
               { closedir (dp); return 4; }
             closedir (dp);
             return 0;
           ]])],
           [gl_cv_struct_dirent_d_ino=yes],
           [gl_cv_struct_dirent_d_ino=no],
           [case "$host_os" in
                            # Guess yes on glibc systems with Linux kernel.
              linux*-gnu*)  gl_cv_struct_dirent_d_ino="guessing yes" ;;
                            # Guess yes on musl systems with Linux kernel.
              linux*-musl*) gl_cv_struct_dirent_d_ino="guessing yes" ;;
                            # Guess no on native Windows.
              mingw*)       gl_cv_struct_dirent_d_ino="guessing no" ;;
                            # If we don't know, obey --enable-cross-guesses.
              *)            gl_cv_struct_dirent_d_ino="$gl_cross_guess_normal" ;;
            esac
           ])])
   case "$gl_cv_struct_dirent_d_ino" in
     *yes)
       AC_DEFINE([D_INO_IN_DIRENT], [1],
         [Define if struct dirent has a member d_ino that actually works.])
       ;;
   esac
  
])
m4trace:m4/d-type.m4:14: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_DIRENT_D_TYPE], [AC_CACHE_CHECK([for d_type member in directory struct],
                  [gl_cv_struct_dirent_d_type],
     [AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <dirent.h>
         ]],
         [[struct dirent dp; dp.d_type = 0;]])],
       [gl_cv_struct_dirent_d_type=yes],
       [gl_cv_struct_dirent_d_type=no])
     ]
   )
   if test $gl_cv_struct_dirent_d_type = yes; then
     AC_DEFINE([HAVE_STRUCT_DIRENT_D_TYPE], [1],
       [Define if there is a member named d_type in the struct describing
        directory headers.])
   fi
  
])
m4trace:m4/dirent-safer.m4:7: -1- AC_DEFUN([gl_DIRENT_SAFER], [
  AC_CHECK_FUNCS_ONCE([fdopendir])
])
m4trace:m4/dirent_h.m4:9: -1- AC_DEFUN_ONCE([gl_DIRENT_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  dnl <dirent.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([dirent.h])
  if test $ac_cv_header_dirent_h = yes; then
    HAVE_DIRENT_H=1
  else
    HAVE_DIRENT_H=0
  fi
  AC_SUBST([HAVE_DIRENT_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <dirent.h>
    ]], [alphasort closedir dirfd fdopendir opendir readdir rewinddir scandir])
])
m4trace:m4/dirent_h.m4:34: -1- AC_DEFUN([gl_DIRENT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_DIRENT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/dirent_h.m4:46: -1- AC_DEFUN([gl_DIRENT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_DIRENT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_UNISTD_H_REQUIRE_DEFAULTS dnl for REPLACE_FCHDIR
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REWINDDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSEDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DIRFD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPENDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALPHASORT])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_DIRENT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
])
m4trace:m4/dirent_h.m4:63: -1- AC_DEFUN([gl_DIRENT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_OPENDIR=1;       AC_SUBST([HAVE_OPENDIR])
  HAVE_READDIR=1;       AC_SUBST([HAVE_READDIR])
  HAVE_REWINDDIR=1;     AC_SUBST([HAVE_REWINDDIR])
  HAVE_CLOSEDIR=1;      AC_SUBST([HAVE_CLOSEDIR])
  HAVE_DECL_DIRFD=1;    AC_SUBST([HAVE_DECL_DIRFD])
  HAVE_DECL_FDOPENDIR=1;AC_SUBST([HAVE_DECL_FDOPENDIR])
  HAVE_FDOPENDIR=1;     AC_SUBST([HAVE_FDOPENDIR])
  HAVE_SCANDIR=1;       AC_SUBST([HAVE_SCANDIR])
  HAVE_ALPHASORT=1;     AC_SUBST([HAVE_ALPHASORT])
  REPLACE_OPENDIR=0;    AC_SUBST([REPLACE_OPENDIR])
  REPLACE_CLOSEDIR=0;   AC_SUBST([REPLACE_CLOSEDIR])
  REPLACE_DIRFD=0;      AC_SUBST([REPLACE_DIRFD])
  REPLACE_FDOPENDIR=0;  AC_SUBST([REPLACE_FDOPENDIR])
])
m4trace:m4/dirfd.m4:12: -1- AC_DEFUN([gl_FUNC_DIRFD], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc <dirent.h> to declare dirfd().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS([dirfd])
  AC_CHECK_DECLS([dirfd], , ,
    [[#include <sys/types.h>
      #include <dirent.h>]])
  if test $ac_cv_have_decl_dirfd = no; then
    HAVE_DECL_DIRFD=0
  fi

  AC_CACHE_CHECK([whether dirfd is a macro],
    [gl_cv_func_dirfd_macro],
    [AC_EGREP_CPP([dirent_header_defines_dirfd], [
#include <sys/types.h>
#include <dirent.h>
#ifdef dirfd
 dirent_header_defines_dirfd
#endif],
       [gl_cv_func_dirfd_macro=yes],
       [gl_cv_func_dirfd_macro=no])])

  # Use the replacement if we have no function or macro with that name,
  # or if OS/2 kLIBC whose dirfd() does not work.
  # Replace only if the system declares dirfd already.
  case $ac_cv_func_dirfd,$gl_cv_func_dirfd_macro,$host_os,$ac_cv_have_decl_dirfd in
    no,no,*,yes | *,*,os2*,yes)
      REPLACE_DIRFD=1
      AC_DEFINE([REPLACE_DIRFD], [1],
        [Define to 1 if gnulib's dirfd() replacement is used.]);;
  esac
])
m4trace:m4/dirfd.m4:51: -1- AC_DEFUN([gl_PREREQ_DIRFD], [
  AC_CACHE_CHECK([how to get the file descriptor associated with an open DIR*],
                 [gl_cv_sys_dir_fd_member_name],
    [
      dirfd_save_CFLAGS=$CFLAGS
      for ac_expr in d_fd dd_fd; do

        CFLAGS="$CFLAGS -DDIR_FD_MEMBER_NAME=$ac_expr"
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
           #include <sys/types.h>
           #include <dirent.h>]],
          [[DIR *dir_p = opendir("."); (void) dir_p->DIR_FD_MEMBER_NAME;]])],
          [dir_fd_found=yes]
        )
        CFLAGS=$dirfd_save_CFLAGS
        test "$dir_fd_found" = yes && break
      done
      test "$dir_fd_found" = yes || ac_expr=no_such_member

      gl_cv_sys_dir_fd_member_name=$ac_expr
    ]
  )
  if test $gl_cv_sys_dir_fd_member_name != no_such_member; then
    AC_DEFINE_UNQUOTED([DIR_FD_MEMBER_NAME],
      [$gl_cv_sys_dir_fd_member_name],
      [the name of the file descriptor member of DIR])
  fi
  AH_VERBATIM([DIR_TO_FD],
              [#ifdef DIR_FD_MEMBER_NAME
# define DIR_TO_FD(Dir_p) ((Dir_p)->DIR_FD_MEMBER_NAME)
#else
# define DIR_TO_FD(Dir_p) -1
#endif
])
])
m4trace:m4/double-slash-root.m4:7: -1- AC_DEFUN([gl_DOUBLE_SLASH_ROOT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether // is distinct from /], [gl_cv_double_slash_root],
    [ if test x"$cross_compiling" = xyes ; then
        # When cross-compiling, there is no way to tell whether // is special
        # short of a list of hosts.  However, the only known hosts to date
        # that have a distinct // are Apollo DomainOS (too old to port to),
        # Cygwin, and z/OS.  If anyone knows of another system for which // has
        # special semantics and is distinct from /, please report it to
        # <bug-gnulib@gnu.org>.
        case $host in
          *-cygwin | i370-ibm-openedition)
            gl_cv_double_slash_root=yes ;;
          *)
            # Be optimistic and assume that / and // are the same when we
            # don't know.
            gl_cv_double_slash_root='unknown, assuming no' ;;
        esac
      else
        set x `ls -di / // 2>/dev/null`
        if test "$[2]" = "$[4]" && wc //dev/null >/dev/null 2>&1; then
          gl_cv_double_slash_root=no
        else
          gl_cv_double_slash_root=yes
        fi
      fi])
  if test "$gl_cv_double_slash_root" = yes; then
    AC_DEFINE([DOUBLE_SLASH_IS_DISTINCT_ROOT], [1],
      [Define to 1 if // is a file system root distinct from /.])
  fi
])
m4trace:m4/dup.m4:7: -1- AC_DEFUN([gl_FUNC_DUP], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_DUP=1
    fi
  ])
  dnl Replace dup() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      REPLACE_DUP=1
    fi
  ])
  AC_CACHE_CHECK([whether dup works], [gl_cv_func_dup_works],
    [AC_RUN_IFELSE(
      [AC_LANG_PROGRAM([[#include <unistd.h>
                         #include <fcntl.h>
                         #include <errno.h>
                       ]GL_MDA_DEFINES],
         [[/* On OS/2 kLIBC, dup does not work on a directory fd.  */
           int fd = open (".", O_RDONLY);
           return fd < 0 ? 1 : dup (fd) < 0 ? 2 : 0;
         ]])
      ],
      [gl_cv_func_dup_works=yes],
      [gl_cv_func_dup_works=no],
      [case "$host_os" in
                 # Guess no on native Windows.
         mingw*) gl_cv_func_dup_works="guessing no" ;;
         *)      gl_cv_func_dup_works="guessing yes" ;;
       esac
      ])
    ])
  case "$gl_cv_func_dup_works" in
    *yes) ;;
    *)
      REPLACE_DUP=1
      ;;
  esac
])
m4trace:m4/dup.m4:54: -1- AC_DEFUN([gl_PREREQ_DUP], [:])
m4trace:m4/dup2.m4:7: -1- AC_DEFUN([gl_FUNC_DUP2], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether dup2 works], [gl_cv_func_dup2_works],
    [AC_RUN_IFELSE([
       AC_LANG_PROGRAM(
         [[#include <errno.h>
           #include <fcntl.h>
           #include <limits.h>
           #include <sys/resource.h>
           #include <unistd.h>
           ]GL_MDA_DEFINES[
           #ifndef RLIM_SAVED_CUR
           # define RLIM_SAVED_CUR RLIM_INFINITY
           #endif
           #ifndef RLIM_SAVED_MAX
           # define RLIM_SAVED_MAX RLIM_INFINITY
           #endif
         ]],
         [[int result = 0;
           int bad_fd = INT_MAX;
           struct rlimit rlim;
           if (getrlimit (RLIMIT_NOFILE, &rlim) == 0
               && 0 <= rlim.rlim_cur && rlim.rlim_cur <= INT_MAX
               && rlim.rlim_cur != RLIM_INFINITY
               && rlim.rlim_cur != RLIM_SAVED_MAX
               && rlim.rlim_cur != RLIM_SAVED_CUR)
             bad_fd = rlim.rlim_cur;
           #ifdef FD_CLOEXEC
             if (fcntl (1, F_SETFD, FD_CLOEXEC) == -1)
               result |= 1;
           #endif
           if (dup2 (1, 1) != 1)
             result |= 2;
           #ifdef FD_CLOEXEC
             if (fcntl (1, F_GETFD) != FD_CLOEXEC)
               result |= 4;
           #endif
           close (0);
           if (dup2 (0, 0) != -1)
             result |= 8;
           /* Many gnulib modules require POSIX conformance of EBADF.  */
           if (dup2 (2, bad_fd) == -1 && errno != EBADF)
             result |= 16;
           /* Flush out some cygwin core dumps.  */
           if (dup2 (2, -1) != -1 || errno != EBADF)
             result |= 32;
           dup2 (2, 255);
           dup2 (2, 256);
           /* On OS/2 kLIBC, dup2() does not work on a directory fd.  */
           {
             int fd = open (".", O_RDONLY);
             if (fd == -1)
               result |= 64;
             else if (dup2 (fd, fd + 1) == -1)
               result |= 128;
             close (fd);
           }
           return result;]])
      ],
      [gl_cv_func_dup2_works=yes], [gl_cv_func_dup2_works=no],
      [case "$host_os" in
         mingw*) # on this platform, dup2 always returns 0 for success
           gl_cv_func_dup2_works="guessing no" ;;
         cygwin*) # on cygwin 1.5.x, dup2(1,1) returns 0
           gl_cv_func_dup2_works="guessing no" ;;
         aix* | freebsd*)
                 # on AIX 7.1 and FreeBSD 6.1, dup2 (1,toobig) gives EMFILE,
                 # not EBADF.
           gl_cv_func_dup2_works="guessing no" ;;
         haiku*) # on Haiku alpha 2, dup2(1, 1) resets FD_CLOEXEC.
           gl_cv_func_dup2_works="guessing no" ;;
         *-android*) # implemented using dup3(), which fails if oldfd == newfd
           gl_cv_func_dup2_works="guessing no" ;;
         os2*) # on OS/2 kLIBC, dup2() does not work on a directory fd.
           gl_cv_func_dup2_works="guessing no" ;;
         *) gl_cv_func_dup2_works="guessing yes" ;;
       esac])
    ])
  case "$gl_cv_func_dup2_works" in
    *yes) ;;
    *)
      REPLACE_DUP2=1
      AC_CHECK_FUNCS([setdtablesize])
      ;;
  esac
  dnl Replace dup2() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      REPLACE_DUP2=1
    fi
  ])
])
m4trace:m4/dup2.m4:105: -1- AC_DEFUN([gl_PREREQ_DUP2], [])
m4trace:m4/eealloc.m4:7: -1- AC_DEFUN([gl_EEALLOC], [
  AC_REQUIRE([gl_EEMALLOC])
  AC_REQUIRE([gl_EEREALLOC])
])
m4trace:m4/eealloc.m4:13: -1- AC_DEFUN([gl_EEMALLOC], [
  _AC_FUNC_MALLOC_IF(
    [gl_cv_func_malloc_0_nonnull=1],
    [gl_cv_func_malloc_0_nonnull=0])
  AC_DEFINE_UNQUOTED([MALLOC_0_IS_NONNULL], [$gl_cv_func_malloc_0_nonnull],
    [If malloc(0) is != NULL, define this to 1.  Otherwise define this
     to 0.])
])
m4trace:m4/eealloc.m4:23: -1- AC_DEFUN([gl_EEREALLOC], [
  _AC_FUNC_REALLOC_IF(
    [gl_cv_func_realloc_0_nonnull=1],
    [gl_cv_func_realloc_0_nonnull=0])
  AC_DEFINE_UNQUOTED([REALLOC_0_IS_NONNULL], [$gl_cv_func_realloc_0_nonnull],
    [If realloc(NULL,0) is != NULL, define this to 1.  Otherwise define this
     to 0.])
])
m4trace:m4/environ.m4:7: -1- AC_DEFUN_ONCE([gl_ENVIRON], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  dnl Persuade glibc <unistd.h> to declare environ.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_HEADERS_ONCE([unistd.h])
  gt_CHECK_VAR_DECL(
    [#if HAVE_UNISTD_H
     #include <unistd.h>
     #endif
     /* mingw, BeOS, Haiku declare environ in <stdlib.h>, not in <unistd.h>.  */
     #include <stdlib.h>
    ],
    [environ])
  if test $gt_cv_var_environ_declaration != yes; then
    HAVE_DECL_ENVIRON=0
  fi
])
m4trace:m4/environ.m4:29: -1- AC_DEFUN([gt_CHECK_VAR_DECL], [
  define([gt_cv_var], [gt_cv_var_]$2[_declaration])
  AC_CACHE_CHECK([if $2 is properly declared], [gt_cv_var],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[$1
            typedef struct { int foo; } foo_t;
            extern foo_t $2;]],
          [[$2.foo = 1;]])],
       [gt_cv_var=no],
       [gt_cv_var=yes])])
  if test $gt_cv_var = yes; then
    AC_DEFINE([HAVE_]m4_translit($2, [a-z], [A-Z])[_DECL], 1,
              [Define if you have the declaration of $2.])
  fi
  undefine([gt_cv_var])
])
m4trace:m4/errno_h.m4:9: -1- AC_DEFUN_ONCE([gl_HEADER_ERRNO_H], [
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for complete errno.h], [gl_cv_header_errno_h_complete], [
    AC_EGREP_CPP([booboo],[
#include <errno.h>
#if !defined ETXTBSY
booboo
#endif
#if !defined ENOMSG
booboo
#endif
#if !defined EIDRM
booboo
#endif
#if !defined ENOLINK
booboo
#endif
#if !defined EPROTO
booboo
#endif
#if !defined EMULTIHOP
booboo
#endif
#if !defined EBADMSG
booboo
#endif
#if !defined EOVERFLOW
booboo
#endif
#if !defined ENOTSUP
booboo
#endif
#if !defined ENETRESET
booboo
#endif
#if !defined ECONNABORTED
booboo
#endif
#if !defined ESTALE
booboo
#endif
#if !defined EDQUOT
booboo
#endif
#if !defined ECANCELED
booboo
#endif
#if !defined EOWNERDEAD
booboo
#endif
#if !defined ENOTRECOVERABLE
booboo
#endif
#if !defined EILSEQ
booboo
#endif
      ],
      [gl_cv_header_errno_h_complete=no],
      [gl_cv_header_errno_h_complete=yes])
  ])
  if test $gl_cv_header_errno_h_complete = yes; then
    GL_GENERATE_ERRNO_H=false
  else
    gl_NEXT_HEADERS([errno.h])
    GL_GENERATE_ERRNO_H=true
  fi
  gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
  gl_REPLACE_ERRNO_VALUE([ENOLINK])
  gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
])
m4trace:m4/errno_h.m4:87: -1- AC_DEFUN([gl_REPLACE_ERRNO_VALUE], [
  if $GL_GENERATE_ERRNO_H; then
    AC_CACHE_CHECK([for ]$1[ value], [gl_cv_header_errno_h_]$1, [
      AC_EGREP_CPP([yes],[
#include <errno.h>
#ifdef ]$1[
yes
#endif
      ],
      [gl_cv_header_errno_h_]$1[=yes],
      [gl_cv_header_errno_h_]$1[=no])
      if test $gl_cv_header_errno_h_]$1[ = no; then
        AC_EGREP_CPP([yes],[
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
#ifdef ]$1[
yes
#endif
          ], [gl_cv_header_errno_h_]$1[=hidden])
        if test $gl_cv_header_errno_h_]$1[ = hidden; then
          dnl The macro exists but is hidden.
          dnl Define it to the same value.
          AC_COMPUTE_INT([gl_cv_header_errno_h_]$1, $1, [
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
/* The following two lines are a workaround against an autoconf-2.52 bug.  */
#include <stdio.h>
#include <stdlib.h>
])
        fi
      fi
    ])
    case $gl_cv_header_errno_h_$1 in
      yes | no)
        $1_HIDDEN=0; $1_VALUE=
        ;;
      *)
        $1_HIDDEN=1; $1_VALUE="$gl_cv_header_errno_h_$1"
        ;;
    esac
    AC_SUBST($1[_HIDDEN])
    AC_SUBST($1[_VALUE])
  fi
])
m4trace:m4/error.m4:9: -1- AC_DEFUN([gl_ERROR], [
  dnl We don't use AC_FUNC_ERROR_AT_LINE any more, because it is no longer
  dnl maintained in Autoconf and because it invokes AC_LIBOBJ.
  AC_CACHE_CHECK([for error_at_line], [ac_cv_lib_error_at_line],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <error.h>]],
          [[error_at_line (0, 0, "", 0, "an error occurred");]])],
       [ac_cv_lib_error_at_line=yes],
       [ac_cv_lib_error_at_line=no])])
])
m4trace:m4/error.m4:23: -1- AC_DEFUN([gl_PREREQ_ERROR], [
  dnl Use system extensions on Android, so that AC_FUNC_STRERROR_R
  dnl discovers the GNU API for strerror_r on Android API level 23 and later.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_FUNC_STRERROR_R])
  :
])
m4trace:m4/euidaccess.m4:7: -1- AC_DEFUN([gl_FUNC_NONREENTRANT_EUIDACCESS], [
  AC_REQUIRE([gl_FUNC_EUIDACCESS])
  AC_CHECK_DECLS([setregid])
  AC_DEFINE([PREFER_NONREENTRANT_EUIDACCESS], [1],
    [Define this if you prefer euidaccess to return the correct result
     even if this would make it nonreentrant.  Define this only if your
     entire application is safe even if the uid or gid might temporarily
     change.  If your application uses signal handlers or threads it
     is probably not safe.])
])
m4trace:m4/euidaccess.m4:19: -1- AC_DEFUN([gl_FUNC_EUIDACCESS], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare euidaccess().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS([euidaccess])
  if test $ac_cv_func_euidaccess = no; then
    HAVE_EUIDACCESS=0
  fi
])
m4trace:m4/euidaccess.m4:33: -1- AC_DEFUN([gl_PREREQ_EUIDACCESS], [
  dnl Prefer POSIX faccessat over non-standard euidaccess.
  AC_CHECK_FUNCS_ONCE([faccessat])
  dnl Try various other non-standard fallbacks.
  AC_CHECK_HEADERS([libgen.h])
  AC_FUNC_GETGROUPS

  # Solaris 9 and 10 need -lgen to get the eaccess function.
  # Save and restore LIBS so -lgen isn't added to it.  Otherwise, *all*
  # programs in the package would end up linked with that potentially-shared
  # library, inducing unnecessary run-time overhead.
  LIB_EACCESS=
  AC_SUBST([LIB_EACCESS])
  gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([eaccess], [gen],
                   [test "$ac_cv_search_eaccess" = "none required" ||
                    LIB_EACCESS=$ac_cv_search_eaccess])
    AC_CHECK_FUNCS([eaccess])
  LIBS=$gl_saved_libs
])
m4trace:m4/explicit_bzero.m4:6: -1- AC_DEFUN([gl_FUNC_EXPLICIT_BZERO], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])

  dnl Persuade glibc <string.h> to declare explicit_bzero.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([explicit_bzero])
  if test $ac_cv_func_explicit_bzero = no; then
    HAVE_EXPLICIT_BZERO=0
  fi
])
m4trace:m4/explicit_bzero.m4:19: -1- AC_DEFUN([gl_PREREQ_EXPLICIT_BZERO], [
  AC_CHECK_FUNCS([explicit_memset])
  AC_CHECK_FUNCS_ONCE([memset_s])
])
m4trace:m4/exponentd.m4:6: -1- AC_DEFUN([gl_DOUBLE_EXPONENT_LOCATION], [
  AC_CACHE_CHECK([where to find the exponent in a 'double'],
    [gl_cv_cc_double_expbit0],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#define NWORDS \
  ((sizeof (double) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { double value; unsigned int word[NWORDS]; } memory_double;
static unsigned int ored_words[NWORDS];
static unsigned int anded_words[NWORDS];
static void add_to_ored_words (double x)
{
  memory_double m;
  size_t i;
  /* Clear it first, in case sizeof (double) < sizeof (memory_double).  */
  memset (&m, 0, sizeof (memory_double));
  m.value = x;
  for (i = 0; i < NWORDS; i++)
    {
      ored_words[i] |= m.word[i];
      anded_words[i] &= m.word[i];
    }
}
int main ()
{
  size_t j;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  for (j = 0; j < NWORDS; j++)
    anded_words[j] = ~ (unsigned int) 0;
  add_to_ored_words (0.25);
  add_to_ored_words (0.5);
  add_to_ored_words (1.0);
  add_to_ored_words (2.0);
  add_to_ored_words (4.0);
  /* Remove bits that are common (e.g. if representation of the first mantissa
     bit is explicit).  */
  for (j = 0; j < NWORDS; j++)
    ored_words[j] &= ~anded_words[j];
  /* Now find the nonzero word.  */
  for (j = 0; j < NWORDS; j++)
    if (ored_words[j] != 0)
      break;
  if (j < NWORDS)
    {
      size_t i;
      for (i = j + 1; i < NWORDS; i++)
        if (ored_words[i] != 0)
          {
            fprintf (fp, "unknown");
            return (fclose (fp) != 0);
          }
      for (i = 0; ; i++)
        if ((ored_words[j] >> i) & 1)
          {
            fprintf (fp, "word %d bit %d", (int) j, (int) i);
            return (fclose (fp) != 0);
          }
    }
  fprintf (fp, "unknown");
  return (fclose (fp) != 0);
}
        ]])],
        [gl_cv_cc_double_expbit0=`cat conftest.out`],
        [gl_cv_cc_double_expbit0="unknown"],
        [
          dnl On ARM, there are two 'double' floating-point formats, used by
          dnl different sets of instructions: The older FPA instructions assume
          dnl that they are stored in big-endian word order, while the words
          dnl (like integer types) are stored in little-endian byte order.
          dnl The newer VFP instructions assume little-endian order
          dnl consistently.
          AC_EGREP_CPP([mixed_endianness], [
#if defined arm || defined __arm || defined __arm__
  mixed_endianness
#endif
            ],
            [gl_cv_cc_double_expbit0="unknown"],
            [
              pushdef([AC_MSG_CHECKING],[:])dnl
              pushdef([AC_MSG_RESULT],[:])dnl
              pushdef([AC_MSG_RESULT_UNQUOTED],[:])dnl
              AC_C_BIGENDIAN(
                [gl_cv_cc_double_expbit0="word 0 bit 20"],
                [gl_cv_cc_double_expbit0="word 1 bit 20"],
                [gl_cv_cc_double_expbit0="unknown"])
              popdef([AC_MSG_RESULT_UNQUOTED])dnl
              popdef([AC_MSG_RESULT])dnl
              popdef([AC_MSG_CHECKING])dnl
            ])
        ])
      rm -f conftest.out
    ])
  case "$gl_cv_cc_double_expbit0" in
    word*bit*)
      word=`echo "$gl_cv_cc_double_expbit0" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$gl_cv_cc_double_expbit0" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([DBL_EXPBIT0_WORD], [$word],
        [Define as the word index where to find the exponent of 'double'.])
      AC_DEFINE_UNQUOTED([DBL_EXPBIT0_BIT], [$bit],
        [Define as the bit index in the word where to find bit 0 of the exponent of 'double'.])
      ;;
  esac
])
m4trace:m4/exponentf.m4:6: -1- AC_DEFUN([gl_FLOAT_EXPONENT_LOCATION], [
  AC_CACHE_CHECK([where to find the exponent in a 'float'],
    [gl_cv_cc_float_expbit0],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#define NWORDS \
  ((sizeof (float) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { float value; unsigned int word[NWORDS]; } memory_float;
static unsigned int ored_words[NWORDS];
static unsigned int anded_words[NWORDS];
static void add_to_ored_words (float x)
{
  memory_float m;
  size_t i;
  /* Clear it first, in case
     sizeof (float) < sizeof (memory_float).  */
  memset (&m, 0, sizeof (memory_float));
  m.value = x;
  for (i = 0; i < NWORDS; i++)
    {
      ored_words[i] |= m.word[i];
      anded_words[i] &= m.word[i];
    }
}
int main ()
{
  size_t j;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  for (j = 0; j < NWORDS; j++)
    anded_words[j] = ~ (unsigned int) 0;
  add_to_ored_words (0.25f);
  add_to_ored_words (0.5f);
  add_to_ored_words (1.0f);
  add_to_ored_words (2.0f);
  add_to_ored_words (4.0f);
  /* Remove bits that are common (e.g. if representation of the first mantissa
     bit is explicit).  */
  for (j = 0; j < NWORDS; j++)
    ored_words[j] &= ~anded_words[j];
  /* Now find the nonzero word.  */
  for (j = 0; j < NWORDS; j++)
    if (ored_words[j] != 0)
      break;
  if (j < NWORDS)
    {
      size_t i;
      for (i = j + 1; i < NWORDS; i++)
        if (ored_words[i] != 0)
          {
            fprintf (fp, "unknown");
            return (fclose (fp) != 0);
          }
      for (i = 0; ; i++)
        if ((ored_words[j] >> i) & 1)
          {
            fprintf (fp, "word %d bit %d", (int) j, (int) i);
            return (fclose (fp) != 0);
          }
    }
  fprintf (fp, "unknown");
  return (fclose (fp) != 0);
}
        ]])],
        [gl_cv_cc_float_expbit0=`cat conftest.out`],
        [gl_cv_cc_float_expbit0="unknown"],
        [gl_cv_cc_float_expbit0="word 0 bit 23"])
      rm -f conftest.out
    ])
  case "$gl_cv_cc_float_expbit0" in
    word*bit*)
      word=`echo "$gl_cv_cc_float_expbit0" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$gl_cv_cc_float_expbit0" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([FLT_EXPBIT0_WORD], [$word],
        [Define as the word index where to find the exponent of 'float'.])
      AC_DEFINE_UNQUOTED([FLT_EXPBIT0_BIT], [$bit],
        [Define as the bit index in the word where to find bit 0 of the exponent of 'float'.])
      ;;
  esac
])
m4trace:m4/exponentl.m4:6: -1- AC_DEFUN([gl_LONG_DOUBLE_EXPONENT_LOCATION], [
  AC_REQUIRE([gl_BIGENDIAN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([where to find the exponent in a 'long double'],
    [gl_cv_cc_long_double_expbit0],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#define NWORDS \
  ((sizeof (long double) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { long double value; unsigned int word[NWORDS]; }
        memory_long_double;
static unsigned int ored_words[NWORDS];
static unsigned int anded_words[NWORDS];
static void add_to_ored_words (long double *x)
{
  memory_long_double m;
  size_t i;
  /* Clear it first, in case
     sizeof (long double) < sizeof (memory_long_double).  */
  memset (&m, 0, sizeof (memory_long_double));
  m.value = *x;
  for (i = 0; i < NWORDS; i++)
    {
      ored_words[i] |= m.word[i];
      anded_words[i] &= m.word[i];
    }
}
int main ()
{
  static long double samples[5] = { 0.25L, 0.5L, 1.0L, 2.0L, 4.0L };
  size_t j;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  for (j = 0; j < NWORDS; j++)
    anded_words[j] = ~ (unsigned int) 0;
  for (j = 0; j < 5; j++)
    add_to_ored_words (&samples[j]);
  /* Remove bits that are common (e.g. if representation of the first mantissa
     bit is explicit).  */
  for (j = 0; j < NWORDS; j++)
    ored_words[j] &= ~anded_words[j];
  /* Now find the nonzero word.  */
  for (j = 0; j < NWORDS; j++)
    if (ored_words[j] != 0)
      break;
  if (j < NWORDS)
    {
      size_t i;
      for (i = j + 1; i < NWORDS; i++)
        if (ored_words[i] != 0)
          {
            fprintf (fp, "unknown");
            return (fclose (fp) != 0);
          }
      for (i = 0; ; i++)
        if ((ored_words[j] >> i) & 1)
          {
            fprintf (fp, "word %d bit %d", (int) j, (int) i);
            return (fclose (fp) != 0);
          }
    }
  fprintf (fp, "unknown");
  return (fclose (fp) != 0);
}
        ]])],
        [gl_cv_cc_long_double_expbit0=`cat conftest.out`],
        [gl_cv_cc_long_double_expbit0="unknown"],
        [
          dnl When cross-compiling, in general we don't know. It depends on the
          dnl ABI and compiler version. There are too many cases.
          gl_cv_cc_long_double_expbit0="unknown"
          case "$host_os" in
            mingw*) # On native Windows (little-endian), we know the result
                    # in two cases: mingw, MSVC.
              AC_EGREP_CPP([Known], [
#ifdef __MINGW32__
 Known
#endif
                ], [gl_cv_cc_long_double_expbit0="word 2 bit 0"])
              AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                ], [gl_cv_cc_long_double_expbit0="word 1 bit 20"])
              ;;
          esac
        ])
      rm -f conftest.out
    ])
  case "$gl_cv_cc_long_double_expbit0" in
    word*bit*)
      word=`echo "$gl_cv_cc_long_double_expbit0" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$gl_cv_cc_long_double_expbit0" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([LDBL_EXPBIT0_WORD], [$word],
        [Define as the word index where to find the exponent of 'long double'.])
      AC_DEFINE_UNQUOTED([LDBL_EXPBIT0_BIT], [$bit],
        [Define as the bit index in the word where to find bit 0 of the exponent of 'long double'.])
      ;;
  esac
])
m4trace:m4/extensions.m4:11: -1- AC_DEFUN([AC_CHECK_INCLUDES_DEFAULT], [])
m4trace:m4/extensions.m4:34: -1- AC_DEFUN_ONCE([AC_USE_SYSTEM_EXTENSIONS], [AC_BEFORE([$0], [AC_PREPROC_IFELSE])dnl
AC_BEFORE([$0], [AC_COMPILE_IFELSE])dnl
AC_BEFORE([$0], [AC_LINK_IFELSE])dnl
AC_BEFORE([$0], [AC_RUN_IFELSE])dnl
AC_BEFORE([$0], [AC_CHECK_INCLUDES_DEFAULT])dnl
dnl #undef in AH_VERBATIM gets replaced with #define by AC_DEFINE.
dnl Use a different key than __EXTENSIONS__, as that name broke existing
dnl configure.ac when using autoheader 2.62.
dnl The macros below are in alphabetical order ignoring leading _ or __
dnl prefixes.
AH_VERBATIM([USE_SYSTEM_EXTENSIONS],
[/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable general extensions on macOS.  */
#ifndef _DARWIN_C_SOURCE
# undef _DARWIN_C_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable X/Open compliant socket functions that do not require linking
   with -lxnet on HP-UX 11.11.  */
#ifndef _HPUX_ALT_XOPEN_SOCKET_API
# undef _HPUX_ALT_XOPEN_SOCKET_API
#endif
/* Identify the host operating system as Minix.
   This macro does not affect the system headers' behavior.
   A future release of Autoconf may stop defining this macro.  */
#ifndef _MINIX
# undef _MINIX
#endif
/* Enable general extensions on NetBSD.
   Enable NetBSD compatibility extensions on Minix.  */
#ifndef _NETBSD_SOURCE
# undef _NETBSD_SOURCE
#endif
/* Enable OpenBSD compatibility extensions on NetBSD.
   Oddly enough, this does nothing on OpenBSD.  */
#ifndef _OPENBSD_SOURCE
# undef _OPENBSD_SOURCE
#endif
/* Define to 1 if needed for POSIX-compatible behavior.  */
#ifndef _POSIX_SOURCE
# undef _POSIX_SOURCE
#endif
/* Define to 2 if needed for POSIX-compatible behavior.  */
#ifndef _POSIX_1_SOURCE
# undef _POSIX_1_SOURCE
#endif
/* Enable POSIX-compatible threading on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions specified by ISO/IEC TS 18661-5:2014.  */
#ifndef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
# undef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-1:2014.  */
#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
# undef __STDC_WANT_IEC_60559_BFP_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-2:2015.  */
#ifndef __STDC_WANT_IEC_60559_DFP_EXT__
# undef __STDC_WANT_IEC_60559_DFP_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-4:2015.  */
#ifndef __STDC_WANT_IEC_60559_FUNCS_EXT__
# undef __STDC_WANT_IEC_60559_FUNCS_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-3:2015.  */
#ifndef __STDC_WANT_IEC_60559_TYPES_EXT__
# undef __STDC_WANT_IEC_60559_TYPES_EXT__
#endif
/* Enable extensions specified by ISO/IEC TR 24731-2:2010.  */
#ifndef __STDC_WANT_LIB_EXT2__
# undef __STDC_WANT_LIB_EXT2__
#endif
/* Enable extensions specified by ISO/IEC 24747:2009.  */
#ifndef __STDC_WANT_MATH_SPEC_FUNCS__
# undef __STDC_WANT_MATH_SPEC_FUNCS__
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable X/Open extensions.  Define to 500 only if necessary
   to make mbstate_t available.  */
#ifndef _XOPEN_SOURCE
# undef _XOPEN_SOURCE
#endif
])dnl

  AC_REQUIRE([AC_CHECK_INCLUDES_DEFAULT])dnl
  _AC_CHECK_HEADER_ONCE([wchar.h])
  _AC_CHECK_HEADER_ONCE([minix/config.h])

dnl Defining __EXTENSIONS__ may break the system headers on some systems.
dnl (FIXME: Which ones?)
  AC_CACHE_CHECK([whether it is safe to define __EXTENSIONS__],
    [ac_cv_safe_to_define___extensions__],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[
#         define __EXTENSIONS__ 1
          ]AC_INCLUDES_DEFAULT])],
       [ac_cv_safe_to_define___extensions__=yes],
       [ac_cv_safe_to_define___extensions__=no])])

dnl HP-UX 11.11 defines mbstate_t only if _XOPEN_SOURCE is defined to
dnl 500, regardless of whether compiling with -Ae or -D_HPUX_SOURCE=1.
dnl But defining _XOPEN_SOURCE may turn *off* extensions on platforms
dnl not covered by turn-on-extensions macros (notably Dragonfly, Free,
dnl and OpenBSD, which don't have any equivalent of _NETBSD_SOURCE) so
dnl it should only be defined when necessary.
  AC_CACHE_CHECK([whether _XOPEN_SOURCE should be defined],
    [ac_cv_should_define__xopen_source],
    [ac_cv_should_define__xopen_source=no
    AS_IF([test $ac_cv_header_wchar_h = yes],
      [AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[
          #include <wchar.h>
          mbstate_t x;]])],
        [],
        [AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM([[
            #define _XOPEN_SOURCE 500
            #include <wchar.h>
            mbstate_t x;]])],
          [ac_cv_should_define__xopen_source=yes])])])])

  AC_DEFINE([_ALL_SOURCE])
  AC_DEFINE([_DARWIN_C_SOURCE])
  AC_DEFINE([_GNU_SOURCE])
  AC_DEFINE([_HPUX_ALT_XOPEN_SOCKET_API])
  AC_DEFINE([_NETBSD_SOURCE])
  AC_DEFINE([_OPENBSD_SOURCE])
  AC_DEFINE([_POSIX_PTHREAD_SEMANTICS])
  AC_DEFINE([__STDC_WANT_IEC_60559_ATTRIBS_EXT__])
  AC_DEFINE([__STDC_WANT_IEC_60559_BFP_EXT__])
  AC_DEFINE([__STDC_WANT_IEC_60559_DFP_EXT__])
  AC_DEFINE([__STDC_WANT_IEC_60559_FUNCS_EXT__])
  AC_DEFINE([__STDC_WANT_IEC_60559_TYPES_EXT__])
  AC_DEFINE([__STDC_WANT_LIB_EXT2__])
  AC_DEFINE([__STDC_WANT_MATH_SPEC_FUNCS__])
  AC_DEFINE([_TANDEM_SOURCE])
  AS_IF([test $ac_cv_header_minix_config_h = yes],
    [MINIX=yes
    AC_DEFINE([_MINIX])
    AC_DEFINE([_POSIX_SOURCE])
    AC_DEFINE([_POSIX_1_SOURCE], [2])],
    [MINIX=])
  AS_IF([test $ac_cv_safe_to_define___extensions__ = yes],
    [AC_DEFINE([__EXTENSIONS__])])
  AS_IF([test $ac_cv_should_define__xopen_source = yes],
    [AC_DEFINE([_XOPEN_SOURCE], [500])])
])
m4trace:m4/extensions.m4:212: -1- AC_DEFUN_ONCE([gl_USE_SYSTEM_EXTENSIONS], [
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl On OpenBSD 6.8 with GCC, the include files contain a couple of
  dnl definitions that are only activated with an explicit -D_ISOC11_SOURCE.
  dnl That's because this version of GCC (4.2.1) supports the option
  dnl '-std=gnu99' but not the option '-std=gnu11'.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    openbsd*)
      AC_DEFINE([_ISOC11_SOURCE], [1],
        [Define to enable the declarations of ISO C 11 types and functions.])
      ;;
  esac
])
m4trace:m4/extern-inline.m4:8: -1- AC_DEFUN([gl_EXTERN_INLINE], [
  AC_CACHE_CHECK([whether ctype.h defines __header_inline],
    [gl_cv_have___header_inline],
    [AC_PREPROC_IFELSE(
       [AC_LANG_SOURCE([[#include <ctype.h>
                         #ifndef __header_inline
                          #error "<ctype.h> does not define __header_inline"
                         #endif
                        ]])],
       [gl_cv_have___header_inline=yes],
       [gl_cv_have___header_inline=no])])
  if test "$gl_cv_have___header_inline" = yes; then
    AC_DEFINE([HAVE___HEADER_INLINE], [1],
      [Define to 1 if ctype.h defines __header_inline.])
  fi

  AH_VERBATIM([HAVE___HEADER_INLINE_1],
[/* Please see the Gnulib manual for how to use these macros.

   Suppress extern inline with HP-UX cc, as it appears to be broken; see
   <https://lists.gnu.org/r/bug-texinfo/2013-02/msg00030.html>.

   Suppress extern inline with Sun C in standards-conformance mode, as it
   mishandles inline functions that call each other.  E.g., for 'inline void f
   (void) { } inline void g (void) { f (); }', c99 incorrectly complains
   'reference to static identifier "f" in extern inline function'.
   This bug was observed with Oracle Developer Studio 12.6
   (Sun C 5.15 SunOS_sparc 2017/05/30).

   Suppress extern inline (with or without __attribute__ ((__gnu_inline__)))
   on configurations that mistakenly use 'static inline' to implement
   functions or macros in standard C headers like <ctype.h>.  For example,
   if isdigit is mistakenly implemented via a static inline function,
   a program containing an extern inline function that calls isdigit
   may not work since the C standard prohibits extern inline functions
   from calling static functions (ISO C 99 section 6.7.4.(3).
   This bug is known to occur on:

     OS X 10.8 and earlier; see:
     https://lists.gnu.org/r/bug-gnulib/2012-12/msg00023.html

     DragonFly; see
     http://muscles.dragonflybsd.org/bulk/clang-master-potential/20141111_102002/logs/ah-tty-0.3.12.log

     FreeBSD; see:
     https://lists.gnu.org/r/bug-gnulib/2014-07/msg00104.html

   OS X 10.9 has a macro __header_inline indicating the bug is fixed for C and
   for clang but remains for g++; see <https://trac.macports.org/ticket/41033>.
   Assume DragonFly and FreeBSD will be similar.

   GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  It defines a macro
   __GNUC_STDC_INLINE__ to indicate this situation or a macro
   __GNUC_GNU_INLINE__ to indicate the opposite situation.
   GCC 4.2 with -std=c99 or -std=gnu99 implements the GNU C inline
   semantics but warns, unless -fgnu89-inline is used:
     warning: C99 inline functions are not supported; using GNU89
     warning: to disable this warning use -fgnu89-inline or the gnu_inline function attribute
   It defines a macro __GNUC_GNU_INLINE__ to indicate this situation.
 */
#if (((defined __APPLE__ && defined __MACH__) \
      || defined __DragonFly__ || defined __FreeBSD__) \
     && (defined HAVE___HEADER_INLINE \
         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \
            && ! defined __clang__) \
         : ((! defined _DONT_USE_CTYPE_INLINE_ \
             && (defined __GNUC__ || defined __cplusplus)) \
            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \
                && defined __GNUC__ && ! defined __cplusplus))))
# define _GL_EXTERN_INLINE_STDHEADER_BUG
#endif
#if ((__GNUC__ \
      ? defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \
      : (199901L <= __STDC_VERSION__ \
         && !defined __HP_cc \
         && !defined __PGI \
         && !(defined __SUNPRO_C && __STDC__))) \
     && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# define _GL_INLINE inline
# define _GL_EXTERN_INLINE extern inline
# define _GL_EXTERN_INLINE_IN_USE
#elif (2 < __GNUC__ + (7 <= __GNUC_MINOR__) && !defined __STRICT_ANSI__ \
       && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# if defined __GNUC_GNU_INLINE__ && __GNUC_GNU_INLINE__
   /* __gnu_inline__ suppresses a GCC 4.2 diagnostic.  */
#  define _GL_INLINE extern inline __attribute__ ((__gnu_inline__))
# else
#  define _GL_INLINE extern inline
# endif
# define _GL_EXTERN_INLINE extern
# define _GL_EXTERN_INLINE_IN_USE
#else
# define _GL_INLINE _GL_UNUSED static
# define _GL_EXTERN_INLINE _GL_UNUSED static
#endif

/* In GCC 4.6 (inclusive) to 5.1 (exclusive),
   suppress bogus "no previous prototype for 'FOO'"
   and "no previous declaration for 'FOO'" diagnostics,
   when FOO is an inline function in the header; see
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54113> and
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63877>.  */
#if __GNUC__ == 4 && 6 <= __GNUC_MINOR__
# if defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__
#  define _GL_INLINE_HEADER_CONST_PRAGMA
# else
#  define _GL_INLINE_HEADER_CONST_PRAGMA \
     _Pragma ("GCC diagnostic ignored \"-Wsuggest-attribute=const\"")
# endif
# define _GL_INLINE_HEADER_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-prototypes\"") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-declarations\"") \
    _GL_INLINE_HEADER_CONST_PRAGMA
# define _GL_INLINE_HEADER_END \
    _Pragma ("GCC diagnostic pop")
#else
# define _GL_INLINE_HEADER_BEGIN
# define _GL_INLINE_HEADER_END
#endif])
])
m4trace:m4/faccessat.m4:11: -1- AC_DEFUN([gl_FUNC_FACCESSAT], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])

  dnl Persuade glibc <unistd.h> to declare faccessat().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([faccessat])
  if test $ac_cv_func_faccessat = no; then
    HAVE_FACCESSAT=0
  else
    case $gl_cv_func_lstat_dereferences_slashed_symlink in
      *yes) ;;
      *)    REPLACE_FACCESSAT=1 ;;
    esac
  fi
])
m4trace:m4/faccessat.m4:31: -1- AC_DEFUN([gl_PREREQ_FACCESSAT], [
  AC_CHECK_FUNCS([access])
])
m4trace:m4/fchdir.m4:7: -1- AC_DEFUN([gl_FUNC_FCHDIR], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_DECLS_ONCE([fchdir])
  if test $ac_cv_have_decl_fchdir = no; then
    HAVE_DECL_FCHDIR=0
  fi

  AC_REQUIRE([gl_TEST_FCHDIR])
  if test $HAVE_FCHDIR = 0; then
    AC_DEFINE([REPLACE_FCHDIR], [1],
      [Define to 1 if gnulib's fchdir() replacement is used.])
    dnl We must also replace anything that can manipulate a directory fd,
    dnl to keep our bookkeeping up-to-date.  We don't have to replace
    dnl fstatat, since no platform has fstatat but lacks fchdir.
    AC_CACHE_CHECK([whether open can visit directories],
      [gl_cv_func_open_directory_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <fcntl.h>
            ]GL_MDA_DEFINES],
            [[return open(".", O_RDONLY) < 0;]])],
         [gl_cv_func_open_directory_works=yes],
         [gl_cv_func_open_directory_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_open_directory_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_open_directory_works="guessing yes" ;;
                             # Guess no on native Windows.
            mingw*)          gl_cv_func_open_directory_works="guessing no" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_open_directory_works="$gl_cross_guess_normal" ;;
          esac
         ])])
    case "$gl_cv_func_open_directory_works" in
      *yes) ;;
      *)
        AC_DEFINE([REPLACE_OPEN_DIRECTORY], [1], [Define to 1 if open() should
work around the inability to open a directory.])
        ;;
    esac
  fi
])
m4trace:m4/fchdir.m4:56: -1- AC_DEFUN([gl_TEST_FCHDIR], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fchdir])
  if test $ac_cv_func_fchdir = no; then
    HAVE_FCHDIR=0
  fi
])
m4trace:m4/fchdir.m4:66: -1- AC_DEFUN([gl_PREREQ_FCHDIR], [:])
m4trace:m4/fchmodat.m4:9: -1- AC_DEFUN([gl_FUNC_FCHMODAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([fchmodat lchmod])
  if test $ac_cv_func_fchmodat != yes; then
    HAVE_FCHMODAT=0
  else
    AC_CACHE_CHECK(
      [whether fchmodat works],
      [gl_cv_func_fchmodat_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [
              AC_INCLUDES_DEFAULT[
              #include <fcntl.h>
              #ifndef S_IRUSR
               #define S_IRUSR 0400
              #endif
              #ifndef S_IWUSR
               #define S_IWUSR 0200
              #endif
              #ifndef S_IRWXU
               #define S_IRWXU 0700
              #endif
              #ifndef S_IRWXG
               #define S_IRWXG 0070
              #endif
              #ifndef S_IRWXO
               #define S_IRWXO 0007
              #endif
            ]GL_MDA_DEFINES],
            [[
              int permissive = S_IRWXU | S_IRWXG | S_IRWXO;
              int desired = S_IRUSR | S_IWUSR;
              int result = 0;
              #define file "conftest.fchmodat"
              struct stat st;
              if (creat (file, permissive) < 0)
                return 1;
              /* Test whether fchmodat rejects a trailing slash on a non-directory.
                 This test fails on AIX 7.2.  */
              if (fchmodat (AT_FDCWD, file "/", desired, 0) == 0)
                result |= 2;
              /* Test whether fchmodat+AT_SYMLINK_NOFOLLOW works on non-symlinks.
                 This test fails on GNU/Linux with glibc 2.31 (but not on
                 GNU/kFreeBSD nor GNU/Hurd) and Cygwin 2.9.  */
              if (fchmodat (AT_FDCWD, file, desired, AT_SYMLINK_NOFOLLOW) != 0)
                result |= 4;
              if (stat (file, &st) != 0)
                return 1;
              if ((st.st_mode & permissive) != desired)
                result |= 4;
              return result;
            ]])],
         [gl_cv_func_fchmodat_works=yes],
         [case $? in
            2) gl_cv_func_fchmodat_works='nearly' ;;
            *) gl_cv_func_fchmodat_works=no ;;
          esac
         ],
         [case "$host_os" in
                                  # Guess no on Linux with glibc and Cygwin.
            linux-gnu* | cygwin*) gl_cv_func_fchmodat_works="guessing no" ;;
                                  # Guess 'nearly' on AIX.
            aix*)                 gl_cv_func_fchmodat_works="guessing nearly" ;;
                                  # If we don't know, obey --enable-cross-guesses.
            *)                    gl_cv_func_fchmodat_works="$gl_cross_guess_normal" ;;
          esac
         ])
       rm -f conftest.fchmodat])
    case "$gl_cv_func_fchmodat_works" in
      *yes) ;;
      *nearly)
        AC_DEFINE([HAVE_NEARLY_WORKING_FCHMODAT], [1],
          [Define to 1 if fchmodat works, except for the trailing slash handling.])
        REPLACE_FCHMODAT=1
        ;;
      *)
        AC_DEFINE([NEED_FCHMODAT_NONSYMLINK_FIX], [1],
          [Define to 1 if fchmodat+AT_SYMLINK_NOFOLLOW does not work right on non-symlinks.])
        REPLACE_FCHMODAT=1
        ;;
    esac
  fi
])
m4trace:m4/fchmodat.m4:98: -1- AC_DEFUN([gl_PREREQ_FCHMODAT], [
  AC_CHECK_FUNCS_ONCE([lchmod])
  :
])
m4trace:m4/fchownat.m4:15: -1- AC_DEFUN([gl_FUNC_FCHOWNAT], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_CHOWN])
  AC_CHECK_FUNC([fchownat],
    [gl_FUNC_FCHOWNAT_DEREF_BUG(
       [REPLACE_FCHOWNAT=1
        AC_DEFINE([FCHOWNAT_NOFOLLOW_BUG], [1],
                  [Define to 1 if your platform has fchownat, but it cannot
                   perform lchown tasks.])
       ])
     gl_FUNC_FCHOWNAT_EMPTY_FILENAME_BUG(
       [REPLACE_FCHOWNAT=1
        AC_DEFINE([FCHOWNAT_EMPTY_FILENAME_BUG], [1],
                  [Define to 1 if your platform has fchownat, but it does
                   not reject an empty file name.])
       ])
     if test $REPLACE_CHOWN = 1; then
       REPLACE_FCHOWNAT=1
     fi],
    [HAVE_FCHOWNAT=0])
])
m4trace:m4/fchownat.m4:40: -1- AC_DEFUN([gl_FUNC_FCHOWNAT_DEREF_BUG], [
  dnl Persuade glibc's <unistd.h> to declare fchownat().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CACHE_CHECK([whether fchownat works with AT_SYMLINK_NOFOLLOW],
    [gl_cv_func_fchownat_nofollow_works],
    [
     gl_dangle=conftest.dangle
     # Remove any remnants of a previous test.
     rm -f $gl_dangle
     # Arrange for deletion of the temporary file this test creates.
     ac_clean_files="$ac_clean_files $gl_dangle"
     ln -s conftest.no-such $gl_dangle
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
          [[
#include <fcntl.h>
#include <unistd.h>
/* Android 4.3 declares fchownat() in <sys/stat.h> instead.  */
#include <sys/stat.h>
#include <stdlib.h>
#include <errno.h>
#include <sys/types.h>
int
main ()
{
  return (fchownat (AT_FDCWD, "$gl_dangle", (uid_t)(-1), getgid (),
                    AT_SYMLINK_NOFOLLOW) != 0
          && errno == ENOENT);
}
          ]])],
       [gl_cv_func_fchownat_nofollow_works=yes],
       [gl_cv_func_fchownat_nofollow_works=no],
       [gl_cv_func_fchownat_nofollow_works="$gl_cross_guess_normal"])
  ])
  AS_IF([test "$gl_cv_func_fchownat_nofollow_works" != yes], [$1], [$2])
])
m4trace:m4/fchownat.m4:80: -1- AC_DEFUN([gl_FUNC_FCHOWNAT_EMPTY_FILENAME_BUG], [
  dnl Persuade glibc's <unistd.h> to declare fchownat().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CACHE_CHECK([whether fchownat works with an empty file name],
    [gl_cv_func_fchownat_empty_filename_works],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <unistd.h>
            #include <fcntl.h>
            /* Android 4.3 declares fchownat() in <sys/stat.h> instead.  */
            #include <sys/stat.h>
          ]GL_MDA_DEFINES],
          [[int fd;
            int ret;
            if (mkdir ("conftestdir", 0700) < 0)
              return 2;
            fd = open ("conftestdir", O_RDONLY);
            if (fd < 0)
              return 3;
            ret = fchownat (fd, "", (uid_t)(-1), (gid_t)(-1), 0);
            close (fd);
            rmdir ("conftestdir");
            return ret == 0;
          ]])],
       [gl_cv_func_fchownat_empty_filename_works=yes],
       [gl_cv_func_fchownat_empty_filename_works=no],
       [gl_cv_func_fchownat_empty_filename_works="$gl_cross_guess_normal"])
    ])
  AS_IF([test "$gl_cv_func_fchownat_empty_filename_works" != yes], [$1], [$2])
])
m4trace:m4/fclose.m4:7: -1- AC_DEFUN([gl_FUNC_FCLOSE], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  gl_FUNC_FFLUSH_STDIN
  case "$gl_cv_func_fflush_stdin" in
    *yes) ;;
    *) REPLACE_FCLOSE=1 ;;
  esac

  AC_REQUIRE([gl_FUNC_CLOSE])
  if test $REPLACE_CLOSE = 1; then
    REPLACE_FCLOSE=1
  fi

  case "$host_os" in
    openedition) REPLACE_FCLOSE=1 ;;
  esac

  if test $REPLACE_FCLOSE = 0; then
    gl_FUNC_FCLOSE_STDIN
    case "$gl_cv_func_fclose_stdin" in
      *yes) ;;
      *) REPLACE_FCLOSE=1 ;;
    esac
  fi
])
m4trace:m4/fclose.m4:39: -1- AC_DEFUN([gl_FUNC_FCLOSE_STDIN], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CACHE_CHECK([whether fclose works on input streams],
    [gl_cv_func_fclose_stdin],
    [echo hello world > conftest.txt
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <fcntl.h>
            #include <stdio.h>
            #if HAVE_UNISTD_H
            # include <unistd.h>
            #else /* on Windows with MSVC */
            # include <io.h>
            #endif
           ]GL_MDA_DEFINES],
          [[int fd;
            int fd2;
            FILE *fp;
            fd = open ("conftest.txt", O_RDONLY);
            if (fd < 0)
              return 1;
            if (lseek (fd, 1, SEEK_SET) != 1)
              return 2;
            fd2 = dup (fd);
            if (fd2 < 0)
              return 3;
            fp = fdopen (fd2, "r");
            if (fp == NULL)
              return 4;
            if (fgetc (fp) != 'e')
              { fclose (fp); return 5; }
            /* This fclose() call should reposition the underlying file
               descriptor.  */
            if (fclose (fp) != 0)
              return 6;
            if (lseek (fd2, 0, SEEK_CUR) != -1) /* should fail with EBADF */
              return 7;
            /* Verify the file position.  */
            if (lseek (fd, 0, SEEK_CUR) != 2)
              return 8;
            return 0;
          ]])],
       [gl_cv_func_fclose_stdin=yes],
       [gl_cv_func_fclose_stdin=no],
       [case "$host_os" in
                         # Guess no on glibc systems.
          *-gnu* | gnu*) gl_cv_func_fclose_stdin="guessing no" ;;
                         # Guess yes on musl systems.
          *-musl*)       gl_cv_func_fclose_stdin="guessing yes" ;;
                         # Guess no on native Windows.
          mingw*)        gl_cv_func_fclose_stdin="guessing no" ;;
                         # If we don't know, obey --enable-cross-guesses.
          *)             gl_cv_func_fclose_stdin="$gl_cross_guess_normal" ;;
        esac
       ])
     rm conftest.txt
    ])
])
m4trace:m4/fcntl-o.m4:14: -1- AC_DEFUN([gl_FCNTL_O_FLAGS], [
  dnl Persuade glibc <fcntl.h> to define O_NOATIME and O_NOFOLLOW.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_FUNCS_ONCE([symlink])
  AC_CACHE_CHECK([for working fcntl.h], [gl_cv_header_working_fcntl_h],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
           #include <sys/stat.h>
           #if HAVE_UNISTD_H
           # include <unistd.h>
           #else /* on Windows with MSVC */
           # include <io.h>
           # include <stdlib.h>
           # defined sleep(n) _sleep ((n) * 1000)
           #endif
           #include <fcntl.h>
           ]GL_MDA_DEFINES[
           #ifndef O_NOATIME
            #define O_NOATIME 0
           #endif
           #ifndef O_NOFOLLOW
            #define O_NOFOLLOW 0
           #endif
           static int const constants[] =
            {
              O_CREAT, O_EXCL, O_NOCTTY, O_TRUNC, O_APPEND,
              O_NONBLOCK, O_SYNC, O_ACCMODE, O_RDONLY, O_RDWR, O_WRONLY
            };
          ]],
          [[
            int result = !constants;
            #if HAVE_SYMLINK
            {
              static char const sym[] = "conftest.sym";
              if (symlink ("/dev/null", sym) != 0)
                result |= 2;
              else
                {
                  int fd = open (sym, O_WRONLY | O_NOFOLLOW | O_CREAT, 0);
                  if (fd >= 0)
                    {
                      close (fd);
                      result |= 4;
                    }
                }
              if (unlink (sym) != 0 || symlink (".", sym) != 0)
                result |= 2;
              else
                {
                  int fd = open (sym, O_RDONLY | O_NOFOLLOW);
                  if (fd >= 0)
                    {
                      close (fd);
                      result |= 4;
                    }
                }
              unlink (sym);
            }
            #endif
            {
              static char const file[] = "confdefs.h";
              int fd = open (file, O_RDONLY | O_NOATIME);
              if (fd < 0)
                result |= 8;
              else
                {
                  struct stat st0;
                  if (fstat (fd, &st0) != 0)
                    result |= 16;
                  else
                    {
                      char c;
                      sleep (1);
                      if (read (fd, &c, 1) != 1)
                        result |= 24;
                      else
                        {
                          if (close (fd) != 0)
                            result |= 32;
                          else
                            {
                              struct stat st1;
                              if (stat (file, &st1) != 0)
                                result |= 40;
                              else
                                if (st0.st_atime != st1.st_atime)
                                  result |= 64;
                            }
                        }
                    }
                }
            }
            return result;]])],
       [gl_cv_header_working_fcntl_h=yes],
       [case $? in #(
        4) gl_cv_header_working_fcntl_h='no (bad O_NOFOLLOW)';; #(
        64) gl_cv_header_working_fcntl_h='no (bad O_NOATIME)';; #(
        68) gl_cv_header_working_fcntl_h='no (bad O_NOATIME, O_NOFOLLOW)';; #(
         *) gl_cv_header_working_fcntl_h='no';;
        esac],
       [case "$host_os" in
                  # Guess 'no' on native Windows.
          mingw*) gl_cv_header_working_fcntl_h='no' ;;
          *)      gl_cv_header_working_fcntl_h=cross-compiling ;;
        esac
       ])
    ])

  case $gl_cv_header_working_fcntl_h in #(
  *O_NOATIME* | no | cross-compiling) ac_val=0;; #(
  *) ac_val=1;;
  esac
  AC_DEFINE_UNQUOTED([HAVE_WORKING_O_NOATIME], [$ac_val],
    [Define to 1 if O_NOATIME works.])

  case $gl_cv_header_working_fcntl_h in #(
  *O_NOFOLLOW* | no | cross-compiling) ac_val=0;; #(
  *) ac_val=1;;
  esac
  AC_DEFINE_UNQUOTED([HAVE_WORKING_O_NOFOLLOW], [$ac_val],
    [Define to 1 if O_NOFOLLOW works.])
])
m4trace:m4/fcntl-safer.m4:7: -1- AC_DEFUN([gl_FCNTL_SAFER], [
  dnl Prerequisites of lib/open-safer.c.
  AC_REQUIRE([gl_PROMOTED_TYPE_MODE_T])
])
m4trace:m4/fcntl-safer.m4:13: -1- AC_DEFUN([gl_OPENAT_SAFER], [
  AC_REQUIRE([gl_FCNTL_SAFER])
])
m4trace:m4/fcntl.m4:16: -1- AC_DEFUN([gl_FUNC_FCNTL], [
  dnl Persuade glibc to expose F_DUPFD_CLOEXEC.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([fcntl])
  if test $ac_cv_func_fcntl = no; then
    gl_REPLACE_FCNTL
  else
    dnl cygwin 1.5.x F_DUPFD has wrong errno, and allows negative target
    dnl haiku alpha 2 F_DUPFD has wrong errno
    AC_CACHE_CHECK([whether fcntl handles F_DUPFD correctly],
      [gl_cv_func_fcntl_f_dupfd_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <errno.h>
              #include <fcntl.h>
              #include <limits.h>
              #include <sys/resource.h>
              #include <unistd.h>
              ]GL_MDA_DEFINES[
              #ifndef RLIM_SAVED_CUR
              # define RLIM_SAVED_CUR RLIM_INFINITY
              #endif
              #ifndef RLIM_SAVED_MAX
              # define RLIM_SAVED_MAX RLIM_INFINITY
              #endif
            ]],
            [[int result = 0;
              int bad_fd = INT_MAX;
              struct rlimit rlim;
              if (getrlimit (RLIMIT_NOFILE, &rlim) == 0
                  && 0 <= rlim.rlim_cur && rlim.rlim_cur <= INT_MAX
                  && rlim.rlim_cur != RLIM_INFINITY
                  && rlim.rlim_cur != RLIM_SAVED_MAX
                  && rlim.rlim_cur != RLIM_SAVED_CUR)
                bad_fd = rlim.rlim_cur;
              if (fcntl (0, F_DUPFD, -1) != -1) result |= 1;
              if (errno != EINVAL) result |= 2;
              if (fcntl (0, F_DUPFD, bad_fd) != -1) result |= 4;
              if (errno != EINVAL) result |= 8;
              /* On OS/2 kLIBC, F_DUPFD does not work on a directory fd */
              {
                int fd;
                fd = open (".", O_RDONLY);
                if (fd == -1)
                  result |= 16;
                else if (fcntl (fd, F_DUPFD, STDERR_FILENO + 1) == -1)
                  result |= 32;

                close (fd);
              }
              return result;]])],
         [gl_cv_func_fcntl_f_dupfd_works=yes],
         [gl_cv_func_fcntl_f_dupfd_works=no],
         [case $host_os in
            aix* | cygwin* | haiku*)
               gl_cv_func_fcntl_f_dupfd_works="guessing no" ;;
            *) gl_cv_func_fcntl_f_dupfd_works="guessing yes" ;;
          esac])])
    case $gl_cv_func_fcntl_f_dupfd_works in
      *yes) ;;
      *) gl_REPLACE_FCNTL
        AC_DEFINE([FCNTL_DUPFD_BUGGY], [1], [Define this to 1 if F_DUPFD
          behavior does not match POSIX]) ;;
    esac

    dnl Many systems lack F_DUPFD_CLOEXEC.
    dnl NetBSD 9.0 declares F_DUPFD_CLOEXEC but it works only like F_DUPFD.
    AC_CACHE_CHECK([whether fcntl understands F_DUPFD_CLOEXEC],
      [gl_cv_func_fcntl_f_dupfd_cloexec],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
            [[#include <fcntl.h>
              #include <unistd.h>
              int main (int argc, char *argv[])
              {
                if (argc == 1)
                  /* parent process */
                  {
                    if (fcntl (1, F_DUPFD_CLOEXEC, 10) < 0)
                      return 1;
                    return execl ("./conftest", "./conftest", "child", NULL);
                  }
                else
                  /* child process */
                  return (fcntl (10, F_GETFL) < 0 ? 0 : 42);
              }
            ]])
         ],
         [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#ifdef __linux__
/* The Linux kernel only added F_DUPFD_CLOEXEC in 2.6.24, so we always replace
   it to support the semantics on older kernels that failed with EINVAL.  */
choke me
#endif
           ]])],
           [gl_cv_func_fcntl_f_dupfd_cloexec=yes],
           [gl_cv_func_fcntl_f_dupfd_cloexec="needs runtime check"])
         ],
         [gl_cv_func_fcntl_f_dupfd_cloexec=no],
         [case "$host_os" in
                     # Guess no on NetBSD.
            netbsd*) gl_cv_func_fcntl_f_dupfd_cloexec="guessing no" ;;
            *)       gl_cv_func_fcntl_f_dupfd_cloexec="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
    case "$gl_cv_func_fcntl_f_dupfd_cloexec" in
      *yes) ;;
      *)    gl_REPLACE_FCNTL
            dnl No witness macro needed for this bug.
            ;;
    esac
  fi
  dnl Replace fcntl() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      gl_REPLACE_FCNTL
    fi
  ])
])
m4trace:m4/fcntl.m4:142: -1- AC_DEFUN([gl_REPLACE_FCNTL], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fcntl])
  if test $ac_cv_func_fcntl = no; then
    HAVE_FCNTL=0
  else
    REPLACE_FCNTL=1
  fi
])
m4trace:m4/fcntl_h.m4:10: -1- AC_DEFUN_ONCE([gl_FCNTL_H], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_O_FLAGS])
  gl_NEXT_HEADERS([fcntl.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <fcntl.h>
    ]], [fcntl openat])
])
m4trace:m4/fcntl_h.m4:33: -1- AC_DEFUN([gl_FCNTL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_FCNTL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/fcntl_h.m4:45: -1- AC_DEFUN([gl_FCNTL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_FCNTL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CREAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCNTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENAT])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CREAT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_OPEN], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_FCNTL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
])
m4trace:m4/fcntl_h.m4:61: -1- AC_DEFUN([gl_FCNTL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCNTL=1;          AC_SUBST([HAVE_FCNTL])
  HAVE_OPENAT=1;         AC_SUBST([HAVE_OPENAT])
  REPLACE_CREAT=0;       AC_SUBST([REPLACE_CREAT])
  REPLACE_FCNTL=0;       AC_SUBST([REPLACE_FCNTL])
  REPLACE_OPEN=0;        AC_SUBST([REPLACE_OPEN])
  REPLACE_OPENAT=0;      AC_SUBST([REPLACE_OPENAT])
])
m4trace:m4/fdatasync.m4:7: -1- AC_DEFUN([gl_FUNC_FDATASYNC], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl Using AC_CHECK_FUNCS_ONCE would break our subsequent AC_SEARCH_LIBS
  AC_CHECK_DECLS_ONCE([fdatasync])
  LIB_FDATASYNC=
  AC_SUBST([LIB_FDATASYNC])

  if test $ac_cv_have_decl_fdatasync = no; then
    HAVE_DECL_FDATASYNC=0
    dnl Mac OS X 10.7 has fdatasync but does not declare it.
    AC_CHECK_FUNCS([fdatasync])
    if test $ac_cv_func_fdatasync = no; then
      HAVE_FDATASYNC=0
    fi
  else
    case "$host_os" in
      solaris*)
        dnl Solaris <= 2.6 has fdatasync() in libposix4.
        dnl Solaris 7..10 has it in librt.
        gl_saved_libs=$LIBS
        AC_SEARCH_LIBS([fdatasync], [rt posix4],
          [test "$ac_cv_search_fdatasync" = "none required" ||
           LIB_FDATASYNC=$ac_cv_search_fdatasync])
        LIBS=$gl_saved_libs
        ;;
      *)
        dnl Android 4.3 does not have fdatasync but declares it.
        AC_CHECK_FUNCS([fdatasync])
        if test $ac_cv_func_fdatasync = no; then
          HAVE_FDATASYNC=0
        fi
        ;;
    esac
  fi
])
m4trace:m4/fdopen.m4:7: -1- AC_DEFUN([gl_FUNC_FDOPEN], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_FDOPEN=1
    fi
  ])
  if test $REPLACE_FDOPEN = 0; then
    dnl Test whether fdopen() sets errno when it fails due to a bad fd argument.
    AC_CACHE_CHECK([whether fdopen sets errno], [gl_cv_func_fdopen_works],
      [
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <stdio.h>
#include <errno.h>
]GL_MDA_DEFINES[
int
main (void)
{
  FILE *fp;
  errno = 0;
  fp = fdopen (-1, "r");
  if (fp == NULL && errno == 0)
    return 1;
  return 0;
}]])],
          [gl_cv_func_fdopen_works=yes],
          [gl_cv_func_fdopen_works=no],
          [case "$host_os" in
             mingw*) gl_cv_func_fdopen_works="guessing no" ;;
             *)      gl_cv_func_fdopen_works="guessing yes" ;;
           esac
          ])
      ])
    case "$gl_cv_func_fdopen_works" in
      *no) REPLACE_FDOPEN=1 ;;
    esac
  fi
])
m4trace:m4/fdopen.m4:51: -1- AC_DEFUN([gl_PREREQ_FDOPEN], [])
m4trace:m4/fdopendir.m4:11: -1- AC_DEFUN([gl_FUNC_FDOPENDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl FreeBSD 7.3 has the function, but failed to declare it.
  AC_CHECK_DECLS([fdopendir], [], [HAVE_DECL_FDOPENDIR=0], [[
#include <dirent.h>
    ]])
  AC_CHECK_FUNCS_ONCE([fdopendir])
  if test $ac_cv_func_fdopendir = no; then
    HAVE_FDOPENDIR=0
  else
    AC_CACHE_CHECK([whether fdopendir works],
      [gl_cv_func_fdopendir_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM([[
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
]GL_MDA_DEFINES[
#if !HAVE_DECL_FDOPENDIR
extern
# ifdef __cplusplus
"C"
# endif
DIR *fdopendir (int);
#endif
]],
            [[int result = 0;
              int fd = open ("conftest.c", O_RDONLY);
              if (fd < 0) result |= 1;
              if (fdopendir (fd)) result |= 2;
              if (close (fd)) result |= 4;
              return result;
            ]])],
         [gl_cv_func_fdopendir_works=yes],
         [gl_cv_func_fdopendir_works=no],
         [case "$host_os" in
                     # Guess yes on glibc systems.
            *-gnu*)  gl_cv_func_fdopendir_works="guessing yes" ;;
                     # Guess yes on musl systems.
            *-musl*) gl_cv_func_fdopendir_works="guessing yes" ;;
                     # If we don't know, obey --enable-cross-guesses.
            *)       gl_cv_func_fdopendir_works="$gl_cross_guess_normal" ;;
          esac
         ])])
    case "$gl_cv_func_fdopendir_works" in
      *yes) ;;
      *)
        REPLACE_FDOPENDIR=1
        ;;
    esac
  fi
])
m4trace:m4/fflush.m4:13: -1- AC_DEFUN([gl_FUNC_FFLUSH], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  gl_FUNC_FFLUSH_STDIN
  case "$gl_cv_func_fflush_stdin" in
    *yes) ;;
    *) REPLACE_FFLUSH=1 ;;
  esac
])
m4trace:m4/fflush.m4:26: -1- AC_DEFUN([gl_FUNC_FFLUSH_STDIN], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CACHE_CHECK([whether fflush works on input streams],
    [gl_cv_func_fflush_stdin],
    [echo hello world > conftest.txt
     AC_RUN_IFELSE([AC_LANG_PROGRAM(
       [[
#include <stdio.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#else /* on Windows with MSVC */
# include <io.h>
#endif
       ]GL_MDA_DEFINES],
       [[FILE *f = fopen ("conftest.txt", "r");
         char buffer[10];
         int fd;
         int c;
         if (f == NULL)
           return 1;
         fd = fileno (f);
         if (fd < 0 || fread (buffer, 1, 5, f) != 5)
           { fclose (f); return 2; }
         /* For deterministic results, ensure f read a bigger buffer.  */
         if (lseek (fd, 0, SEEK_CUR) == 5)
           { fclose (f); return 3; }
         /* POSIX requires fflush-fseek to set file offset of fd.  This fails
            on BSD systems and on mingw.  */
         if (fflush (f) != 0 || fseek (f, 0, SEEK_CUR) != 0)
           { fclose (f); return 4; }
         if (lseek (fd, 0, SEEK_CUR) != 5)
           { fclose (f); return 5; }
         /* Verify behaviour of fflush after ungetc. See
            <https://www.opengroup.org/austin/aardvark/latest/xshbug3.txt>  */
         /* Verify behaviour of fflush after a backup ungetc.  This fails on
            mingw.  */
         c = fgetc (f);
         ungetc (c, f);
         fflush (f);
         if (fgetc (f) != c)
           { fclose (f); return 6; }
         /* Verify behaviour of fflush after a non-backup ungetc.  This fails
            on glibc 2.8 and on BSD systems.  */
         c = fgetc (f);
         ungetc ('@', f);
         fflush (f);
         if (fgetc (f) != c)
           { fclose (f); return 7; }
         fclose (f);
         return 0;
       ]])],
       [gl_cv_func_fflush_stdin=yes],
       [gl_cv_func_fflush_stdin=no],
       [case "$host_os" in
                  # Guess no on native Windows.
          mingw*) gl_cv_func_fflush_stdin="guessing no" ;;
          *)      gl_cv_func_fflush_stdin=cross ;;
        esac
       ])
     rm conftest.txt
    ])
  case "$gl_cv_func_fflush_stdin" in
    *yes) gl_func_fflush_stdin=1 ;;
    *no)  gl_func_fflush_stdin=0 ;;
    *)    gl_func_fflush_stdin='(-1)' ;;
  esac
  AC_DEFINE_UNQUOTED([FUNC_FFLUSH_STDIN], [$gl_func_fflush_stdin],
    [Define to 1 if fflush is known to work on stdin as per POSIX.1-2008,
     0 if fflush is known to not work, -1 if unknown.])
])
m4trace:m4/fflush.m4:100: -1- AC_DEFUN([gl_PREREQ_FFLUSH], [:])
m4trace:m4/fileblocks.m4:7: -1- AC_DEFUN([gl_FILEBLOCKS], [
  m4_pushdef([AC_LIBOBJ], [:])
  dnl Note: AC_STRUCT_ST_BLOCKS does AC_LIBOBJ([fileblocks]).
  AC_STRUCT_ST_BLOCKS
  m4_popdef([AC_LIBOBJ])
  dnl The stat-size module depends on this one and also assumes that
  dnl HAVE_STRUCT_STAT_ST_BLOCKS is correctly defined.  So if you
  dnl remove the call above, please make sure that this does not
  dnl introduce a bug into lib/stat-size.h.
])
m4trace:m4/fileblocks.m4:20: -1- AC_DEFUN([gl_PREREQ_FILEBLOCKS], [
  AC_CHECK_HEADERS_ONCE([sys/param.h])
  :
])
m4trace:m4/filemode.m4:7: -1- AC_DEFUN([gl_FILEMODE], [
  AC_CHECK_DECLS_ONCE([strmode])
])
m4trace:m4/filenamecat.m4:7: -1- AC_DEFUN([gl_FILE_NAME_CONCAT], [
  AC_REQUIRE([gl_FILE_NAME_CONCAT_LGPL])
])
m4trace:m4/filenamecat.m4:12: -1- AC_DEFUN([gl_FILE_NAME_CONCAT_LGPL], [
  dnl Prerequisites of lib/filenamecat-lgpl.c.
  AC_CHECK_FUNCS_ONCE([mempcpy])
])
m4trace:m4/flexmember.m4:11: -1- AC_DEFUN([AC_C_FLEXIBLE_ARRAY_MEMBER], [
  AC_CACHE_CHECK([for flexible array member],
    ac_cv_c_flexmember,
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
            #include <stdio.h>
            #include <stddef.h>
            struct m { struct m *next, **list; char name[]; };
            struct s { struct s *p; struct m *m; int n; double d[]; };]],
          [[int m = getchar ();
            size_t nbytes = offsetof (struct s, d) + m * sizeof (double);
            nbytes += sizeof (struct s) - 1;
            nbytes -= nbytes % sizeof (struct s);
            struct s *p = malloc (nbytes);
            p->p = p;
            p->m = NULL;
            p->d[0] = 0.0;
            return p->d != (double *) NULL;]])],
       [ac_cv_c_flexmember=yes],
       [ac_cv_c_flexmember=no])])
  if test $ac_cv_c_flexmember = yes; then
    AC_DEFINE([FLEXIBLE_ARRAY_MEMBER], [],
      [Define to nothing if C supports flexible array members, and to
       1 if it does not.  That way, with a declaration like 'struct s
       { int n; short d@<:@FLEXIBLE_ARRAY_MEMBER@:>@; };', the struct hack
       can be used with pre-C99 compilers.
       Use 'FLEXSIZEOF (struct s, d, N * sizeof (short))' to calculate
       the size in bytes of such a struct containing an N-element array.])
  else
    AC_DEFINE([FLEXIBLE_ARRAY_MEMBER], [1])
  fi
])
m4trace:m4/float_h.m4:7: -1- AC_DEFUN([gl_FLOAT_H], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  GL_GENERATE_FLOAT_H=false
  REPLACE_FLOAT_LDBL=0
  case "$host_os" in
    aix* | beos* | openbsd* | mirbsd* | irix*)
      GL_GENERATE_FLOAT_H=true
      ;;
    freebsd* | dragonfly*)
      case "$host_cpu" in
changequote(,)dnl
        i[34567]86 )
changequote([,])dnl
          GL_GENERATE_FLOAT_H=true
          ;;
        x86_64 )
          # On x86_64 systems, the C compiler may still be generating
          # 32-bit code.
          AC_COMPILE_IFELSE(
            [AC_LANG_SOURCE(
               [[#if defined __LP64__ || defined __x86_64__ || defined __amd64__
                  int ok;
                 #else
                  error fail
                 #endif
               ]])],
            [],
            [GL_GENERATE_FLOAT_H=true])
          ;;
      esac
      ;;
    linux*)
      case "$host_cpu" in
        powerpc*)
          GL_GENERATE_FLOAT_H=true
          ;;
      esac
      ;;
  esac
  case "$host_os" in
    aix* | freebsd* | dragonfly* | linux*)
      if $GL_GENERATE_FLOAT_H; then
        REPLACE_FLOAT_LDBL=1
      fi
      ;;
  esac

  dnl Test against glibc-2.7 Linux/SPARC64 bug.
  REPLACE_ITOLD=0
  AC_CACHE_CHECK([whether conversion from 'int' to 'long double' works],
    [gl_cv_func_itold_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
int i = -1;
volatile long double ld;
int main ()
{
  ld += i * 1.0L;
  if (ld > 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_itold_works=yes],
        [gl_cv_func_itold_works=no],
        [case "$host" in
           sparc*-*-linux*)
             AC_COMPILE_IFELSE(
               [AC_LANG_SOURCE(
                 [[#if defined __LP64__ || defined __arch64__
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
               [gl_cv_func_itold_works="guessing no"],
               [gl_cv_func_itold_works="guessing yes"])
             ;;
                   # Guess yes on native Windows.
           mingw*) gl_cv_func_itold_works="guessing yes" ;;
           *)      gl_cv_func_itold_works="guessing yes" ;;
         esac
        ])
    ])
  case "$gl_cv_func_itold_works" in
    *no)
      REPLACE_ITOLD=1
      dnl We add the workaround to <float.h> but also to <math.h>,
      dnl to increase the chances that the fix function gets pulled in.
      GL_GENERATE_FLOAT_H=true
      ;;
  esac

  if $GL_GENERATE_FLOAT_H; then
    gl_NEXT_HEADERS([float.h])
  fi
  AC_SUBST([REPLACE_ITOLD])
])
m4trace:m4/fnmatch.m4:12: -1- AC_DEFUN([gl_FUNC_FNMATCH_POSIX], [
  m4_divert_text([DEFAULTS], [gl_fnmatch_required=POSIX])

  AC_REQUIRE([gl_FNMATCH_H])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  gl_fnmatch_required_lowercase=`
    echo $gl_fnmatch_required | LC_ALL=C tr '[[A-Z]]' '[[a-z]]'
  `
  AC_CHECK_FUNCS_ONCE([fnmatch])
  if test $ac_cv_func_fnmatch = no; then
    HAVE_FNMATCH=0
  else
    gl_fnmatch_cache_var="gl_cv_func_fnmatch_${gl_fnmatch_required_lowercase}"
    AC_CACHE_CHECK([for working $gl_fnmatch_required fnmatch],
      [$gl_fnmatch_cache_var],
      [dnl Some versions of Solaris, SCO, and the GNU C Library
       dnl have a broken or incompatible fnmatch.
       dnl So we run a test program.  If we are cross-compiling, take no chance.
       dnl Thanks to John Oleynick, François Pinard, and Paul Eggert for this
       dnl test.
       if test $gl_fnmatch_required = GNU; then
         gl_fnmatch_gnu_start=
         gl_fnmatch_gnu_end=
       else
         gl_fnmatch_gnu_start='#if 0'
         gl_fnmatch_gnu_end='#endif'
       fi
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <fnmatch.h>
              static int
              y (char const *pattern, char const *string, int flags)
              {
                return fnmatch (pattern, string, flags) == 0;
              }
              static int
              n (char const *pattern, char const *string, int flags)
              {
                return fnmatch (pattern, string, flags) == FNM_NOMATCH;
              }
            ]],
            [[char const *Apat = 'A' < '\\\\' ? "[A-\\\\\\\\]" : "[\\\\\\\\-A]";
              char const *apat = 'a' < '\\\\' ? "[a-\\\\\\\\]" : "[\\\\\\\\-a]";
              static char const A_1[] = { 'A' - 1, 0 };
              static char const A01[] = { 'A' + 1, 0 };
              static char const a_1[] = { 'a' - 1, 0 };
              static char const a01[] = { 'a' + 1, 0 };
              static char const bs_1[] = { '\\\\' - 1, 0 };
              static char const bs01[] = { '\\\\' + 1, 0 };
              int result = 0;
              if (!n ("a*", "", 0))
                return 1;
              if (!y ("a*", "abc", 0))
                return 1;
              if (!y ("[/b", "[/b", 0)) /*"]]"*/ /* glibc Bugzilla bug 12378 */
                return 1;
              if (!n ("d*/*1", "d/s/1", FNM_PATHNAME))
                return 2;
              if (!y ("a\\\\bc", "abc", 0))
                return 3;
              if (!n ("a\\\\bc", "abc", FNM_NOESCAPE))
                return 3;
              if (!y ("*x", ".x", 0))
                return 4;
              if (!n ("*x", ".x", FNM_PERIOD))
                return 4;
              if (!y (Apat, "\\\\", 0))
                return 5;
              if (!y (Apat, "A", 0))
                return 5;
              if (!y (apat, "\\\\", 0))
                return 5;
              if (!y (apat, "a", 0))
                return 5;
              if (!(n (Apat, A_1, 0) == ('A' < '\\\\')))
                return 5;
              if (!(n (apat, a_1, 0) == ('a' < '\\\\')))
                return 5;
              if (!(y (Apat, A01, 0) == ('A' < '\\\\')))
                return 5;
              if (!(y (apat, a01, 0) == ('a' < '\\\\')))
                return 5;
              if (!(y (Apat, bs_1, 0) == ('A' < '\\\\')))
                return 5;
              if (!(y (apat, bs_1, 0) == ('a' < '\\\\')))
                return 5;
              if (!(n (Apat, bs01, 0) == ('A' < '\\\\')))
                return 5;
              if (!(n (apat, bs01, 0) == ('a' < '\\\\')))
                return 5;
              $gl_fnmatch_gnu_start
              if (!y ("xxXX", "xXxX", FNM_CASEFOLD))
                result |= 8;
              if (!y ("a++(x|yy)b", "a+xyyyyxb", FNM_EXTMATCH))
                result |= 16;
              if (!n ("d*/*1", "d/s/1", FNM_FILE_NAME))
                result |= 32;
              if (!y ("*", "x", FNM_FILE_NAME | FNM_LEADING_DIR))
                result |= 64;
              if (!y ("x*", "x/y/z", FNM_FILE_NAME | FNM_LEADING_DIR))
                result |= 64;
              if (!y ("*c*", "c/x", FNM_FILE_NAME | FNM_LEADING_DIR))
                result |= 64;
              $gl_fnmatch_gnu_end
              return result;
            ]])],
         [eval "$gl_fnmatch_cache_var=yes"],
         [eval "$gl_fnmatch_cache_var=no"],
         [case "$host_os" in
                     # Guess yes on musl systems.
            *-musl*) eval "$gl_fnmatch_cache_var=\"guessing yes\"" ;;
                     # Guess no otherwise, even on glibc systems.
            *)       eval "$gl_fnmatch_cache_var=\"guessing no\"" ;;
          esac
         ])
      ])
    eval "gl_fnmatch_result=\"\$$gl_fnmatch_cache_var\""
    case "$gl_fnmatch_result" in
      *yes) ;;
      *) REPLACE_FNMATCH=1 ;;
    esac
  fi
  if test $HAVE_FNMATCH = 0 || test $REPLACE_FNMATCH = 1; then
    gl_REPLACE_FNMATCH_H
  fi
])
m4trace:m4/fnmatch.m4:141: -1- AC_DEFUN([gl_FUNC_FNMATCH_GNU], [
  m4_divert_text([INIT_PREPARE], [gl_fnmatch_required=GNU])

  AC_REQUIRE([gl_FUNC_FNMATCH_POSIX])
])
m4trace:m4/fnmatch.m4:148: -1- AC_DEFUN([gl_PREREQ_FNMATCH], [
  dnl Prerequisites of lib/fnmatch.c.
  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  AC_CHECK_FUNCS_ONCE([mbsrtowcs])
])
m4trace:m4/fnmatch_h.m4:9: -1- AC_DEFUN_ONCE([gl_FNMATCH_H], [
  AC_REQUIRE([gl_FNMATCH_H_DEFAULTS])
  m4_ifdef([gl_ANSI_CXX], [AC_REQUIRE([gl_ANSI_CXX])])
  AC_CHECK_HEADERS_ONCE([fnmatch.h])
  gl_CHECK_NEXT_HEADERS([fnmatch.h])

  dnl Persuade glibc <fnmatch.h> to declare FNM_CASEFOLD etc.
  dnl This is only needed if gl_fnmatch_required = GNU. It would be possible
  dnl to avoid this dependency for gl_FUNC_FNMATCH_POSIX by putting
  dnl gl_FUNC_FNMATCH_GNU into a separate .m4 file.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  if test $ac_cv_header_fnmatch_h = yes; then
    HAVE_FNMATCH_H=1
  else
    HAVE_FNMATCH_H=0
  fi
  AC_SUBST([HAVE_FNMATCH_H])

  m4_ifdef([gl_POSIXCHECK],
    [GL_GENERATE_FNMATCH_H=true],
    [GL_GENERATE_FNMATCH_H=false
     if m4_ifdef([gl_ANSI_CXX], [test "$CXX" != no], [false]); then
       dnl Override <fnmatch.h> always, to support the C++ GNULIB_NAMESPACE.
       GL_GENERATE_FNMATCH_H=true
     else
       if test $ac_cv_header_fnmatch_h != yes; then
         dnl Provide a substitute <fnmatch.h> file.
         GL_GENERATE_FNMATCH_H=true
       fi
     fi
    ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <fnmatch.h>
    ]],
    [fnmatch])
])
m4trace:m4/fnmatch_h.m4:51: -1- AC_DEFUN([gl_REPLACE_FNMATCH_H], [
  gl_FNMATCH_H_REQUIRE_DEFAULTS
  GL_GENERATE_FNMATCH_H=true
])
m4trace:m4/fnmatch_h.m4:61: -1- AC_DEFUN([gl_FNMATCH_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_FNMATCH_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/fnmatch_h.m4:73: -1- AC_DEFUN([gl_FNMATCH_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_FNMATCH_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FNMATCH])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_FNMATCH_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_FNMATCH_H_DEFAULTS])
])
m4trace:m4/fnmatch_h.m4:82: -1- AC_DEFUN([gl_FNMATCH_H_DEFAULTS], [
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_FNMATCH=1;            AC_SUBST([HAVE_FNMATCH])
  REPLACE_FNMATCH=0;         AC_SUBST([REPLACE_FNMATCH])
])
m4trace:m4/fopen.m4:7: -1- AC_DEFUN([gl_FUNC_FOPEN], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw* | pw*)
      dnl Replace fopen, for handling of "/dev/null".
      REPLACE_FOPEN=1
      dnl fopen on mingw also has the trailing slash bug.
      gl_cv_func_fopen_slash="guessing no"
      ;;
    *)
      dnl fopen("foo/", "w") should not create a file when the file name has a
      dnl trailing slash.
      AC_CACHE_CHECK([whether fopen recognizes a trailing slash],
        [gl_cv_func_fopen_slash],
        [
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <stddef.h>
#include <stdio.h>
int main ()
{
  FILE *fp = fopen ("conftest.sl/", "w");
  int result = (fp != NULL);
  if (fp != NULL)
    fclose (fp);
  return result;
}]])],
            [gl_cv_func_fopen_slash=yes],
            [gl_cv_func_fopen_slash=no],
            [
changequote(,)dnl
             case "$host_os" in
               aix* | hpux* | solaris2.[0-9] | solaris2.[0-9].*)
                 gl_cv_func_fopen_slash="guessing no" ;;
               *)
                 gl_cv_func_fopen_slash="guessing yes" ;;
             esac
changequote([,])dnl
            ])
          rm -f conftest.sl
        ])
      ;;
  esac
  case "$gl_cv_func_fopen_slash" in
    *no)
      AC_DEFINE([FOPEN_TRAILING_SLASH_BUG], [1],
        [Define to 1 if fopen() fails to recognize a trailing slash.])
      REPLACE_FOPEN=1
      ;;
  esac
])
m4trace:m4/fopen.m4:61: -1- AC_DEFUN([gl_FUNC_FOPEN_GNU], [
  AC_REQUIRE([gl_FUNC_FOPEN])
  AC_CACHE_CHECK([whether fopen supports the mode character 'x'],
    [gl_cv_func_fopen_mode_x],
    [rm -f conftest.x
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#include <stdio.h>
#include <errno.h>
int main ()
{
  FILE *fp;
  fp = fopen ("conftest.x", "w");
  fclose (fp);
  fp = fopen ("conftest.x", "wx");
  if (fp != NULL)
    /* 'x' ignored */
    return 1;
  else if (errno == EEXIST)
    return 0;
  else
    /* 'x' rejected */
    return 2;
}]])],
       [gl_cv_func_fopen_mode_x=yes],
       [gl_cv_func_fopen_mode_x=no],
       [case "$host_os" in
          # Guess yes on glibc and musl systems.
          linux*-gnu* | gnu* | kfreebsd*-gnu | *-musl*)
            gl_cv_func_fopen_mode_x="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *)
            gl_cv_func_fopen_mode_x="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -f conftest.x
    ])
  AC_CACHE_CHECK([whether fopen supports the mode character 'e'],
    [gl_cv_func_fopen_mode_e],
    [echo foo > conftest.x
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#include <stdio.h>
#include <errno.h>
#include <fcntl.h>
]GL_MDA_DEFINES[
int main ()
{
  FILE *fp = fopen ("conftest.x", "re");
  if (fp != NULL)
    {
      if (fcntl (fileno (fp), F_GETFD) & FD_CLOEXEC)
        return 0;
      else
        /* 'e' ignored */
        return 1;
    }
  else
    /* 'e' rejected */
    return 2;
}]])],
       [gl_cv_func_fopen_mode_e=yes],
       [gl_cv_func_fopen_mode_e=no],
       [case "$host_os" in
          # Guess yes on glibc and musl systems.
          linux*-gnu* | gnu* | kfreebsd*-gnu | *-musl*)
            gl_cv_func_fopen_mode_e="guessing yes" ;;
          # Guess no on native Windows.
          mingw*)
            gl_cv_func_fopen_mode_e="guessing no" ;;
          # If we don't know, obey --enable-cross-guesses.
          *)
            gl_cv_func_fopen_mode_e="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -f conftest.x
    ])
  REPLACE_FOPEN_FOR_FOPEN_GNU="$REPLACE_FOPEN"
  case "$gl_cv_func_fopen_mode_x" in
    *no) REPLACE_FOPEN_FOR_FOPEN_GNU=1 ;;
  esac
  case "$gl_cv_func_fopen_mode_e" in
    *no) REPLACE_FOPEN_FOR_FOPEN_GNU=1 ;;
  esac
])
m4trace:m4/fopen.m4:149: -1- AC_DEFUN([gl_PREREQ_FOPEN], [:])
m4trace:m4/fpending.m4:16: -1- AC_DEFUN([gl_FUNC_FPENDING], [
  AC_CHECK_HEADERS_ONCE([stdio_ext.h])
  fp_headers='
    #include <stdio.h>
    #if HAVE_STDIO_EXT_H
    # include <stdio_ext.h>
    #endif
  '
  AC_CACHE_CHECK([for __fpending], [gl_cv_func___fpending],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM([[$fp_headers]],
           [[return ! __fpending (stdin);]])],
        [gl_cv_func___fpending=yes],
        [gl_cv_func___fpending=no])
    ])
  if test $gl_cv_func___fpending = yes; then
    AC_CHECK_DECLS([__fpending], [], [], [$fp_headers])
  fi
])
m4trace:m4/fpieee.m4:25: -1- AC_DEFUN([gl_FP_IEEE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  # IEEE behaviour is the default on all CPUs except Alpha and SH
  # (according to the test results of Bruno Haible's ieeefp/fenv_default.m4
  # and the GCC 4.1.2 manual).
  case "$host_cpu" in
    alpha*)
      # On Alpha systems, a compiler option provides the behaviour.
      # See the ieee(3) manual page, also available at
      # <https://backdrift.org/man/tru64/man3/ieee.3.html>
      if test -n "$GCC"; then
        # GCC has the option -mieee.
        # For full IEEE compliance (rarely needed), use option -mieee-with-inexact.
        CPPFLAGS="$CPPFLAGS -mieee"
      else
        # Compaq (ex-DEC) C has the option -ieee, equivalent to -ieee_with_no_inexact.
        # For full IEEE compliance (rarely needed), use option -ieee_with_inexact.
        CPPFLAGS="$CPPFLAGS -ieee"
      fi
      ;;
    sh*)
      if test -n "$GCC"; then
        # GCC has the option -mieee.
        CPPFLAGS="$CPPFLAGS -mieee"
      fi
      ;;
  esac
])
m4trace:m4/fpurge.m4:7: -1- AC_DEFUN([gl_FUNC_FPURGE], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([stdio_ext.h])
  AC_CHECK_FUNCS_ONCE([fpurge])
  AC_CHECK_FUNCS_ONCE([__fpurge])
  AC_CHECK_DECLS([fpurge], , , [[#include <stdio.h>]])
  if test "x$ac_cv_func_fpurge" = xyes; then
    HAVE_FPURGE=1
    # Detect BSD bug.  Only cygwin 1.7 and musl are known to be immune.
    AC_CACHE_CHECK([whether fpurge works], [gl_cv_func_fpurge_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <stdio.h>
]],
            [[FILE *f = fopen ("conftest.txt", "w+");
              if (!f)
                return 1;
              if (fputc ('a', f) != 'a')
                { fclose (f); return 2; }
              rewind (f);
              if (fgetc (f) != 'a')
                { fclose (f); return 3; }
              if (fgetc (f) != EOF)
                { fclose (f); return 4; }
              if (fpurge (f) != 0)
                { fclose (f); return 5; }
              if (putc ('b', f) != 'b')
                { fclose (f); return 6; }
              if (fclose (f) != 0)
                return 7;
              if ((f = fopen ("conftest.txt", "r")) == NULL)
                return 8;
              if (fgetc (f) != 'a')
                { fclose (f); return 9; }
              if (fgetc (f) != 'b')
                { fclose (f); return 10; }
              if (fgetc (f) != EOF)
                { fclose (f); return 11; }
              if (fclose (f) != 0)
                return 12;
              if (remove ("conftest.txt") != 0)
                return 13;
              return 0;
            ]])],
         [gl_cv_func_fpurge_works=yes],
         [gl_cv_func_fpurge_works=no],
         [case "$host_os" in
                     # Guess yes on musl systems.
            *-musl*) gl_cv_func_fpurge_works="guessing yes" ;;
                     # Otherwise obey --enable-cross-guesses.
            *)       gl_cv_func_fpurge_works="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
    case "$gl_cv_func_fpurge_works" in
      *yes) ;;
      *) REPLACE_FPURGE=1 ;;
    esac
  else
    HAVE_FPURGE=0
  fi
  if test "x$ac_cv_have_decl_fpurge" = xno; then
    HAVE_DECL_FPURGE=0
  fi
])
m4trace:m4/freadahead.m4:7: -1- AC_DEFUN([gl_FUNC_FREADAHEAD], [
  AC_CHECK_FUNCS_ONCE([__freadahead])
])
m4trace:m4/freading.m4:7: -1- AC_DEFUN([gl_FUNC_FREADING], [
  AC_CHECK_HEADERS_ONCE([stdio_ext.h])
  AC_CHECK_FUNCS_ONCE([__freading])
])
m4trace:m4/freadptr.m4:7: -1- AC_DEFUN([gl_FUNC_FREADPTR], [
  AC_CHECK_FUNCS_ONCE([__freadptr])
])
m4trace:m4/freadseek.m4:7: -1- AC_DEFUN([gl_FUNC_FREADSEEK], [
  AC_CHECK_FUNCS_ONCE([__freadptrinc])
])
m4trace:m4/free.m4:9: -1- AC_DEFUN([gl_FUNC_FREE], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  dnl In the next release of POSIX, free must preserve errno.
  dnl https://www.austingroupbugs.net/view.php?id=385
  dnl https://sourceware.org/bugzilla/show_bug.cgi?id=17924
  dnl So far, we know of three platforms that do this:
  dnl * glibc >= 2.33, thanks to the fix for this bug:
  dnl   <https://sourceware.org/bugzilla/show_bug.cgi?id=17924>
  dnl * OpenBSD >= 4.5, thanks to this commit:
  dnl   <https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/lib/libc/stdlib/malloc.c.diff?r1=1.100&r2=1.101&f=h>
  dnl * Solaris, because its malloc() implementation is based on brk(),
  dnl   not mmap(); hence its free() implementation makes no system calls.
  dnl For other platforms, you can only be sure if they state it in their
  dnl documentation, or by code inspection of the free() implementation in libc.
  AC_CACHE_CHECK([whether free is known to preserve errno],
    [gl_cv_func_free_preserves_errno],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[#if 2 < __GLIBC__ + (33 <= __GLIBC_MINOR__)
            #elif defined __OpenBSD__
            #elif defined __sun
            #else
              #error "'free' is not known to preserve errno"
            #endif
          ]])],
       [gl_cv_func_free_preserves_errno=yes],
       [gl_cv_func_free_preserves_errno=no])
    ])

  case $gl_cv_func_free_preserves_errno in
   *yes)
    AC_DEFINE([HAVE_FREE_POSIX], [1],
      [Define if the 'free' function is guaranteed to preserve errno.])
    ;;
   *) REPLACE_FREE=1 ;;
  esac
])
m4trace:m4/free.m4:52: -1- AC_DEFUN([gl_PREREQ_FREE], [:])
m4trace:m4/freopen.m4:7: -1- AC_DEFUN([gl_FUNC_FREOPEN], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw* | pw* | os2*)
      REPLACE_FREOPEN=1
      ;;
    *)
      AC_CACHE_CHECK([whether freopen works on closed fds],
        [gl_cv_func_freopen_works_on_closed],
        [AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <stdio.h>
                #include <unistd.h>
              ]GL_MDA_DEFINES],
              [[close (0);
                return !(freopen ("/dev/null", "r", stdin)
                         && getchar () == EOF
                         && !ferror (stdin) && feof (stdin));]])],
           [gl_cv_func_freopen_works_on_closed=yes],
           [gl_cv_func_freopen_works_on_closed=no],
           [case $host_os in
              *gnu*) gl_cv_func_freopen_works_on_closed="guessing no" ;;
              *)     gl_cv_func_freopen_works_on_closed="guessing yes";;
            esac])])
      case $gl_cv_func_freopen_works_on_closed in
        *no) REPLACE_FREOPEN=1;;
      esac
  esac
])
m4trace:m4/freopen.m4:40: -1- AC_DEFUN([gl_PREREQ_FREOPEN], [:])
m4trace:m4/frexp.m4:7: -1- AC_DEFUN([gl_FUNC_FREXP], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_FREXP_NO_LIBM])
  FREXP_LIBM=
  if test $gl_cv_func_frexp_no_libm = no; then
    AC_CACHE_CHECK([whether frexp() can be used with libm],
      [gl_cv_func_frexp_in_libm],
      [
        save_LIBS="$LIBS"
        LIBS="$LIBS -lm"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <math.h>
               double x;]],
             [[int e; return frexp (x, &e) > 0;]])],
          [gl_cv_func_frexp_in_libm=yes],
          [gl_cv_func_frexp_in_libm=no])
        LIBS="$save_LIBS"
      ])
    if test $gl_cv_func_frexp_in_libm = yes; then
      FREXP_LIBM=-lm
    fi
  fi
  if test $gl_cv_func_frexp_no_libm = yes \
     || test $gl_cv_func_frexp_in_libm = yes; then
    save_LIBS="$LIBS"
    LIBS="$LIBS $FREXP_LIBM"
    gl_FUNC_FREXP_WORKS
    LIBS="$save_LIBS"
    case "$gl_cv_func_frexp_works" in
      *yes) gl_func_frexp=yes ;;
      *)    gl_func_frexp=no; REPLACE_FREXP=1; FREXP_LIBM= ;;
    esac
  else
    gl_func_frexp=no
  fi
  if test $gl_func_frexp = yes; then
    AC_DEFINE([HAVE_FREXP], [1],
      [Define if the frexp() function is available and works.])
  fi
  AC_SUBST([FREXP_LIBM])
])
m4trace:m4/frexp.m4:51: -1- AC_DEFUN([gl_FUNC_FREXP_NO_LIBM], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_FREXP_NO_LIBM])
  if test $gl_cv_func_frexp_no_libm = yes; then
    gl_FUNC_FREXP_WORKS
    case "$gl_cv_func_frexp_works" in
      *yes) gl_func_frexp_no_libm=yes ;;
      *)    gl_func_frexp_no_libm=no; REPLACE_FREXP=1 ;;
    esac
  else
    gl_func_frexp_no_libm=no
    dnl Set REPLACE_FREXP here because the system may have frexp in libm.
    REPLACE_FREXP=1
  fi
  if test $gl_func_frexp_no_libm = yes; then
    AC_DEFINE([HAVE_FREXP_IN_LIBC], [1],
      [Define if the frexp() function is available in libc.])
  fi
])
m4trace:m4/frexp.m4:74: -1- AC_DEFUN([gl_CHECK_FREXP_NO_LIBM], [
  AC_CACHE_CHECK([whether frexp() can be used without linking with libm],
    [gl_cv_func_frexp_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             double x;]],
           [[int e; return frexp (x, &e) > 0;]])],
        [gl_cv_func_frexp_no_libm=yes],
        [gl_cv_func_frexp_no_libm=no])
    ])
])
m4trace:m4/frexp.m4:92: -1- AC_DEFUN([gl_FUNC_FREXP_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([alarm])
  AC_CACHE_CHECK([whether frexp works], [gl_cv_func_frexp_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <math.h>
#include <string.h>
#if HAVE_DECL_ALARM
# include <signal.h>
# include <unistd.h>
#endif
/* HP cc on HP-UX 10.20 has a bug with the constant expression -0.0.
   ICC 10.0 has a bug when optimizing the expression -zero.
   The expression -DBL_MIN * DBL_MIN does not work when cross-compiling
   to PowerPC on Mac OS X 10.5.  */
#if defined __hpux || defined __sgi || defined __ICC
static double
compute_minus_zero (void)
{
  return -DBL_MIN * DBL_MIN;
}
# define minus_zero compute_minus_zero ()
#else
double minus_zero = -0.0;
#endif
int main()
{
  int result = 0;
  int i;
  volatile double x;
  double zero = 0.0;
#if HAVE_DECL_ALARM
  /* NeXTstep 3.3 frexp() runs into an endless loop when called on an infinite
     number.  Let the test fail in this case.  */
  signal (SIGALRM, SIG_DFL);
  alarm (5);
#endif
  /* Test on denormalized numbers.  */
  for (i = 1, x = 1.0; i >= DBL_MIN_EXP; i--, x *= 0.5)
    ;
  if (x > 0.0)
    {
      int exp;
      double y = frexp (x, &exp);
      /* On machines with IEEE754 arithmetic: x = 1.11254e-308, exp = -1022.
         On NetBSD: y = 0.75. Correct: y = 0.5.  */
      if (y != 0.5)
        result |= 1;
    }
  /* Test on infinite numbers.  */
  x = 1.0 / zero;
  {
    int exp;
    double y = frexp (x, &exp);
    if (y != x)
      result |= 2;
  }
  /* Test on negative zero.  */
  x = minus_zero;
  {
    int exp;
    double y = frexp (x, &exp);
    if (memcmp (&y, &x, sizeof x))
      result |= 4;
  }
  return result;
}]])],
        [gl_cv_func_frexp_works=yes],
        [gl_cv_func_frexp_works=no],
        [case "$host_os" in
           netbsd* | irix*) gl_cv_func_frexp_works="guessing no" ;;
           mingw*) # Guess yes with MSVC, no with mingw.
             AC_EGREP_CPP([Good], [
#ifdef _MSC_VER
 Good
#endif
               ],
               [gl_cv_func_frexp_works="guessing yes"],
               [gl_cv_func_frexp_works="guessing no"])
             ;;
           *) gl_cv_func_frexp_works="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/frexpl.m4:7: -1- AC_DEFUN([gl_FUNC_FREXPL], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])

  dnl Persuade glibc <math.h> to declare frexpl().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl Check whether it's declared.
  dnl Mac OS X 10.3 has frexpl() in libc but doesn't declare it in <math.h>.
  AC_CHECK_DECL([frexpl], , [HAVE_DECL_FREXPL=0], [[#include <math.h>]])

  FREXPL_LIBM=
  if test $HAVE_DECL_FREXPL = 1; then
    gl_CHECK_FREXPL_NO_LIBM
    if test $gl_cv_func_frexpl_no_libm = no; then
      AC_CACHE_CHECK([whether frexpl() can be used with libm],
        [gl_cv_func_frexpl_in_libm],
        [
          save_LIBS="$LIBS"
          LIBS="$LIBS -lm"
          AC_LINK_IFELSE(
            [AC_LANG_PROGRAM(
               [[#include <math.h>
                 long double x;]],
               [[int e; return frexpl (x, &e) > 0;]])],
            [gl_cv_func_frexpl_in_libm=yes],
            [gl_cv_func_frexpl_in_libm=no])
          LIBS="$save_LIBS"
        ])
      if test $gl_cv_func_frexpl_in_libm = yes; then
        FREXPL_LIBM=-lm
      fi
    fi
    if test $gl_cv_func_frexpl_no_libm = yes \
       || test $gl_cv_func_frexpl_in_libm = yes; then
      save_LIBS="$LIBS"
      LIBS="$LIBS $FREXPL_LIBM"
      gl_FUNC_FREXPL_WORKS
      LIBS="$save_LIBS"
      case "$gl_cv_func_frexpl_works" in
        *yes) gl_func_frexpl=yes ;;
        *)    gl_func_frexpl=no; REPLACE_FREXPL=1 ;;
      esac
    else
      gl_func_frexpl=no
    fi
    if test $gl_func_frexpl = yes; then
      AC_DEFINE([HAVE_FREXPL], [1],
        [Define if the frexpl() function is available.])
    fi
  fi
  if test $HAVE_DECL_FREXPL = 0 || test $gl_func_frexpl = no; then
    dnl Find libraries needed to link lib/frexpl.c.
    if test $HAVE_SAME_LONG_DOUBLE_AS_DOUBLE = 1; then
      AC_REQUIRE([gl_FUNC_FREXP])
      FREXPL_LIBM="$FREXP_LIBM"
    else
      FREXPL_LIBM=
    fi
  fi
  AC_SUBST([FREXPL_LIBM])
])
m4trace:m4/frexpl.m4:71: -1- AC_DEFUN([gl_FUNC_FREXPL_NO_LIBM], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  dnl Check whether it's declared.
  dnl Mac OS X 10.3 has frexpl() in libc but doesn't declare it in <math.h>.
  AC_CHECK_DECL([frexpl], , [HAVE_DECL_FREXPL=0], [[#include <math.h>]])
  if test $HAVE_DECL_FREXPL = 1; then
    gl_CHECK_FREXPL_NO_LIBM
    if test $gl_cv_func_frexpl_no_libm = yes; then
      gl_FUNC_FREXPL_WORKS
      case "$gl_cv_func_frexpl_works" in
        *yes) gl_func_frexpl_no_libm=yes ;;
        *)    gl_func_frexpl_no_libm=no; REPLACE_FREXPL=1 ;;
      esac
    else
      gl_func_frexpl_no_libm=no
      dnl Set REPLACE_FREXPL here because the system may have frexpl in libm.
      REPLACE_FREXPL=1
    fi
    if test $gl_func_frexpl_no_libm = yes; then
      AC_DEFINE([HAVE_FREXPL_IN_LIBC], [1],
        [Define if the frexpl() function is available in libc.])
    fi
  fi
])
m4trace:m4/frexpl.m4:100: -1- AC_DEFUN([gl_CHECK_FREXPL_NO_LIBM], [
  AC_CACHE_CHECK([whether frexpl() can be used without linking with libm],
    [gl_cv_func_frexpl_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             long double x;]],
           [[int e; return frexpl (x, &e) > 0;]])],
        [gl_cv_func_frexpl_no_libm=yes],
        [gl_cv_func_frexpl_no_libm=no])
    ])
])
m4trace:m4/frexpl.m4:119: -1- AC_DEFUN([gl_FUNC_FREXPL_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether frexpl works], [gl_cv_func_frexpl_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <math.h>
/* Override the values of <float.h>, like done in float.in.h.  */
#if defined __i386__ && (defined __BEOS__ || defined __OpenBSD__)
# undef LDBL_MIN_EXP
# define LDBL_MIN_EXP    (-16381)
#endif
#if defined __i386__ && (defined __FreeBSD__ || defined __DragonFly__)
# undef LDBL_MIN_EXP
# define LDBL_MIN_EXP    (-16381)
#endif
#if (defined _ARCH_PPC || defined _POWER) && defined _AIX && (LDBL_MANT_DIG == 106) && defined __GNUC__
# undef LDBL_MIN_EXP
# define LDBL_MIN_EXP DBL_MIN_EXP
#endif
#if defined __sgi && (LDBL_MANT_DIG >= 106)
# if defined __GNUC__
#  undef LDBL_MIN_EXP
#  define LDBL_MIN_EXP DBL_MIN_EXP
# endif
#endif
extern
#ifdef __cplusplus
"C"
#endif
long double frexpl (long double, int *);
long double zero = 0.0L;
int main()
{
  int result = 0;
  volatile long double x;
  /* Test on finite numbers that fails on AIX 5.1.  */
  x = 16.0L;
  {
    int exp = -9999;
    frexpl (x, &exp);
    if (exp != 5)
      result |= 1;
  }
  /* Test on finite numbers that fails on Mac OS X 10.4, because its frexpl
     function returns an invalid (incorrectly normalized) value: it returns
               y = { 0x3fe028f5, 0xc28f5c28, 0x3c9eb851, 0xeb851eb8 }
     but the correct result is
          0.505L = { 0x3fe028f5, 0xc28f5c29, 0xbc547ae1, 0x47ae1480 }  */
  x = 1.01L;
  {
    int exp = -9999;
    long double y = frexpl (x, &exp);
    if (!(exp == 1 && y == 0.505L))
      result |= 2;
  }
  /* Test on large finite numbers.  This fails on BeOS at i = 16322, while
     LDBL_MAX_EXP = 16384.
     In the loop end test, we test x against Infinity, rather than comparing
     i with LDBL_MAX_EXP, because BeOS <float.h> has a wrong LDBL_MAX_EXP.  */
  {
    int i;
    for (i = 1, x = 1.0L; x != x + x; i++, x *= 2.0L)
      {
        int exp = -9999;
        frexpl (x, &exp);
        if (exp != i)
          {
            result |= 4;
            break;
          }
      }
  }
  /* Test on denormalized numbers.  */
  {
    int i;
    for (i = 1, x = 1.0L; i >= LDBL_MIN_EXP; i--, x *= 0.5L)
      ;
    if (x > 0.0L)
      {
        int exp;
        long double y = frexpl (x, &exp);
        /* On machines with IEEE854 arithmetic: x = 1.68105e-4932,
           exp = -16382, y = 0.5.  On Mac OS X 10.5: exp = -16384, y = 0.5.  */
        if (exp != LDBL_MIN_EXP - 1)
          result |= 8;
      }
  }
  /* Test on infinite numbers.  */
  /* The Microsoft MSVC 14 compiler chokes on the expression 1.0 / 0.0.  */
  x = 1.0L / zero;
  {
    int exp;
    long double y = frexpl (x, &exp);
    if (y != x)
      result |= 16;
  }
  return result;
}]])],
        [gl_cv_func_frexpl_works=yes],
        [gl_cv_func_frexpl_works=no],
        [
changequote(,)dnl
         case "$host_os" in
           aix | aix[3-6]* | beos* | darwin* | irix* | mingw* | pw*)
              gl_cv_func_frexpl_works="guessing no";;
           *) gl_cv_func_frexpl_works="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/fseek.m4:7: -1- AC_DEFUN([gl_FUNC_FSEEK], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_FSEEKO])
  dnl When fseeko needs fixes, fseek needs them too.
  if test $HAVE_FSEEKO = 0 || test $REPLACE_FSEEKO = 1; then
    REPLACE_FSEEK=1
  fi
])
m4trace:m4/fseeko.m4:7: -1- AC_DEFUN([gl_FUNC_FSEEKO], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_STDIN_LARGE_OFFSET])
  AC_REQUIRE([gl_SYS_TYPES_H])
  AC_REQUIRE([AC_PROG_CC])

  dnl Persuade glibc <stdio.h> to declare fseeko().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CACHE_CHECK([for fseeko], [gl_cv_func_fseeko],
    [
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>
]], [[fseeko (stdin, 0, 0);]])],
        [gl_cv_func_fseeko=yes], [gl_cv_func_fseeko=no])
    ])

  AC_CHECK_DECLS_ONCE([fseeko])
  if test $ac_cv_have_decl_fseeko = no; then
    HAVE_DECL_FSEEKO=0
  fi

  if test $gl_cv_func_fseeko = no; then
    HAVE_FSEEKO=0
  else
    if test $WINDOWS_64_BIT_OFF_T = 1; then
      REPLACE_FSEEKO=1
    fi
    if test $gl_cv_var_stdin_large_offset = no; then
      REPLACE_FSEEKO=1
    fi
    m4_ifdef([gl_FUNC_FFLUSH_STDIN], [
      gl_FUNC_FFLUSH_STDIN
      case "$gl_cv_func_fflush_stdin" in
        *yes) ;;
        *) REPLACE_FSEEKO=1 ;;
      esac
    ])
  fi
])
m4trace:m4/fseeko.m4:50: -1- AC_DEFUN([gl_STDIN_LARGE_OFFSET], [
    AC_CACHE_CHECK([whether stdin defaults to large file offsets],
      [gl_cv_var_stdin_large_offset],
      [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]],
[[#if defined __SL64 && defined __SCLE /* cygwin */
  /* Cygwin 1.5.24 and earlier fail to put stdin in 64-bit mode, making
     fseeko/ftello needlessly fail.  This bug was fixed in 1.5.25, and
     it is easier to do a version check than building a runtime test.  */
# include <cygwin/version.h>
# if CYGWIN_VERSION_DLL_COMBINED < CYGWIN_VERSION_DLL_MAKE_COMBINED (1005, 25)
  choke me
# endif
#endif]])],
        [gl_cv_var_stdin_large_offset=yes],
        [gl_cv_var_stdin_large_offset=no])])
])
m4trace:m4/fseeko.m4:69: -1- AC_DEFUN([gl_PREREQ_FSEEKO], [
  dnl Native Windows has the function _fseeki64. mingw hides it in some
  dnl circumstances, but mingw64 makes it usable again.
  AC_CHECK_FUNCS([_fseeki64])
  if test $ac_cv_func__fseeki64 = yes; then
    AC_CHECK_DECLS([_fseeki64])
  fi
])
m4trace:m4/fseterr.m4:7: -1- AC_DEFUN([gl_FUNC_FSETERR], [
  AC_CHECK_FUNCS_ONCE([__fseterr])
])
m4trace:m4/fstat.m4:7: -1- AC_DEFUN([gl_FUNC_FSTAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  case "$host_os" in
    mingw* | solaris*)
      dnl On MinGW, the original stat() returns st_atime, st_mtime,
      dnl st_ctime values that are affected by the time zone.
      dnl Solaris stat can return a negative tv_nsec.
      REPLACE_FSTAT=1
      ;;
  esac

  dnl Replace fstat() for supporting the gnulib-defined open() on directories.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      case "$gl_cv_func_open_directory_works" in
        *yes) ;;
        *)
          REPLACE_FSTAT=1
          ;;
      esac
    fi
  ])
])
m4trace:m4/fstat.m4:36: -1- AC_DEFUN([gl_PREREQ_FSTAT], [
  AC_REQUIRE([gl_SYS_STAT_H])
  AC_REQUIRE([gl_PREREQ_STAT_W32])
  :
])
m4trace:m4/fstatat.m4:11: -1- AC_DEFUN([gl_FUNC_FSTATAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([fstatat])

  if test $ac_cv_func_fstatat = no; then
    HAVE_FSTATAT=0
  else
    dnl Test for an AIX 7.1 bug; see
    dnl <https://lists.gnu.org/r/bug-tar/2011-09/msg00015.html>.
    AC_CACHE_CHECK([whether fstatat (..., 0) works],
      [gl_cv_func_fstatat_zero_flag],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
            [[
              #include <fcntl.h>
              #include <sys/stat.h>
              int
              main (void)
              {
                struct stat a;
                return fstatat (AT_FDCWD, ".", &a, 0) != 0;
              }
            ]])],
         [gl_cv_func_fstatat_zero_flag=yes],
         [gl_cv_func_fstatat_zero_flag=no],
         [case "$host_os" in
            aix*) gl_cv_func_fstatat_zero_flag="guessing no";;
            *)    gl_cv_func_fstatat_zero_flag="guessing yes";;
          esac
         ])
      ])

    case $gl_cv_func_fstatat_zero_flag+$gl_cv_func_lstat_dereferences_slashed_symlink in
    *yes+*yes) ;;
    *) REPLACE_FSTATAT=1 ;;
    esac

    case $host_os in
      solaris*)
        REPLACE_FSTATAT=1 ;;
    esac

    case $REPLACE_FSTATAT,$gl_cv_func_fstatat_zero_flag in
      1,*yes)
         AC_DEFINE([HAVE_WORKING_FSTATAT_ZERO_FLAG], [1],
           [Define to 1 if fstatat (..., 0) works.
            For example, it does not work in AIX 7.1.])
         ;;
    esac
  fi
])
m4trace:m4/fstypename.m4:15: -1- AC_DEFUN([gl_FSTYPENAME], [
  AC_CHECK_MEMBERS([struct statfs.f_fstypename],,,
    [
      #include <sys/types.h>
      #include <sys/param.h>
      #include <sys/mount.h>
    ])
])
m4trace:m4/fsusage.m4:12: -1- AC_DEFUN([gl_FSUSAGE], [
  AC_CHECK_HEADERS_ONCE([sys/param.h])
  AC_CHECK_HEADERS_ONCE([sys/vfs.h sys/fs_types.h])
  AC_CHECK_HEADERS([sys/mount.h], [], [],
    [AC_INCLUDES_DEFAULT
     [#if HAVE_SYS_PARAM_H
       #include <sys/param.h>
      #endif]])
  gl_FILE_SYSTEM_USAGE([gl_cv_fs_space=yes], [gl_cv_fs_space=no])
])
m4trace:m4/fsusage.m4:30: -1- AC_DEFUN([gl_FILE_SYSTEM_USAGE], [
  dnl Enable large-file support. This has the effect of changing the size
  dnl of field f_blocks in 'struct statvfs' from 32 bit to 64 bit on
  dnl glibc/Hurd, HP-UX 11, Solaris (32-bit mode). It also changes the size
  dnl of field f_blocks in 'struct statfs' from 32 bit to 64 bit on
  dnl Mac OS X >= 10.5 (32-bit mode).
  AC_REQUIRE([AC_SYS_LARGEFILE])

  ac_fsusage_space=no

  # Perform only the link test since it seems there are no variants of the
  # statvfs function.  This check is more than just AC_CHECK_FUNCS([statvfs])
  # because that got a false positive on SCO OSR5.  Adding the declaration
  # of a 'struct statvfs' causes this test to fail (as it should) on such
  # systems.  That system is reported to work fine with STAT_STATFS4 which
  # is what it gets when this test fails.
  if test $ac_fsusage_space = no; then
    # glibc/{Hurd,kFreeBSD}, FreeBSD >= 5.0, NetBSD >= 3.0,
    # OpenBSD >= 4.4, AIX, HP-UX, IRIX, Solaris, Cygwin, Interix, BeOS.
    AC_CACHE_CHECK([for statvfs function (SVR4)],
      [fu_cv_sys_stat_statvfs],
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([[
#include <sys/types.h>
#ifdef __osf__
"Do not use Tru64's statvfs implementation"
#endif

#include <sys/statvfs.h>

struct statvfs fsd;

#if defined __APPLE__ && defined __MACH__
#include <limits.h>
/* On Mac OS X >= 10.5, f_blocks in 'struct statvfs' is a 32-bit quantity;
   that commonly limits file systems to 4 TiB.  Whereas f_blocks in
   'struct statfs' is a 64-bit type, thanks to the large-file support
   that was enabled above.  In this case, don't use statvfs(); use statfs()
   instead.  */
int check_f_blocks_size[sizeof fsd.f_blocks * CHAR_BIT <= 32 ? -1 : 1];
#endif
]],
            [[statvfs (0, &fsd);]])],
         [fu_cv_sys_stat_statvfs=yes],
         [fu_cv_sys_stat_statvfs=no])
      ])
    if test $fu_cv_sys_stat_statvfs = yes; then
      ac_fsusage_space=yes
      # AIX >= 5.2 has statvfs64 that has a wider f_blocks field than statvfs.
      # glibc, HP-UX, IRIX, Solaris have statvfs64 as well, but on these systems
      # statvfs with large-file support is already equivalent to statvfs64.
      AC_CACHE_CHECK([whether to use statvfs64],
        [fu_cv_sys_stat_statvfs64],
        [AC_LINK_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                #include <sys/statvfs.h>
                struct statvfs64 fsd;
                int check_f_blocks_larger_in_statvfs64
                  [sizeof (((struct statvfs64 *) 0)->f_blocks)
                   > sizeof (((struct statvfs *) 0)->f_blocks)
                   ? 1 : -1];
              ]],
              [[statvfs64 (0, &fsd);]])],
           [fu_cv_sys_stat_statvfs64=yes],
           [fu_cv_sys_stat_statvfs64=no])
        ])
      if test $fu_cv_sys_stat_statvfs64 = yes; then
        AC_DEFINE([STAT_STATVFS64], [1],
          [Define if statvfs64 should be preferred over statvfs.])
      else
        AC_DEFINE([STAT_STATVFS], [1],
          [Define if there is a function named statvfs.  (SVR4)])
      fi
    fi
  fi

  # Check for this unconditionally so we have a
  # good fallback on glibc/Linux > 2.6 < 2.6.36
  AC_CACHE_CHECK([for two-argument statfs with statfs.f_frsize member],
    [fu_cv_sys_stat_statfs2_frsize],
    [AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#ifdef HAVE_SYS_PARAM_H
#include <sys/param.h>
#endif
#ifdef HAVE_SYS_MOUNT_H
#include <sys/mount.h>
#endif
#ifdef HAVE_SYS_VFS_H
#include <sys/vfs.h>
#endif
  int
  main ()
  {
    struct statfs fsd;
    fsd.f_frsize = 0;
    return statfs (".", &fsd) != 0;
  }]])],
       [fu_cv_sys_stat_statfs2_frsize=yes],
       [fu_cv_sys_stat_statfs2_frsize=no],
       [fu_cv_sys_stat_statfs2_frsize=no])
    ])
  if test $fu_cv_sys_stat_statfs2_frsize = yes; then
    ac_fsusage_space=yes
    AC_DEFINE([STAT_STATFS2_FRSIZE], [1],
      [Define if statfs takes 2 args and struct statfs has a field named f_frsize.
       (glibc/Linux > 2.6)])
  fi

  if test $ac_fsusage_space = no; then
    # DEC Alpha running OSF/1
    AC_CACHE_CHECK([for 3-argument statfs function (DEC OSF/1)],
      [fu_cv_sys_stat_statfs3_osf1],
      [AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/param.h>
#include <sys/types.h>
#include <sys/mount.h>
  int
  main ()
  {
    struct statfs fsd;
    fsd.f_fsize = 0;
    return statfs (".", &fsd, sizeof (struct statfs)) != 0;
  }]])],
         [fu_cv_sys_stat_statfs3_osf1=yes],
         [fu_cv_sys_stat_statfs3_osf1=no],
         [fu_cv_sys_stat_statfs3_osf1=no])
      ])
    if test $fu_cv_sys_stat_statfs3_osf1 = yes; then
      ac_fsusage_space=yes
      AC_DEFINE([STAT_STATFS3_OSF1], [1],
        [Define if statfs takes 3 args.  (DEC Alpha running OSF/1)])
    fi
  fi

  if test $ac_fsusage_space = no; then
    # glibc/Linux, Mac OS X, FreeBSD < 5.0, NetBSD < 3.0, OpenBSD < 4.4.
    # (glibc/{Hurd,kFreeBSD}, FreeBSD >= 5.0, NetBSD >= 3.0,
    # OpenBSD >= 4.4, AIX, HP-UX, OSF/1, Cygwin already handled above.)
    # (On IRIX you need to include <sys/statfs.h>, not only <sys/mount.h> and
    # <sys/vfs.h>.)
    # (On Solaris, statfs has 4 arguments.)
    AC_CACHE_CHECK([for two-argument statfs with statfs.f_bsize member (AIX, 4.3BSD)],
      [fu_cv_sys_stat_statfs2_bsize],
      [AC_RUN_IFELSE([AC_LANG_SOURCE([[
#ifdef HAVE_SYS_PARAM_H
#include <sys/param.h>
#endif
#ifdef HAVE_SYS_MOUNT_H
#include <sys/mount.h>
#endif
#ifdef HAVE_SYS_VFS_H
#include <sys/vfs.h>
#endif
  int
  main ()
  {
    struct statfs fsd;
    fsd.f_bsize = 0;
    return statfs (".", &fsd) != 0;
  }]])],
         [fu_cv_sys_stat_statfs2_bsize=yes],
         [fu_cv_sys_stat_statfs2_bsize=no],
         [fu_cv_sys_stat_statfs2_bsize=no])
      ])
    if test $fu_cv_sys_stat_statfs2_bsize = yes; then
      ac_fsusage_space=yes
      AC_DEFINE([STAT_STATFS2_BSIZE], [1],
        [Define if statfs takes 2 args and struct statfs has a field named f_bsize.
         (4.3BSD, SunOS 4, HP-UX)])
    fi
  fi

  if test $ac_fsusage_space = no; then
    # SVR3
    # (Solaris already handled above.)
    AC_CACHE_CHECK([for four-argument statfs (SVR3)],
      [fu_cv_sys_stat_statfs4],
      [AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#include <sys/statfs.h>
  int
  main ()
  {
    struct statfs fsd;
    return statfs (".", &fsd, sizeof fsd, 0) != 0;
  }]])],
         [fu_cv_sys_stat_statfs4=yes],
         [fu_cv_sys_stat_statfs4=no],
         [fu_cv_sys_stat_statfs4=no])
      ])
    if test $fu_cv_sys_stat_statfs4 = yes; then
      ac_fsusage_space=yes
      AC_DEFINE([STAT_STATFS4], [1],
        [Define if statfs takes 4 args.  (SVR3, old Irix)])
    fi
  fi

  if test $ac_fsusage_space = no; then
    # 4.4BSD and older NetBSD
    # (OSF/1 already handled above.)
    # (On AIX, you need to include <sys/statfs.h>, not only <sys/mount.h>.)
    # (On Solaris, statfs has 4 arguments and 'struct statfs' is not declared in
    # <sys/mount.h>.)
    AC_CACHE_CHECK([for two-argument statfs with statfs.f_fsize member (4.4BSD and NetBSD)],
      [fu_cv_sys_stat_statfs2_fsize],
      [AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#ifdef HAVE_SYS_PARAM_H
#include <sys/param.h>
#endif
#ifdef HAVE_SYS_MOUNT_H
#include <sys/mount.h>
#endif
  int
  main ()
  {
    struct statfs fsd;
    fsd.f_fsize = 0;
    return statfs (".", &fsd) != 0;
  }]])],
         [fu_cv_sys_stat_statfs2_fsize=yes],
         [fu_cv_sys_stat_statfs2_fsize=no],
         [fu_cv_sys_stat_statfs2_fsize=no])
      ])
    if test $fu_cv_sys_stat_statfs2_fsize = yes; then
      ac_fsusage_space=yes
      AC_DEFINE([STAT_STATFS2_FSIZE], [1],
        [Define if statfs takes 2 args and struct statfs has a field named f_fsize.
         (4.4BSD, NetBSD)])
    fi
  fi

  AS_IF([test $ac_fsusage_space = yes], [$1], [$2])

])
m4trace:m4/fsusage.m4:273: -1- AC_DEFUN([gl_STATFS_TRUNCATES], [
  AC_CACHE_CHECK([for statfs that truncates block counts],
    [fu_cv_sys_truncating_statfs],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[
#if !defined(sun) && !defined(__sun)
choke -- this is a workaround for a Sun-specific problem
#endif
#include <sys/types.h>
#include <sys/vfs.h>
         ]],
         [[struct statfs t; long c = *(t.f_spare);
           if (c) return 0;
         ]])],
       [fu_cv_sys_truncating_statfs=yes],
       [fu_cv_sys_truncating_statfs=no])
    ])
  if test $fu_cv_sys_truncating_statfs = yes; then
    AC_DEFINE([STATFS_TRUNCATES_BLOCK_COUNTS], [1],
      [Define if the block counts reported by statfs may be truncated to 2GB
       and the correct values may be stored in the f_spare array.
       (SunOS 4.1.2, 4.1.3, and 4.1.3_U1 are reported to have this problem.
       SunOS 4.1.1 seems not to be affected.)])
  fi
])
m4trace:m4/fsusage.m4:302: -1- AC_DEFUN([gl_PREREQ_FSUSAGE_EXTRA], [
  AC_CHECK_HEADERS([sys/fs/s5param.h sys/statfs.h])
  gl_STATFS_TRUNCATES
])
m4trace:m4/fsync.m4:7: -1- AC_DEFUN([gl_FUNC_FSYNC], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fsync])
  if test $ac_cv_func_fsync = no; then
    HAVE_FSYNC=0
  fi
])
m4trace:m4/fsync.m4:17: -1- AC_DEFUN([gl_PREREQ_FSYNC], [:])
m4trace:m4/ftell.m4:7: -1- AC_DEFUN([gl_FUNC_FTELL], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_FTELLO])
  dnl When ftello needs fixes, ftell needs them too.
  if test $HAVE_FTELLO = 0 || test $REPLACE_FTELLO = 1; then
    REPLACE_FTELL=1
  fi
])
m4trace:m4/ftello.m4:7: -1- AC_DEFUN([gl_FUNC_FTELLO], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_STDIN_LARGE_OFFSET])
  AC_REQUIRE([gl_SYS_TYPES_H])

  dnl Persuade glibc <stdio.h> to declare ftello().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_DECLS_ONCE([ftello])
  if test $ac_cv_have_decl_ftello = no; then
    HAVE_DECL_FTELLO=0
  fi

  AC_CACHE_CHECK([for ftello], [gl_cv_func_ftello],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <stdio.h>]],
           [[ftello (stdin);]])],
        [gl_cv_func_ftello=yes],
        [gl_cv_func_ftello=no])
    ])
  if test $gl_cv_func_ftello = no; then
    HAVE_FTELLO=0
  else
    if test $WINDOWS_64_BIT_OFF_T = 1; then
      REPLACE_FTELLO=1
    fi
    if test $gl_cv_var_stdin_large_offset = no; then
      REPLACE_FTELLO=1
    fi
    if test $REPLACE_FTELLO = 0; then
      dnl Detect bug on Solaris.
      dnl ftell and ftello produce incorrect results after putc that followed a
      dnl getc call that reached EOF on Solaris. This is because the _IOREAD
      dnl flag does not get cleared in this case, even though _IOWRT gets set,
      dnl and ftell and ftello look whether the _IOREAD flag is set.
      AC_REQUIRE([AC_CANONICAL_HOST])
      AC_CACHE_CHECK([whether ftello works],
        [gl_cv_func_ftello_works],
        [
          dnl Initial guess, used when cross-compiling or when /dev/tty cannot
          dnl be opened.
changequote(,)dnl
          case "$host_os" in
                      # Guess no on Solaris.
            solaris*) gl_cv_func_ftello_works="guessing no" ;;
                      # Guess yes on native Windows.
            mingw*)   gl_cv_func_ftello_works="guessing yes" ;;
                      # Guess yes otherwise.
            *)        gl_cv_func_ftello_works="guessing yes" ;;
          esac
changequote([,])dnl
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define TESTFILE "conftest.tmp"
int
main (void)
{
  FILE *fp;

  /* Create a file with some contents.  */
  fp = fopen (TESTFILE, "w");
  if (fp == NULL)
    return 70;
  if (fwrite ("foogarsh", 1, 8, fp) < 8)
    { fclose (fp); return 71; }
  if (fclose (fp))
    return 72;

  /* The file's contents is now "foogarsh".  */

  /* Try writing after reading to EOF.  */
  fp = fopen (TESTFILE, "r+");
  if (fp == NULL)
    return 73;
  if (fseek (fp, -1, SEEK_END))
    { fclose (fp); return 74; }
  if (!(getc (fp) == 'h'))
    { fclose (fp); return 1; }
  if (!(getc (fp) == EOF))
    { fclose (fp); return 2; }
  if (!(ftell (fp) == 8))
    { fclose (fp); return 3; }
  if (!(ftell (fp) == 8))
    { fclose (fp); return 4; }
  if (!(putc ('!', fp) == '!'))
    { fclose (fp); return 5; }
  if (!(ftell (fp) == 9))
    { fclose (fp); return 6; }
  if (!(fclose (fp) == 0))
    return 7;
  fp = fopen (TESTFILE, "r");
  if (fp == NULL)
    return 75;
  {
    char buf[10];
    if (!(fread (buf, 1, 10, fp) == 9))
      { fclose (fp); return 10; }
    if (!(memcmp (buf, "foogarsh!", 9) == 0))
      { fclose (fp); return 11; }
  }
  if (!(fclose (fp) == 0))
    return 12;

  /* The file's contents is now "foogarsh!".  */

  return 0;
}]])],
            [gl_cv_func_ftello_works=yes],
            [gl_cv_func_ftello_works=no], [:])
        ])
      case "$gl_cv_func_ftello_works" in
        *yes) ;;
        *)
          REPLACE_FTELLO=1
          AC_DEFINE([FTELLO_BROKEN_AFTER_SWITCHING_FROM_READ_TO_WRITE], [1],
            [Define to 1 if the system's ftello function has the Solaris bug.])
          ;;
      esac
    fi
    if test $REPLACE_FTELLO = 0; then
      dnl Detect bug on macOS >= 10.15.
      gl_FUNC_UNGETC_WORKS
      if test $gl_ftello_broken_after_ungetc = yes; then
        REPLACE_FTELLO=1
        AC_DEFINE([FTELLO_BROKEN_AFTER_UNGETC], [1],
          [Define to 1 if the system's ftello function has the macOS bug.])
      fi
    fi
  fi
])
m4trace:m4/ftello.m4:146: -1- AC_DEFUN([gl_PREREQ_FTELLO], [
  dnl Native Windows has the function _ftelli64. mingw hides it, but mingw64
  dnl makes it usable again.
  AC_CHECK_FUNCS([_ftelli64])
])
m4trace:m4/ftruncate.m4:10: -1- AC_DEFUN([gl_FUNC_FTRUNCATE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([ftruncate])
  if test $ac_cv_func_ftruncate = yes; then
    m4_ifdef([gl_LARGEFILE], [
      AC_REQUIRE([AC_CANONICAL_HOST])
      case "$host_os" in
        mingw*)
          dnl Native Windows, and Large File Support is requested.
          dnl The MSVCRT _chsize() function only accepts a 32-bit file size,
          dnl and the mingw64 ftruncate64() function is unreliable (it may
          dnl delete the file, see
          dnl <https://web.archive.org/web/20160425005423/http://mingw-w64.sourcearchive.com/documentation/2.0-1/ftruncate64_8c_source.html>).
          dnl Use gnulib's ftruncate() implementation instead.
          REPLACE_FTRUNCATE=1
          ;;
      esac
    ], [
      :
    ])
  else
    HAVE_FTRUNCATE=0
  fi
])
m4trace:m4/ftruncate.m4:37: -1- AC_DEFUN([gl_PREREQ_FTRUNCATE], [
  AC_CHECK_FUNCS([_chsize])
])
m4trace:m4/fts.m4:7: -1- AC_DEFUN([gl_FUNC_FTS], [
  gl_FUNC_FTS_CORE
])
m4trace:m4/fts.m4:12: -1- AC_DEFUN([gl_FUNC_FTS_CORE], [
  dnl Prerequisites of lib/fts.c.
  gl_FUNC_OPENAT

  AC_CHECK_FUNCS_ONCE([fstatfs])
  AC_CHECK_HEADERS_ONCE([sys/param.h sys/vfs.h])dnl
  if test "$ac_cv_func_fstatfs,$ac_cv_header_sys_vfs_h" = yes,yes; then
    AC_CHECK_MEMBERS([struct statfs.f_type], [], [],
      [[$ac_includes_default
        #include <sys/vfs.h>
      ]])
    if test "$ac_cv_member_struct_statfs_f_type" = yes; then
      AC_CHECK_TYPES([__fsword_t], [], [],
        [[$ac_includes_default
          #include <sys/vfs.h>
        ]])
    fi
  fi

  AC_CHECK_FUNC([fts_open])
  if test $ac_cv_func_fts_open = yes; then
    dnl The system already has the symbols fts_open, etc.
    dnl Avoid conflicts between these symbols and ours at the linker level.
    AC_DEFINE([fts_open], [rpl_fts_open],
      [Define to the overridden function name])
    AC_DEFINE([fts_close], [rpl_fts_close],
      [Define to the overridden function name])
    AC_DEFINE([fts_read], [rpl_fts_read],
      [Define to the overridden function name])
    AC_DEFINE([fts_set], [rpl_fts_set],
      [Define to the overridden function name])
    AC_DEFINE([fts_children], [rpl_fts_children],
      [Define to the overridden function name])
    AC_DEFINE([fts_cross_check], [rpl_fts_cross_check],
      [Define to the overridden function name])
  fi
])
m4trace:m4/futimens.m4:11: -1- AC_DEFUN([gl_FUNC_FUTIMENS], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([futimens])
  if test $ac_cv_func_futimens = no; then
    HAVE_FUTIMENS=0
  else
    AC_CACHE_CHECK([whether futimens works],
      [gl_cv_func_futimens_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <fcntl.h>
#include <sys/stat.h>
#include <unistd.h>
#include <errno.h>
]GL_MDA_DEFINES],
     [[struct timespec ts[2];
      int fd = creat ("conftest.file", 0600);
      struct stat st;
      if (fd < 0) return 1;
      ts[0].tv_sec = 1;
      ts[0].tv_nsec = UTIME_OMIT;
      ts[1].tv_sec = 1;
      ts[1].tv_nsec = UTIME_NOW;
      errno = 0;
      if (futimens (AT_FDCWD, NULL) == 0) return 2;
      if (errno != EBADF) return 3;
      if (futimens (fd, ts)) return 4;
      sleep (1);
      ts[0].tv_nsec = UTIME_NOW;
      ts[1].tv_nsec = UTIME_OMIT;
      if (futimens (fd, ts)) return 5;
      if (fstat (fd, &st)) return 6;
      if (st.st_ctime < st.st_atime) return 7;
      ]])],
         [gl_cv_func_futimens_works=yes],
         [gl_cv_func_futimens_works=no],
         [case "$host_os" in
                           # Guess no on glibc systems.
            *-gnu* | gnu*) gl_cv_func_futimens_works="guessing no" ;;
                           # Guess no on musl systems.
            *-musl*)       gl_cv_func_futimens_works="guessing no" ;;
                           # Guess yes otherwise.
            *)             gl_cv_func_futimens_works="guessing yes" ;;
          esac
         ])
      rm -f conftest.file])
    case "$gl_cv_func_futimens_works" in
      *yes) ;;
      *)
        REPLACE_FUTIMENS=1
        ;;
    esac
  fi
])
m4trace:m4/getaddrinfo.m4:7: -1- AC_DEFUN([gl_GETADDRINFO], [
  AC_REQUIRE([gl_SYS_SOCKET_H])dnl for HAVE_SYS_SOCKET_H, HAVE_WINSOCK2_H
  AC_REQUIRE([gl_NETDB_H])dnl for HAVE_NETDB_H
  GETADDRINFO_LIB=
  gai_saved_LIBS="$LIBS"

  dnl Where is getaddrinfo()?
  dnl - On Solaris, it is in libsocket.
  dnl - On Haiku, it is in libnetwork.
  dnl - On BeOS, it is in libnet.
  dnl - On native Windows, it is in ws2_32.dll.
  dnl - Otherwise it is in libc.
  AC_SEARCH_LIBS([getaddrinfo], [socket network net],
    [if test "$ac_cv_search_getaddrinfo" != "none required"; then
       GETADDRINFO_LIB="$ac_cv_search_getaddrinfo"
     fi])
  LIBS="$gai_saved_LIBS $GETADDRINFO_LIB"

  HAVE_GETADDRINFO=1
  AC_CACHE_CHECK([for getaddrinfo], [gl_cv_func_getaddrinfo], [
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#include <stddef.h>
]], [[getaddrinfo("", "", NULL, NULL);]])],
      [gl_cv_func_getaddrinfo=yes],
      [gl_cv_func_getaddrinfo=no])])
  if test $gl_cv_func_getaddrinfo = no; then
    AC_CACHE_CHECK([for getaddrinfo in ws2tcpip.h and -lws2_32],
                   gl_cv_w32_getaddrinfo, [
      gl_cv_w32_getaddrinfo=no
      am_save_LIBS="$LIBS"
      LIBS="$LIBS -lws2_32"
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
#include <stddef.h>
]], [[getaddrinfo(NULL, NULL, NULL, NULL);]])], [gl_cv_w32_getaddrinfo=yes])
      LIBS="$am_save_LIBS"
    ])
    if test "$gl_cv_w32_getaddrinfo" = "yes"; then
      GETADDRINFO_LIB="-lws2_32"
      LIBS="$gai_saved_LIBS $GETADDRINFO_LIB"
      dnl Check for correct signature, in particular for a cdecl-compatible
      dnl calling convention.
      AC_CACHE_CHECK([for getaddrinfo with POSIX signature],
        [gl_cv_func_getaddrinfo_posix_signature],
        [AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
#include <stddef.h>
extern
#ifdef __cplusplus
"C"
#endif
int getaddrinfo (const char *, const char *, const struct addrinfo *, struct addrinfo **);
]])],
           [gl_cv_func_getaddrinfo_posix_signature=yes],
           [gl_cv_func_getaddrinfo_posix_signature=no])
        ])
      if test $gl_cv_func_getaddrinfo_posix_signature = no; then
        REPLACE_GETADDRINFO=1
      fi
    else
      HAVE_GETADDRINFO=0
    fi
  fi
  AC_DEFINE_UNQUOTED([HAVE_GETADDRINFO], [$HAVE_GETADDRINFO],
    [Define to 1 if getaddrinfo exists, or to 0 otherwise.])

  # We can't use AC_REPLACE_FUNCS here because gai_strerror may be an
  # inline function declared in ws2tcpip.h, so we need to get that
  # header included somehow.
  AC_CHECK_DECLS([gai_strerror], [], [], [[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
#include <stddef.h>
]])
  if test $ac_cv_have_decl_gai_strerror = yes; then
    AC_CHECK_DECLS([gai_strerrorA], [], [], [[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
#include <stddef.h>
]])
    dnl check for correct signature
    AC_CACHE_CHECK([for gai_strerror with POSIX signature],
     [gl_cv_func_gai_strerror_posix_signature], [
      AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
#include <stddef.h>
extern
#ifdef __cplusplus
"C"
#endif
const char *gai_strerror(int);]])],
        [gl_cv_func_gai_strerror_posix_signature=yes],
        [gl_cv_func_gai_strerror_posix_signature=no])])
    if test $gl_cv_func_gai_strerror_posix_signature = no; then
      REPLACE_GAI_STRERROR=1
    fi
  fi

  LIBS="$gai_saved_LIBS"

  gl_PREREQ_GETADDRINFO

  AC_SUBST([GETADDRINFO_LIB])
])
m4trace:m4/getaddrinfo.m4:157: -1- AC_DEFUN([gl_PREREQ_GETADDRINFO], [
  AC_REQUIRE([gl_NETDB_H_DEFAULTS])
  AC_REQUIRE([gl_SYS_SOCKET_H])dnl for HAVE_SYS_SOCKET_H, HAVE_WINSOCK2_H
  AC_REQUIRE([gl_HOSTENT]) dnl for HOSTENT_LIB
  AC_REQUIRE([gl_SERVENT]) dnl for SERVENT_LIB
  AC_REQUIRE([gl_FUNC_INET_NTOP]) dnl for INET_NTOP_LIB
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([gl_SOCKET_FAMILIES])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Including sys/socket.h is wrong for Windows, but Windows does not
  dnl have sa_len so the result is correct anyway.
  AC_CHECK_MEMBERS([struct sockaddr.sa_len], , , [
#include <sys/types.h>
#include <sys/socket.h>
])

  AC_CHECK_HEADERS_ONCE([netinet/in.h])

  AC_CHECK_DECLS([getaddrinfo, freeaddrinfo, getnameinfo],,,[[
  /* sys/types.h is not needed according to POSIX, but the
     sys/socket.h in i386-unknown-freebsd4.10 and
     powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
]])
  if test $ac_cv_have_decl_getaddrinfo = no; then
    HAVE_DECL_GETADDRINFO=0
  fi
  if test $ac_cv_have_decl_freeaddrinfo = no; then
    HAVE_DECL_FREEADDRINFO=0
  fi
  if test $ac_cv_have_decl_gai_strerror = no; then
    HAVE_DECL_GAI_STRERROR=0
  fi
  if test $ac_cv_have_decl_getnameinfo = no; then
    HAVE_DECL_GETNAMEINFO=0
  fi

  AC_CHECK_TYPES([struct addrinfo],,,[
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
])
  if test $ac_cv_type_struct_addrinfo = no; then
    HAVE_STRUCT_ADDRINFO=0
  fi

  dnl Append $HOSTENT_LIB to GETADDRINFO_LIB, avoiding gratuitous duplicates.
  case " $GETADDRINFO_LIB " in
    *" $HOSTENT_LIB "*) ;;
    *) GETADDRINFO_LIB="$GETADDRINFO_LIB $HOSTENT_LIB" ;;
  esac

  dnl Append $SERVENT_LIB to GETADDRINFO_LIB, avoiding gratuitous duplicates.
  case " $GETADDRINFO_LIB " in
    *" $SERVENT_LIB "*) ;;
    *) GETADDRINFO_LIB="$GETADDRINFO_LIB $SERVENT_LIB" ;;
  esac

  dnl Append $INET_NTOP_LIB to GETADDRINFO_LIB, avoiding gratuitous duplicates.
  case " $GETADDRINFO_LIB " in
    *" $INET_NTOP_LIB "*) ;;
    *) GETADDRINFO_LIB="$GETADDRINFO_LIB $INET_NTOP_LIB" ;;
  esac
])
m4trace:m4/getcwd-abort-bug.m4:14: -1- AC_DEFUN([gl_FUNC_GETCWD_ABORT_BUG], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([getcwd])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])

  gl_CHECK_FUNC_GETPAGESIZE
  if test $gl_cv_func_getpagesize = yes; then
    AC_DEFINE_UNQUOTED([HAVE_GETPAGESIZE], [1],
      [Define to 1 if the system has the 'getpagesize' function.])
  fi

  AC_CACHE_CHECK([whether getcwd succeeds when 4k < cwd_length < 16k],
    [gl_cv_func_getcwd_succeeds_beyond_4k],
    [# Remove any remnants of a previous test.
     rm -rf confdir-14B---
     # Arrange for deletion of the temporary directory this test creates.
     ac_clean_files="$ac_clean_files confdir-14B---"
     dnl Please keep this in sync with tests/test-getcwd.c.
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
          [[
#include <errno.h>
#include <stdlib.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#else /* on Windows with MSVC */
# include <direct.h>
#endif
#include <string.h>
#include <sys/stat.h>

]gl_PATHMAX_SNIPPET[
]GL_MDA_DEFINES[

#ifndef S_IRWXU
# define S_IRWXU 0700
#endif

/* FIXME: skip the run-test altogether on systems without getpagesize.  */
#if ! HAVE_GETPAGESIZE
# define getpagesize() 0
#endif

/* This size is chosen to be larger than PATH_MAX (4k), yet smaller than
   the 16kB pagesize on ia64 linux.  Those conditions make the code below
   trigger a bug in glibc's getcwd implementation before 2.4.90-10.  */
#define TARGET_LEN (5 * 1024)

int
main ()
{
  char *cwd;
  size_t initial_cwd_len;
  int fail = 0;

  /* The bug is triggered when PATH_MAX < getpagesize (), so skip
     this relatively expensive and invasive test if that's not true.  */
#ifdef PATH_MAX
  int bug_possible = PATH_MAX < getpagesize ();
#else
  int bug_possible = 0;
#endif
  if (! bug_possible)
    return 0;

  cwd = getcwd (NULL, 0);
  if (cwd == NULL)
    return 2;

  initial_cwd_len = strlen (cwd);
  free (cwd);

  if (1)
    {
      static char const dir_name[] = "confdir-14B---";
      size_t desired_depth = ((TARGET_LEN - 1 - initial_cwd_len)
                              / sizeof dir_name);
      size_t d;
      for (d = 0; d < desired_depth; d++)
        {
          if (mkdir (dir_name, S_IRWXU) < 0 || chdir (dir_name) < 0)
            {
              if (! (errno == ERANGE || errno == ENAMETOOLONG
                     || errno == ENOENT))
                fail = 3; /* Unable to construct deep hierarchy.  */
              break;
            }
        }

      /* If libc has the bug in question, this invocation of getcwd
         results in a failed assertion.  */
      cwd = getcwd (NULL, 0);
      if (cwd == NULL)
        fail = 4; /* getcwd didn't assert, but it failed for a long name
                     where the answer could have been learned.  */
      free (cwd);

      /* Call rmdir first, in case the above chdir failed.  */
      rmdir (dir_name);
      while (0 < d--)
        {
          if (chdir ("..") < 0)
            {
              fail = 5;
              break;
            }
          rmdir (dir_name);
        }
    }

  return fail;
}
          ]])],
       [gl_cv_func_getcwd_succeeds_beyond_4k=yes],
       [dnl An abort will provoke an exit code of something like 134 (128 + 6).
        dnl An exit code of 4 can also occur (for example in
        dnl musl libc 1.2.2/powerpc64le, NetBSD 9.0, OpenBSD 6.7:
        dnl getcwd (NULL, 0) fails rather than returning a string longer than
        dnl PATH_MAX.  This may be POSIX compliant (in some interpretations of
        dnl POSIX).  But gnulib's getcwd module wants to provide a non-NULL
        dnl value in this case.
        ret=$?
        if test $ret -ge 128 || test $ret = 4; then
          gl_cv_func_getcwd_succeeds_beyond_4k=no
        else
          gl_cv_func_getcwd_succeeds_beyond_4k=yes
        fi
       ],
       [case "$host_os" in
             # Guess no otherwise, even on glibc systems and musl systems.
          *) gl_cv_func_getcwd_succeeds_beyond_4k="guessing no"
        esac
       ])
    ])
  case "$gl_cv_func_getcwd_succeeds_beyond_4k" in
    *no)
      $1
      ;;
    *)
      $2
      ;;
  esac
])
m4trace:m4/getcwd-path-max.m4:16: -1- AC_DEFUN([gl_FUNC_GETCWD_PATH_MAX], [
  AC_CHECK_DECLS_ONCE([getcwd])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])
  AC_CACHE_CHECK([whether getcwd handles long file names properly],
    [gl_cv_func_getcwd_path_max],
    [# Arrange for deletion of the temporary directory this test creates.
     ac_clean_files="$ac_clean_files confdir3"
     dnl Please keep this in sync with tests/test-getcwd.c.
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
          [[
#include <errno.h>
#include <stdlib.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#else
# include <direct.h>
#endif
#include <string.h>
#include <limits.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>

]gl_PATHMAX_SNIPPET[

#ifndef AT_FDCWD
# define AT_FDCWD 0
#endif
#ifdef ENAMETOOLONG
# define is_ENAMETOOLONG(x) ((x) == ENAMETOOLONG)
#else
# define is_ENAMETOOLONG(x) 0
#endif

/* Use the getcwd function, not any macro.  */
#undef getcwd

]GL_MDA_DEFINES[

#ifndef S_IRWXU
# define S_IRWXU 0700
#endif

/* The length of this name must be 8.  */
#define DIR_NAME "confdir3"
#define DIR_NAME_LEN 8
#define DIR_NAME_SIZE (DIR_NAME_LEN + 1)

/* The length of "../".  */
#define DOTDOTSLASH_LEN 3

/* Leftover bytes in the buffer, to work around library or OS bugs.  */
#define BUF_SLOP 20

int
main ()
{
#ifndef PATH_MAX
  /* The Hurd doesn't define this, so getcwd can't exhibit the bug --
     at least not on a local file system.  And if we were to start worrying
     about remote file systems, we'd have to enable the wrapper function
     all of the time, just to be safe.  That's not worth the cost.  */
  exit (0);
#elif ((INT_MAX / (DIR_NAME_SIZE / DOTDOTSLASH_LEN + 1) \
        - DIR_NAME_SIZE - BUF_SLOP) \
       <= PATH_MAX)
  /* FIXME: Assuming there's a system for which this is true,
     this should be done in a compile test.  */
  exit (0);
#else
  char buf[PATH_MAX * (DIR_NAME_SIZE / DOTDOTSLASH_LEN + 1)
           + DIR_NAME_SIZE + BUF_SLOP];
  char *cwd = getcwd (buf, PATH_MAX);
  size_t initial_cwd_len;
  size_t cwd_len;
  int fail = 0;
  size_t n_chdirs = 0;

  if (cwd == NULL)
    exit (10);

  cwd_len = initial_cwd_len = strlen (cwd);

  while (1)
    {
      size_t dotdot_max = PATH_MAX * (DIR_NAME_SIZE / DOTDOTSLASH_LEN);
      char *c = NULL;

      cwd_len += DIR_NAME_SIZE;
      /* If mkdir or chdir fails, it could be that this system cannot create
         any file with an absolute name longer than PATH_MAX, such as cygwin.
         If so, leave fail as 0, because the current working directory can't
         be too long for getcwd if it can't even be created.  On Linux with
         the 9p file system, mkdir fails with error EINVAL when cwd_len gets
         too long; ignore this failure because the getcwd() system call
         produces good results whereas the gnulib substitute calls getdents64
         which fails with error EPROTO.
         For other errors, be pessimistic and consider that as a failure,
         too.  */
      if (mkdir (DIR_NAME, S_IRWXU) < 0 || chdir (DIR_NAME) < 0)
        {
          if (! (errno == ERANGE || is_ENAMETOOLONG (errno)))
            #ifdef __linux__
            if (! (errno == EINVAL))
            #endif
              fail = 20;
          break;
        }

      if (PATH_MAX <= cwd_len && cwd_len < PATH_MAX + DIR_NAME_SIZE)
        {
          struct stat sb;

          c = getcwd (buf, PATH_MAX);
          if (!c && errno == ENOENT)
            {
              fail = 11;
              break;
            }
          if (c)
            {
              fail = 31;
              break;
            }
          if (! (errno == ERANGE || is_ENAMETOOLONG (errno)))
            {
              fail = 21;
              break;
            }

          /* Our replacement needs to be able to stat() long ../../paths,
             so generate a path larger than PATH_MAX to check,
             avoiding the replacement if we can't stat().  */
          c = getcwd (buf, cwd_len + 1);
          if (c && !AT_FDCWD && stat (c, &sb) != 0 && is_ENAMETOOLONG (errno))
            {
              fail = 32;
              break;
            }
        }

      if (dotdot_max <= cwd_len - initial_cwd_len)
        {
          if (dotdot_max + DIR_NAME_SIZE < cwd_len - initial_cwd_len)
            break;
          c = getcwd (buf, cwd_len + 1);
          if (!c)
            {
              if (! (errno == ERANGE || errno == ENOENT
                     || is_ENAMETOOLONG (errno)))
                {
                  fail = 22;
                  break;
                }
              if (AT_FDCWD || errno == ERANGE || errno == ENOENT)
                {
                  fail = 12;
                  break;
                }
            }
        }

      if (c && strlen (c) != cwd_len)
        {
          fail = 23;
          break;
        }
      ++n_chdirs;
    }

  /* Leaving behind such a deep directory is not polite.
     So clean up here, right away, even though the driving
     shell script would also clean up.  */
  {
    size_t i;

    /* Try rmdir first, in case the chdir failed.  */
    rmdir (DIR_NAME);
    for (i = 0; i <= n_chdirs; i++)
      {
        if (chdir ("..") < 0)
          break;
        if (rmdir (DIR_NAME) != 0)
          break;
      }
  }

  exit (fail);
#endif
}
          ]])],
       [gl_cv_func_getcwd_path_max=yes],
       [case $? in
        10|11|12) gl_cv_func_getcwd_path_max='no, but it is partly working';;
        31) gl_cv_func_getcwd_path_max='no, it has the AIX bug';;
        32) gl_cv_func_getcwd_path_max='yes, but with shorter paths';;
        *) gl_cv_func_getcwd_path_max=no;;
        esac],
       [# Cross-compilation guesses:
        case "$host_os" in
          aix*) # On AIX, it has the AIX bug.
            gl_cv_func_getcwd_path_max='guessing no, it has the AIX bug' ;;
          gnu*) # On Hurd, it is 'yes'.
            gl_cv_func_getcwd_path_max='guessing yes' ;;
          linux* | kfreebsd*)
            # On older Linux+glibc it's 'no, but it is partly working',
            # on newer Linux+glibc it's 'yes'.
            # On Linux+musl libc, it's 'no, but it is partly working'.
            # On kFreeBSD+glibc, it's 'no, but it is partly working'.
            gl_cv_func_getcwd_path_max='guessing no, but it is partly working' ;;
          *) # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_getcwd_path_max="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
])
m4trace:m4/getcwd.m4:11: -1- AC_DEFUN([gl_FUNC_GETCWD_NULL], [
   AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
   AC_CHECK_HEADERS_ONCE([unistd.h])
   AC_CACHE_CHECK([whether getcwd (NULL, 0) allocates memory for result],
     [gl_cv_func_getcwd_null],
     [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#	 include <stdlib.h>
#        if HAVE_UNISTD_H
#         include <unistd.h>
#        else /* on Windows with MSVC */
#         include <direct.h>
#        endif
         ]GL_MDA_DEFINES[
#        ifndef getcwd
         char *getcwd ();
#        endif
]], [[
#if defined _WIN32 && ! defined __CYGWIN__
/* mingw cwd does not start with '/', but _getcwd does allocate.
   However, mingw fails to honor non-zero size.  */
#else
           if (chdir ("/") != 0)
             return 1;
           else
             {
               char *f = getcwd (NULL, 0);
               if (! f)
                 return 2;
               if (f[0] != '/')
                 { free (f); return 3; }
               if (f[1] != '\0')
                 { free (f); return 4; }
               free (f);
               return 0;
             }
#endif
         ]])],
        [gl_cv_func_getcwd_null=yes],
        [gl_cv_func_getcwd_null=no],
        [[case "$host_os" in
                           # Guess yes on glibc systems.
            *-gnu* | gnu*) gl_cv_func_getcwd_null="guessing yes";;
                           # Guess yes on musl systems.
            *-musl*)       gl_cv_func_getcwd_null="guessing yes";;
                           # Guess yes on Cygwin.
            cygwin*)       gl_cv_func_getcwd_null="guessing yes";;
                           # If we don't know, obey --enable-cross-guesses.
            *)             gl_cv_func_getcwd_null="$gl_cross_guess_normal";;
          esac
        ]])])
])
m4trace:m4/getcwd.m4:64: -1- AC_DEFUN([gl_FUNC_GETCWD_SIGNATURE], [
  AC_CACHE_CHECK([for getcwd with POSIX signature],
    [gl_cv_func_getcwd_posix_signature],
    [AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <unistd.h>
         ]GL_MDA_DEFINES],
         [[extern
           #ifdef __cplusplus
           "C"
           #endif
           char *getcwd (char *, size_t);
         ]])
      ],
      [gl_cv_func_getcwd_posix_signature=yes],
      [gl_cv_func_getcwd_posix_signature=no])
   ])
])
m4trace:m4/getcwd.m4:91: -1- AC_DEFUN([gl_FUNC_GETCWD_LGPL], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_GETCWD_NULL])
  AC_REQUIRE([gl_FUNC_GETCWD_SIGNATURE])

  case $gl_cv_func_getcwd_null,$gl_cv_func_getcwd_posix_signature in
  *yes,yes) ;;
  *)
    dnl Minimal replacement lib/getcwd-lgpl.c.
    REPLACE_GETCWD=1
    ;;
  esac
])
m4trace:m4/getcwd.m4:108: -1- AC_DEFUN([gl_FUNC_GETCWD], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_GETCWD_NULL])
  AC_REQUIRE([gl_FUNC_GETCWD_SIGNATURE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  gl_abort_bug=no
  case "$host_os" in
    mingw*)
      gl_cv_func_getcwd_path_max=yes
      ;;
    *)
      gl_FUNC_GETCWD_PATH_MAX
      case "$gl_cv_func_getcwd_null" in
        *yes)
          gl_FUNC_GETCWD_ABORT_BUG([gl_abort_bug=yes])
          ;;
      esac
      ;;
  esac
  dnl Define HAVE_MINIMALLY_WORKING_GETCWD and HAVE_PARTLY_WORKING_GETCWD
  dnl if appropriate.
  case "$gl_cv_func_getcwd_path_max" in
    *"no" | *"no, it has the AIX bug") ;;
    *)
      AC_DEFINE([HAVE_MINIMALLY_WORKING_GETCWD], [1],
        [Define to 1 if getcwd minimally works, that is, its result can be
         trusted when it succeeds.])
      ;;
  esac
  case "$gl_cv_func_getcwd_path_max" in
    *"no, but it is partly working")
      AC_DEFINE([HAVE_PARTLY_WORKING_GETCWD], [1],
        [Define to 1 if getcwd works, except it sometimes fails when it
         shouldn't, setting errno to ERANGE, ENAMETOOLONG, or ENOENT.])
      ;;
    *"yes, but with shorter paths")
      AC_DEFINE([HAVE_GETCWD_SHORTER], [1],
        [Define to 1 if getcwd works, but with shorter paths
         than is generally tested with the replacement.])
      ;;
  esac

  if { case "$gl_cv_func_getcwd_null" in *yes) false;; *) true;; esac; } \
     || test $gl_cv_func_getcwd_posix_signature != yes \
     || { case "$gl_cv_func_getcwd_path_max" in *yes*) false;; *) true;; esac; } \
     || test $gl_abort_bug = yes; then
    REPLACE_GETCWD=1
  fi
])
m4trace:m4/getcwd.m4:161: -1- AC_DEFUN([gl_PREREQ_GETCWD], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_DIRENT_D_INO])
  :
])
m4trace:m4/getdelim.m4:11: -1- AC_DEFUN([gl_FUNC_GETDELIM], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc <stdio.h> to declare getdelim().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_DECLS_ONCE([getdelim])

  AC_CHECK_FUNCS_ONCE([getdelim])
  if test $ac_cv_func_getdelim = yes; then
    HAVE_GETDELIM=1
    dnl Found it in some library.  Verify that it works.
    AC_CACHE_CHECK([for working getdelim function],
      [gl_cv_func_working_getdelim],
      [echo fooNbarN | tr -d '\012' | tr N '\012' > conftest.data
       AC_RUN_IFELSE([AC_LANG_SOURCE([[
#    include <stdio.h>
#    include <stdlib.h>
#    include <string.h>
    int main ()
    {
      FILE *in = fopen ("./conftest.data", "r");
      if (!in)
        return 1;
      {
        /* Test result for a NULL buffer and a zero size.
           Based on a test program from Karl Heuer.  */
        char *line = NULL;
        size_t siz = 0;
        int len = getdelim (&line, &siz, '\n', in);
        if (!(len == 4 && line && strcmp (line, "foo\n") == 0))
          { free (line); fclose (in); return 2; }
        free (line);
      }
      {
        /* Test result for a NULL buffer and a non-zero size.
           This crashes on FreeBSD 8.0.  */
        char *line = NULL;
        size_t siz = (size_t)(~0) / 4;
        if (getdelim (&line, &siz, '\n', in) == -1)
          { fclose (in); return 3; }
        free (line);
      }
      fclose (in);
      return 0;
    }
    ]])],
         [gl_cv_func_working_getdelim=yes],
         [gl_cv_func_working_getdelim=no],
         [dnl We're cross compiling.
          dnl Guess it works on glibc2 systems and musl systems.
          AC_EGREP_CPP([Lucky GNU user],
            [
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if (__GLIBC__ >= 2) && !defined __UCLIBC__
  Lucky GNU user
 #endif
#endif
            ],
            [gl_cv_func_working_getdelim="guessing yes"],
            [case "$host_os" in
               *-musl*) gl_cv_func_working_getdelim="guessing yes" ;;
               *)       gl_cv_func_working_getdelim="$gl_cross_guess_normal" ;;
             esac
            ])
         ])
      ])
    case "$gl_cv_func_working_getdelim" in
      *yes) ;;
      *) REPLACE_GETDELIM=1 ;;
    esac
  else
    HAVE_GETDELIM=0
  fi

  if test $ac_cv_have_decl_getdelim = no; then
    HAVE_DECL_GETDELIM=0
  fi
])
m4trace:m4/getdelim.m4:95: -1- AC_DEFUN([gl_PREREQ_GETDELIM], [
  AC_CHECK_FUNCS([flockfile funlockfile])
  AC_CHECK_DECLS([getc_unlocked])
])
m4trace:m4/getdtablesize.m4:7: -1- AC_DEFUN([gl_FUNC_GETDTABLESIZE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([getdtablesize])
  AC_CHECK_DECLS_ONCE([getdtablesize])
  if test $ac_cv_func_getdtablesize = yes &&
     test $ac_cv_have_decl_getdtablesize = yes; then
    AC_CACHE_CHECK([whether getdtablesize works],
      [gl_cv_func_getdtablesize_works],
      [dnl There are two concepts: the "maximum possible file descriptor value + 1"
       dnl and the "maximum number of open file descriptors in a process".
       dnl Per SUSv2 and POSIX, getdtablesize() should return the first one.
       dnl On most platforms, the first and the second concept are the same.
       dnl On OpenVMS, however, they are different and getdtablesize() returns
       dnl the second one; thus the test below fails. But we don't care
       dnl because there's no good way to write a replacement getdtablesize().
       case "$host_os" in
         vms*) gl_cv_func_getdtablesize_works="no (limitation)" ;;
         *)
           dnl Cygwin 1.7.25 automatically increases the RLIMIT_NOFILE soft
           dnl limit up to an unchangeable hard limit; all other platforms
           dnl correctly require setrlimit before getdtablesize() can report
           dnl a larger value.
           AC_RUN_IFELSE([
             AC_LANG_PROGRAM(
               [[#include <unistd.h>]
                GL_MDA_DEFINES
               ],
               [[int size = getdtablesize();
                 if (dup2 (0, getdtablesize()) != -1)
                   return 1;
                 if (size != getdtablesize())
                   return 2;
               ]])],
             [gl_cv_func_getdtablesize_works=yes],
             [gl_cv_func_getdtablesize_works=no],
             [case "$host_os" in
                cygwin*) # on cygwin 1.5.25, getdtablesize() automatically grows
                  gl_cv_func_getdtablesize_works="guessing no" ;;
                *) gl_cv_func_getdtablesize_works="guessing yes" ;;
              esac
             ])
           ;;
       esac
      ])
    case "$gl_cv_func_getdtablesize_works" in
      *yes | "no (limitation)") ;;
      *) REPLACE_GETDTABLESIZE=1 ;;
    esac
  else
    HAVE_GETDTABLESIZE=0
  fi
])
m4trace:m4/getdtablesize.m4:63: -1- AC_DEFUN([gl_PREREQ_GETDTABLESIZE], [:])
m4trace:m4/getgroups.m4:14: -1- AC_DEFUN([AC_FUNC_GETGROUPS], [
  AC_REQUIRE([AC_TYPE_GETGROUPS])dnl
  AC_REQUIRE([AC_TYPE_SIZE_T])dnl
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CHECK_FUNC([getgroups])

  # If we don't yet have getgroups, see if it's in -lbsd.
  # This is reported to be necessary on an ITOS 3000WS running SEIUX 3.1.
  ac_save_LIBS=$LIBS
  if test $ac_cv_func_getgroups = no; then
    AC_CHECK_LIB(bsd, getgroups, [GETGROUPS_LIB=-lbsd])
  fi

  # Run the program to test the functionality of the system-supplied
  # getgroups function only if there is such a function.
  if test $ac_cv_func_getgroups = yes; then
    AC_CACHE_CHECK([for working getgroups], [ac_cv_func_getgroups_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [AC_INCLUDES_DEFAULT],
            [[/* On NeXTstep 3.2, getgroups (0, 0) always fails.  */
              return getgroups (0, 0) == -1;]])
         ],
         [ac_cv_func_getgroups_works=yes],
         [ac_cv_func_getgroups_works=no],
         [case "$host_os" in # ((
                           # Guess yes on glibc systems.
            *-gnu* | gnu*) ac_cv_func_getgroups_works="guessing yes" ;;
                           # Guess yes on musl systems.
            *-musl*)       ac_cv_func_getgroups_works="guessing yes" ;;
                           # If we don't know, obey --enable-cross-guesses.
            *)             ac_cv_func_getgroups_works="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
  else
    ac_cv_func_getgroups_works=no
  fi
  case "$ac_cv_func_getgroups_works" in
    *yes)
      AC_DEFINE([HAVE_GETGROUPS], [1],
        [Define to 1 if your system has a working `getgroups' function.])
      ;;
  esac
  LIBS=$ac_save_LIBS
])
m4trace:m4/getgroups.m4:62: -1- AC_DEFUN([gl_FUNC_GETGROUPS], [
  AC_REQUIRE([AC_TYPE_GETGROUPS])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_FUNC_GETGROUPS
  if test $ac_cv_func_getgroups != yes; then
    HAVE_GETGROUPS=0
  else
    if test "$ac_cv_type_getgroups" != gid_t \
       || { case "$ac_cv_func_getgroups_works" in
              *yes) false;;
              *) true;;
            esac
          }; then
      REPLACE_GETGROUPS=1
      AC_DEFINE([GETGROUPS_ZERO_BUG], [1], [Define this to 1 if
        getgroups(0,NULL) does not return the number of groups.])
    else
      dnl Detect Mac OS X and FreeBSD bug; POSIX requires getgroups(-1,ptr)
      dnl to fail.
      AC_CACHE_CHECK([whether getgroups handles negative values],
        [gl_cv_func_getgroups_works],
        [AC_RUN_IFELSE([AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT],
          [[int size = getgroups (0, 0);
            gid_t *list = malloc (size * sizeof *list);
            int result = getgroups (-1, list) != -1;
            free (list);
            return result;]])],
          [gl_cv_func_getgroups_works=yes],
          [gl_cv_func_getgroups_works=no],
          [case "$host_os" in
                            # Guess yes on glibc systems.
             *-gnu* | gnu*) gl_cv_func_getgroups_works="guessing yes" ;;
                            # Guess yes on musl systems.
             *-musl*)       gl_cv_func_getgroups_works="guessing yes" ;;
                            # If we don't know, obey --enable-cross-guesses.
             *)             gl_cv_func_getgroups_works="$gl_cross_guess_normal" ;;
           esac
          ])])
      case "$gl_cv_func_getgroups_works" in
        *yes) ;;
        *) REPLACE_GETGROUPS=1 ;;
      esac
    fi
  fi
  test -n "$GETGROUPS_LIB" && LIBS="$GETGROUPS_LIB $LIBS"
])
m4trace:m4/gethostname.m4:10: -1- AC_DEFUN([gl_FUNC_GETHOSTNAME], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Where is gethostname() defined?
  dnl - On native Windows, it is in ws2_32.dll.
  dnl - Otherwise it is in libc.
  GETHOSTNAME_LIB=
  AC_CHECK_FUNCS([gethostname], , [
    AC_CACHE_CHECK([for gethostname in winsock2.h and -lws2_32],
      [gl_cv_w32_gethostname],
      [gl_cv_w32_gethostname=no
       gl_save_LIBS="$LIBS"
       LIBS="$LIBS -lws2_32"
       AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
#include <stddef.h>
]], [[gethostname(NULL, 0);]])], [gl_cv_w32_gethostname=yes])
       LIBS="$gl_save_LIBS"
      ])
    if test "$gl_cv_w32_gethostname" = "yes"; then
      GETHOSTNAME_LIB="-lws2_32"
    fi
  ])
  AC_SUBST([GETHOSTNAME_LIB])

  if test "$ac_cv_func_gethostname" = no; then
    HAVE_GETHOSTNAME=0
  fi

  gl_PREREQ_HOST_NAME_MAX
])
m4trace:m4/gethostname.m4:47: -1- AC_DEFUN([gl_PREREQ_HOST_NAME_MAX], [
  dnl - On most Unix systems, use MAXHOSTNAMELEN from <sys/param.h> instead.
  dnl - On Solaris, Cygwin, BeOS, use MAXHOSTNAMELEN from <netdb.h> instead.
  dnl - On mingw, use 256, because
  dnl   <https://docs.microsoft.com/en-us/windows/desktop/api/winsock/nf-winsock-gethostname> says:
  dnl   "if a buffer of 256 bytes is passed in the name parameter and
  dnl    the namelen parameter is set to 256, the buffer size will always
  dnl    be adequate."
  dnl With this, there is no need to use sysconf (_SC_HOST_NAME_MAX), which
  dnl is not a compile-time constant.
  dnl We cannot override <limits.h> using the usual technique, because
  dnl gl_CHECK_NEXT_HEADERS does not work for <limits.h>. Therefore retrieve
  dnl the value of HOST_NAME_MAX at configure time.
  AC_CHECK_HEADERS_ONCE([sys/param.h])
  AC_CHECK_HEADERS_ONCE([sys/socket.h])
  AC_CHECK_HEADERS_ONCE([netdb.h])
  AC_CACHE_CHECK([for HOST_NAME_MAX], [gl_cv_decl_HOST_NAME_MAX], [
    gl_cv_decl_HOST_NAME_MAX=
    AC_EGREP_CPP([lucky], [
#include <limits.h>
#ifdef HOST_NAME_MAX
lucky
#endif
      ], [gl_cv_decl_HOST_NAME_MAX=yes])
    if test -z "$gl_cv_decl_HOST_NAME_MAX"; then
      dnl It's not defined in <limits.h>. Substitute it.
      if test "$gl_cv_w32_gethostname" = yes; then
        dnl mingw.
        gl_cv_decl_HOST_NAME_MAX=256
      else
        AC_COMPUTE_INT([gl_cv_decl_HOST_NAME_MAX], [MAXHOSTNAMELEN], [
#include <sys/types.h>
#if HAVE_SYS_PARAM_H
# include <sys/param.h>
#endif
#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#endif
#if HAVE_NETDB_H
# include <netdb.h>
#endif
],
          [dnl The system does not define MAXHOSTNAMELEN in any of the common
           dnl headers. Use a safe fallback.
           gl_cv_decl_HOST_NAME_MAX=256
          ])
      fi
    fi
  ])
  if test "$gl_cv_decl_HOST_NAME_MAX" != yes; then
    AC_DEFINE_UNQUOTED([HOST_NAME_MAX], [$gl_cv_decl_HOST_NAME_MAX],
      [Define HOST_NAME_MAX when <limits.h> does not define it.])
  fi
])
m4trace:m4/gethostname.m4:103: -1- AC_DEFUN([gl_PREREQ_GETHOSTNAME], [
  if test "$gl_cv_w32_gethostname" != "yes"; then
    AC_CHECK_FUNCS([uname])
  fi
])
m4trace:m4/gethrxtime.m4:9: -1- AC_DEFUN([gl_GETHRXTIME], [
  AC_REQUIRE([gl_ARITHMETIC_HRTIME_T])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_XTIME])
  AC_CHECK_DECLS([gethrtime], [], [], [[#include <time.h>]])
  LIB_GETHRXTIME=
  if test $ac_cv_have_decl_gethrtime = no \
     || test $gl_cv_arithmetic_hrtime_t = no; then
    dnl Find libraries needed to link lib/gethrxtime.c.
    AC_REQUIRE([gl_CLOCK_TIME])
    AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
    AC_CHECK_FUNCS_ONCE([microuptime nanouptime])
    if test $ac_cv_func_nanouptime != yes \
       && { test $ac_cv_have_decl_gethrtime = no \
            || test $gl_cv_arithmetic_hrtime_t = no; }; then
      AC_CACHE_CHECK([whether CLOCK_MONOTONIC or CLOCK_REALTIME is defined],
        [gl_cv_have_clock_gettime_macro],
        [AC_EGREP_CPP([have_clock_gettime_macro],
          [
#          include <time.h>
#          if defined CLOCK_MONOTONIC || defined CLOCK_REALTIME
            have_clock_gettime_macro
#          endif
          ],
          [gl_cv_have_clock_gettime_macro=yes],
          [gl_cv_have_clock_gettime_macro=no])])
      if test $gl_cv_have_clock_gettime_macro = yes; then
        LIB_GETHRXTIME=$LIB_CLOCK_GETTIME
      fi
    fi
  fi
  AC_SUBST([LIB_GETHRXTIME])
])
m4trace:m4/gethrxtime.m4:47: -1- AC_DEFUN([gl_ARITHMETIC_HRTIME_T], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CACHE_CHECK([for arithmetic hrtime_t], [gl_cv_arithmetic_hrtime_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <time.h>]],
          [[hrtime_t x = 0; return x/x;]])],
       [gl_cv_arithmetic_hrtime_t=yes],
       [gl_cv_arithmetic_hrtime_t=no])])
  if test $gl_cv_arithmetic_hrtime_t = yes; then
    AC_DEFINE([HAVE_ARITHMETIC_HRTIME_T], [1],
      [Define if you have an arithmetic hrtime_t type.])
  fi
])
m4trace:m4/gethrxtime.m4:63: -1- AC_DEFUN([gl_XTIME], [
  :
])
m4trace:m4/getline.m4:16: -1- AC_DEFUN([gl_FUNC_GETLINE], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc <stdio.h> to declare getline().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_DECLS_ONCE([getline])

  gl_getline_needs_run_time_check=no
  AC_CHECK_FUNC([getline],
                [dnl Found it in some library.  Verify that it works.
                 gl_getline_needs_run_time_check=yes],
                [am_cv_func_working_getline=no])
  if test $gl_getline_needs_run_time_check = yes; then
    AC_CACHE_CHECK([for working getline function],
      [am_cv_func_working_getline],
      [echo fooNbarN | tr -d '\012' | tr N '\012' > conftest.data
       AC_RUN_IFELSE([AC_LANG_SOURCE([[
#    include <stdio.h>
#    include <stdlib.h>
#    include <string.h>
    int main ()
    {
      FILE *in = fopen ("./conftest.data", "r");
      if (!in)
        return 1;
      {
        /* Test result for a NULL buffer and a zero size.
           Based on a test program from Karl Heuer.  */
        char *line = NULL;
        size_t siz = 0;
        int len = getline (&line, &siz, in);
        if (!(len == 4 && line && strcmp (line, "foo\n") == 0))
          { free (line); fclose (in); return 2; }
        free (line);
      }
      {
        /* Test result for a NULL buffer and a non-zero size.
           This crashes on FreeBSD 8.0.  */
        char *line = NULL;
        size_t siz = (size_t)(~0) / 4;
        if (getline (&line, &siz, in) == -1)
          { fclose (in); return 3; }
        free (line);
      }
      fclose (in);
      return 0;
    }
    ]])],
         [am_cv_func_working_getline=yes],
         [am_cv_func_working_getline=no],
         [dnl We're cross compiling.
          dnl Guess it works on glibc2 systems and musl systems.
          AC_EGREP_CPP([Lucky GNU user],
            [
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if (__GLIBC__ >= 2) && !defined __UCLIBC__
  Lucky GNU user
 #endif
#endif
            ],
            [am_cv_func_working_getline="guessing yes"],
            [case "$host_os" in
               *-musl*) am_cv_func_working_getline="guessing yes" ;;
               *)       am_cv_func_working_getline="$gl_cross_guess_normal" ;;
             esac
            ])
         ])
      ])
  fi

  if test $ac_cv_have_decl_getline = no; then
    HAVE_DECL_GETLINE=0
  fi

  case "$am_cv_func_working_getline" in
    *yes) ;;
    *)
      dnl Set REPLACE_GETLINE always: Even if we have not found the broken
      dnl getline function among $LIBS, it may exist in libinet and the
      dnl executable may be linked with -linet.
      REPLACE_GETLINE=1
      ;;
  esac
])
m4trace:m4/getline.m4:106: -1- AC_DEFUN([gl_PREREQ_GETLINE], [
  :
])
m4trace:m4/getloadavg.m4:17: -1- AC_DEFUN([gl_GETLOADAVG], [AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

# Persuade glibc <stdlib.h> to declare getloadavg().
AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

gl_save_LIBS=$LIBS

# getloadavg is present in libc on glibc >= 2.2, Mac OS X, FreeBSD >= 2.0,
# NetBSD >= 0.9, OpenBSD >= 2.0, Solaris >= 7.
HAVE_GETLOADAVG=1
AC_CHECK_FUNC([getloadavg], [],
  [gl_func_getloadavg_done=no

   # Some systems with -lutil have (and need) -lkvm as well, some do not.
   # On Solaris, -lkvm requires nlist from -lelf, so check that first
   # to get the right answer into the cache.
   # For kstat on solaris, we need to test for libelf and libkvm to force the
   # definition of SVR4 below.
   if test $gl_func_getloadavg_done = no; then
     AC_CHECK_LIB([elf], [elf_begin], [LIBS="-lelf $LIBS"])
     AC_CHECK_LIB([kvm], [kvm_open], [LIBS="-lkvm $LIBS"])
     # Check for the 4.4BSD definition of getloadavg.
     AC_CHECK_LIB([util], [getloadavg],
       [LIBS="-lutil $LIBS" gl_func_getloadavg_done=yes])
   fi

   if test $gl_func_getloadavg_done = no; then
     # There is a commonly available library for RS/6000 AIX.
     # Since it is not a standard part of AIX, it might be installed locally.
     gl_getloadavg_LIBS=$LIBS
     if test $cross_compiling != yes; then
       LIBS="-L/usr/local/lib $LIBS"
     fi
     AC_CHECK_LIB([getloadavg], [getloadavg],
                  [LIBS="-lgetloadavg $LIBS" gl_func_getloadavg_done=yes],
                  [LIBS=$gl_getloadavg_LIBS])
   fi

   # Set up the replacement function if necessary.
   if test $gl_func_getloadavg_done = no; then
     HAVE_GETLOADAVG=0

     # Solaris has libkstat which does not require root.
     AC_CHECK_LIB([kstat], [kstat_open])
     test $ac_cv_lib_kstat_kstat_open = yes && gl_func_getloadavg_done=yes

     # AIX has libperfstat which does not require root
     if test $gl_func_getloadavg_done = no; then
       AC_CHECK_LIB([perfstat], [perfstat_cpu_total])
       test $ac_cv_lib_perfstat_perfstat_cpu_total = yes && gl_func_getloadavg_done=yes
     fi

     if test $gl_func_getloadavg_done = no; then
       AC_CHECK_HEADER([sys/dg_sys_info.h],
         [gl_func_getloadavg_done=yes
          AC_DEFINE([DGUX], [1], [Define to 1 for DGUX with <sys/dg_sys_info.h>.])
          AC_CHECK_LIB([dgc], [dg_sys_info])])
     fi
   fi])

if test "x$gl_save_LIBS" = x; then
  GETLOADAVG_LIBS=$LIBS
else
  GETLOADAVG_LIBS=`echo "$LIBS" | sed "s!$gl_save_LIBS!!"`
fi
LIBS=$gl_save_LIBS

AC_SUBST([GETLOADAVG_LIBS])dnl

# Test whether the system declares getloadavg. Solaris has the function
# but declares it in <sys/loadavg.h>, not <stdlib.h>.
AC_CHECK_HEADERS([sys/loadavg.h])
if test $ac_cv_header_sys_loadavg_h = yes; then
  HAVE_SYS_LOADAVG_H=1
else
  HAVE_SYS_LOADAVG_H=0
fi
AC_CHECK_DECL([getloadavg], [], [HAVE_DECL_GETLOADAVG=0],
  [[#if HAVE_SYS_LOADAVG_H
    /* OpenIndiana has a bug: <sys/time.h> must be included before
       <sys/loadavg.h>.  */
    # include <sys/time.h>
    # include <sys/loadavg.h>
    #endif
    #include <stdlib.h>]])
])
m4trace:m4/getloadavg.m4:109: -1- AC_DEFUN([gl_PREREQ_GETLOADAVG], [
# Figure out what our getloadavg.c needs.

AC_CHECK_HEADERS_ONCE([sys/param.h unistd.h])

# On HPUX9, an unprivileged user can get load averages this way.
if test $gl_func_getloadavg_done = no; then
  AC_CHECK_FUNCS([pstat_getdynamic], [gl_func_getloadavg_done=yes])
fi

# We cannot check for <dwarf.h>, because Solaris 2 does not use dwarf (it
# uses stabs), but it is still SVR4.  We cannot check for <elf.h> because
# Irix 4.0.5F has the header but not the library.
if test $gl_func_getloadavg_done = no && test "$ac_cv_lib_elf_elf_begin" = yes \
    && test "$ac_cv_lib_kvm_kvm_open" = yes; then
  gl_func_getloadavg_done=yes
  AC_DEFINE([SVR4], [1], [Define to 1 on System V Release 4.])
fi

if test $gl_func_getloadavg_done = no; then
  AC_CHECK_HEADER([inq_stats/cpustats.h],
  [gl_func_getloadavg_done=yes
   AC_DEFINE([UMAX], [1], [Define to 1 for Encore UMAX.])
   AC_DEFINE([UMAX4_3], [1],
             [Define to 1 for Encore UMAX 4.3 that has <inq_status/cpustats.h>
              instead of <sys/cpustats.h>.])])
fi

if test $gl_func_getloadavg_done = no; then
  AC_CHECK_HEADER([sys/cpustats.h],
  [gl_func_getloadavg_done=yes; AC_DEFINE([UMAX])])
fi

if test $gl_func_getloadavg_done = no; then
  AC_CHECK_HEADERS([mach/mach.h])
fi

AC_CHECK_HEADERS([nlist.h],
[AC_CHECK_MEMBERS([struct nlist.n_un.n_name],
                  [], [],
                  [#include <nlist.h>])
 AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <nlist.h>]],
                   [[struct nlist x;
                    #ifdef HAVE_STRUCT_NLIST_N_UN_N_NAME
                    x.n_un.n_name = "";
                    #else
                    x.n_name = "";
                    #endif]])],
                [AC_DEFINE([N_NAME_POINTER], [1],
                           [Define to 1 if the nlist n_name member is a pointer])])
])dnl
])
m4trace:m4/getlogin.m4:7: -1- AC_DEFUN([gl_FUNC_GETLOGIN], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([getlogin])
  if test $ac_cv_have_decl_getlogin = no; then
    HAVE_DECL_GETLOGIN=0
  fi
  AC_CHECK_FUNCS_ONCE([getlogin])
  if test $ac_cv_func_getlogin = no; then
    HAVE_GETLOGIN=0
  fi
])
m4trace:m4/getlogin.m4:22: -1- AC_DEFUN([gl_LIB_GETLOGIN], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case $host_os in
    mingw*)
      LIB_GETLOGIN='-ladvapi32' ;;
    *)
      LIB_GETLOGIN= ;;
  esac
  AC_SUBST([LIB_GETLOGIN])
])
m4trace:m4/getndelim2.m4:7: -1- AC_DEFUN([gl_GETNDELIM2], [
  gl_PREREQ_GETNDELIM2
  AC_CHECK_FUNCS_ONCE([flockfile])
  AC_CHECK_FUNCS_ONCE([funlockfile])
])
m4trace:m4/getndelim2.m4:15: -1- AC_DEFUN([gl_PREREQ_GETNDELIM2], [
  dnl Prerequisites of lib/getndelim2.h.
  AC_REQUIRE([gt_TYPE_SSIZE_T])
  dnl No prerequisites of lib/getndelim2.c.
])
m4trace:m4/getopt.m4:8: -1- AC_DEFUN([gl_FUNC_GETOPT_POSIX], [
  m4_divert_text([DEFAULTS], [gl_getopt_required=POSIX])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_GETOPT_CHECK_HEADERS])
  dnl Other modules can request the gnulib implementation of the getopt
  dnl functions unconditionally, by defining gl_REPLACE_GETOPT_ALWAYS.
  dnl argp.m4 does this.
  m4_ifdef([gl_REPLACE_GETOPT_ALWAYS], [
    REPLACE_GETOPT=1
  ], [
    REPLACE_GETOPT=0
    if test -n "$gl_replace_getopt"; then
      REPLACE_GETOPT=1
    fi
  ])
  GL_GENERATE_GETOPT_H=false
  GL_GENERATE_GETOPT_CDEFS_H=false
  if test $REPLACE_GETOPT = 1; then
    dnl Arrange for getopt.h to be created.
    gl_GETOPT_SUBSTITUTE_HEADER
  fi
])
m4trace:m4/getopt.m4:35: -1- AC_DEFUN([gl_FUNC_GETOPT_GNU], [
  dnl Set the variable gl_getopt_required, so that all invocations of
  dnl gl_GETOPT_CHECK_HEADERS in the scope of the current configure file
  dnl will check for getopt with GNU extensions.
  dnl This means that if one gnulib-tool invocation requests getopt-posix
  dnl and another gnulib-tool invocation requests getopt-gnu, it is as if
  dnl both had requested getopt-gnu.
  m4_divert_text([INIT_PREPARE], [gl_getopt_required=GNU])

  dnl No need to invoke gl_FUNC_GETOPT_POSIX here; this is automatically
  dnl done through the module dependency getopt-gnu -> getopt-posix.
])
m4trace:m4/getopt.m4:50: -1- AC_DEFUN([gl_GETOPT_CHECK_HEADERS], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([AC_PROG_AWK]) dnl for awk that supports ENVIRON

  dnl Persuade Solaris <unistd.h> to declare optarg, optind, opterr, optopt.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  gl_CHECK_NEXT_HEADERS([getopt.h])
  if test $ac_cv_header_getopt_h = yes; then
    HAVE_GETOPT_H=1
  else
    HAVE_GETOPT_H=0
  fi
  AC_SUBST([HAVE_GETOPT_H])

  gl_replace_getopt=

  dnl Test whether <getopt.h> is available.
  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CHECK_HEADERS([getopt.h], [], [gl_replace_getopt=yes])
  fi

  dnl Test whether the function getopt_long is available.
  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CHECK_FUNCS([getopt_long_only], [], [gl_replace_getopt=yes])
  fi

  dnl POSIX 2008 does not specify leading '+' behavior, but see
  dnl http://austingroupbugs.net/view.php?id=191 for a recommendation on
  dnl the next version of POSIX.  For now, we only guarantee leading '+'
  dnl behavior with getopt-gnu.
  if test -z "$gl_replace_getopt"; then
    AC_CACHE_CHECK([whether getopt is POSIX compatible],
      [gl_cv_func_getopt_posix],
      [
        dnl Merging these three different test programs into a single one
        dnl would require a reset mechanism. On BSD systems, it can be done
        dnl through 'optreset'; on some others (glibc), it can be done by
        dnl setting 'optind' to 0; on others again (HP-UX, IRIX, OSF/1,
        dnl Solaris 9, musl libc), there is no such mechanism.
        if test $cross_compiling = no; then
          dnl Sanity check. Succeeds everywhere (except on MSVC,
          dnl which lacks <unistd.h> and getopt() entirely).
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char a[] = "-a";
  static char foo[] = "foo";
  static char bar[] = "bar";
  char *argv[] = { program, a, foo, bar, NULL };
  int c;

  c = getopt (4, argv, "ab");
  if (!(c == 'a'))
    return 1;
  c = getopt (4, argv, "ab");
  if (!(c == -1))
    return 2;
  if (!(optind == 2))
    return 3;
  return 0;
}
]])],
            [gl_cv_func_getopt_posix=maybe],
            [gl_cv_func_getopt_posix=no])
          if test $gl_cv_func_getopt_posix = maybe; then
            dnl Sanity check with '+'. Succeeds everywhere (except on MSVC,
            dnl which lacks <unistd.h> and getopt() entirely).
            AC_RUN_IFELSE(
              [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char donald[] = "donald";
  static char p[] = "-p";
  static char billy[] = "billy";
  static char duck[] = "duck";
  static char a[] = "-a";
  static char bar[] = "bar";
  char *argv[] = { program, donald, p, billy, duck, a, bar, NULL };
  int c;

  c = getopt (7, argv, "+abp:q:");
  if (!(c == -1))
    return 4;
  if (!(strcmp (argv[0], "program") == 0))
    return 5;
  if (!(strcmp (argv[1], "donald") == 0))
    return 6;
  if (!(strcmp (argv[2], "-p") == 0))
    return 7;
  if (!(strcmp (argv[3], "billy") == 0))
    return 8;
  if (!(strcmp (argv[4], "duck") == 0))
    return 9;
  if (!(strcmp (argv[5], "-a") == 0))
    return 10;
  if (!(strcmp (argv[6], "bar") == 0))
    return 11;
  if (!(optind == 1))
    return 12;
  return 0;
}
]])],
              [gl_cv_func_getopt_posix=maybe],
              [gl_cv_func_getopt_posix=no])
          fi
          if test $gl_cv_func_getopt_posix = maybe; then
            dnl Detect Mac OS X 10.5, AIX 7.1, mingw bug.
            AC_RUN_IFELSE(
              [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char ab[] = "-ab";
  char *argv[3] = { program, ab, NULL };
  if (getopt (2, argv, "ab:") != 'a')
    return 13;
  if (getopt (2, argv, "ab:") != '?')
    return 14;
  if (optopt != 'b')
    return 15;
  if (optind != 2)
    return 16;
  return 0;
}
]])],
              [gl_cv_func_getopt_posix=yes],
              [gl_cv_func_getopt_posix=no])
          fi
        else
          case "$host_os" in
            darwin* | aix* | mingw*) gl_cv_func_getopt_posix="guessing no";;
            *)                       gl_cv_func_getopt_posix="guessing yes";;
          esac
        fi
      ])
    case "$gl_cv_func_getopt_posix" in
      *no) gl_replace_getopt=yes ;;
    esac
  fi

  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CACHE_CHECK([for working GNU getopt function], [gl_cv_func_getopt_gnu],
      [# Even with POSIXLY_CORRECT, the GNU extension of leading '-' in the
       # optstring is necessary for programs like m4 that have POSIX-mandated
       # semantics for supporting options interspersed with files.
       # Also, since getopt_long is a GNU extension, we require optind=0.
       # Bash ties 'set -o posix' to a non-exported POSIXLY_CORRECT;
       # so take care to revert to the correct (non-)export state.
dnl GNU Coding Standards currently allow awk but not env; besides, env
dnl is ambiguous with environment values that contain newlines.
       gl_awk_probe='BEGIN { if ("POSIXLY_CORRECT" in ENVIRON) print "x" }'
       case ${POSIXLY_CORRECT+x}`$AWK "$gl_awk_probe" </dev/null` in
         xx) gl_had_POSIXLY_CORRECT=exported ;;
         x)  gl_had_POSIXLY_CORRECT=yes      ;;
         *)  gl_had_POSIXLY_CORRECT=         ;;
       esac
       POSIXLY_CORRECT=1
       export POSIXLY_CORRECT
       AC_RUN_IFELSE(
        [AC_LANG_PROGRAM([[#include <getopt.h>
                           #include <stddef.h>
                           #include <string.h>
           ]GL_NOCRASH[
           ]], [[
             int result = 0;

             nocrash_init();

             /* This code succeeds on glibc 2.8, OpenBSD 4.0, Cygwin, mingw,
                and fails on Mac OS X 10.5, AIX 5.2, HP-UX 11, IRIX 6.5,
                OSF/1 5.1, Solaris 10.  */
             {
               static char conftest[] = "conftest";
               static char plus[] = "-+";
               char *argv[3] = { conftest, plus, NULL };
               opterr = 0;
               if (getopt (2, argv, "+a") != '?')
                 result |= 1;
             }
             /* This code succeeds on glibc 2.8, mingw,
                and fails on Mac OS X 10.5, OpenBSD 4.0, AIX 5.2, HP-UX 11,
                IRIX 6.5, OSF/1 5.1, Solaris 10, Cygwin 1.5.x.  */
             {
               static char program[] = "program";
               static char p[] = "-p";
               static char foo[] = "foo";
               static char bar[] = "bar";
               char *argv[] = { program, p, foo, bar, NULL };

               optind = 1;
               if (getopt (4, argv, "p::") != 'p')
                 result |= 2;
               else if (optarg != NULL)
                 result |= 4;
               else if (getopt (4, argv, "p::") != -1)
                 result |= 6;
               else if (optind != 2)
                 result |= 8;
             }
             /* This code succeeds on glibc 2.8 and fails on Cygwin 1.7.0.  */
             {
               static char program[] = "program";
               static char foo[] = "foo";
               static char p[] = "-p";
               char *argv[] = { program, foo, p, NULL };
               optind = 0;
               if (getopt (3, argv, "-p") != 1)
                 result |= 16;
               else if (getopt (3, argv, "-p") != 'p')
                 result |= 16;
             }
             /* This code fails on glibc 2.11.  */
             {
               static char program[] = "program";
               static char b[] = "-b";
               static char a[] = "-a";
               char *argv[] = { program, b, a, NULL };
               optind = opterr = 0;
               if (getopt (3, argv, "+:a:b") != 'b')
                 result |= 32;
               else if (getopt (3, argv, "+:a:b") != ':')
                 result |= 32;
             }
             /* This code dumps core on glibc 2.14.  */
             {
               static char program[] = "program";
               static char w[] = "-W";
               static char dummy[] = "dummy";
               char *argv[] = { program, w, dummy, NULL };
               optind = opterr = 1;
               if (getopt (3, argv, "W;") != 'W')
                 result |= 64;
             }
             return result;
           ]])],
        [gl_cv_func_getopt_gnu=yes],
        [gl_cv_func_getopt_gnu=no],
        [dnl Cross compiling.
         dnl Assume the worst, even on glibc platforms.
         dnl But obey --enable-cross-guesses.
         gl_cv_func_getopt_gnu="$gl_cross_guess_normal"
        ])
       case $gl_had_POSIXLY_CORRECT in
         exported) ;;
         yes) AS_UNSET([POSIXLY_CORRECT]); POSIXLY_CORRECT=1 ;;
         *) AS_UNSET([POSIXLY_CORRECT]) ;;
       esac
      ])
    if test "$gl_cv_func_getopt_gnu" != yes; then
      gl_replace_getopt=yes
    else
      AC_CACHE_CHECK([for working GNU getopt_long function],
        [gl_cv_func_getopt_long_gnu],
        [AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <getopt.h>
                #include <stddef.h>
                #include <string.h>
              ]],
              [[static const struct option long_options[] =
                  {
                    { "xtremely-",no_argument,       NULL, 1003 },
                    { "xtra",     no_argument,       NULL, 1001 },
                    { "xtreme",   no_argument,       NULL, 1002 },
                    { "xtremely", no_argument,       NULL, 1003 },
                    { NULL,       0,                 NULL, 0 }
                  };
                /* This code fails on OpenBSD 5.0.  */
                {
                  static char program[] = "program";
                  static char xtremel[] = "--xtremel";
                  char *argv[] = { program, xtremel, NULL };
                  int option_index;
                  optind = 1; opterr = 0;
                  if (getopt_long (2, argv, "", long_options, &option_index) != 1003)
                    return 1;
                }
                return 0;
              ]])],
           [gl_cv_func_getopt_long_gnu=yes],
           [gl_cv_func_getopt_long_gnu=no],
           [dnl Cross compiling. Guess no on OpenBSD, yes otherwise.
            case "$host_os" in
              openbsd*) gl_cv_func_getopt_long_gnu="guessing no";;
              *)        gl_cv_func_getopt_long_gnu="guessing yes";;
            esac
           ])
        ])
      case "$gl_cv_func_getopt_long_gnu" in
        *yes) ;;
        *) gl_replace_getopt=yes ;;
      esac
    fi
  fi
])
m4trace:m4/getopt.m4:366: -1- AC_DEFUN([gl_GETOPT_SUBSTITUTE_HEADER], [
  AC_CHECK_HEADERS_ONCE([sys/cdefs.h])
  if test $ac_cv_header_sys_cdefs_h = yes; then
    HAVE_SYS_CDEFS_H=1
  else
    HAVE_SYS_CDEFS_H=0
  fi
  AC_SUBST([HAVE_SYS_CDEFS_H])

  AC_DEFINE([__GETOPT_PREFIX], [[rpl_]],
    [Define to rpl_ if the getopt replacement functions and variables
     should be used.])
  GL_GENERATE_GETOPT_H=true
  GL_GENERATE_GETOPT_CDEFS_H=true
])
m4trace:m4/getpagesize.m4:8: -1- AC_DEFUN([gl_FUNC_GETPAGESIZE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CHECK_FUNC_GETPAGESIZE
  if test $gl_cv_func_getpagesize = no; then
    HAVE_GETPAGESIZE=0
    AC_CHECK_HEADERS([OS.h])
    if test $ac_cv_header_OS_h = yes; then
      HAVE_OS_H=1
    fi
    AC_CHECK_HEADERS([sys/param.h])
    if test $ac_cv_header_sys_param_h = yes; then
      HAVE_SYS_PARAM_H=1
    fi
  fi
  case "$host_os" in
    mingw*)
      REPLACE_GETPAGESIZE=1
      ;;
  esac
  dnl Also check whether it's declared.
  dnl mingw has getpagesize() in libgcc.a but doesn't declare it.
  AC_CHECK_DECL([getpagesize], , [HAVE_DECL_GETPAGESIZE=0])
])
m4trace:m4/getpagesize.m4:36: -1- AC_DEFUN([gl_CHECK_FUNC_GETPAGESIZE], [
  dnl We can't use AC_CHECK_FUNC here, because getpagesize() is defined as a
  dnl static inline function when compiling for Android 4.4 or older.
  AC_CACHE_CHECK([for getpagesize], [gl_cv_func_getpagesize],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <unistd.h>]],
          [[return getpagesize();]])
       ],
       [gl_cv_func_getpagesize=yes],
       [gl_cv_func_getpagesize=no])
    ])
])
m4trace:m4/getpass.m4:9: -1- AC_DEFUN_ONCE([gl_FUNC_GETPASS], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade Solaris <unistd.h> and <stdlib.h> to declare getpass().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([getpass])
  if test $ac_cv_func_getpass = no; then
    HAVE_GETPASS=0
  fi
])
m4trace:m4/getpass.m4:24: -1- AC_DEFUN([gl_FUNC_GETPASS_GNU], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_GETPASS])

  if test $ac_cv_func_getpass = yes; then
    AC_CACHE_CHECK([for getpass without length limitations],
      [gl_cv_func_getpass_good],
      [AC_EGREP_CPP([Lucky GNU user],
         [
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if (__GLIBC__ >= 2) && !defined __UCLIBC__
  Lucky GNU user
 #endif
#endif
         ],
         [gl_cv_func_getpass_good=yes],
         [gl_cv_func_getpass_good=no])
      ])
    if test $gl_cv_func_getpass_good != yes; then
      REPLACE_GETPASS_FOR_GETPASS_GNU=1
    fi
  fi
])
m4trace:m4/getpass.m4:51: -1- AC_DEFUN([gl_PREREQ_GETPASS], [
  AC_CHECK_HEADERS_ONCE([stdio_ext.h termios.h])
  AC_CHECK_FUNCS_ONCE([__fsetlocking])
  AC_CHECK_DECLS([__fsetlocking],,,
    [[#include <stdio.h>
      #if HAVE_STDIO_EXT_H
       #include <stdio_ext.h>
      #endif]])
  AC_CHECK_DECLS_ONCE([fflush_unlocked])
  AC_CHECK_DECLS_ONCE([flockfile])
  AC_CHECK_DECLS_ONCE([fputs_unlocked])
  AC_CHECK_DECLS_ONCE([funlockfile])
  AC_CHECK_DECLS_ONCE([putc_unlocked])

  dnl We can't use AC_CHECK_FUNC here, because tcgetattr() is defined as a
  dnl static inline function when compiling for Android 4.4 or older.
  AC_CACHE_CHECK([for tcgetattr], [gl_cv_func_tcgetattr],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <termios.h>
            struct termios x;
          ]],
          [[return tcgetattr(0,&x);]])
       ],
       [gl_cv_func_tcgetattr=yes],
       [gl_cv_func_tcgetattr=no])
    ])
  if test $gl_cv_func_tcgetattr = yes; then
    HAVE_TCGETATTR=1
  else
    HAVE_TCGETATTR=0
  fi
  AC_DEFINE_UNQUOTED([HAVE_TCGETATTR], [$HAVE_TCGETATTR],
    [Define to 1 if the system has the 'tcgetattr' function.])

  dnl We can't use AC_CHECK_FUNC here, because tcsetattr() is defined as a
  dnl static inline function when compiling for Android 4.4 or older.
  AC_CACHE_CHECK([for tcsetattr], [gl_cv_func_tcsetattr],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <termios.h>
            struct termios x;
          ]],
          [[return tcsetattr(0,0,&x);]])
       ],
       [gl_cv_func_tcsetattr=yes],
       [gl_cv_func_tcsetattr=no])
    ])
  if test $gl_cv_func_tcsetattr = yes; then
    HAVE_TCSETATTR=1
  else
    HAVE_TCSETATTR=0
  fi
  AC_DEFINE_UNQUOTED([HAVE_TCSETATTR], [$HAVE_TCSETATTR],
    [Define to 1 if the system has the 'tcsetattr' function.])
])
m4trace:m4/getprogname.m4:10: -1- AC_DEFUN([gl_FUNC_GETPROGNAME], [
  AC_CHECK_FUNCS_ONCE([getprogname getexecname])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  ac_found=0
  AC_CHECK_DECLS([program_invocation_name], [ac_found=1], [],
    [#include <errno.h>])
  AC_CHECK_DECLS([program_invocation_short_name], [ac_found=1], [],
    [#include <errno.h>])
  AC_CHECK_DECLS([__argv], [ac_found=1], [], [#include <stdlib.h>])

  # Incur the cost of this test only if none of the above worked.
  if test $ac_found = 0; then
    # On OpenBSD 5.1, using the global __progname variable appears to be
    # the only way to implement getprogname.
    AC_CACHE_CHECK([whether __progname is defined in default libraries],
      [gl_cv_var___progname],
      [
        gl_cv_var___progname=
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
            [[extern char *__progname;]],
            [[return *__progname;]]
          )],
          [gl_cv_var___progname=yes]
        )
      ]
    )
    if test "$gl_cv_var___progname" = yes; then
      AC_DEFINE([HAVE_VAR___PROGNAME], 1,
        [Define if you have a global __progname variable])
    fi
  fi
])
m4trace:m4/getrandom.m4:9: -1- AC_DEFUN([gl_FUNC_GETRANDOM], [
  AC_REQUIRE([gl_SYS_RANDOM_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([getrandom])
  if test "$ac_cv_func_getrandom" != yes; then
    HAVE_GETRANDOM=0
  else
    dnl On Solaris 11.4 the return type is 'int', not 'ssize_t'.
    AC_CACHE_CHECK([whether getrandom is compatible with its GNU+BSD signature],
      [gl_cv_func_getrandom_ok],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[/* Additional includes are needed before <sys/random.h> on uClibc
                 and Mac OS X.  */
              #include <sys/types.h>
              #include <stdlib.h>
              #include <sys/random.h>
              ssize_t getrandom (void *, size_t, unsigned int);
            ]],
            [[]])
         ],
         [gl_cv_func_getrandom_ok=yes],
         [gl_cv_func_getrandom_ok=no])
      ])
    if test $gl_cv_func_getrandom_ok = no; then
      REPLACE_GETRANDOM=1
    fi
  fi

  case "$host_os" in
    mingw*)
      AC_CHECK_HEADERS([bcrypt.h], [], [],
        [[#include <windows.h>
        ]])
      AC_CACHE_CHECK([whether the bcrypt library is guaranteed to be present],
        [gl_cv_lib_assume_bcrypt],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <windows.h>]],
              [[#if !(_WIN32_WINNT >= _WIN32_WINNT_WIN7)
                  cannot assume it
                #endif
              ]])
           ],
           [gl_cv_lib_assume_bcrypt=yes],
           [gl_cv_lib_assume_bcrypt=no])
        ])
      if test $gl_cv_lib_assume_bcrypt = yes; then
        AC_DEFINE([HAVE_LIB_BCRYPT], [1],
          [Define to 1 if the bcrypt library is guaranteed to be present.])
        LIB_GETRANDOM='-lbcrypt'
      else
        LIB_GETRANDOM='-ladvapi32'
      fi
      ;;
    *)
      LIB_GETRANDOM= ;;
  esac
  AC_SUBST([LIB_GETRANDOM])
])
m4trace:m4/getrusage.m4:7: -1- AC_DEFUN([gl_FUNC_GETRUSAGE], [
  AC_REQUIRE([gl_SYS_RESOURCE_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([getrusage])
  if test $ac_cv_func_getrusage = no; then
    HAVE_GETRUSAGE=0
  fi
])
m4trace:m4/gettext.m4:57: -1- AC_DEFUN([AM_GNU_GETTEXT], [
  dnl Argument checking.
  ifelse([$1], [], , [ifelse([$1], [external], , [ifelse([$1], [no-libtool], , [ifelse([$1], [use-libtool], ,
    [errprint([ERROR: invalid first argument to AM_GNU_GETTEXT
])])])])])
  ifelse(ifelse([$1], [], [old])[]ifelse([$1], [no-libtool], [old]), [old],
    [AC_DIAGNOSE([obsolete], [Use of AM_GNU_GETTEXT without [external] argument is deprecated.])])
  ifelse([$2], [], , [ifelse([$2], [need-ngettext], , [ifelse([$2], [need-formatstring-macros], ,
    [errprint([ERROR: invalid second argument to AM_GNU_GETTEXT
])])])])
  define([gt_included_intl],
    ifelse([$1], [external],
      ifdef([AM_GNU_GETTEXT_][INTL_SUBDIR], [yes], [no]),
      [yes]))
  define([gt_libtool_suffix_prefix], ifelse([$1], [use-libtool], [l], []))
  gt_NEEDS_INIT
  AM_GNU_GETTEXT_NEED([$2])

  AC_REQUIRE([AM_PO_SUBDIRS])dnl
  ifelse(gt_included_intl, yes, [
    AC_REQUIRE([AM_INTL_SUBDIR])dnl
  ])

  dnl Prerequisites of AC_LIB_LINKFLAGS_BODY.
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  AC_REQUIRE([AC_LIB_RPATH])

  dnl Sometimes libintl requires libiconv, so first search for libiconv.
  dnl Ideally we would do this search only after the
  dnl      if test "$USE_NLS" = "yes"; then
  dnl        if { eval "gt_val=\$$gt_func_gnugettext_libc"; test "$gt_val" != "yes"; }; then
  dnl tests. But if configure.in invokes AM_ICONV after AM_GNU_GETTEXT
  dnl the configure script would need to contain the same shell code
  dnl again, outside any 'if'. There are two solutions:
  dnl - Invoke AM_ICONV_LINKFLAGS_BODY here, outside any 'if'.
  dnl - Control the expansions in more detail using AC_PROVIDE_IFELSE.
  dnl Since AC_PROVIDE_IFELSE is only in autoconf >= 2.52 and not
  dnl documented, we avoid it.
  ifelse(gt_included_intl, yes, , [
    AC_REQUIRE([AM_ICONV_LINKFLAGS_BODY])
  ])

  dnl Sometimes, on Mac OS X, libintl requires linking with CoreFoundation.
  gt_INTL_MACOSX

  dnl Set USE_NLS.
  AC_REQUIRE([AM_NLS])

  ifelse(gt_included_intl, yes, [
    BUILD_INCLUDED_LIBINTL=no
    USE_INCLUDED_LIBINTL=no
  ])
  LIBINTL=
  LTLIBINTL=
  POSUB=

  dnl Add a version number to the cache macros.
  case " $gt_needs " in
    *" need-formatstring-macros "*) gt_api_version=3 ;;
    *" need-ngettext "*) gt_api_version=2 ;;
    *) gt_api_version=1 ;;
  esac
  gt_func_gnugettext_libc="gt_cv_func_gnugettext${gt_api_version}_libc"
  gt_func_gnugettext_libintl="gt_cv_func_gnugettext${gt_api_version}_libintl"

  dnl If we use NLS figure out what method
  if test "$USE_NLS" = "yes"; then
    gt_use_preinstalled_gnugettext=no
    ifelse(gt_included_intl, yes, [
      AC_MSG_CHECKING([whether included gettext is requested])
      AC_ARG_WITH([included-gettext],
        [  --with-included-gettext use the GNU gettext library included here],
        nls_cv_force_use_gnu_gettext=$withval,
        nls_cv_force_use_gnu_gettext=no)
      AC_MSG_RESULT([$nls_cv_force_use_gnu_gettext])

      nls_cv_use_gnu_gettext="$nls_cv_force_use_gnu_gettext"
      if test "$nls_cv_force_use_gnu_gettext" != "yes"; then
    ])
        dnl User does not insist on using GNU NLS library.  Figure out what
        dnl to use.  If GNU gettext is available we use this.  Else we have
        dnl to fall back to GNU NLS library.

        if test $gt_api_version -ge 3; then
          gt_revision_test_code='
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
#define __GNU_GETTEXT_SUPPORTED_REVISION(major) ((major) == 0 ? 0 : -1)
#endif
changequote(,)dnl
typedef int array [2 * (__GNU_GETTEXT_SUPPORTED_REVISION(0) >= 1) - 1];
changequote([,])dnl
'
        else
          gt_revision_test_code=
        fi
        if test $gt_api_version -ge 2; then
          gt_expression_test_code=' + * ngettext ("", "", 0)'
        else
          gt_expression_test_code=
        fi

        AC_CACHE_CHECK([for GNU gettext in libc], [$gt_func_gnugettext_libc],
         [AC_LINK_IFELSE(
            [AC_LANG_PROGRAM(
               [[
#include <libintl.h>
$gt_revision_test_code
extern int _nl_msg_cat_cntr;
extern int *_nl_domain_bindings;
               ]],
               [[
bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_domain_bindings
               ]])],
            [eval "$gt_func_gnugettext_libc=yes"],
            [eval "$gt_func_gnugettext_libc=no"])])

        if { eval "gt_val=\$$gt_func_gnugettext_libc"; test "$gt_val" != "yes"; }; then
          dnl Sometimes libintl requires libiconv, so first search for libiconv.
          ifelse(gt_included_intl, yes, , [
            AM_ICONV_LINK
          ])
          dnl Search for libintl and define LIBINTL, LTLIBINTL and INCINTL
          dnl accordingly. Don't use AC_LIB_LINKFLAGS_BODY([intl],[iconv])
          dnl because that would add "-liconv" to LIBINTL and LTLIBINTL
          dnl even if libiconv doesn't exist.
          AC_LIB_LINKFLAGS_BODY([intl])
          AC_CACHE_CHECK([for GNU gettext in libintl],
            [$gt_func_gnugettext_libintl],
           [gt_save_CPPFLAGS="$CPPFLAGS"
            CPPFLAGS="$CPPFLAGS $INCINTL"
            gt_save_LIBS="$LIBS"
            LIBS="$LIBS $LIBINTL"
            dnl Now see whether libintl exists and does not depend on libiconv.
            AC_LINK_IFELSE(
              [AC_LANG_PROGRAM(
                 [[
#include <libintl.h>
$gt_revision_test_code
extern int _nl_msg_cat_cntr;
extern
#ifdef __cplusplus
"C"
#endif
const char *_nl_expand_alias (const char *);
                 ]],
                 [[
bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_expand_alias ("")
                 ]])],
              [eval "$gt_func_gnugettext_libintl=yes"],
              [eval "$gt_func_gnugettext_libintl=no"])
            dnl Now see whether libintl exists and depends on libiconv.
            if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" != yes; } && test -n "$LIBICONV"; then
              LIBS="$LIBS $LIBICONV"
              AC_LINK_IFELSE(
                [AC_LANG_PROGRAM(
                   [[
#include <libintl.h>
$gt_revision_test_code
extern int _nl_msg_cat_cntr;
extern
#ifdef __cplusplus
"C"
#endif
const char *_nl_expand_alias (const char *);
                   ]],
                   [[
bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + _nl_msg_cat_cntr + *_nl_expand_alias ("")
                   ]])],
                [LIBINTL="$LIBINTL $LIBICONV"
                 LTLIBINTL="$LTLIBINTL $LTLIBICONV"
                 eval "$gt_func_gnugettext_libintl=yes"
                ])
            fi
            CPPFLAGS="$gt_save_CPPFLAGS"
            LIBS="$gt_save_LIBS"])
        fi

        dnl If an already present or preinstalled GNU gettext() is found,
        dnl use it.  But if this macro is used in GNU gettext, and GNU
        dnl gettext is already preinstalled in libintl, we update this
        dnl libintl.  (Cf. the install rule in intl/Makefile.in.)
        if { eval "gt_val=\$$gt_func_gnugettext_libc"; test "$gt_val" = "yes"; } \
           || { { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; } \
                && test "$PACKAGE" != gettext-runtime \
                && test "$PACKAGE" != gettext-tools; }; then
          gt_use_preinstalled_gnugettext=yes
        else
          dnl Reset the values set by searching for libintl.
          LIBINTL=
          LTLIBINTL=
          INCINTL=
        fi

    ifelse(gt_included_intl, yes, [
        if test "$gt_use_preinstalled_gnugettext" != "yes"; then
          dnl GNU gettext is not found in the C library.
          dnl Fall back on included GNU gettext library.
          nls_cv_use_gnu_gettext=yes
        fi
      fi

      if test "$nls_cv_use_gnu_gettext" = "yes"; then
        dnl Mark actions used to generate GNU NLS library.
        BUILD_INCLUDED_LIBINTL=yes
        USE_INCLUDED_LIBINTL=yes
        LIBINTL="ifelse([$3],[],\${top_builddir}/intl,[$3])/libintl.[]gt_libtool_suffix_prefix[]a $LIBICONV $LIBTHREAD"
        LTLIBINTL="ifelse([$3],[],\${top_builddir}/intl,[$3])/libintl.[]gt_libtool_suffix_prefix[]a $LTLIBICONV $LTLIBTHREAD"
        LIBS=`echo " $LIBS " | sed -e 's/ -lintl / /' -e 's/^ //' -e 's/ $//'`
      fi

      CATOBJEXT=
      if test "$gt_use_preinstalled_gnugettext" = "yes" \
         || test "$nls_cv_use_gnu_gettext" = "yes"; then
        dnl Mark actions to use GNU gettext tools.
        CATOBJEXT=.gmo
      fi
    ])

    if test -n "$INTL_MACOSX_LIBS"; then
      if test "$gt_use_preinstalled_gnugettext" = "yes" \
         || test "$nls_cv_use_gnu_gettext" = "yes"; then
        dnl Some extra flags are needed during linking.
        LIBINTL="$LIBINTL $INTL_MACOSX_LIBS"
        LTLIBINTL="$LTLIBINTL $INTL_MACOSX_LIBS"
      fi
    fi

    if test "$gt_use_preinstalled_gnugettext" = "yes" \
       || test "$nls_cv_use_gnu_gettext" = "yes"; then
      AC_DEFINE([ENABLE_NLS], [1],
        [Define to 1 if translation of program messages to the user's native language
   is requested.])
    else
      USE_NLS=no
    fi
  fi

  AC_MSG_CHECKING([whether to use NLS])
  AC_MSG_RESULT([$USE_NLS])
  if test "$USE_NLS" = "yes"; then
    AC_MSG_CHECKING([where the gettext function comes from])
    if test "$gt_use_preinstalled_gnugettext" = "yes"; then
      if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; }; then
        gt_source="external libintl"
      else
        gt_source="libc"
      fi
    else
      gt_source="included intl directory"
    fi
    AC_MSG_RESULT([$gt_source])
  fi

  if test "$USE_NLS" = "yes"; then

    if test "$gt_use_preinstalled_gnugettext" = "yes"; then
      if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; }; then
        AC_MSG_CHECKING([how to link with libintl])
        AC_MSG_RESULT([$LIBINTL])
        AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCINTL])
      fi

      dnl For backward compatibility. Some packages may be using this.
      AC_DEFINE([HAVE_GETTEXT], [1],
       [Define if the GNU gettext() function is already present or preinstalled.])
      AC_DEFINE([HAVE_DCGETTEXT], [1],
       [Define if the GNU dcgettext() function is already present or preinstalled.])
    fi

    dnl We need to process the po/ directory.
    POSUB=po
  fi

  ifelse(gt_included_intl, yes, [
    dnl If this is used in GNU gettext we have to set BUILD_INCLUDED_LIBINTL
    dnl to 'yes' because some of the testsuite requires it.
    if test "$PACKAGE" = gettext-runtime || test "$PACKAGE" = gettext-tools; then
      BUILD_INCLUDED_LIBINTL=yes
    fi

    dnl Make all variables we use known to autoconf.
    AC_SUBST([BUILD_INCLUDED_LIBINTL])
    AC_SUBST([USE_INCLUDED_LIBINTL])
    AC_SUBST([CATOBJEXT])

    dnl For backward compatibility. Some configure.ins may be using this.
    nls_cv_header_intl=
    nls_cv_header_libgt=

    dnl For backward compatibility. Some Makefiles may be using this.
    DATADIRNAME=share
    AC_SUBST([DATADIRNAME])

    dnl For backward compatibility. Some Makefiles may be using this.
    INSTOBJEXT=.mo
    AC_SUBST([INSTOBJEXT])

    dnl For backward compatibility. Some Makefiles may be using this.
    GENCAT=gencat
    AC_SUBST([GENCAT])

    dnl For backward compatibility. Some Makefiles may be using this.
    INTLOBJS=
    if test "$USE_INCLUDED_LIBINTL" = yes; then
      INTLOBJS="\$(GETTOBJS)"
    fi
    AC_SUBST([INTLOBJS])

    dnl Enable libtool support if the surrounding package wishes it.
    INTL_LIBTOOL_SUFFIX_PREFIX=gt_libtool_suffix_prefix
    AC_SUBST([INTL_LIBTOOL_SUFFIX_PREFIX])
  ])

  dnl For backward compatibility. Some Makefiles may be using this.
  INTLLIBS="$LIBINTL"
  AC_SUBST([INTLLIBS])

  dnl Make all documented variables known to autoconf.
  AC_SUBST([LIBINTL])
  AC_SUBST([LTLIBINTL])
  AC_SUBST([POSUB])
])
m4trace:m4/gettext.m4:394: -1- AC_DEFUN([AM_GNU_GETTEXT_NEED], [
  m4_divert_text([INIT_PREPARE], [gt_needs="$gt_needs $1"])
])
m4trace:m4/gettext.m4:401: -1- AC_DEFUN([AM_GNU_GETTEXT_VERSION], [])
m4trace:m4/gettime.m4:7: -1- AC_DEFUN([gl_GETTIME], [
  dnl Prerequisites of lib/gettime.c.
  AC_REQUIRE([gl_CLOCK_TIME])
  AC_REQUIRE([gl_TIMESPEC])
  AC_CHECK_FUNCS_ONCE([timespec_get])
])
m4trace:m4/gettime.m4:15: -1- AC_DEFUN([gl_GETTIME_RES], [
  dnl Prerequisites of lib/gettime-res.c.
  AC_REQUIRE([gl_CLOCK_TIME])
  AC_REQUIRE([gl_TIMESPEC])
  AC_CHECK_FUNCS_ONCE([timespec_getres])
])
m4trace:m4/gettimeofday.m4:10: -1- AC_DEFUN([gl_FUNC_GETTIMEOFDAY], [
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_TIME_H])
  AC_CHECK_FUNCS_ONCE([gettimeofday])

  gl_gettimeofday_timezone=void
  if test $ac_cv_func_gettimeofday != yes; then
    HAVE_GETTIMEOFDAY=0
  else
    AC_CACHE_CHECK([for gettimeofday with POSIX signature],
      [gl_cv_func_gettimeofday_posix_signature],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
              struct timeval c;
              int gettimeofday (struct timeval *restrict, void *restrict);
            ]],
            [[/* glibc uses struct timezone * rather than the POSIX void *
                 if _GNU_SOURCE is defined.  However, since the only portable
                 use of gettimeofday uses NULL as the second parameter, and
                 since the glibc definition is actually more typesafe, it is
                 not worth wrapping this to get a compliant signature.  */
              int (*f) (struct timeval *restrict, void *restrict)
                = gettimeofday;
              int x = f (&c, 0);
              return !(x | c.tv_sec | c.tv_usec);
            ]])],
          [gl_cv_func_gettimeofday_posix_signature=yes],
          [AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM(
              [[#include <sys/time.h>
int gettimeofday (struct timeval *restrict, struct timezone *restrict);
              ]])],
            [gl_cv_func_gettimeofday_posix_signature=almost],
            [gl_cv_func_gettimeofday_posix_signature=no])])])
    if test $gl_cv_func_gettimeofday_posix_signature = almost; then
      gl_gettimeofday_timezone='struct timezone'
    elif test $gl_cv_func_gettimeofday_posix_signature != yes; then
      REPLACE_GETTIMEOFDAY=1
    fi
    dnl If we override 'struct timeval', we also have to override gettimeofday.
    if test $REPLACE_STRUCT_TIMEVAL = 1; then
      REPLACE_GETTIMEOFDAY=1
    fi
    dnl On mingw, the original gettimeofday has only a precision of 15.6
    dnl milliseconds. So override it.
    case "$host_os" in
      mingw*) REPLACE_GETTIMEOFDAY=1 ;;
    esac
  fi
  AC_DEFINE_UNQUOTED([GETTIMEOFDAY_TIMEZONE], [$gl_gettimeofday_timezone],
    [Define this to 'void' or 'struct timezone' to match the system's
     declaration of the second argument to gettimeofday.])
])
m4trace:m4/gettimeofday.m4:69: -1- AC_DEFUN([gl_PREREQ_GETTIMEOFDAY], [:])
m4trace:m4/getugroups.m4:8: -1- AC_DEFUN([gl_GETUGROUPS], [
  AC_CHECK_HEADERS_ONCE([grp.h])
])
m4trace:m4/getusershell.m4:7: -1- AC_DEFUN([gl_FUNC_GETUSERSHELL], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare {get,set,end}usershell().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Check whether the getusershell function exists.
  AC_CHECK_FUNCS_ONCE([getusershell])
  if test $ac_cv_func_getusershell = yes; then
    HAVE_GETUSERSHELL=1
    dnl Check whether getusershell is declared.
    AC_CHECK_DECLS([getusershell])
    if test $ac_cv_have_decl_getusershell = no; then
      HAVE_DECL_GETUSERSHELL=0
    fi
  else
    HAVE_GETUSERSHELL=0
    dnl Assume that on platforms which declare it, the function exists.
    HAVE_DECL_GETUSERSHELL=0
  fi
])
m4trace:m4/gl-openssl.m4:7: -1- AC_DEFUN([gl_SET_CRYPTO_CHECK_DEFAULT], [
  m4_define([gl_CRYPTO_CHECK_DEFAULT], [$1])
])
m4trace:m4/gl-openssl.m4:11: -1- gl_SET_CRYPTO_CHECK_DEFAULT([no])
m4trace:m4/gl-openssl.m4:13: -1- AC_DEFUN([gl_CRYPTO_CHECK], [
  dnl gnulib users set this before gl_INIT with gl_SET_CRYPTO_CHECK_DEFAULT()
  m4_divert_once([DEFAULTS], [with_openssl_default='gl_CRYPTO_CHECK_DEFAULT'])

  dnl Only clear once, so crypto routines can be checked for individually
  m4_divert_once([DEFAULTS], [LIB_CRYPTO=])

  AC_ARG_WITH([openssl],
    [[  --with-openssl[=ARG]    use libcrypto hash routines for the hash functions
                          MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512.
                          Valid ARGs are:
                            'yes',
                            'no',
                            'auto' => use if any version available,
                            'auto-gpl-compat' => use if GPL compatible version
                                                 available,
                            'optional' => use if available
                                          and warn if not available;
                          Default is ']gl_CRYPTO_CHECK_DEFAULT['.]m4_ifdef([gl_AF_ALG], [
                          Note also --with-linux-crypto, which will enable the
                          use of Linux kernel crypto routines (if available),
                          which has precedence for files.])],
    [],
    [with_openssl=$with_openssl_default])

  AC_SUBST([LIB_CRYPTO])
  if test "x$with_openssl" != xno; then
    if test "x$with_openssl" = xauto-gpl-compat; then
      AC_CACHE_CHECK([whether openssl is GPL compatible],
                     [gl_cv_openssl_gpl_compat],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
                #include <openssl/opensslv.h>
                #if OPENSSL_VERSION_MAJOR < 3
                  #error "openssl >= version 3 not found"
                #endif
              ]])],
           [gl_cv_openssl_gpl_compat=yes],
           [gl_cv_openssl_gpl_compat=no])])
    fi
    if test "x$with_openssl" != xauto-gpl-compat ||
       test "x$gl_cv_openssl_gpl_compat" = xyes; then
      AC_CHECK_LIB([crypto], [$1],
        [AC_CHECK_HEADERS(
           m4_if([$1], [MD5], [openssl/md5.h], [openssl/sha.h]),
           [LIB_CRYPTO=-lcrypto
            AC_DEFINE([HAVE_OPENSSL_$1], [1],
              [Define to 1 if libcrypto is used for $1.])])])
    fi
    if test "x$LIB_CRYPTO" = x; then
      message='openssl development library not found for $1.
  If you want to install it, first find the pre-built package name:
    - On Debian and Debian-based systems: libssl-dev,
    - On Red Hat distributions: openssl-devel.
    - Other: https://repology.org/project/openssl/versions'
      if test "x$with_openssl" = xyes; then
        AC_MSG_ERROR([$message])
      elif test "x$with_openssl" = xoptional; then
        AC_MSG_WARN([$message])
      fi
    fi
  fi
])
m4trace:m4/gnu-make.m4:13: -1- AC_DEFUN([gl_GNU_MAKE], [
  AM_CONDITIONAL([GNU_MAKE],
    [LC_ALL=C ${MAKE-make} --version 2>/dev/null | sed -e '2,$d' | grep GNU >/dev/null])
])
m4trace:m4/gnulib-common.m4:11: -1- AC_DEFUN([gl_COMMON], [
  dnl Use AC_REQUIRE here, so that the code is expanded once only.
  AC_REQUIRE([gl_00GNULIB])
  AC_REQUIRE([gl_COMMON_BODY])
  AC_REQUIRE([gl_ZZGNULIB])
])
m4trace:m4/gnulib-common.m4:17: -1- AC_DEFUN([gl_COMMON_BODY], [
  AH_VERBATIM([_GL_GNUC_PREREQ],
[/* True if the compiler says it groks GNU C version MAJOR.MINOR.  */
#if defined __GNUC__ && defined __GNUC_MINOR__
# define _GL_GNUC_PREREQ(major, minor) \
    ((major) < __GNUC__ + ((minor) <= __GNUC_MINOR__))
#else
# define _GL_GNUC_PREREQ(major, minor) 0
#endif
])
  AH_VERBATIM([_Noreturn],
[/* The _Noreturn keyword of C11.  */
#ifndef _Noreturn
# if (defined __cplusplus \
      && ((201103 <= __cplusplus && !(__GNUC__ == 4 && __GNUC_MINOR__ == 7)) \
          || (defined _MSC_VER && 1900 <= _MSC_VER)) \
      && 0)
    /* [[noreturn]] is not practically usable, because with it the syntax
         extern _Noreturn void func (...);
       would not be valid; such a declaration would only be valid with 'extern'
       and '_Noreturn' swapped, or without the 'extern' keyword.  However, some
       AIX system header files and several gnulib header files use precisely
       this syntax with 'extern'.  */
#  define _Noreturn [[noreturn]]
# elif ((!defined __cplusplus || defined __clang__) \
        && (201112 <= (defined __STDC_VERSION__ ? __STDC_VERSION__ : 0) \
            || (!defined __STRICT_ANSI__ \
                && (_GL_GNUC_PREREQ (4, 7) \
                    || (defined __apple_build_version__ \
                        ? 6000000 <= __apple_build_version__ \
                        : 3 < __clang_major__ + (5 <= __clang_minor__))))))
   /* _Noreturn works as-is.  */
# elif _GL_GNUC_PREREQ (2, 8) || defined __clang__ || 0x5110 <= __SUNPRO_C
#  define _Noreturn __attribute__ ((__noreturn__))
# elif 1200 <= (defined _MSC_VER ? _MSC_VER : 0)
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn
# endif
#endif
])
  AH_VERBATIM([isoc99_inline],
[/* Work around a bug in Apple GCC 4.0.1 build 5465: In C99 mode, it supports
   the ISO C 99 semantics of 'extern inline' (unlike the GNU C semantics of
   earlier versions), but does not display it by setting __GNUC_STDC_INLINE__.
   __APPLE__ && __MACH__ test for Mac OS X.
   __APPLE_CC__ tests for the Apple compiler and its version.
   __STDC_VERSION__ tests for the C99 mode.  */
#if defined __APPLE__ && defined __MACH__ && __APPLE_CC__ >= 5465 && !defined __cplusplus && __STDC_VERSION__ >= 199901L && !defined __GNUC_STDC_INLINE__
# define __GNUC_STDC_INLINE__ 1
#endif])
  AH_VERBATIM([attribute],
[/* Attributes.  */
#if (defined __has_attribute \
     && (!defined __clang_minor__ \
         || (defined __apple_build_version__ \
             ? 6000000 <= __apple_build_version__ \
             : 3 < __clang_major__ + (5 <= __clang_minor__))))
# define _GL_HAS_ATTRIBUTE(attr) __has_attribute (__##attr##__)
#else
# define _GL_HAS_ATTRIBUTE(attr) _GL_ATTR_##attr
# define _GL_ATTR_alloc_size _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_always_inline _GL_GNUC_PREREQ (3, 2)
# define _GL_ATTR_artificial _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_cold _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_const _GL_GNUC_PREREQ (2, 95)
# define _GL_ATTR_deprecated _GL_GNUC_PREREQ (3, 1)
# define _GL_ATTR_diagnose_if 0
# define _GL_ATTR_error _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_externally_visible _GL_GNUC_PREREQ (4, 1)
# define _GL_ATTR_fallthrough _GL_GNUC_PREREQ (7, 0)
# define _GL_ATTR_format _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_leaf _GL_GNUC_PREREQ (4, 6)
# define _GL_ATTR_malloc _GL_GNUC_PREREQ (3, 0)
# ifdef _ICC
#  define _GL_ATTR_may_alias 0
# else
#  define _GL_ATTR_may_alias _GL_GNUC_PREREQ (3, 3)
# endif
# define _GL_ATTR_noinline _GL_GNUC_PREREQ (3, 1)
# define _GL_ATTR_nonnull _GL_GNUC_PREREQ (3, 3)
# define _GL_ATTR_nonstring _GL_GNUC_PREREQ (8, 0)
# define _GL_ATTR_nothrow _GL_GNUC_PREREQ (3, 3)
# define _GL_ATTR_packed _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_pure _GL_GNUC_PREREQ (2, 96)
# define _GL_ATTR_returns_nonnull _GL_GNUC_PREREQ (4, 9)
# define _GL_ATTR_sentinel _GL_GNUC_PREREQ (4, 0)
# define _GL_ATTR_unused _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_warn_unused_result _GL_GNUC_PREREQ (3, 4)
#endif

#ifdef __has_c_attribute
# define _GL_HAS_C_ATTRIBUTE(attr) __has_c_attribute (__##attr##__)
#else
# define _GL_HAS_C_ATTRIBUTE(attr) 0
#endif

]dnl There is no _GL_ATTRIBUTE_ALIGNED; use stdalign's _Alignas instead.
[
/* _GL_ATTRIBUTE_ALLOC_SIZE ((N)) declares that the Nth argument of the function
   is the size of the returned memory block.
   _GL_ATTRIBUTE_ALLOC_SIZE ((M, N)) declares that the Mth argument multiplied
   by the Nth argument of the function is the size of the returned memory block.
 */
/* Applies to: function, pointer to function, function types.  */
#if _GL_HAS_ATTRIBUTE (alloc_size)
# define _GL_ATTRIBUTE_ALLOC_SIZE(args) __attribute__ ((__alloc_size__ args))
#else
# define _GL_ATTRIBUTE_ALLOC_SIZE(args)
#endif

/* _GL_ATTRIBUTE_ALWAYS_INLINE tells that the compiler should always inline the
   function and report an error if it cannot do so.  */
/* Applies to: function.  */
#if _GL_HAS_ATTRIBUTE (always_inline)
# define _GL_ATTRIBUTE_ALWAYS_INLINE __attribute__ ((__always_inline__))
#else
# define _GL_ATTRIBUTE_ALWAYS_INLINE
#endif

/* _GL_ATTRIBUTE_ARTIFICIAL declares that the function is not important to show
    in stack traces when debugging.  The compiler should omit the function from
    stack traces.  */
/* Applies to: function.  */
#if _GL_HAS_ATTRIBUTE (artificial)
# define _GL_ATTRIBUTE_ARTIFICIAL __attribute__ ((__artificial__))
#else
# define _GL_ATTRIBUTE_ARTIFICIAL
#endif

/* _GL_ATTRIBUTE_COLD declares that the function is rarely executed.  */
/* Applies to: functions.  */
/* Avoid __attribute__ ((cold)) on MinGW; see thread starting at
   <https://lists.gnu.org/r/emacs-devel/2019-04/msg01152.html>.
   Also, Oracle Studio 12.6 requires 'cold' not '__cold__'.  */
#if _GL_HAS_ATTRIBUTE (cold) && !defined __MINGW32__
# ifndef __SUNPRO_C
#  define _GL_ATTRIBUTE_COLD __attribute__ ((__cold__))
# else
#  define _GL_ATTRIBUTE_COLD __attribute__ ((cold))
# endif
#else
# define _GL_ATTRIBUTE_COLD
#endif

/* _GL_ATTRIBUTE_CONST declares that it is OK for a compiler to omit duplicate
   calls to the function with the same arguments.
   This attribute is safe for a function that neither depends on nor affects
   observable state, and always returns exactly once - e.g., does not loop
   forever, and does not call longjmp.
   (This attribute is stricter than _GL_ATTRIBUTE_PURE.)  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (const)
# define _GL_ATTRIBUTE_CONST __attribute__ ((__const__))
#else
# define _GL_ATTRIBUTE_CONST
#endif

/* _GL_ATTRIBUTE_DEALLOC (F, I) declares that the function returns pointers
   that can be freed by passing them as the Ith argument to the
   function F.
   _GL_ATTRIBUTE_DEALLOC_FREE declares that the function returns pointers that
   can be freed via 'free'; it can be used only after declaring 'free'.  */
/* Applies to: functions.  Cannot be used on inline functions.  */
#if _GL_GNUC_PREREQ (11, 0)
# define _GL_ATTRIBUTE_DEALLOC(f, i) __attribute__ ((__malloc__ (f, i)))
#else
# define _GL_ATTRIBUTE_DEALLOC(f, i)
#endif
/* If gnulib's <string.h> or <wchar.h> has already defined this macro, continue
   to use this earlier definition, since <stdlib.h> may not have been included
   yet.  */
#ifndef _GL_ATTRIBUTE_DEALLOC_FREE
# define _GL_ATTRIBUTE_DEALLOC_FREE _GL_ATTRIBUTE_DEALLOC (free, 1)
#endif

/* _GL_ATTRIBUTE_DEPRECATED: Declares that an entity is deprecated.
   The compiler may warn if the entity is used.  */
/* Applies to:
     - function, variable,
     - struct, union, struct/union member,
     - enumeration, enumeration item,
     - typedef,
   in C++ also: namespace, class, template specialization.  */
#if _GL_HAS_C_ATTRIBUTE (deprecated)
# define _GL_ATTRIBUTE_DEPRECATED [[__deprecated__]]
#elif _GL_HAS_ATTRIBUTE (deprecated)
# define _GL_ATTRIBUTE_DEPRECATED __attribute__ ((__deprecated__))
#else
# define _GL_ATTRIBUTE_DEPRECATED
#endif

/* _GL_ATTRIBUTE_ERROR(msg) requests an error if a function is called and
   the function call is not optimized away.
   _GL_ATTRIBUTE_WARNING(msg) requests a warning if a function is called and
   the function call is not optimized away.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (error)
# define _GL_ATTRIBUTE_ERROR(msg) __attribute__ ((__error__ (msg)))
# define _GL_ATTRIBUTE_WARNING(msg) __attribute__ ((__warning__ (msg)))
#elif _GL_HAS_ATTRIBUTE (diagnose_if)
# define _GL_ATTRIBUTE_ERROR(msg) __attribute__ ((__diagnose_if__ (1, msg, "error")))
# define _GL_ATTRIBUTE_WARNING(msg) __attribute__ ((__diagnose_if__ (1, msg, "warning")))
#else
# define _GL_ATTRIBUTE_ERROR(msg)
# define _GL_ATTRIBUTE_WARNING(msg)
#endif

/* _GL_ATTRIBUTE_EXTERNALLY_VISIBLE declares that the entity should remain
   visible to debuggers etc., even with '-fwhole-program'.  */
/* Applies to: functions, variables.  */
#if _GL_HAS_ATTRIBUTE (externally_visible)
# define _GL_ATTRIBUTE_EXTERNALLY_VISIBLE __attribute__ ((externally_visible))
#else
# define _GL_ATTRIBUTE_EXTERNALLY_VISIBLE
#endif

/* _GL_ATTRIBUTE_FALLTHROUGH declares that it is not a programming mistake if
   the control flow falls through to the immediately following 'case' or
   'default' label.  The compiler should not warn in this case.  */
/* Applies to: Empty statement (;), inside a 'switch' statement.  */
/* Always expands to something.  */
#if _GL_HAS_C_ATTRIBUTE (fallthrough)
# define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]]
#elif _GL_HAS_ATTRIBUTE (fallthrough)
# define _GL_ATTRIBUTE_FALLTHROUGH __attribute__ ((__fallthrough__))
#else
# define _GL_ATTRIBUTE_FALLTHROUGH ((void) 0)
#endif

/* _GL_ATTRIBUTE_FORMAT ((ARCHETYPE, STRING-INDEX, FIRST-TO-CHECK))
   declares that the STRING-INDEXth function argument is a format string of
   style ARCHETYPE, which is one of:
     printf, gnu_printf
     scanf, gnu_scanf,
     strftime, gnu_strftime,
     strfmon,
   or the same thing prefixed and suffixed with '__'.
   If FIRST-TO-CHECK is not 0, arguments starting at FIRST-TO_CHECK
   are suitable for the format string.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (format)
# define _GL_ATTRIBUTE_FORMAT(spec) __attribute__ ((__format__ spec))
#else
# define _GL_ATTRIBUTE_FORMAT(spec)
#endif

/* _GL_ATTRIBUTE_LEAF declares that if the function is called from some other
   compilation unit, it executes code from that unit only by return or by
   exception handling.  This declaration lets the compiler optimize that unit
   more aggressively.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (leaf)
# define _GL_ATTRIBUTE_LEAF __attribute__ ((__leaf__))
#else
# define _GL_ATTRIBUTE_LEAF
#endif

/* _GL_ATTRIBUTE_MALLOC declares that the function returns a pointer to freshly
   allocated memory.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (malloc)
# define _GL_ATTRIBUTE_MALLOC __attribute__ ((__malloc__))
#else
# define _GL_ATTRIBUTE_MALLOC
#endif

/* _GL_ATTRIBUTE_MAY_ALIAS declares that pointers to the type may point to the
   same storage as pointers to other types.  Thus this declaration disables
   strict aliasing optimization.  */
/* Applies to: types.  */
/* Oracle Studio 12.6 mishandles may_alias despite __has_attribute OK.  */
#if _GL_HAS_ATTRIBUTE (may_alias) && !defined __SUNPRO_C
# define _GL_ATTRIBUTE_MAY_ALIAS __attribute__ ((__may_alias__))
#else
# define _GL_ATTRIBUTE_MAY_ALIAS
#endif

/* _GL_ATTRIBUTE_MAYBE_UNUSED declares that it is not a programming mistake if
   the entity is not used.  The compiler should not warn if the entity is not
   used.  */
/* Applies to:
     - function, variable,
     - struct, union, struct/union member,
     - enumeration, enumeration item,
     - typedef,
   in C++ also: class.  */
/* In C++ and C2x, this is spelled [[__maybe_unused__]].
   GCC's syntax is __attribute__ ((__unused__)).
   clang supports both syntaxes.  */
#if _GL_HAS_C_ATTRIBUTE (maybe_unused)
# define _GL_ATTRIBUTE_MAYBE_UNUSED [[__maybe_unused__]]
#else
# define _GL_ATTRIBUTE_MAYBE_UNUSED _GL_ATTRIBUTE_UNUSED
#endif
/* Alternative spelling of this macro, for convenience.  */
#define _GL_UNUSED _GL_ATTRIBUTE_MAYBE_UNUSED
/* Earlier spellings of this macro.  */
#define _UNUSED_PARAMETER_ _GL_ATTRIBUTE_MAYBE_UNUSED

/* _GL_ATTRIBUTE_NODISCARD declares that the caller of the function should not
   discard the return value.  The compiler may warn if the caller does not use
   the return value, unless the caller uses something like ignore_value.  */
/* Applies to: function, enumeration, class.  */
#if _GL_HAS_C_ATTRIBUTE (nodiscard)
# define _GL_ATTRIBUTE_NODISCARD [[__nodiscard__]]
#elif _GL_HAS_ATTRIBUTE (warn_unused_result)
# define _GL_ATTRIBUTE_NODISCARD __attribute__ ((__warn_unused_result__))
#else
# define _GL_ATTRIBUTE_NODISCARD
#endif

/* _GL_ATTRIBUTE_NOINLINE tells that the compiler should not inline the
   function.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (noinline)
# define _GL_ATTRIBUTE_NOINLINE __attribute__ ((__noinline__))
#else
# define _GL_ATTRIBUTE_NOINLINE
#endif

/* _GL_ATTRIBUTE_NONNULL ((N1, N2,...)) declares that the arguments N1, N2,...
   must not be NULL.
   _GL_ATTRIBUTE_NONNULL () declares that all pointer arguments must not be
   null.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (nonnull)
# define _GL_ATTRIBUTE_NONNULL(args) __attribute__ ((__nonnull__ args))
#else
# define _GL_ATTRIBUTE_NONNULL(args)
#endif

/* _GL_ATTRIBUTE_NONSTRING declares that the contents of a character array is
   not meant to be NUL-terminated.  */
/* Applies to: struct/union members and variables that are arrays of element
   type '[[un]signed] char'.  */
#if _GL_HAS_ATTRIBUTE (nonstring)
# define _GL_ATTRIBUTE_NONSTRING __attribute__ ((__nonstring__))
#else
# define _GL_ATTRIBUTE_NONSTRING
#endif

/* There is no _GL_ATTRIBUTE_NORETURN; use _Noreturn instead.  */

/* _GL_ATTRIBUTE_NOTHROW declares that the function does not throw exceptions.
 */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (nothrow) && !defined __cplusplus
# define _GL_ATTRIBUTE_NOTHROW __attribute__ ((__nothrow__))
#else
# define _GL_ATTRIBUTE_NOTHROW
#endif

/* _GL_ATTRIBUTE_PACKED declares:
   For struct members: The member has the smallest possible alignment.
   For struct, union, class: All members have the smallest possible alignment,
   minimizing the memory required.  */
/* Applies to: struct members, struct, union,
   in C++ also: class.  */
#if _GL_HAS_ATTRIBUTE (packed)
# define _GL_ATTRIBUTE_PACKED __attribute__ ((__packed__))
#else
# define _GL_ATTRIBUTE_PACKED
#endif

/* _GL_ATTRIBUTE_PURE declares that It is OK for a compiler to omit duplicate
   calls to the function with the same arguments if observable state is not
   changed between calls.
   This attribute is safe for a function that does not affect
   observable state, and always returns exactly once.
   (This attribute is looser than _GL_ATTRIBUTE_CONST.)  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (pure)
# define _GL_ATTRIBUTE_PURE __attribute__ ((__pure__))
#else
# define _GL_ATTRIBUTE_PURE
#endif

/* _GL_ATTRIBUTE_RETURNS_NONNULL declares that the function's return value is
   a non-NULL pointer.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (returns_nonnull)
# define _GL_ATTRIBUTE_RETURNS_NONNULL __attribute__ ((__returns_nonnull__))
#else
# define _GL_ATTRIBUTE_RETURNS_NONNULL
#endif

/* _GL_ATTRIBUTE_SENTINEL(pos) declares that the variadic function expects a
   trailing NULL argument.
   _GL_ATTRIBUTE_SENTINEL () - The last argument is NULL (requires C99).
   _GL_ATTRIBUTE_SENTINEL ((N)) - The (N+1)st argument from the end is NULL.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (sentinel)
# define _GL_ATTRIBUTE_SENTINEL(pos) __attribute__ ((__sentinel__ pos))
#else
# define _GL_ATTRIBUTE_SENTINEL(pos)
#endif

/* A helper macro.  Don't use it directly.  */
#if _GL_HAS_ATTRIBUTE (unused)
# define _GL_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
#else
# define _GL_ATTRIBUTE_UNUSED
#endif

]dnl There is no _GL_ATTRIBUTE_VISIBILITY; see m4/visibility.m4 instead.
[
/* _GL_UNUSED_LABEL; declares that it is not a programming mistake if the
   immediately preceding label is not used.  The compiler should not warn
   if the label is not used.  */
/* Applies to: label (both in C and C++).  */
/* Note that g++ < 4.5 does not support the '__attribute__ ((__unused__)) ;'
   syntax.  But clang does.  */
#if !(defined __cplusplus && !_GL_GNUC_PREREQ (4, 5)) || defined __clang__
# define _GL_UNUSED_LABEL _GL_ATTRIBUTE_UNUSED
#else
# define _GL_UNUSED_LABEL
#endif
])
  AH_VERBATIM([async_safe],
[/* The _GL_ASYNC_SAFE marker should be attached to functions that are
   signal handlers (for signals other than SIGABRT, SIGPIPE) or can be
   invoked from such signal handlers.  Such functions have some restrictions:
     * All functions that it calls should be marked _GL_ASYNC_SAFE as well,
       or should be listed as async-signal-safe in POSIX
       <https://pubs.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html#tag_15_04>
       section 2.4.3.  Note that malloc(), sprintf(), and fwrite(), in
       particular, are NOT async-signal-safe.
     * All memory locations (variables and struct fields) that these functions
       access must be marked 'volatile'.  This holds for both read and write
       accesses.  Otherwise the compiler might optimize away stores to and
       reads from such locations that occur in the program, depending on its
       data flow analysis.  For example, when the program contains a loop
       that is intended to inspect a variable set from within a signal handler
           while (!signal_occurred)
             ;
       the compiler is allowed to transform this into an endless loop if the
       variable 'signal_occurred' is not declared 'volatile'.
   Additionally, recall that:
     * A signal handler should not modify errno (except if it is a handler
       for a fatal signal and ends by raising the same signal again, thus
       provoking the termination of the process).  If it invokes a function
       that may clobber errno, it needs to save and restore the value of
       errno.  */
#define _GL_ASYNC_SAFE
])
  AH_VERBATIM([micro_optimizations],
[/* _GL_CMP (n1, n2) performs a three-valued comparison on n1 vs. n2, where
   n1 and n2 are expressions without side effects, that evaluate to real
   numbers (excluding NaN).
   It returns
     1  if n1 > n2
     0  if n1 == n2
     -1 if n1 < n2
   The naïve code   (n1 > n2 ? 1 : n1 < n2 ? -1 : 0)  produces a conditional
   jump with nearly all GCC versions up to GCC 10.
   This variant     (n1 < n2 ? -1 : n1 > n2)  produces a conditional with many
   GCC versions up to GCC 9.
   The better code  (n1 > n2) - (n1 < n2)  from Hacker's Delight § 2-9
   avoids conditional jumps in all GCC versions >= 3.4.  */
#define _GL_CMP(n1, n2) (((n1) > (n2)) - ((n1) < (n2)))
])
  dnl Hint which direction to take regarding cross-compilation guesses:
  dnl When a user installs a program on a platform they are not intimately
  dnl familiar with, --enable-cross-guesses=conservative is the appropriate
  dnl choice.  It implements the "If we don't know, assume the worst" principle.
  dnl However, when an operating system developer (on a platform which is not
  dnl yet known to gnulib) builds packages for their platform, they want to
  dnl expose, not hide, possible platform bugs; in this case,
  dnl --enable-cross-guesses=risky is the appropriate choice.
  dnl Sets the variables
  dnl gl_cross_guess_normal    (to be used when 'yes' is good and 'no' is bad),
  dnl gl_cross_guess_inverted  (to be used when 'no' is good and 'yes' is bad).
  AC_ARG_ENABLE([cross-guesses],
    [AS_HELP_STRING([--enable-cross-guesses={conservative|risky}],
       [specify policy for cross-compilation guesses])],
    [if test "x$enableval" != xconservative && test "x$enableval" != xrisky; then
       AC_MSG_WARN([invalid argument supplied to --enable-cross-guesses])
       enableval=conservative
     fi
     gl_cross_guesses="$enableval"],
    [gl_cross_guesses=conservative])
  if test $gl_cross_guesses = risky; then
    gl_cross_guess_normal="guessing yes"
    gl_cross_guess_inverted="guessing no"
  else
    gl_cross_guess_normal="guessing no"
    gl_cross_guess_inverted="guessing yes"
  fi
  dnl Preparation for running test programs:
  dnl Tell glibc to write diagnostics from -D_FORTIFY_SOURCE=2 to stderr, not
  dnl to /dev/tty, so they can be redirected to log files.  Such diagnostics
  dnl arise e.g., in the macros gl_PRINTF_DIRECTIVE_N, gl_SNPRINTF_DIRECTIVE_N.
  LIBC_FATAL_STDERR_=1
  export LIBC_FATAL_STDERR_
])
m4trace:m4/gnulib-common.m4:518: -1- AC_DEFUN([gl_MODULE_INDICATOR_INIT_VARIABLE], [
  GL_MODULE_INDICATOR_PREFIX[]_[$1]=m4_if([$2], , [0], [$2])
  AC_SUBST(GL_MODULE_INDICATOR_PREFIX[]_[$1])
])
m4trace:m4/gnulib-common.m4:533: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE], [
  gl_MODULE_INDICATOR_SET_VARIABLE_AUX(
    [GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[$1]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])],
    [gl_MODULE_INDICATOR_CONDITION])
])
m4trace:m4/gnulib-common.m4:546: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX], [
  m4_if(m4_defn([gl_MODULE_INDICATOR_CONDITION]), [1],
    [
     dnl Simplify the expression VALUE || 1 to 1.
     $1=1
    ],
    [gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([$1],
                                             [gl_MODULE_INDICATOR_CONDITION])])
])
m4trace:m4/gnulib-common.m4:560: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR], [
  dnl Simplify the expression 1 || CONDITION to 1.
  if test "$[]$1" != 1; then
    dnl Simplify the expression 0 || CONDITION to CONDITION.
    if test "$[]$1" = 0; then
      $1=$2
    else
      $1="($[]$1 || $2)"
    fi
  fi
])
m4trace:m4/gnulib-common.m4:585: -1- AC_DEFUN([gl_MODULE_INDICATOR], [
  AC_DEFINE_UNQUOTED([GNULIB_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]),
    [gl_MODULE_INDICATOR_CONDITION],
    [Define to a C preprocessor expression that evaluates to 1 or 0,
     depending whether the gnulib module $1 shall be considered present.])
])
m4trace:m4/gnulib-common.m4:608: -1- AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [
  AC_DEFINE([GNULIB_TEST_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]), [1],
    [Define to 1 when the gnulib module $1 should be tested.])
])
m4trace:m4/gnulib-common.m4:620: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_POSIXCHECK], [
  dnl Override gl_WARN_ON_USE_PREPARE.
  dnl But hide this definition from 'aclocal'.
  AC_DEFUN([gl_W][ARN_ON_USE_PREPARE], [])
])
m4trace:m4/gnulib-common.m4:631: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_TESTS], [
  dnl Override gl_MODULE_INDICATOR_FOR_TESTS.
  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
])
m4trace:m4/gnulib-common.m4:639: -1- AC_DEFUN([gl_FEATURES_H], [
  AC_CHECK_HEADERS_ONCE([features.h])
  if test $ac_cv_header_features_h = yes; then
    HAVE_FEATURES_H=1
  else
    HAVE_FEATURES_H=0
  fi
  AC_SUBST([HAVE_FEATURES_H])
])
m4trace:m4/gnulib-common.m4:653: -1- AC_DEFUN([gl_PROG_CC_C99], [
  dnl Just use AC_PROG_CC_C99.
  dnl When AC_PROG_CC_C99 and AC_PROG_CC_STDC are used together, the substituted
  dnl value of CC will contain the C99 enabling options twice. But this is only
  dnl a cosmetic problem.
  dnl With Autoconf >= 2.70, use AC_PROG_CC since it implies AC_PROG_CC_C99;
  dnl this avoids a "warning: The macro `AC_PROG_CC_C99' is obsolete."
  m4_version_prereq([2.70],
    [AC_REQUIRE([AC_PROG_CC])],
    [AC_REQUIRE([AC_PROG_CC_C99])])
])
m4trace:m4/gnulib-common.m4:670: -1- AC_DEFUN([gl_PROG_AR_RANLIB], [
  dnl Minix 3 comes with two toolchains: The Amsterdam Compiler Kit compiler
  dnl as "cc", and GCC as "gcc". They have different object file formats and
  dnl library formats. In particular, the GNU binutils programs ar and ranlib
  dnl produce libraries that work only with gcc, not with cc.
  AC_REQUIRE([AC_PROG_CC])
  dnl The '' hides this use from 'aclocal'.
  AC_BEFORE([$0], [A][M_PROG_AR])
  AC_CACHE_CHECK([for Minix Amsterdam compiler], [gl_cv_c_amsterdam_compiler],
    [
      AC_EGREP_CPP([Amsterdam],
        [
#ifdef __ACK__
Amsterdam
#endif
        ],
        [gl_cv_c_amsterdam_compiler=yes],
        [gl_cv_c_amsterdam_compiler=no])
    ])

  dnl Don't compete with AM_PROG_AR's decision about AR/ARFLAGS if we are not
  dnl building with __ACK__.
  if test $gl_cv_c_amsterdam_compiler = yes; then
    if test -z "$AR"; then
      AR='cc -c.a'
    fi
    if test -z "$ARFLAGS"; then
      ARFLAGS='-o'
    fi
  else
    dnl AM_PROG_AR was added in automake v1.11.2.  AM_PROG_AR does not AC_SUBST
    dnl ARFLAGS variable (it is filed into Makefile.in directly by automake
    dnl script on-demand, if not specified by ./configure of course).
    dnl Don't AC_REQUIRE the AM_PROG_AR otherwise the code for __ACK__ above
    dnl will be ignored.  Also, pay attention to call AM_PROG_AR in else block
    dnl because AM_PROG_AR is written so it could re-set AR variable even for
    dnl __ACK__.  It may seem like its easier to avoid calling the macro here,
    dnl but we need to AC_SUBST both AR/ARFLAGS (thus those must have some good
    dnl default value and automake should usually know them).
    dnl
    dnl The '' hides this use from 'aclocal'.
    m4_ifdef([A][M_PROG_AR], [A][M_PROG_AR], [:])
  fi

  dnl In case the code above has not helped with setting AR/ARFLAGS, use
  dnl Automake-documented default values for AR and ARFLAGS, but prefer
  dnl ${host}-ar over ar (useful for cross-compiling).
  AC_CHECK_TOOL([AR], [ar], [ar])
  if test -z "$ARFLAGS"; then
    ARFLAGS='cr'
  fi

  AC_SUBST([AR])
  AC_SUBST([ARFLAGS])
  if test -z "$RANLIB"; then
    if test $gl_cv_c_amsterdam_compiler = yes; then
      RANLIB=':'
    else
      dnl Use the ranlib program if it is available.
      AC_PROG_RANLIB
    fi
  fi
  AC_SUBST([RANLIB])
])
m4trace:m4/gnulib-common.m4:739: -1- AC_DEFUN([AC_C_RESTRICT], [AC_CACHE_CHECK([for C/C++ restrict keyword], [ac_cv_c_restrict],
  [ac_cv_c_restrict=no
   # Put '__restrict__' first, to avoid problems with glibc and non-GCC; see:
   # https://lists.gnu.org/archive/html/bug-autoconf/2016-02/msg00006.html
   # Put 'restrict' last, because C++ lacks it.
   for ac_kw in __restrict__ __restrict _Restrict restrict; do
     AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM(
         [[typedef int *int_ptr;
           int foo (int_ptr $ac_kw ip) { return ip[0]; }
           int bar (int [$ac_kw]); /* Catch GCC bug 14050.  */
           int bar (int ip[$ac_kw]) { return ip[0]; }
         ]],
         [[int s[1];
           int *$ac_kw t = s;
           t[0] = 0;
           return foo (t) + bar (t);
         ]])],
      [ac_cv_c_restrict=$ac_kw])
     test "$ac_cv_c_restrict" != no && break
   done
  ])
 AH_VERBATIM([restrict],
[/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported only directly.  */
#undef restrict
/* Work around a bug in older versions of Sun C++, which did not
   #define __restrict__ or support _Restrict or __restrict__
   even though the corresponding Sun C compiler ended up with
   "#define restrict _Restrict" or "#define restrict __restrict__"
   in the previous line.  This workaround can be removed once
   we assume Oracle Developer Studio 12.5 (2016) or later.  */
#if defined __SUNPRO_CC && !defined __RESTRICT && !defined __restrict__
# define _Restrict
# define __restrict__
#endif])
 case $ac_cv_c_restrict in
   restrict) ;;
   no) AC_DEFINE([restrict], []) ;;
   *)  AC_DEFINE_UNQUOTED([restrict], [$ac_cv_c_restrict]) ;;
 esac
])
m4trace:m4/gnulib-common.m4:790: -1- AC_DEFUN([gl_BIGENDIAN], [
  AC_C_BIGENDIAN
])
m4trace:m4/gnulib-common.m4:804: -1- AC_DEFUN([gl_SILENT], [
  exec GL_TMP_FD>&AS_MESSAGE_FD AS_MESSAGE_FD>/dev/null
  $1
  exec AS_MESSAGE_FD>&GL_TMP_FD GL_TMP_FD>&-
])
m4trace:m4/gnulib-common.m4:816: -1- AC_DEFUN([gl_CACHE_VAL_SILENT], [
  gl_SILENT([
    AC_CACHE_VAL([$1], [$2])
  ])
])
m4trace:m4/gnulib-common.m4:830: -1- AC_DEFUN([gl_CONDITIONAL], [
  pushdef([AC_CONFIG_COMMANDS_PRE], [:])dnl
  AM_CONDITIONAL([$1], [$2])
  popdef([AC_CONFIG_COMMANDS_PRE])dnl
  if test -z "${[$1]_TRUE}" && test -z "${[$1]_FALSE}"; then
    [$1]_TRUE='#'
    [$1]_FALSE='#'
  fi
])
m4trace:m4/gnulib-common.m4:846: -1- AC_DEFUN([gl_CC_ALLOW_WARNINGS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for C compiler option to allow warnings],
    [gl_cv_cc_wallow],
    [rm -f conftest*
     echo 'int dummy;' > conftest.c
     AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS -c conftest.c 2>conftest1.err]) >/dev/null
     AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS -Wno-error -c conftest.c 2>conftest2.err]) >/dev/null
     dnl Test the number of error output lines, because AIX xlc accepts the
     dnl option '-Wno-error', just to produce a warning
     dnl "Option -Wno-error was incorrectly specified. The option will be ignored."
     dnl afterwards.
     if test $? = 0 && test `wc -l < conftest1.err` = `wc -l < conftest2.err`; then
       gl_cv_cc_wallow='-Wno-error'
     else
       gl_cv_cc_wallow=none
     fi
     rm -f conftest*
    ])
  case "$gl_cv_cc_wallow" in
    none) GL_CFLAG_ALLOW_WARNINGS='' ;;
    *)    GL_CFLAG_ALLOW_WARNINGS="$gl_cv_cc_wallow" ;;
  esac
  AC_SUBST([GL_CFLAG_ALLOW_WARNINGS])
])
m4trace:m4/gnulib-common.m4:876: -1- AC_DEFUN([gl_CXX_ALLOW_WARNINGS], [
  dnl Requires AC_PROG_CXX or gl_PROG_ANSI_CXX.
  if test -n "$CXX" && test "$CXX" != no; then
    AC_CACHE_CHECK([for C++ compiler option to allow warnings],
      [gl_cv_cxx_wallow],
      [rm -f conftest*
       echo 'int dummy;' > conftest.cc
       AC_TRY_COMMAND([${CXX-c++} $CXXFLAGS $CPPFLAGS -c conftest.cc 2>conftest1.err]) >/dev/null
       AC_TRY_COMMAND([${CXX-c++} $CXXFLAGS $CPPFLAGS -Wno-error -c conftest.cc 2>conftest2.err]) >/dev/null
       dnl Test the number of error output lines, because AIX xlC accepts the
       dnl option '-Wno-error', just to produce a warning
       dnl "Option -Wno-error was incorrectly specified. The option will be ignored."
       dnl afterwards.
       if test $? = 0 && test `wc -l < conftest1.err` = `wc -l < conftest2.err`; then
         gl_cv_cxx_wallow='-Wno-error'
       else
         gl_cv_cxx_wallow=none
       fi
       rm -f conftest*
      ])
    case "$gl_cv_cxx_wallow" in
      none) GL_CXXFLAG_ALLOW_WARNINGS='' ;;
      *)    GL_CXXFLAG_ALLOW_WARNINGS="$gl_cv_cxx_wallow" ;;
    esac
  else
    GL_CXXFLAG_ALLOW_WARNINGS=''
  fi
  AC_SUBST([GL_CXXFLAG_ALLOW_WARNINGS])
])
m4trace:m4/gnulib-common.m4:910: -1- AC_DEFUN([gl_CC_GNULIB_WARNINGS], [
  AC_REQUIRE([gl_CC_ALLOW_WARNINGS])
  dnl Assume that the compiler supports -Wno-* options only if it also supports
  dnl -Wno-error.
  GL_CFLAG_GNULIB_WARNINGS=''
  if test -n "$GL_CFLAG_ALLOW_WARNINGS"; then
    dnl Enable these warning options:
    dnl
    dnl                                       GCC             clang
    dnl -Wno-cast-qual                        >= 3            >= 3.9
    dnl -Wno-conversion                       >= 3            >= 3.9
    dnl -Wno-float-conversion                 >= 4.9          >= 3.9
    dnl -Wno-float-equal                      >= 3            >= 3.9
    dnl -Wimplicit-fallthrough                >= 7            >= 3.9
    dnl -Wno-pedantic                         >= 4.8          >= 3.9
    dnl -Wno-sign-compare                     >= 3            >= 3.9
    dnl -Wno-sign-conversion                  >= 4.3          >= 3.9
    dnl -Wno-type-limits                      >= 4.3          >= 3.9
    dnl -Wno-undef                            >= 3            >= 3.9
    dnl -Wno-unsuffixed-float-constants       >= 4.5
    dnl -Wno-unused-function                  >= 3            >= 3.9
    dnl -Wno-unused-parameter                 >= 3            >= 3.9
    dnl
    cat > conftest.c <<\EOF
      #if __GNUC__ >= 3 || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-cast-qual
      -Wno-conversion
      -Wno-float-equal
      -Wno-sign-compare
      -Wno-undef
      -Wno-unused-function
      -Wno-unused-parameter
      #endif
      #if __GNUC__ + (__GNUC_MINOR__ >= 9) > 4 || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-float-conversion
      #endif
      #if __GNUC__ >= 7 || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wimplicit-fallthrough
      #endif
      #if __GNUC__ + (__GNUC_MINOR__ >= 8) > 4 || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-pedantic
      #endif
      #if __GNUC__ + (__GNUC_MINOR__ >= 3) > 4 || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-sign-conversion
      -Wno-type-limits
      #endif
      #if __GNUC__ + (__GNUC_MINOR__ >= 5) > 4
      -Wno-unsuffixed-float-constants
      #endif
EOF
    gl_command="$CC $CFLAGS $CPPFLAGS -E conftest.c > conftest.out"
    if AC_TRY_EVAL([gl_command]); then
      gl_options=`grep -v '#' conftest.out`
      for word in $gl_options; do
        GL_CFLAG_GNULIB_WARNINGS="$GL_CFLAG_GNULIB_WARNINGS $word"
      done
    fi
    rm -f conftest.c conftest.out
  fi
  AC_SUBST([GL_CFLAG_GNULIB_WARNINGS])
])
m4trace:m4/gnulib-common.m4:980: -1- AC_DEFUN([gl_CONDITIONAL_HEADER], [
  m4_pushdef([gl_header_name], AS_TR_SH(m4_toupper($1)))
  m4_pushdef([gl_generate_var], [GL_GENERATE_]AS_TR_SH(m4_toupper($1)))
  m4_pushdef([gl_generate_cond], [GL_GENERATE_]AS_TR_SH(m4_toupper($1)))
  case "$gl_generate_var" in
    false) gl_header_name='' ;;
    true)
      dnl It is OK to use a .h file in lib/ from within tests/, but not vice
      dnl versa.
      if test -z "$gl_header_name"; then
        gl_header_name="${gl_source_base_prefix}$1"
      fi
      ;;
    *) echo "*** gl_generate_var is not set correctly" 1>&2; exit 1 ;;
  esac
  AC_SUBST(gl_header_name)
  gl_CONDITIONAL(gl_generate_cond, [$gl_generate_var])
  m4_popdef([gl_generate_cond])
  m4_popdef([gl_generate_var])
  m4_popdef([gl_header_name])
])
m4trace:m4/gnulib-common.m4:1012: -1- AC_DEFUN([GL_MDA_DEFINES], [
AC_REQUIRE([_GL_MDA_DEFINES])
[$gl_mda_defines]
])
m4trace:m4/gnulib-common.m4:1016: -1- AC_DEFUN([_GL_MDA_DEFINES], [gl_mda_defines='
#if defined _WIN32 && !defined __CYGWIN__
#define access    _access
#define chdir     _chdir
#define chmod     _chmod
#define close     _close
#define creat     _creat
#define dup       _dup
#define dup2      _dup2
#define ecvt      _ecvt
#define execl     _execl
#define execle    _execle
#define execlp    _execlp
#define execv     _execv
#define execve    _execve
#define execvp    _execvp
#define execvpe   _execvpe
#define fcloseall _fcloseall
#define fcvt      _fcvt
#define fdopen    _fdopen
#define fileno    _fileno
#define gcvt      _gcvt
#define getcwd    _getcwd
#define getpid    _getpid
#define getw      _getw
#define isatty    _isatty
#define j0        _j0
#define j1        _j1
#define jn        _jn
#define lfind     _lfind
#define lsearch   _lsearch
#define lseek     _lseek
#define memccpy   _memccpy
#define mkdir     _mkdir
#define mktemp    _mktemp
#define open      _open
#define putenv    _putenv
#define putw      _putw
#define read      _read
#define rmdir     _rmdir
#define strdup    _strdup
#define swab      _swab
#define tempnam   _tempnam
#define tzset     _tzset
#define umask     _umask
#define unlink    _unlink
#define utime     _utime
#define wcsdup    _wcsdup
#define write     _write
#define y0        _y0
#define y1        _y1
#define yn        _yn
#endif
'
])
m4trace:m4/gnulib-comp.m4:34: -1- AC_DEFUN([gl_EARLY], [
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable

  # Pre-early section.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_PROG_AR_RANLIB])

  # Code from module absolute-header:
  # Code from module accept:
  # Code from module accept-tests:
  # Code from module acl:
  # Code from module acl-permissions:
  # Code from module acl-tests:
  # Code from module alignalloc:
  # Code from module alignalloc-tests:
  # Code from module alignof:
  # Code from module alignof-tests:
  # Code from module alloca:
  # Code from module alloca-opt:
  # Code from module alloca-opt-tests:
  # Code from module allocator:
  # Code from module announce-gen:
  # Code from module areadlink:
  # Code from module areadlink-tests:
  # Code from module areadlink-with-size:
  # Code from module areadlink-with-size-tests:
  # Code from module areadlinkat:
  # Code from module areadlinkat-tests:
  # Code from module areadlinkat-with-size:
  # Code from module areadlinkat-with-size-tests:
  # Code from module argmatch:
  # Code from module argmatch-tests:
  # Code from module argv-iter:
  # Code from module argv-iter-tests:
  # Code from module arpa_inet:
  # Code from module arpa_inet-tests:
  # Code from module assert:
  # Code from module assure:
  # Code from module at-internal:
  # Code from module atoll:
  # Code from module attribute:
  # Code from module autobuild:
  AB_INIT
  # Code from module backup-rename:
  # Code from module backupfile:
  # Code from module base32:
  # Code from module base32-tests:
  # Code from module base64:
  # Code from module base64-tests:
  # Code from module basename-lgpl:
  # Code from module binary-io:
  # Code from module binary-io-tests:
  # Code from module bind:
  # Code from module bind-tests:
  # Code from module bison:
  # Code from module bitrotate:
  # Code from module bitrotate-tests:
  # Code from module btowc:
  # Code from module btowc-tests:
  # Code from module buffer-lcm:
  # Code from module builtin-expect:
  # Code from module byteswap:
  # Code from module byteswap-tests:
  # Code from module c-ctype:
  # Code from module c-ctype-tests:
  # Code from module c-strcase:
  # Code from module c-strcase-tests:
  # Code from module c-strcaseeq:
  # Code from module c-strtod:
  # Code from module c-strtold:
  # Code from module c99:
  # Code from module calloc-gnu:
  # Code from module calloc-gnu-tests:
  # Code from module calloc-posix:
  # Code from module canon-host:
  # Code from module canonicalize:
  # Code from module canonicalize-tests:
  # Code from module careadlinkat:
  # Code from module chdir:
  # Code from module chdir-long:
  # Code from module chdir-tests:
  # Code from module chmodat:
  # Code from module chown:
  # Code from module chown-tests:
  # Code from module chownat:
  # Code from module cl-strtod:
  # Code from module cl-strtold:
  # Code from module clock-time:
  # Code from module cloexec:
  # Code from module cloexec-tests:
  # Code from module close:
  # Code from module close-stream:
  # Code from module close-tests:
  # Code from module closedir:
  # Code from module closein:
  # Code from module closein-tests:
  # Code from module closeout:
  # Code from module config-h:
  # Code from module configmake:
  # Code from module connect:
  # Code from module connect-tests:
  # Code from module copy-file-range:
  # Code from module count-leading-zeros:
  # Code from module count-leading-zeros-tests:
  # Code from module crypto/af_alg:
  # Code from module crypto/md5:
  # Code from module crypto/md5-buffer:
  # Code from module crypto/md5-buffer-tests:
  # Code from module crypto/md5-tests:
  # Code from module crypto/sha1:
  # Code from module crypto/sha1-buffer:
  # Code from module crypto/sha1-buffer-tests:
  # Code from module crypto/sha1-tests:
  # Code from module crypto/sha256:
  # Code from module crypto/sha256-buffer:
  # Code from module crypto/sha256-buffer-tests:
  # Code from module crypto/sha256-tests:
  # Code from module crypto/sha512:
  # Code from module crypto/sha512-buffer:
  # Code from module crypto/sha512-buffer-tests:
  # Code from module crypto/sha512-tests:
  # Code from module crypto/sm3:
  # Code from module crypto/sm3-buffer:
  # Code from module crypto/sm3-buffer-tests:
  # Code from module ctype:
  # Code from module ctype-tests:
  # Code from module cycle-check:
  # Code from module d-ino:
  # Code from module d-type:
  # Code from module dev-ino:
  # Code from module di-set:
  # Code from module di-set-tests:
  # Code from module dirent:
  # Code from module dirent-safer:
  # Code from module dirent-safer-tests:
  # Code from module dirent-tests:
  # Code from module dirfd:
  # Code from module dirname:
  # Code from module dirname-lgpl:
  # Code from module dirname-tests:
  # Code from module do-release-commit-and-tag:
  # Code from module double-slash-root:
  # Code from module dtoastr:
  # Code from module dtotimespec:
  # Code from module dup:
  # Code from module dup-tests:
  # Code from module dup2:
  # Code from module dup2-tests:
  # Code from module dynarray:
  # Code from module dynarray-tests:
  # Code from module eloop-threshold:
  # Code from module environ:
  # Code from module environ-tests:
  # Code from module errno:
  # Code from module errno-tests:
  # Code from module error:
  # Code from module euidaccess:
  # Code from module exclude:
  # Code from module exclude-tests:
  # Code from module exitfail:
  # Code from module explicit_bzero:
  # Code from module explicit_bzero-tests:
  # Code from module extensions:
  # Code from module extern-inline:
  # Code from module faccessat:
  # Code from module faccessat-tests:
  # Code from module fadvise:
  # Code from module fadvise-tests:
  # Code from module fchdir:
  # Code from module fchdir-tests:
  # Code from module fchmodat:
  # Code from module fchmodat-tests:
  # Code from module fchownat:
  # Code from module fchownat-tests:
  # Code from module fclose:
  # Code from module fclose-tests:
  # Code from module fcntl:
  # Code from module fcntl-h:
  # Code from module fcntl-h-tests:
  # Code from module fcntl-safer:
  # Code from module fcntl-safer-tests:
  # Code from module fcntl-tests:
  # Code from module fd-hook:
  # Code from module fd-reopen:
  # Code from module fd-safer-flag:
  # Code from module fdatasync:
  # Code from module fdatasync-tests:
  # Code from module fdopen:
  # Code from module fdopen-tests:
  # Code from module fdopendir:
  # Code from module fdopendir-tests:
  # Code from module fdutimensat:
  # Code from module fdutimensat-tests:
  # Code from module fflush:
  AC_REQUIRE([gl_SET_LARGEFILE_SOURCE])
  # Code from module fflush-tests:
  # Code from module fgetc-tests:
  # Code from module file-has-acl:
  # Code from module file-has-acl-tests:
  # Code from module file-set:
  # Code from module file-type:
  # Code from module fileblocks:
  # Code from module filemode:
  # Code from module filename:
  # Code from module filenamecat:
  # Code from module filenamecat-lgpl:
  # Code from module filenamecat-tests:
  # Code from module filevercmp:
  # Code from module filevercmp-tests:
  # Code from module flexmember:
  # Code from module float:
  # Code from module float-tests:
  # Code from module fnmatch:
  # Code from module fnmatch-gnu:
  # Code from module fnmatch-h:
  # Code from module fnmatch-h-tests:
  # Code from module fnmatch-tests:
  # Code from module fopen:
  # Code from module fopen-gnu:
  # Code from module fopen-gnu-tests:
  # Code from module fopen-safer:
  # Code from module fopen-safer-tests:
  # Code from module fopen-tests:
  # Code from module fpending:
  # Code from module fpending-tests:
  # Code from module fpieee:
  AC_REQUIRE([gl_FP_IEEE])
  # Code from module fprintftime:
  # Code from module fpucw:
  # Code from module fpurge:
  # Code from module fpurge-tests:
  # Code from module fputc-tests:
  # Code from module fread-tests:
  # Code from module freadahead:
  # Code from module freadahead-tests:
  # Code from module freading:
  # Code from module freading-tests:
  # Code from module freadptr:
  # Code from module freadptr-tests:
  # Code from module freadseek:
  # Code from module freadseek-tests:
  # Code from module free-posix:
  # Code from module free-posix-tests:
  # Code from module freopen:
  # Code from module freopen-safer:
  # Code from module freopen-safer-tests:
  # Code from module freopen-tests:
  # Code from module frexp-nolibm:
  # Code from module frexp-nolibm-tests:
  # Code from module frexpl-nolibm:
  # Code from module frexpl-nolibm-tests:
  # Code from module fseek:
  # Code from module fseek-tests:
  # Code from module fseeko:
  AC_REQUIRE([gl_SET_LARGEFILE_SOURCE])
  # Code from module fseeko-tests:
  # Code from module fseterr:
  # Code from module fseterr-tests:
  # Code from module fstat:
  # Code from module fstat-tests:
  # Code from module fstatat:
  # Code from module fstatat-tests:
  # Code from module fsusage:
  # Code from module fsync:
  # Code from module fsync-tests:
  # Code from module ftell:
  # Code from module ftell-tests:
  # Code from module ftello:
  AC_REQUIRE([gl_SET_LARGEFILE_SOURCE])
  # Code from module ftello-tests:
  # Code from module ftoastr:
  # Code from module ftruncate:
  # Code from module ftruncate-tests:
  # Code from module fts:
  # Code from module full-read:
  # Code from module full-write:
  # Code from module futimens:
  # Code from module futimens-tests:
  # Code from module fwrite-tests:
  # Code from module gen-header:
  # Code from module gendocs:
  # Code from module getaddrinfo:
  # Code from module getaddrinfo-tests:
  # Code from module getcwd:
  # Code from module getcwd-lgpl:
  # Code from module getcwd-lgpl-tests:
  # Code from module getcwd-tests:
  # Code from module getdelim:
  # Code from module getdelim-tests:
  # Code from module getdtablesize:
  # Code from module getdtablesize-tests:
  # Code from module getgroups:
  # Code from module getgroups-tests:
  # Code from module gethostname:
  # Code from module gethostname-tests:
  # Code from module gethrxtime:
  # Code from module getline:
  # Code from module getline-tests:
  # Code from module getloadavg:
  # Code from module getloadavg-tests:
  # Code from module getlogin:
  # Code from module getlogin-tests:
  # Code from module getndelim2:
  # Code from module getndelim2-tests:
  # Code from module getopt-gnu:
  # Code from module getopt-gnu-tests:
  # Code from module getopt-posix:
  # Code from module getopt-posix-tests:
  # Code from module getpagesize:
  # Code from module getpass:
  # Code from module getpass-gnu:
  # Code from module getprogname:
  # Code from module getprogname-tests:
  # Code from module getrandom:
  # Code from module getrandom-tests:
  # Code from module getrusage:
  # Code from module getrusage-tests:
  # Code from module gettext-h:
  # Code from module gettime:
  # Code from module gettime-res:
  # Code from module gettimeofday:
  # Code from module gettimeofday-tests:
  # Code from module getugroups:
  # Code from module getusershell:
  # Code from module git-version-gen:
  # Code from module gitlog-to-changelog:
  # Code from module gnu-make:
  # Code from module gnu-web-doc-update:
  # Code from module gnumakefile:
  # Code from module gnupload:
  # Code from module gperf:
  # Code from module group-member:
  # Code from module hard-locale:
  # Code from module hard-locale-tests:
  # Code from module hash:
  # Code from module hash-pjw:
  # Code from module hash-tests:
  # Code from module hash-triple:
  # Code from module hash-triple-simple:
  # Code from module havelib:
  # Code from module heap:
  # Code from module host-os:
  # Code from module hostent:
  # Code from module human:
  # Code from module i-ring:
  # Code from module i-ring-tests:
  # Code from module ialloc:
  # Code from module iconv:
  # Code from module iconv-h:
  # Code from module iconv-h-tests:
  # Code from module iconv-tests:
  # Code from module iconv_open:
  # Code from module idcache:
  # Code from module idx:
  # Code from module ignore-value:
  # Code from module ignore-value-tests:
  # Code from module include_next:
  # Code from module inet_ntop:
  # Code from module inet_ntop-tests:
  # Code from module inet_pton:
  # Code from module inet_pton-tests:
  # Code from module inline:
  # Code from module ino-map:
  # Code from module ino-map-tests:
  # Code from module intprops:
  # Code from module intprops-tests:
  # Code from module inttostr:
  # Code from module inttostr-tests:
  # Code from module inttypes:
  # Code from module inttypes-incomplete:
  # Code from module inttypes-tests:
  # Code from module ioctl:
  # Code from module ioctl-tests:
  # Code from module isapipe:
  # Code from module isatty:
  # Code from module isatty-tests:
  # Code from module isblank:
  # Code from module isblank-tests:
  # Code from module isnand-nolibm:
  # Code from module isnand-nolibm-tests:
  # Code from module isnanf-nolibm:
  # Code from module isnanf-nolibm-tests:
  # Code from module isnanl-nolibm:
  # Code from module isnanl-nolibm-tests:
  # Code from module iswblank:
  # Code from module iswblank-tests:
  # Code from module iswdigit:
  # Code from module iswdigit-tests:
  # Code from module iswxdigit:
  # Code from module iswxdigit-tests:
  # Code from module langinfo:
  # Code from module langinfo-tests:
  # Code from module largefile:
  AC_REQUIRE([AC_SYS_LARGEFILE])
  AC_REQUIRE([gl_YEAR2038_EARLY])
  # Code from module lchmod:
  # Code from module lchmod-tests:
  # Code from module lchown:
  # Code from module lchown-tests:
  # Code from module ldtoastr:
  # Code from module lib-ignore:
  # Code from module libc-config:
  # Code from module libgmp:
  # Code from module libgmp-tests:
  # Code from module limits-h:
  # Code from module limits-h-tests:
  # Code from module linebuffer:
  # Code from module link:
  # Code from module link-follow:
  # Code from module link-tests:
  # Code from module linkat:
  # Code from module linkat-tests:
  # Code from module listen:
  # Code from module listen-tests:
  # Code from module localcharset:
  # Code from module localcharset-tests:
  # Code from module locale:
  # Code from module locale-tests:
  # Code from module localeconv:
  # Code from module localeconv-tests:
  # Code from module localename:
  # Code from module localename-tests:
  # Code from module lock:
  # Code from module lock-tests:
  # Code from module long-options:
  # Code from module lseek:
  # Code from module lseek-tests:
  # Code from module lstat:
  # Code from module lstat-tests:
  # Code from module maintainer-makefile:
  # Code from module malloc-gnu:
  # Code from module malloc-gnu-tests:
  # Code from module malloc-posix:
  # Code from module malloca:
  # Code from module malloca-tests:
  # Code from module manywarnings:
  # Code from module math:
  # Code from module math-tests:
  # Code from module mbchar:
  # Code from module mbiter:
  # Code from module mbrlen:
  # Code from module mbrtowc:
  # Code from module mbrtowc-tests:
  # Code from module mbsalign:
  # Code from module mbsalign-tests:
  # Code from module mbscasecmp:
  # Code from module mbscasecmp-tests:
  # Code from module mbschr:
  # Code from module mbschr-tests:
  # Code from module mbsinit:
  # Code from module mbsinit-tests:
  # Code from module mbslen:
  # Code from module mbsrtowcs:
  # Code from module mbsrtowcs-tests:
  # Code from module mbsstr:
  # Code from module mbsstr-tests:
  # Code from module mbswidth:
  # Code from module mbtowc:
  # Code from module mbuiter:
  # Code from module memcasecmp:
  # Code from module memcasecmp-tests:
  # Code from module memchr:
  # Code from module memchr-tests:
  # Code from module memchr2:
  # Code from module memchr2-tests:
  # Code from module memcmp2:
  # Code from module memcoll:
  # Code from module memcoll-tests:
  # Code from module mempcpy:
  # Code from module memrchr:
  # Code from module memrchr-tests:
  # Code from module mgetgroups:
  # Code from module minmax:
  # Code from module mkancesdirs:
  # Code from module mkdir:
  # Code from module mkdir-p:
  # Code from module mkdir-tests:
  # Code from module mkdirat:
  # Code from module mkdirat-tests:
  # Code from module mkfifo:
  # Code from module mkfifo-tests:
  # Code from module mkfifoat:
  # Code from module mkfifoat-tests:
  # Code from module mknod:
  # Code from module mknod-tests:
  # Code from module mkostemp:
  # Code from module mkstemp:
  # Code from module mktime:
  # Code from module mktime-internal:
  # Code from module modechange:
  # Code from module mountlist:
  # Code from module mpsort:
  # Code from module msvc-inval:
  # Code from module msvc-nothrow:
  # Code from module multiarch:
  # Code from module nanosleep:
  # Code from module nanosleep-tests:
  # Code from module netdb:
  # Code from module netdb-tests:
  # Code from module netinet_in:
  # Code from module netinet_in-tests:
  # Code from module nl_langinfo:
  # Code from module nl_langinfo-tests:
  # Code from module nocrash:
  # Code from module nproc:
  # Code from module nstrftime:
  # Code from module nstrftime-tests:
  # Code from module obstack:
  # Code from module open:
  # Code from module open-tests:
  # Code from module openat:
  # Code from module openat-die:
  # Code from module openat-h:
  # Code from module openat-safer:
  # Code from module openat-safer-tests:
  # Code from module openat-tests:
  # Code from module opendir:
  # Code from module opendirat:
  # Code from module parse-datetime:
  # Code from module parse-datetime-tests:
  # Code from module parse-datetime2:
  # Code from module pathmax:
  # Code from module pathmax-tests:
  # Code from module perl:
  # Code from module perror:
  # Code from module perror-tests:
  # Code from module physmem:
  # Code from module pipe-posix:
  # Code from module pipe-posix-tests:
  # Code from module pipe2:
  # Code from module pipe2-tests:
  # Code from module posix-shell:
  # Code from module posix_memalign:
  # Code from module posix_memalign-tests:
  # Code from module posixtm:
  # Code from module posixtm-tests:
  # Code from module posixver:
  # Code from module printf-frexp:
  # Code from module printf-frexp-tests:
  # Code from module printf-frexpl:
  # Code from module printf-frexpl-tests:
  # Code from module printf-safe:
  # Code from module priv-set:
  # Code from module priv-set-tests:
  # Code from module progname:
  # Code from module propername:
  # Code from module pselect:
  # Code from module pselect-tests:
  # Code from module pthread-cond:
  # Code from module pthread-cond-tests:
  # Code from module pthread-h:
  gl_ANYTHREADLIB_EARLY
  # Code from module pthread-h-tests:
  # Code from module pthread-mutex:
  # Code from module pthread-mutex-tests:
  # Code from module pthread-thread:
  # Code from module pthread-thread-tests:
  # Code from module pthread_mutex_timedlock:
  # Code from module pthread_sigmask:
  # Code from module pthread_sigmask-tests:
  # Code from module putenv:
  # Code from module qcopy-acl:
  # Code from module qset-acl:
  # Code from module quote:
  # Code from module quotearg:
  # Code from module quotearg-simple:
  # Code from module quotearg-simple-tests:
  # Code from module raise:
  # Code from module raise-tests:
  # Code from module randint:
  # Code from module randperm:
  # Code from module randread:
  # Code from module randread-tests:
  # Code from module rawmemchr:
  # Code from module rawmemchr-tests:
  # Code from module read:
  # Code from module read-file:
  # Code from module read-file-tests:
  # Code from module read-tests:
  # Code from module readdir:
  # Code from module readlink:
  # Code from module readlink-tests:
  # Code from module readlinkat:
  # Code from module readlinkat-tests:
  # Code from module readtokens:
  # Code from module readtokens-tests:
  # Code from module readtokens0:
  # Code from module readutmp:
  # Code from module realloc-gnu:
  # Code from module realloc-gnu-tests:
  # Code from module realloc-posix:
  # Code from module reallocarray:
  # Code from module reallocarray-tests:
  # Code from module regex:
  # Code from module regex-tests:
  # Code from module remove:
  # Code from module remove-tests:
  # Code from module rename:
  # Code from module rename-tests:
  # Code from module renameat:
  # Code from module renameat-tests:
  # Code from module renameatu:
  # Code from module renameatu-tests:
  # Code from module rewinddir:
  # Code from module rmdir:
  # Code from module rmdir-tests:
  # Code from module root-dev-ino:
  # Code from module root-uid:
  # Code from module rpmatch:
  # Code from module safe-read:
  # Code from module safe-write:
  # Code from module same:
  # Code from module same-inode:
  # Code from module save-cwd:
  # Code from module savedir:
  # Code from module savewd:
  # Code from module sched:
  # Code from module sched-tests:
  # Code from module sched_yield:
  # Code from module scratch_buffer:
  # Code from module scratch_buffer-tests:
  # Code from module secure_getenv:
  # Code from module select:
  # Code from module select-tests:
  # Code from module selinux-at:
  # Code from module selinux-h:
  # Code from module servent:
  # Code from module setenv:
  # Code from module setenv-tests:
  # Code from module setlocale:
  # Code from module setlocale-null:
  # Code from module setlocale-null-tests:
  # Code from module setlocale-tests:
  # Code from module setsockopt:
  # Code from module setsockopt-tests:
  # Code from module settime:
  # Code from module sig2str:
  # Code from module sigaction:
  # Code from module sigaction-tests:
  # Code from module signal-h:
  # Code from module signal-h-tests:
  # Code from module signbit:
  # Code from module signbit-tests:
  # Code from module sigprocmask:
  # Code from module sigprocmask-tests:
  # Code from module size_max:
  # Code from module sleep:
  # Code from module sleep-tests:
  # Code from module smack:
  # Code from module snippet/_Noreturn:
  # Code from module snippet/arg-nonnull:
  # Code from module snippet/c++defs:
  # Code from module snippet/warn-on-use:
  # Code from module snprintf:
  # Code from module snprintf-tests:
  # Code from module socket:
  # Code from module socketlib:
  # Code from module sockets:
  # Code from module sockets-tests:
  # Code from module socklen:
  # Code from module ssize_t:
  # Code from module stat:
  # Code from module stat-macros:
  # Code from module stat-size:
  # Code from module stat-tests:
  # Code from module stat-time:
  # Code from module stat-time-tests:
  # Code from module std-gnu11:
  # Code from module stdalign:
  # Code from module stdalign-tests:
  # Code from module stdarg:
  dnl Some compilers (e.g., AIX 5.3 cc) need to be in c99 mode
  dnl for the builtin va_copy to work.  gl_PROG_CC_C99 arranges for this.
  gl_PROG_CC_C99
  # Code from module stdarg-tests:
  # Code from module stdbool:
  # Code from module stdbool-tests:
  # Code from module stddef:
  # Code from module stddef-tests:
  # Code from module stdint:
  # Code from module stdint-tests:
  # Code from module stdio:
  # Code from module stdio-tests:
  # Code from module stdlib:
  # Code from module stdlib-safer:
  # Code from module stdlib-tests:
  # Code from module stpcpy:
  # Code from module stpncpy:
  # Code from module strdup-posix:
  # Code from module streq:
  # Code from module strerror:
  # Code from module strerror-override:
  # Code from module strerror-tests:
  # Code from module strerror_r-posix:
  # Code from module strerror_r-posix-tests:
  # Code from module striconv:
  # Code from module striconv-tests:
  # Code from module string:
  # Code from module string-tests:
  # Code from module strncat:
  # Code from module strncat-tests:
  # Code from module strnlen:
  # Code from module strnlen-tests:
  # Code from module strnlen1:
  # Code from module strnumcmp:
  # Code from module strsignal:
  # Code from module strsignal-tests:
  # Code from module strstr-simple:
  # Code from module strtod:
  # Code from module strtod-tests:
  # Code from module strtoimax:
  # Code from module strtoimax-tests:
  # Code from module strtold:
  # Code from module strtold-tests:
  # Code from module strtoll:
  # Code from module strtoll-tests:
  # Code from module strtoull:
  # Code from module strtoull-tests:
  # Code from module strtoumax:
  # Code from module strtoumax-tests:
  # Code from module symlink:
  # Code from module symlink-tests:
  # Code from module symlinkat:
  # Code from module symlinkat-tests:
  # Code from module sys_ioctl:
  # Code from module sys_ioctl-tests:
  # Code from module sys_random:
  # Code from module sys_random-tests:
  # Code from module sys_resource:
  # Code from module sys_resource-tests:
  # Code from module sys_select:
  # Code from module sys_select-tests:
  # Code from module sys_socket:
  # Code from module sys_socket-tests:
  # Code from module sys_stat:
  # Code from module sys_stat-tests:
  # Code from module sys_time:
  # Code from module sys_time-tests:
  # Code from module sys_types:
  # Code from module sys_types-tests:
  # Code from module sys_uio:
  # Code from module sys_uio-tests:
  # Code from module sys_utsname:
  # Code from module sys_utsname-tests:
  # Code from module sys_wait:
  # Code from module sys_wait-tests:
  # Code from module targetdir:
  # Code from module tempname:
  # Code from module termios:
  # Code from module termios-tests:
  # Code from module test-framework-sh:
  # Code from module test-framework-sh-tests:
  # Code from module thread:
  # Code from module thread-optim:
  # Code from module thread-tests:
  # Code from module threadlib:
  gl_THREADLIB_EARLY
  # Code from module time:
  # Code from module time-tests:
  # Code from module time_r:
  # Code from module time_rz:
  # Code from module timegm:
  # Code from module timer-time:
  # Code from module timespec:
  # Code from module timespec-add:
  # Code from module timespec-sub:
  # Code from module timespec-tests:
  # Code from module tls:
  # Code from module tls-tests:
  # Code from module tmpdir:
  # Code from module tmpfile:
  # Code from module trim:
  # Code from module tzset:
  # Code from module u64:
  # Code from module u64-tests:
  # Code from module uname:
  # Code from module uname-tests:
  # Code from module unicodeio:
  # Code from module unicodeio-tests:
  # Code from module unistd:
  # Code from module unistd-safer:
  # Code from module unistd-safer-tests:
  # Code from module unistd-tests:
  # Code from module unistr/base:
  # Code from module unistr/u8-mbtoucr:
  # Code from module unistr/u8-mbtoucr-tests:
  # Code from module unistr/u8-uctomb:
  # Code from module unistr/u8-uctomb-tests:
  # Code from module unitypes:
  # Code from module uniwidth/base:
  # Code from module uniwidth/width:
  # Code from module uniwidth/width-tests:
  # Code from module unlink:
  # Code from module unlink-busy:
  # Code from module unlink-tests:
  # Code from module unlinkat:
  # Code from module unlinkat-tests:
  # Code from module unlinkdir:
  # Code from module unlocked-io:
  # Code from module unlocked-io-internal:
  # Code from module unsetenv:
  # Code from module unsetenv-tests:
  # Code from module update-copyright:
  # Code from module update-copyright-tests:
  # Code from module uptime:
  # Code from module useless-if-before-free:
  # Code from module userspec:
  # Code from module userspec-tests:
  # Code from module usleep:
  # Code from module usleep-tests:
  # Code from module utime:
  # Code from module utime-h:
  # Code from module utime-h-tests:
  # Code from module utime-tests:
  # Code from module utimecmp:
  # Code from module utimens:
  # Code from module utimens-tests:
  # Code from module utimensat:
  # Code from module utimensat-tests:
  # Code from module vararrays:
  # Code from module vasnprintf:
  # Code from module vasnprintf-tests:
  # Code from module vasprintf:
  # Code from module vasprintf-posix:
  # Code from module vasprintf-posix-tests:
  # Code from module vasprintf-tests:
  # Code from module vc-list-files:
  # Code from module vc-list-files-tests:
  # Code from module verify:
  # Code from module verify-tests:
  # Code from module verror:
  # Code from module version-etc:
  # Code from module version-etc-fsf:
  # Code from module version-etc-tests:
  # Code from module vfprintf-posix:
  # Code from module vfprintf-posix-tests:
  # Code from module vma-iter:
  # Code from module vprintf-posix:
  # Code from module vprintf-posix-tests:
  # Code from module warnings:
  # Code from module wchar:
  # Code from module wchar-single:
  # Code from module wchar-tests:
  # Code from module wcrtomb:
  # Code from module wcrtomb-tests:
  # Code from module wcswidth:
  # Code from module wctob:
  # Code from module wctomb:
  # Code from module wctype-h:
  # Code from module wctype-h-tests:
  # Code from module wcwidth:
  # Code from module wcwidth-tests:
  # Code from module windows-cond:
  # Code from module windows-mutex:
  # Code from module windows-once:
  # Code from module windows-recmutex:
  # Code from module windows-rwlock:
  # Code from module windows-thread:
  # Code from module windows-timedmutex:
  # Code from module windows-timedrecmutex:
  # Code from module windows-tls:
  # Code from module winsz-ioctl:
  # Code from module winsz-termios:
  # Code from module wmemchr:
  # Code from module wmempcpy:
  # Code from module write:
  # Code from module write-any-file:
  # Code from module write-tests:
  # Code from module xalignalloc:
  # Code from module xalloc:
  # Code from module xalloc-die:
  # Code from module xalloc-die-tests:
  # Code from module xalloc-oversized:
  # Code from module xbinary-io:
  # Code from module xdectoint:
  # Code from module xfts:
  # Code from module xgetcwd:
  # Code from module xgetgroups:
  # Code from module xgethostname:
  # Code from module xmemcoll:
  # Code from module xnanosleep:
  # Code from module xprintf:
  # Code from module xprintf-posix:
  # Code from module xprintf-posix-tests:
  # Code from module xreadlink:
  # Code from module xsize:
  # Code from module xstriconv:
  # Code from module xstrtod:
  # Code from module xstrtoimax:
  # Code from module xstrtoimax-tests:
  # Code from module xstrtol:
  # Code from module xstrtol-error:
  # Code from module xstrtol-tests:
  # Code from module xstrtold:
  # Code from module xstrtoumax:
  # Code from module xstrtoumax-tests:
  # Code from module xvasprintf:
  # Code from module xvasprintf-tests:
  # Code from module year2038:
  AC_REQUIRE([gl_YEAR2038_EARLY])
  # Code from module yesno:
  # Code from module yesno-tests:
  # Code from module yield:
])
m4trace:m4/gnulib-comp.m4:945: -1- AC_DEFUN([gl_INIT], [
  AC_CONFIG_LIBOBJ_DIR([lib])
  AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
  gl_cond_libtool=false
  gl_libdeps=
  gl_ltlibdeps=
  gl_m4_base='m4'
  m4_pushdef([AC_LIBOBJ], m4_defn([gl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gl_LIBSOURCES]))
  m4_pushdef([gl_LIBSOURCES_LIST], [])
  m4_pushdef([gl_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gl])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='lib'
  gl_source_base_prefix='$(top_build_prefix)lib/'
  gl_FUNC_ACL
  gl_ALIGNALLOC
  gl_FUNC_ALLOCA
  gl_CONDITIONAL_HEADER([alloca.h])
  AC_PROG_MKDIR_P
  gl_MODULE_INDICATOR([areadlinkat])
  gl_MODULE_INDICATOR([areadlinkat-with-size])
  gl_ARPA_INET_H
  gl_ARPA_INET_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_ASSERT
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_BACKUPFILE
  gl_BACKUPFILE
  gl_FUNC_BASE32
  gl_FUNC_BASE64
  # See the comments in bison.m4.
  gl_FUNC_BTOWC
  gl_CONDITIONAL([GL_COND_OBJ_BTOWC],
                 [test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1])
  AM_COND_IF([GL_COND_OBJ_BTOWC], [
    gl_PREREQ_BTOWC
  ])
  gl_WCHAR_MODULE_INDICATOR([btowc])
  gl___BUILTIN_EXPECT
  gl_BYTESWAP
  gl_CONDITIONAL_HEADER([byteswap.h])
  AC_PROG_MKDIR_P
  gl_C_STRTOD
  gl_C_STRTOLD
  gl_FUNC_CALLOC_GNU
  if test $REPLACE_CALLOC_FOR_CALLOC_GNU = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-gnu])
  gl_FUNC_CALLOC_POSIX
  if test $REPLACE_CALLOC_FOR_CALLOC_POSIX = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-posix])
  gl_PREREQ_CANON_HOST
  gl_FUNC_CANONICALIZE_FILENAME_MODE
  gl_MODULE_INDICATOR([canonicalize])
  gl_MODULE_INDICATOR_FOR_TESTS([canonicalize])
  gl_STDLIB_MODULE_INDICATOR([canonicalize_file_name])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_FUNCS_ONCE([readlinkat])
  gl_UNISTD_MODULE_INDICATOR([chdir])
  gl_FUNC_CHDIR_LONG
  gl_CONDITIONAL([GL_COND_OBJ_CHDIR_LONG],
                 [test $gl_cv_have_unlimited_file_name_length = no])
  AM_COND_IF([GL_COND_OBJ_CHDIR_LONG], [
    gl_PREREQ_CHDIR_LONG
  ])
  gl_MODULE_INDICATOR([chmodat]) dnl for lib/openat.h
  gl_FUNC_CHOWN
  gl_CONDITIONAL([GL_COND_OBJ_CHOWN],
                 [test $HAVE_CHOWN = 0 || test $REPLACE_CHOWN = 1])
  gl_CONDITIONAL([GL_COND_OBJ_FCHOWN_STUB],
                 [test $REPLACE_CHOWN = 1 && test $ac_cv_func_fchown = no])
  gl_UNISTD_MODULE_INDICATOR([chown])
  gl_MODULE_INDICATOR([chownat]) dnl for lib/openat.h
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_C_RESTRICT])
  gl_CLOCK_TIME
  gl_MODULE_INDICATOR_FOR_TESTS([cloexec])
  gl_FUNC_CLOSE
  gl_CONDITIONAL([GL_COND_OBJ_CLOSE], [test $REPLACE_CLOSE = 1])
  gl_UNISTD_MODULE_INDICATOR([close])
  gl_MODULE_INDICATOR([close-stream])
  gl_FUNC_CLOSEDIR
  gl_CONDITIONAL([GL_COND_OBJ_CLOSEDIR],
                 [test $HAVE_CLOSEDIR = 0 || test $REPLACE_CLOSEDIR = 1])
  gl_DIRENT_MODULE_INDICATOR([closedir])
  gl_CONFIG_H
  gl_CONFIGMAKE_PREP
  AC_PROG_MKDIR_P
  gl_FUNC_COPY_FILE_RANGE
  gl_CONDITIONAL([GL_COND_OBJ_COPY_FILE_RANGE],
                 [test $HAVE_COPY_FILE_RANGE = 0 ||
                  test $REPLACE_COPY_FILE_RANGE = 1])
  gl_UNISTD_MODULE_INDICATOR([copy-file-range])
  gl_AF_ALG
  AC_REQUIRE([AC_C_RESTRICT])
  gl_MD5
  AC_REQUIRE([AC_C_RESTRICT])
  gl_SHA1
  AC_REQUIRE([AC_C_RESTRICT])
  gl_SHA256
  AC_REQUIRE([AC_C_RESTRICT])
  gl_SHA512
  gl_SM3
  gl_CTYPE_H
  gl_CTYPE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_CYCLE_CHECK
  gl_CHECK_TYPE_STRUCT_DIRENT_D_INO
  gl_CHECK_TYPE_STRUCT_DIRENT_D_TYPE
  gl_DIRENT_H
  gl_DIRENT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_DIRENT_SAFER
  gl_MODULE_INDICATOR([dirent-safer])
  gl_FUNC_DIRFD
  gl_CONDITIONAL([GL_COND_OBJ_DIRFD],
                 [test $ac_cv_func_dirfd = no && test $gl_cv_func_dirfd_macro = no || test $REPLACE_DIRFD = 1])
  AM_COND_IF([GL_COND_OBJ_DIRFD], [
    gl_PREREQ_DIRFD
  ])
  gl_DIRENT_MODULE_INDICATOR([dirfd])
  gl_MODULE_INDICATOR([dirname])
  gl_DOUBLE_SLASH_ROOT
  gl_FUNC_DUP
  gl_CONDITIONAL([GL_COND_OBJ_DUP], [test $REPLACE_DUP = 1])
  AM_COND_IF([GL_COND_OBJ_DUP], [
    gl_PREREQ_DUP
  ])
  gl_UNISTD_MODULE_INDICATOR([dup])
  gl_FUNC_DUP2
  gl_CONDITIONAL([GL_COND_OBJ_DUP2], [test $REPLACE_DUP2 = 1])
  AM_COND_IF([GL_COND_OBJ_DUP2], [
    gl_PREREQ_DUP2
  ])
  gl_UNISTD_MODULE_INDICATOR([dup2])
  AC_PROG_MKDIR_P
  gl_ENVIRON
  gl_UNISTD_MODULE_INDICATOR([environ])
  gl_HEADER_ERRNO_H
  gl_CONDITIONAL_HEADER([errno.h])
  AC_PROG_MKDIR_P
  gl_ERROR
  gl_CONDITIONAL([GL_COND_OBJ_ERROR], [test "$ac_cv_lib_error_at_line" = no])
  AM_COND_IF([GL_COND_OBJ_ERROR], [
    gl_PREREQ_ERROR
  ])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=error:3:c-format])
     AM_][XGETTEXT_OPTION([--flag=error_at_line:5:c-format])])
  gl_FUNC_EUIDACCESS
  gl_CONDITIONAL([GL_COND_OBJ_EUIDACCESS], [test $HAVE_EUIDACCESS = 0])
  AM_COND_IF([GL_COND_OBJ_EUIDACCESS], [
    gl_PREREQ_EUIDACCESS
  ])
  gl_UNISTD_MODULE_INDICATOR([euidaccess])
  gl_FUNC_EXPLICIT_BZERO
  gl_CONDITIONAL([GL_COND_OBJ_EXPLICIT_BZERO], [test $HAVE_EXPLICIT_BZERO = 0])
  AM_COND_IF([GL_COND_OBJ_EXPLICIT_BZERO], [
    gl_PREREQ_EXPLICIT_BZERO
  ])
  gl_STRING_MODULE_INDICATOR([explicit_bzero])
  AC_REQUIRE([gl_EXTERN_INLINE])
  gl_FUNC_FACCESSAT
  gl_CONDITIONAL([GL_COND_OBJ_FACCESSAT],
                 [test $HAVE_FACCESSAT = 0 || test $REPLACE_FACCESSAT = 1])
  AM_COND_IF([GL_COND_OBJ_FACCESSAT], [
    gl_PREREQ_FACCESSAT
  ])
  gl_MODULE_INDICATOR([faccessat])
  gl_UNISTD_MODULE_INDICATOR([faccessat])
  AC_CHECK_FUNCS_ONCE([posix_fadvise])
  gl_FUNC_FCHDIR
  gl_CONDITIONAL([GL_COND_OBJ_FCHDIR], [test $HAVE_FCHDIR = 0])
  AM_COND_IF([GL_COND_OBJ_FCHDIR], [
    gl_PREREQ_FCHDIR
  ])
  gl_UNISTD_MODULE_INDICATOR([fchdir])
  gl_FUNC_FCHMODAT
  gl_CONDITIONAL([GL_COND_OBJ_FCHMODAT],
                 [test $HAVE_FCHMODAT = 0 || test $REPLACE_FCHMODAT = 1])
  AM_COND_IF([GL_COND_OBJ_FCHMODAT], [
    gl_PREREQ_FCHMODAT
  ])
  gl_SYS_STAT_MODULE_INDICATOR([fchmodat])
  gl_FUNC_FCHOWNAT
  gl_CONDITIONAL([GL_COND_OBJ_FCHOWNAT],
                 [test $HAVE_FCHOWNAT = 0 || test $REPLACE_FCHOWNAT = 1])
  gl_UNISTD_MODULE_INDICATOR([fchownat])
  gl_FUNC_FCLOSE
  gl_CONDITIONAL([GL_COND_OBJ_FCLOSE], [test $REPLACE_FCLOSE = 1])
  gl_STDIO_MODULE_INDICATOR([fclose])
  gl_FUNC_FCNTL
  gl_CONDITIONAL([GL_COND_OBJ_FCNTL],
                 [test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1])
  gl_FCNTL_MODULE_INDICATOR([fcntl])
  gl_FCNTL_H
  gl_FCNTL_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FCNTL_SAFER
  gl_MODULE_INDICATOR([fcntl-safer])
  gl_MODULE_INDICATOR([fd-safer-flag])
  gl_FUNC_FDATASYNC
  gl_CONDITIONAL([GL_COND_OBJ_FDATASYNC], [test $HAVE_FDATASYNC = 0])
  gl_UNISTD_MODULE_INDICATOR([fdatasync])
  gl_FUNC_FDOPEN
  gl_CONDITIONAL([GL_COND_OBJ_FDOPEN], [test $REPLACE_FDOPEN = 1])
  AM_COND_IF([GL_COND_OBJ_FDOPEN], [
    gl_PREREQ_FDOPEN
  ])
  gl_STDIO_MODULE_INDICATOR([fdopen])
  gl_FUNC_FDOPENDIR
  gl_CONDITIONAL([GL_COND_OBJ_FDOPENDIR],
                 [test $HAVE_FDOPENDIR = 0 || test $REPLACE_FDOPENDIR = 1])
  gl_DIRENT_MODULE_INDICATOR([fdopendir])
  gl_MODULE_INDICATOR([fdopendir])
  gl_MODULE_INDICATOR([fdutimensat])
  gl_FUNC_FFLUSH
  gl_CONDITIONAL([GL_COND_OBJ_FFLUSH], [test $REPLACE_FFLUSH = 1])
  AM_COND_IF([GL_COND_OBJ_FFLUSH], [
    gl_PREREQ_FFLUSH
  ])
  gl_MODULE_INDICATOR([fflush])
  gl_STDIO_MODULE_INDICATOR([fflush])
  gl_FILE_HAS_ACL
  gl_FILEBLOCKS
  gl_CONDITIONAL([GL_COND_OBJ_FILEBLOCKS],
                 [test $ac_cv_member_struct_stat_st_blocks = no])
  AM_COND_IF([GL_COND_OBJ_FILEBLOCKS], [
    gl_PREREQ_FILEBLOCKS
  ])
  gl_FILEMODE
  gl_FILE_NAME_CONCAT
  gl_MODULE_INDICATOR([filenamecat])
  gl_FILE_NAME_CONCAT_LGPL
  AC_C_FLEXIBLE_ARRAY_MEMBER
  gl_FLOAT_H
  gl_CONDITIONAL_HEADER([float.h])
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_FLOAT], [test $REPLACE_FLOAT_LDBL = 1])
  gl_CONDITIONAL([GL_COND_OBJ_ITOLD], [test $REPLACE_ITOLD = 1])
  gl_FUNC_FNMATCH_POSIX
  dnl Because of gl_REPLACE_FNMATCH_H:
  gl_CONDITIONAL_HEADER([fnmatch.h])
  if test $HAVE_FNMATCH = 0 || test $REPLACE_FNMATCH = 1; then
    AC_LIBOBJ([fnmatch])
    gl_PREREQ_FNMATCH
  fi
  gl_FNMATCH_MODULE_INDICATOR([fnmatch])
  gl_FUNC_FNMATCH_GNU
  if test $HAVE_FNMATCH = 0 || test $REPLACE_FNMATCH = 1; then
    AC_LIBOBJ([fnmatch])
    gl_PREREQ_FNMATCH
  fi
  gl_MODULE_INDICATOR([fnmatch-gnu])
  gl_FNMATCH_H
  gl_FNMATCH_H_REQUIRE_DEFAULTS
  gl_CONDITIONAL_HEADER([fnmatch.h])
  AC_PROG_MKDIR_P
  gl_FUNC_FOPEN
  if test $REPLACE_FOPEN = 1; then
    AC_LIBOBJ([fopen])
    gl_PREREQ_FOPEN
  fi
  gl_STDIO_MODULE_INDICATOR([fopen])
  gl_FUNC_FOPEN_GNU
  if test $REPLACE_FOPEN_FOR_FOPEN_GNU = 1; then
    AC_LIBOBJ([fopen])
    gl_PREREQ_FOPEN
  fi
  gl_MODULE_INDICATOR([fopen-gnu])
  gl_MODULE_INDICATOR([fopen-safer])
  gl_FUNC_FPENDING
  gl_CONDITIONAL([GL_COND_OBJ_FPENDING], [test $gl_cv_func___fpending = no])
  gl_FUNC_FPURGE
  gl_CONDITIONAL([GL_COND_OBJ_FPURGE],
                 [test $HAVE_FPURGE = 0 || test $REPLACE_FPURGE = 1])
  gl_STDIO_MODULE_INDICATOR([fpurge])
  gl_FUNC_FREADAHEAD
  gl_CONDITIONAL([GL_COND_OBJ_FREADAHEAD], [test $ac_cv_func___freadahead = no])
  gl_FUNC_FREADING
  gl_FUNC_FREADPTR
  gl_CONDITIONAL([GL_COND_OBJ_FREADPTR], [test $ac_cv_func___freadptr = no])
  gl_FUNC_FREADSEEK
  gl_FUNC_FREE
  gl_CONDITIONAL([GL_COND_OBJ_FREE], [test $REPLACE_FREE = 1])
  AM_COND_IF([GL_COND_OBJ_FREE], [
    gl_PREREQ_FREE
  ])
  gl_STDLIB_MODULE_INDICATOR([free-posix])
  gl_FUNC_FREOPEN
  gl_CONDITIONAL([GL_COND_OBJ_FREOPEN], [test $REPLACE_FREOPEN = 1])
  AM_COND_IF([GL_COND_OBJ_FREOPEN], [
    gl_PREREQ_FREOPEN
  ])
  gl_STDIO_MODULE_INDICATOR([freopen])
  gl_MODULE_INDICATOR([freopen-safer])
  gl_FUNC_FREXP_NO_LIBM
  if test $gl_func_frexp_no_libm != yes; then
    AC_LIBOBJ([frexp])
  fi
  gl_MATH_MODULE_INDICATOR([frexp])
  gl_FUNC_FREXPL_NO_LIBM
  if test $HAVE_DECL_FREXPL = 0 || test $gl_func_frexpl_no_libm = no; then
    AC_LIBOBJ([frexpl])
  fi
  gl_MATH_MODULE_INDICATOR([frexpl])
  gl_FUNC_FSEEK
  gl_CONDITIONAL([GL_COND_OBJ_FSEEK], [test $REPLACE_FSEEK = 1])
  gl_STDIO_MODULE_INDICATOR([fseek])
  gl_FUNC_FSEEKO
  gl_CONDITIONAL([GL_COND_OBJ_FSEEKO],
                 [test $HAVE_FSEEKO = 0 || test $REPLACE_FSEEKO = 1])
  AM_COND_IF([GL_COND_OBJ_FSEEKO], [
    gl_PREREQ_FSEEKO
  ])
  gl_STDIO_MODULE_INDICATOR([fseeko])
  gl_FUNC_FSETERR
  gl_CONDITIONAL([GL_COND_OBJ_FSETERR], [test $ac_cv_func___fseterr = no])
  gl_FUNC_FSTAT
  gl_CONDITIONAL([GL_COND_OBJ_FSTAT], [test $REPLACE_FSTAT = 1])
  AM_COND_IF([GL_COND_OBJ_FSTAT], [
    case "$host_os" in
      mingw*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_FSTAT
  ])
  gl_SYS_STAT_MODULE_INDICATOR([fstat])
  gl_FUNC_FSTATAT
  gl_CONDITIONAL([GL_COND_OBJ_FSTATAT],
                 [test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1])
  gl_SYS_STAT_MODULE_INDICATOR([fstatat])
  gl_FSUSAGE
  gl_CONDITIONAL([GL_COND_OBJ_FSUSAGE], [test $gl_cv_fs_space = yes])
  AM_COND_IF([GL_COND_OBJ_FSUSAGE], [
    gl_PREREQ_FSUSAGE_EXTRA
  ])
  gl_FUNC_FSYNC
  gl_CONDITIONAL([GL_COND_OBJ_FSYNC], [test $HAVE_FSYNC = 0])
  AM_COND_IF([GL_COND_OBJ_FSYNC], [
    gl_PREREQ_FSYNC
  ])
  gl_UNISTD_MODULE_INDICATOR([fsync])
  gl_FUNC_FTELL
  gl_CONDITIONAL([GL_COND_OBJ_FTELL], [test $REPLACE_FTELL = 1])
  gl_STDIO_MODULE_INDICATOR([ftell])
  gl_FUNC_FTELLO
  gl_CONDITIONAL([GL_COND_OBJ_FTELLO],
                 [test $HAVE_FTELLO = 0 || test $REPLACE_FTELLO = 1])
  AM_COND_IF([GL_COND_OBJ_FTELLO], [
    gl_PREREQ_FTELLO
  ])
  gl_STDIO_MODULE_INDICATOR([ftello])
  AC_CHECK_FUNCS_ONCE([strtof])
  gl_FUNC_FTRUNCATE
  gl_CONDITIONAL([GL_COND_OBJ_FTRUNCATE],
                 [test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1])
  AM_COND_IF([GL_COND_OBJ_FTRUNCATE], [
    gl_PREREQ_FTRUNCATE
  ])
  gl_UNISTD_MODULE_INDICATOR([ftruncate])
  gl_FUNC_FTS
  dnl Use this version of fts unconditionally, since the GNU libc and
  dnl NetBSD versions have bugs and/or unnecessary limitations.
  gl_CONDITIONAL([GL_COND_OBJ_FTS], [true])
  gl_FUNC_FUTIMENS
  gl_CONDITIONAL([GL_COND_OBJ_FUTIMENS],
                 [test $HAVE_FUTIMENS = 0 || test $REPLACE_FUTIMENS = 1])
  gl_SYS_STAT_MODULE_INDICATOR([futimens])
  gl_GETADDRINFO
  gl_CONDITIONAL([GL_COND_OBJ_GETADDRINFO],
                 [test $HAVE_GETADDRINFO = 0 || test $REPLACE_GETADDRINFO = 1])
  gl_CONDITIONAL([GL_COND_OBJ_GAI_STRERROR],
                 [test $HAVE_DECL_GAI_STRERROR = 0 || test $REPLACE_GAI_STRERROR = 1])
  gl_NETDB_MODULE_INDICATOR([getaddrinfo])
  gl_FUNC_GETCWD
  gl_CONDITIONAL([GL_COND_OBJ_GETCWD], [test $REPLACE_GETCWD = 1])
  AM_COND_IF([GL_COND_OBJ_GETCWD], [
    gl_PREREQ_GETCWD
  ])
  gl_MODULE_INDICATOR([getcwd])
  gl_UNISTD_MODULE_INDICATOR([getcwd])
  gl_FUNC_GETCWD_LGPL
  gl_CONDITIONAL([GL_COND_OBJ_GETCWD_LGPL], [test $REPLACE_GETCWD = 1])
  gl_UNISTD_MODULE_INDICATOR([getcwd])
  gl_FUNC_GETDELIM
  gl_CONDITIONAL([GL_COND_OBJ_GETDELIM],
                 [test $HAVE_GETDELIM = 0 || test $REPLACE_GETDELIM = 1])
  AM_COND_IF([GL_COND_OBJ_GETDELIM], [
    gl_PREREQ_GETDELIM
  ])
  gl_STDIO_MODULE_INDICATOR([getdelim])
  gl_FUNC_GETDTABLESIZE
  gl_CONDITIONAL([GL_COND_OBJ_GETDTABLESIZE],
                 [test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1])
  AM_COND_IF([GL_COND_OBJ_GETDTABLESIZE], [
    gl_PREREQ_GETDTABLESIZE
  ])
  gl_UNISTD_MODULE_INDICATOR([getdtablesize])
  gl_FUNC_GETGROUPS
  gl_CONDITIONAL([GL_COND_OBJ_GETGROUPS],
                 [test $HAVE_GETGROUPS = 0 || test $REPLACE_GETGROUPS = 1])
  gl_UNISTD_MODULE_INDICATOR([getgroups])
  gl_FUNC_GETHOSTNAME
  gl_CONDITIONAL([GL_COND_OBJ_GETHOSTNAME], [test $HAVE_GETHOSTNAME = 0])
  AM_COND_IF([GL_COND_OBJ_GETHOSTNAME], [
    gl_PREREQ_GETHOSTNAME
  ])
  gl_UNISTD_MODULE_INDICATOR([gethostname])
  gl_GETHRXTIME
  gl_FUNC_GETLINE
  gl_CONDITIONAL([GL_COND_OBJ_GETLINE], [test $REPLACE_GETLINE = 1])
  AM_COND_IF([GL_COND_OBJ_GETLINE], [
    gl_PREREQ_GETLINE
  ])
  gl_STDIO_MODULE_INDICATOR([getline])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_GETLOADAVG
  gl_CONDITIONAL([GL_COND_OBJ_GETLOADAVG], [test $HAVE_GETLOADAVG = 0])
  AM_COND_IF([GL_COND_OBJ_GETLOADAVG], [
    gl_PREREQ_GETLOADAVG
  ])
  gl_STDLIB_MODULE_INDICATOR([getloadavg])
  gl_FUNC_GETLOGIN
  gl_CONDITIONAL([GL_COND_OBJ_GETLOGIN], [test $HAVE_GETLOGIN = 0])
  gl_UNISTD_MODULE_INDICATOR([getlogin])
  AC_REQUIRE([gl_LIB_GETLOGIN])
  gl_GETNDELIM2
  gl_FUNC_GETOPT_GNU
  dnl Because of the way gl_FUNC_GETOPT_GNU is implemented (the gl_getopt_required
  dnl mechanism), there is no need to do any AC_LIBOBJ or AC_SUBST here; they are
  dnl done in the getopt-posix module.
  gl_FUNC_GETOPT_POSIX
  gl_CONDITIONAL_HEADER([getopt.h])
  gl_CONDITIONAL_HEADER([getopt-cdefs.h])
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_GETOPT], [test $REPLACE_GETOPT = 1])
  AM_COND_IF([GL_COND_OBJ_GETOPT], [
    dnl Define the substituted variable GNULIB_UNISTD_H_GETOPT to 1.
    gl_UNISTD_H_REQUIRE_DEFAULTS
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT], [1])
  ])
  gl_UNISTD_MODULE_INDICATOR([getopt-posix])
  gl_FUNC_GETPAGESIZE
  gl_CONDITIONAL([GL_COND_OBJ_GETPAGESIZE], [test $REPLACE_GETPAGESIZE = 1])
  gl_UNISTD_MODULE_INDICATOR([getpagesize])
  gl_FUNC_GETPASS
  if test $HAVE_GETPASS = 0 || test $REPLACE_GETPASS = 1; then
    AC_LIBOBJ([getpass])
    gl_PREREQ_GETPASS
  fi
  gl_UNISTD_MODULE_INDICATOR([getpass])
  gl_FUNC_GETPASS_GNU
  if test $HAVE_GETPASS = 0 || test $REPLACE_GETPASS_FOR_GETPASS_GNU = 1; then
    AC_LIBOBJ([getpass])
    gl_PREREQ_GETPASS
  fi
  gl_UNISTD_MODULE_INDICATOR([getpass-gnu])
  gl_FUNC_GETPROGNAME
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_FUNC_GETRANDOM
  gl_CONDITIONAL([GL_COND_OBJ_GETRANDOM],
                 [test $HAVE_GETRANDOM = 0 || test $REPLACE_GETRANDOM = 1])
  gl_SYS_RANDOM_MODULE_INDICATOR([getrandom])
  AC_SUBST([LIBINTL])
  AC_SUBST([LTLIBINTL])
  gl_GETTIME
  gl_GETTIME_RES
  gl_FUNC_GETTIMEOFDAY
  gl_CONDITIONAL([GL_COND_OBJ_GETTIMEOFDAY],
                 [test $HAVE_GETTIMEOFDAY = 0 || test $REPLACE_GETTIMEOFDAY = 1])
  AM_COND_IF([GL_COND_OBJ_GETTIMEOFDAY], [
    gl_PREREQ_GETTIMEOFDAY
  ])
  gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
  gl_GETUGROUPS
  gl_FUNC_GETUSERSHELL
  gl_CONDITIONAL([GL_COND_OBJ_GETUSERSHELL], [test $HAVE_GETUSERSHELL = 0])
  gl_UNISTD_MODULE_INDICATOR([getusershell])
  gl_GNU_MAKE
  # Autoconf 2.61a.99 and earlier don't support linking a file only
  # in VPATH builds.  But since GNUmakefile is for maintainer use
  # only, it does not matter if we skip the link with older autoconf.
  # Automake 1.10.1 and earlier try to remove GNUmakefile in non-VPATH
  # builds, so use a shell variable to bypass this.
  GNUmakefile=GNUmakefile
  m4_if(m4_version_compare([2.61a.100],
          m4_defn([m4_PACKAGE_VERSION])), [1], [],
        [AC_CONFIG_LINKS([$GNUmakefile:$GNUmakefile], [],
          [GNUmakefile=$GNUmakefile])])
  gl_FUNC_GROUP_MEMBER
  gl_CONDITIONAL([GL_COND_OBJ_GROUP_MEMBER], [test $HAVE_GROUP_MEMBER = 0])
  AM_COND_IF([GL_COND_OBJ_GROUP_MEMBER], [
    gl_PREREQ_GROUP_MEMBER
  ])
  gl_UNISTD_MODULE_INDICATOR([group-member])
  AC_REQUIRE([gl_FUNC_SETLOCALE_NULL])
  LIB_HARD_LOCALE="$LIB_SETLOCALE_NULL"
  AC_SUBST([LIB_HARD_LOCALE])
  AC_DEFUN([gl_HAVE_MODULE_HAVELIB])
  gl_HOST_OS
  gl_HOSTENT
  gl_HUMAN
  gl_I_RING
  AM_ICONV
  m4_ifdef([gl_ICONV_MODULE_INDICATOR],
    [gl_ICONV_MODULE_INDICATOR([iconv])])
  gl_ICONV_H
  gl_ICONV_H_REQUIRE_DEFAULTS
  gl_CONDITIONAL_HEADER([iconv.h])
  AC_PROG_MKDIR_P
  gl_FUNC_ICONV_OPEN
  dnl Because of gl_REPLACE_ICONV_H:
  gl_CONDITIONAL_HEADER([iconv.h])
  gl_CONDITIONAL([GL_COND_OBJ_ICONV_OPEN], [test $REPLACE_ICONV_OPEN = 1])
  gl_CONDITIONAL([GL_COND_OBJ_ICONV], [test $REPLACE_ICONV = 1])
  gl_IDCACHE
  gl_FUNC_INET_NTOP
  gl_CONDITIONAL([GL_COND_OBJ_INET_NTOP],
                 [test $HAVE_INET_NTOP = 0 || test $REPLACE_INET_NTOP = 1])
  AM_COND_IF([GL_COND_OBJ_INET_NTOP], [
    gl_PREREQ_INET_NTOP
  ])
  gl_ARPA_INET_MODULE_INDICATOR([inet_ntop])
  gl_INLINE
  gl_INTTOSTR
  gl_INTTYPES_H
  gl_INTTYPES_INCOMPLETE
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_ISAPIPE
  gl_CONDITIONAL([GL_COND_OBJ_ISAPIPE], [test $HAVE_ISAPIPE = 0])
  AM_COND_IF([GL_COND_OBJ_ISAPIPE], [
    gl_PREREQ_ISAPIPE
  ])
  gl_FUNC_ISATTY
  gl_CONDITIONAL([GL_COND_OBJ_ISATTY], [test $REPLACE_ISATTY = 1])
  AM_COND_IF([GL_COND_OBJ_ISATTY], [
    gl_PREREQ_ISATTY
  ])
  gl_UNISTD_MODULE_INDICATOR([isatty])
  gl_FUNC_ISBLANK
  gl_CONDITIONAL([GL_COND_OBJ_ISBLANK], [test $HAVE_ISBLANK = 0])
  gl_MODULE_INDICATOR([isblank])
  gl_CTYPE_MODULE_INDICATOR([isblank])
  gl_FUNC_ISNAND_NO_LIBM
  if test $gl_func_isnand_no_libm != yes; then
    AC_LIBOBJ([isnand])
    gl_PREREQ_ISNAND
  fi
  gl_FUNC_ISNANF_NO_LIBM
  if test $gl_func_isnanf_no_libm != yes; then
    AC_LIBOBJ([isnanf])
    gl_PREREQ_ISNANF
  fi
  gl_FUNC_ISNANL_NO_LIBM
  if test $gl_func_isnanl_no_libm != yes; then
    AC_LIBOBJ([isnanl])
    gl_PREREQ_ISNANL
  fi
  gl_FUNC_ISWBLANK
  gl_CONDITIONAL([GL_COND_OBJ_ISWBLANK],
                 [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && { test $HAVE_ISWBLANK = 0 || test $REPLACE_ISWBLANK = 1; }])
  gl_WCTYPE_MODULE_INDICATOR([iswblank])
  gl_FUNC_ISWDIGIT
  gl_CONDITIONAL([GL_COND_OBJ_ISWDIGIT],
                 [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWDIGIT = 1])
  gl_WCTYPE_MODULE_INDICATOR([iswdigit])
  gl_FUNC_ISWXDIGIT
  gl_CONDITIONAL([GL_COND_OBJ_ISWXDIGIT],
                 [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWXDIGIT = 1])
  gl_WCTYPE_MODULE_INDICATOR([iswxdigit])
  gl_LANGINFO_H
  gl_LANGINFO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_LARGEFILE])
  gl_FUNC_LCHMOD
  gl_CONDITIONAL([GL_COND_OBJ_LCHMOD], [test $HAVE_LCHMOD = 0])
  AM_COND_IF([GL_COND_OBJ_LCHMOD], [
    gl_PREREQ_LCHMOD
  ])
  gl_SYS_STAT_MODULE_INDICATOR([lchmod])
  gl_FUNC_LCHOWN
  gl_CONDITIONAL([GL_COND_OBJ_LCHOWN],
                 [test $HAVE_LCHOWN = 0 || test $REPLACE_LCHOWN = 1])
  gl_UNISTD_MODULE_INDICATOR([lchown])
  gl_IGNORE_UNUSED_LIBRARIES
  gl___INLINE
  gl_LIBGMP
  gl_CONDITIONAL_HEADER([gmp.h])
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_MINI_GMP_GNULIB], [test $HAVE_LIBGMP != yes])
  gl_LIMITS_H
  gl_CONDITIONAL_HEADER([limits.h])
  AC_PROG_MKDIR_P
  gl_FUNC_LINK
  gl_CONDITIONAL([GL_COND_OBJ_LINK],
                 [test $HAVE_LINK = 0 || test $REPLACE_LINK = 1])
  gl_UNISTD_MODULE_INDICATOR([link])
  gl_FUNC_LINK_FOLLOWS_SYMLINK
  gl_FUNC_LINKAT
  gl_CONDITIONAL([GL_COND_OBJ_LINKAT],
                 [test $HAVE_LINKAT = 0 || test $REPLACE_LINKAT = 1])
  AM_COND_IF([GL_COND_OBJ_LINKAT], [
    AC_LIBOBJ([at-func2])
  ])
  gl_UNISTD_MODULE_INDICATOR([linkat])
  gl_LOCALCHARSET
  dnl For backward compatibility. Some packages still use this.
  LOCALCHARSET_TESTS_ENVIRONMENT=
  AC_SUBST([LOCALCHARSET_TESTS_ENVIRONMENT])
  gl_LOCALE_H
  gl_LOCALE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_LOCALECONV
  gl_CONDITIONAL([GL_COND_OBJ_LOCALECONV], [test $REPLACE_LOCALECONV = 1])
  AM_COND_IF([GL_COND_OBJ_LOCALECONV], [
    gl_PREREQ_LOCALECONV
  ])
  gl_LOCALE_MODULE_INDICATOR([localeconv])
  gl_LOCK
  gl_MODULE_INDICATOR([lock])
  gl_FUNC_LSEEK
  gl_CONDITIONAL([GL_COND_OBJ_LSEEK], [test $REPLACE_LSEEK = 1])
  gl_UNISTD_MODULE_INDICATOR([lseek])
  gl_FUNC_LSTAT
  gl_CONDITIONAL([GL_COND_OBJ_LSTAT], [test $REPLACE_LSTAT = 1])
  AM_COND_IF([GL_COND_OBJ_LSTAT], [
    gl_PREREQ_LSTAT
  ])
  gl_SYS_STAT_MODULE_INDICATOR([lstat])
  AC_CONFIG_COMMANDS_PRE([m4_ifdef([AH_HEADER],
    [AC_SUBST([CONFIG_INCLUDE], m4_defn([AH_HEADER]))])])
  AC_REQUIRE([AC_PROG_SED])
  AC_REQUIRE([AC_PROG_GREP])
  gl_FUNC_MALLOC_GNU
  if test $REPLACE_MALLOC_FOR_MALLOC_GNU = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-gnu])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-posix])
  gl_MALLOCA
  gl_MATH_H
  gl_MATH_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_MBCHAR
  gl_MBITER
  gl_FUNC_MBRLEN
  gl_CONDITIONAL([GL_COND_OBJ_MBRLEN],
                 [test $HAVE_MBRLEN = 0 || test $REPLACE_MBRLEN = 1])
  AM_COND_IF([GL_COND_OBJ_MBRLEN], [
    gl_PREREQ_MBRLEN
  ])
  gl_WCHAR_MODULE_INDICATOR([mbrlen])
  gl_FUNC_MBRTOWC
  gl_CONDITIONAL([GL_COND_OBJ_MBRTOWC],
                 [test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1])
  AM_COND_IF([GL_COND_OBJ_MBRTOWC], [
    if test $REPLACE_MBSTATE_T = 1; then
      AC_LIBOBJ([lc-charset-dispatch])
      AC_LIBOBJ([mbtowc-lock])
      gl_PREREQ_MBTOWC_LOCK
    fi
    gl_PREREQ_MBRTOWC
  ])
  gl_WCHAR_MODULE_INDICATOR([mbrtowc])
  gl_STRING_MODULE_INDICATOR([mbscasecmp])
  gl_STRING_MODULE_INDICATOR([mbschr])
  gl_FUNC_MBSINIT
  gl_CONDITIONAL([GL_COND_OBJ_MBSINIT],
                 [test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1])
  AM_COND_IF([GL_COND_OBJ_MBSINIT], [
    gl_PREREQ_MBSINIT
  ])
  gl_WCHAR_MODULE_INDICATOR([mbsinit])
  gl_FUNC_MBSLEN
  gl_STRING_MODULE_INDICATOR([mbslen])
  gl_FUNC_MBSRTOWCS
  gl_CONDITIONAL([GL_COND_OBJ_MBSRTOWCS],
                 [test $HAVE_MBSRTOWCS = 0 || test $REPLACE_MBSRTOWCS = 1])
  AM_COND_IF([GL_COND_OBJ_MBSRTOWCS], [
    AC_LIBOBJ([mbsrtowcs-state])
    gl_PREREQ_MBSRTOWCS
  ])
  gl_WCHAR_MODULE_INDICATOR([mbsrtowcs])
  gl_STRING_MODULE_INDICATOR([mbsstr])
  gl_MBSWIDTH
  gl_FUNC_MBTOWC
  gl_CONDITIONAL([GL_COND_OBJ_MBTOWC],
                 [test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1])
  AM_COND_IF([GL_COND_OBJ_MBTOWC], [
    gl_PREREQ_MBTOWC
  ])
  gl_STDLIB_MODULE_INDICATOR([mbtowc])
  gl_MBITER
  gl_MEMCASECMP
  gl_FUNC_MEMCHR
  gl_CONDITIONAL([GL_COND_OBJ_MEMCHR], [test $REPLACE_MEMCHR = 1])
  AM_COND_IF([GL_COND_OBJ_MEMCHR], [
    gl_PREREQ_MEMCHR
  ])
  gl_STRING_MODULE_INDICATOR([memchr])
  gl_MEMCOLL
  gl_FUNC_MEMPCPY
  gl_CONDITIONAL([GL_COND_OBJ_MEMPCPY], [test $HAVE_MEMPCPY = 0])
  AM_COND_IF([GL_COND_OBJ_MEMPCPY], [
    gl_PREREQ_MEMPCPY
  ])
  gl_STRING_MODULE_INDICATOR([mempcpy])
  gl_FUNC_MEMRCHR
  gl_CONDITIONAL([GL_COND_OBJ_MEMRCHR], [test $ac_cv_func_memrchr = no])
  AM_COND_IF([GL_COND_OBJ_MEMRCHR], [
    gl_PREREQ_MEMRCHR
  ])
  gl_STRING_MODULE_INDICATOR([memrchr])
  gl_MGETGROUPS
  gl_MINMAX
  gl_MKANCESDIRS
  gl_FUNC_MKDIR
  gl_CONDITIONAL([GL_COND_OBJ_MKDIR], [test $REPLACE_MKDIR = 1])
  gl_SYS_STAT_MODULE_INDICATOR([mkdir])
  gl_MKDIR_PARENTS
  gl_FUNC_MKDIRAT
  gl_CONDITIONAL([GL_COND_OBJ_MKDIRAT], [test $HAVE_MKDIRAT = 0])
  AM_COND_IF([GL_COND_OBJ_MKDIRAT], [
    gl_PREREQ_MKDIRAT
  ])
  gl_SYS_STAT_MODULE_INDICATOR([mkdirat])
  gl_FUNC_MKFIFO
  gl_CONDITIONAL([GL_COND_OBJ_MKFIFO],
                 [test $HAVE_MKFIFO = 0 || test $REPLACE_MKFIFO = 1])
  gl_UNISTD_MODULE_INDICATOR([mkfifo])
  gl_FUNC_MKFIFOAT
  gl_CONDITIONAL([GL_COND_OBJ_MKFIFOAT],
                 [test $HAVE_MKFIFOAT = 0 || test $REPLACE_MKFIFOAT = 1])
  gl_CONDITIONAL([GL_COND_OBJ_MKNODAT],
                 [test $HAVE_MKNODAT = 0 || test $REPLACE_MKNODAT = 1])
  gl_SYS_STAT_MODULE_INDICATOR([mkfifoat])
  gl_SYS_STAT_MODULE_INDICATOR([mknodat])
  gl_FUNC_MKNOD
  gl_CONDITIONAL([GL_COND_OBJ_MKNOD],
                 [test $HAVE_MKNOD = 0 || test $REPLACE_MKNOD = 1])
  gl_UNISTD_MODULE_INDICATOR([mknod])
  gl_FUNC_MKOSTEMP
  gl_CONDITIONAL([GL_COND_OBJ_MKOSTEMP], [test $HAVE_MKOSTEMP = 0])
  AM_COND_IF([GL_COND_OBJ_MKOSTEMP], [
    gl_PREREQ_MKOSTEMP
  ])
  gl_MODULE_INDICATOR([mkostemp])
  gl_STDLIB_MODULE_INDICATOR([mkostemp])
  gl_FUNC_MKSTEMP
  gl_CONDITIONAL([GL_COND_OBJ_MKSTEMP],
                 [test $HAVE_MKSTEMP = 0 || test $REPLACE_MKSTEMP = 1])
  AM_COND_IF([GL_COND_OBJ_MKSTEMP], [
    gl_PREREQ_MKSTEMP
  ])
  gl_STDLIB_MODULE_INDICATOR([mkstemp])
  gl_FUNC_MKTIME
  if test $REPLACE_MKTIME = 1; then
    AC_LIBOBJ([mktime])
    gl_PREREQ_MKTIME
  fi
  gl_TIME_MODULE_INDICATOR([mktime])
  gl_FUNC_MKTIME_INTERNAL
  if test $WANT_MKTIME_INTERNAL = 1; then
    AC_LIBOBJ([mktime])
    gl_PREREQ_MKTIME
  fi
  gl_MODECHANGE
  gl_MOUNTLIST
  gl_CONDITIONAL([GL_COND_OBJ_MOUNTLIST], [test $gl_cv_list_mounted_fs = yes])
  AM_COND_IF([GL_COND_OBJ_MOUNTLIST], [
    gl_PREREQ_MOUNTLIST_EXTRA
  ])
  gl_MPSORT
  AC_REQUIRE([gl_MSVC_INVAL])
  gl_CONDITIONAL([GL_COND_OBJ_MSVC_INVAL],
                 [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
  AC_REQUIRE([gl_MSVC_NOTHROW])
  gl_CONDITIONAL([GL_COND_OBJ_MSVC_NOTHROW],
                 [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
  gl_MODULE_INDICATOR([msvc-nothrow])
  gl_MULTIARCH
  gl_FUNC_NANOSLEEP
  gl_CONDITIONAL([GL_COND_OBJ_NANOSLEEP],
                 [test $HAVE_NANOSLEEP = 0 || test $REPLACE_NANOSLEEP = 1])
  gl_TIME_MODULE_INDICATOR([nanosleep])
  gl_NETDB_H
  gl_NETDB_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_HEADER_NETINET_IN
  gl_CONDITIONAL_HEADER([netinet/in.h])
  AC_PROG_MKDIR_P
  gl_FUNC_NL_LANGINFO
  gl_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO],
                 [test $HAVE_NL_LANGINFO = 0 || test $REPLACE_NL_LANGINFO = 1])
  gl_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO_LOCK],
                 [test $REPLACE_NL_LANGINFO = 1 && test $NL_LANGINFO_MTSAFE = 0])
  if test $REPLACE_NL_LANGINFO = 1 && test $NL_LANGINFO_MTSAFE = 0; then
    gl_PREREQ_NL_LANGINFO_LOCK
  fi
  gl_LANGINFO_MODULE_INDICATOR([nl_langinfo])
  gl_NPROC
  gl_FUNC_GNU_STRFTIME
  gl_FUNC_OBSTACK
  gl_CONDITIONAL([GL_COND_OBJ_OBSTACK], [test "$gl_cv_func_obstack" != yes])
  gl_FUNC_OPEN
  gl_CONDITIONAL([GL_COND_OBJ_OPEN], [test $REPLACE_OPEN = 1])
  AM_COND_IF([GL_COND_OBJ_OPEN], [
    gl_PREREQ_OPEN
  ])
  gl_FCNTL_MODULE_INDICATOR([open])
  gl_FUNC_OPENAT
  gl_CONDITIONAL([GL_COND_OBJ_OPENAT],
                 [test $HAVE_OPENAT = 0 || test $REPLACE_OPENAT = 1])
  AM_COND_IF([GL_COND_OBJ_OPENAT], [
    gl_PREREQ_OPENAT
  ])
  gl_MODULE_INDICATOR([openat]) dnl for lib/getcwd.c
  gl_FCNTL_MODULE_INDICATOR([openat])
  gl_OPENAT_SAFER
  gl_MODULE_INDICATOR([openat-safer])
  gl_FUNC_OPENDIR
  gl_CONDITIONAL([GL_COND_OBJ_OPENDIR],
                 [test $HAVE_OPENDIR = 0 || test $REPLACE_OPENDIR = 1])
  gl_DIRENT_MODULE_INDICATOR([opendir])
  gl_PARSE_DATETIME
  AC_DEFINE([GNULIB_PARSE_DATETIME2], [1], [Define to support parse_datetime2.])
  gl_PATHMAX
  gl_PERL
  gl_PHYSMEM
  gl_FUNC_PIPE
  gl_CONDITIONAL([GL_COND_OBJ_PIPE], [test $HAVE_PIPE = 0])
  gl_UNISTD_MODULE_INDICATOR([pipe])
  gl_FUNC_PIPE2
  gl_UNISTD_MODULE_INDICATOR([pipe2])
  gl_POSIX_SHELL
  AC_PROG_MKDIR_P
  gl_FUNC_POSIX_MEMALIGN
  gl_CONDITIONAL([GL_COND_OBJ_POSIX_MEMALIGN], [test $REPLACE_POSIX_MEMALIGN = 1])
  gl_STDLIB_MODULE_INDICATOR([posix_memalign])
  gl_POSIXTM
  gl_POSIXVER
  gl_FUNC_PRINTF_FREXP
  gl_FUNC_PRINTF_FREXPL
  m4_divert_text([INIT_PREPARE], [gl_printf_safe=yes])
  gl_PRIV_SET
  AC_CHECK_DECLS([program_invocation_name], [], [], [#include <errno.h>])
  AC_CHECK_DECLS([program_invocation_short_name], [], [], [#include <errno.h>])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--keyword='proper_name:1,\"This is a proper name. See the gettext manual, section Names.\"'])
     AM_][XGETTEXT_OPTION([--keyword='proper_name_utf8:1,\"This is a proper name. See the gettext manual, section Names.\"'])])
  gl_FUNC_PSELECT
  gl_CONDITIONAL([GL_COND_OBJ_PSELECT],
                 [test $HAVE_PSELECT = 0 || test $REPLACE_PSELECT = 1])
  gl_SYS_SELECT_MODULE_INDICATOR([pselect])
  gl_PTHREAD_COND
  gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_COND],
                 [test $HAVE_PTHREAD_COND_INIT = 0 || test $REPLACE_PTHREAD_COND_INIT = 1])
  gl_PTHREAD_MODULE_INDICATOR([pthread-cond])
  gl_PTHREAD_H
  gl_PTHREAD_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_PTHREAD_MUTEX
  gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_MUTEX],
                 [test $HAVE_PTHREAD_MUTEX_INIT = 0 || test $REPLACE_PTHREAD_MUTEX_INIT = 1 || test $HAVE_PTHREAD_MUTEXATTR_GETROBUST = 0 || test $REPLACE_PTHREAD_MUTEXATTR_GETROBUST = 1])
  gl_PTHREAD_MODULE_INDICATOR([pthread-mutex])
  gl_PTHREAD_THREAD
  gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_THREAD],
                 [test $HAVE_PTHREAD_CREATE = 0 || test $REPLACE_PTHREAD_CREATE = 1])
  gl_PTHREAD_MODULE_INDICATOR([pthread-thread])
  gl_FUNC_PTHREAD_MUTEX_TIMEDLOCK
  gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_MUTEX_TIMEDLOCK],
                 [test $HAVE_PTHREAD_T = 1 && test $HAVE_PTHREAD_MUTEX_TIMEDLOCK = 0])
  gl_PTHREAD_MODULE_INDICATOR([pthread_mutex_timedlock])
  gl_FUNC_PTHREAD_SIGMASK
  gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_SIGMASK],
                 [test $HAVE_PTHREAD_SIGMASK = 0 || test $REPLACE_PTHREAD_SIGMASK = 1])
  AM_COND_IF([GL_COND_OBJ_PTHREAD_SIGMASK], [
    gl_PREREQ_PTHREAD_SIGMASK
  ])
  gl_SIGNAL_MODULE_INDICATOR([pthread_sigmask])
  gl_FUNC_PUTENV
  gl_CONDITIONAL([GL_COND_OBJ_PUTENV], [test $REPLACE_PUTENV = 1])
  AM_COND_IF([GL_COND_OBJ_PUTENV], [
    gl_PREREQ_PUTENV
  ])
  gl_STDLIB_MODULE_INDICATOR([putenv])
  gl_QUOTE
  gl_QUOTEARG
  gl_FUNC_RAISE
  gl_CONDITIONAL([GL_COND_OBJ_RAISE],
                 [test $HAVE_RAISE = 0 || test $REPLACE_RAISE = 1])
  AM_COND_IF([GL_COND_OBJ_RAISE], [
    gl_PREREQ_RAISE
  ])
  gl_SIGNAL_MODULE_INDICATOR([raise])
  gl_FUNC_RAWMEMCHR
  gl_CONDITIONAL([GL_COND_OBJ_RAWMEMCHR], [test $HAVE_RAWMEMCHR = 0])
  AM_COND_IF([GL_COND_OBJ_RAWMEMCHR], [
    gl_PREREQ_RAWMEMCHR
  ])
  gl_STRING_MODULE_INDICATOR([rawmemchr])
  gl_FUNC_READ
  gl_CONDITIONAL([GL_COND_OBJ_READ], [test $REPLACE_READ = 1])
  AM_COND_IF([GL_COND_OBJ_READ], [
    gl_PREREQ_READ
  ])
  gl_UNISTD_MODULE_INDICATOR([read])
  gl_PREREQ_READ_FILE
  gl_FUNC_READDIR
  gl_CONDITIONAL([GL_COND_OBJ_READDIR], [test $HAVE_READDIR = 0])
  gl_DIRENT_MODULE_INDICATOR([readdir])
  gl_FUNC_READLINK
  gl_CONDITIONAL([GL_COND_OBJ_READLINK],
                 [test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1])
  AM_COND_IF([GL_COND_OBJ_READLINK], [
    gl_PREREQ_READLINK
  ])
  gl_UNISTD_MODULE_INDICATOR([readlink])
  gl_FUNC_READLINKAT
  gl_CONDITIONAL([GL_COND_OBJ_READLINKAT],
                 [test $HAVE_READLINKAT = 0 || test $REPLACE_READLINKAT = 1])
  gl_UNISTD_MODULE_INDICATOR([readlinkat])
  gl_READTOKENS
  gl_READUTMP
  gl_CONDITIONAL([GL_COND_OBJ_READUTMP],
                 [test $ac_cv_header_utmp_h = yes || test $ac_cv_header_utmpx_h = yes])
  gl_FUNC_REALLOC_GNU
  if test $REPLACE_REALLOC_FOR_REALLOC_GNU = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([realloc-gnu])
  gl_FUNC_REALLOC_POSIX
  if test $REPLACE_REALLOC_FOR_REALLOC_POSIX = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([realloc-posix])
  gl_FUNC_REALLOCARRAY
  gl_CONDITIONAL([GL_COND_OBJ_REALLOCARRAY],
                 [test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1])
  AM_COND_IF([GL_COND_OBJ_REALLOCARRAY], [
    gl_PREREQ_REALLOCARRAY
  ])
  gl_MODULE_INDICATOR([reallocarray])
  gl_STDLIB_MODULE_INDICATOR([reallocarray])
  gl_REGEX
  gl_CONDITIONAL([GL_COND_OBJ_REGEX], [test $ac_use_included_regex = yes])
  AM_COND_IF([GL_COND_OBJ_REGEX], [
    gl_PREREQ_REGEX
  ])
  gl_FUNC_REMOVE
  gl_CONDITIONAL([GL_COND_OBJ_REMOVE], [test $REPLACE_REMOVE = 1])
  gl_STDIO_MODULE_INDICATOR([remove])
  gl_FUNC_RENAME
  gl_CONDITIONAL([GL_COND_OBJ_RENAME], [test $REPLACE_RENAME = 1])
  gl_STDIO_MODULE_INDICATOR([rename])
  gl_FUNC_RENAMEAT
  gl_CONDITIONAL([GL_COND_OBJ_RENAMEAT],
                 [test $HAVE_RENAMEAT = 0 || test $REPLACE_RENAMEAT = 1])
  if test $HAVE_RENAMEAT = 0; then
    AC_LIBOBJ([at-func2])
  fi
  gl_STDIO_MODULE_INDICATOR([renameat])
  gl_FUNC_RENAMEAT
  if test $HAVE_RENAMEAT = 0; then
    AC_LIBOBJ([at-func2])
  fi
  gl_FUNC_REWINDDIR
  gl_CONDITIONAL([GL_COND_OBJ_REWINDDIR], [test $HAVE_REWINDDIR = 0])
  gl_DIRENT_MODULE_INDICATOR([rewinddir])
  gl_FUNC_RMDIR
  gl_CONDITIONAL([GL_COND_OBJ_RMDIR], [test $REPLACE_RMDIR = 1])
  gl_UNISTD_MODULE_INDICATOR([rmdir])
  gl_FUNC_RPMATCH
  gl_CONDITIONAL([GL_COND_OBJ_RPMATCH], [test $HAVE_RPMATCH = 0])
  AM_COND_IF([GL_COND_OBJ_RPMATCH], [
    gl_PREREQ_RPMATCH
  ])
  gl_STDLIB_MODULE_INDICATOR([rpmatch])
  gl_PREREQ_SAFE_READ
  gl_PREREQ_SAFE_WRITE
  gl_SAME
  gl_SAVE_CWD
  gl_SAVEDIR
  gl_SAVEWD
  gl_SCHED_H
  gl_SCHED_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_PROG_MKDIR_P
  gl_FUNC_SELECT
  gl_CONDITIONAL([GL_COND_OBJ_SELECT], [test $REPLACE_SELECT = 1])
  gl_SYS_SELECT_MODULE_INDICATOR([select])
  AC_CHECK_HEADERS([selinux/flask.h])
  gl_HEADERS_SELINUX_SELINUX_H
  gl_HEADERS_SELINUX_CONTEXT_H
  gl_HEADERS_SELINUX_LABEL_H
  gl_CONDITIONAL_HEADER([selinux/context.h])
  gl_CONDITIONAL_HEADER([selinux/label.h])
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_GETFILECON],
                 [test "$with_selinux" != no && test "$ac_cv_header_selinux_selinux_h" = yes])
  gl_SERVENT
  gl_FUNC_SETENV
  gl_CONDITIONAL([GL_COND_OBJ_SETENV],
                 [test $HAVE_SETENV = 0 || test $REPLACE_SETENV = 1])
  gl_STDLIB_MODULE_INDICATOR([setenv])
  gl_FUNC_SETLOCALE_NULL
  gl_CONDITIONAL([GL_COND_OBJ_SETLOCALE_LOCK],
                 [test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0])
  AM_COND_IF([GL_COND_OBJ_SETLOCALE_LOCK], [
    gl_PREREQ_SETLOCALE_LOCK
  ])
  gl_LOCALE_MODULE_INDICATOR([setlocale_null])
  gl_SETTIME
  gl_FUNC_SIG2STR
  gl_CONDITIONAL([GL_COND_OBJ_SIG2STR], [test $ac_cv_func_sig2str = no])
  AM_COND_IF([GL_COND_OBJ_SIG2STR], [
    gl_PREREQ_SIG2STR
  ])
  gl_SIGACTION
  gl_CONDITIONAL([GL_COND_OBJ_SIGACTION], [test $HAVE_SIGACTION = 0])
  AM_COND_IF([GL_COND_OBJ_SIGACTION], [
    gl_PREREQ_SIGACTION
  ])
  gl_SIGNAL_MODULE_INDICATOR([sigaction])
  gl_SIGNAL_H
  gl_SIGNAL_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SIGNBIT
  gl_CONDITIONAL([GL_COND_OBJ_SIGNBIT3], [test $REPLACE_SIGNBIT = 1])
  gl_MATH_MODULE_INDICATOR([signbit])
  gl_SIGNALBLOCKING
  gl_CONDITIONAL([GL_COND_OBJ_SIGPROCMASK], [test $HAVE_POSIX_SIGNALBLOCKING = 0])
  AM_COND_IF([GL_COND_OBJ_SIGPROCMASK], [
    gl_PREREQ_SIGPROCMASK
  ])
  gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
  gl_SIZE_MAX
  # Check whether libsmack is available
  LIB_SMACK=
  AC_ARG_ENABLE([libsmack],
    AS_HELP_STRING([--disable-libsmack], [disable libsmack support]))
  if test "X$enable_libsmack" != "Xno"; then
    AC_CHECK_LIB([smack], [smack_new_label_from_self],
      [AC_CHECK_LIB([smack], [smack_new_label_from_path],
        [AC_CHECK_HEADER([sys/smack.h],
          [LIB_SMACK=-lsmack
           AC_DEFINE([HAVE_SMACK], [1], [libsmack usability])]
        )])])
    if test "X$LIB_SMACK" = "X"; then
      if test "X$enable_libsmack" = "Xyes"; then
        AC_MSG_ERROR([libsmack library was not found or not usable])
      fi
    fi
  else
    AC_MSG_WARN([libsmack support disabled by user])
  fi
  AC_SUBST([LIB_SMACK])
  gl_FUNC_SNPRINTF
  gl_STDIO_MODULE_INDICATOR([snprintf])
  gl_MODULE_INDICATOR([snprintf])
  AC_REQUIRE([gl_SOCKETLIB])
  AC_REQUIRE([gl_SOCKETS])
  gl_TYPE_SOCKLEN_T
  gt_TYPE_SSIZE_T
  gl_FUNC_STAT
  gl_CONDITIONAL([GL_COND_OBJ_STAT], [test $REPLACE_STAT = 1])
  AM_COND_IF([GL_COND_OBJ_STAT], [
    case "$host_os" in
      mingw*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_STAT
  ])
  gl_SYS_STAT_MODULE_INDICATOR([stat])
  gl_STAT_SIZE
  gl_STAT_TIME
  gl_STAT_BIRTHTIME
  gl_STDALIGN_H
  gl_CONDITIONAL_HEADER([stdalign.h])
  AC_PROG_MKDIR_P
  gl_STDARG_H
  gl_CONDITIONAL_HEADER([stdarg.h])
  AC_PROG_MKDIR_P
  gl_STDBOOL_H
  gl_CONDITIONAL_HEADER([stdbool.h])
  AC_PROG_MKDIR_P
  gl_STDDEF_H
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_CONDITIONAL_HEADER([stddef.h])
  AC_PROG_MKDIR_P
  gl_STDINT_H
  gl_CONDITIONAL_HEADER([stdint.h])
  dnl Because of gl_REPLACE_LIMITS_H:
  gl_CONDITIONAL_HEADER([limits.h])
  AC_PROG_MKDIR_P
  gl_STDIO_H
  gl_STDIO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_STDIO_READ], [test $REPLACE_STDIO_READ_FUNCS = 1])
  gl_CONDITIONAL([GL_COND_OBJ_STDIO_WRITE], [test $REPLACE_STDIO_WRITE_FUNCS = 1])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fscanf])
  gl_MODULE_INDICATOR([fscanf])
  gl_STDIO_MODULE_INDICATOR([scanf])
  gl_MODULE_INDICATOR([scanf])
  gl_STDIO_MODULE_INDICATOR([fgetc])
  gl_STDIO_MODULE_INDICATOR([getc])
  gl_STDIO_MODULE_INDICATOR([getchar])
  gl_STDIO_MODULE_INDICATOR([fgets])
  gl_STDIO_MODULE_INDICATOR([fread])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fprintf])
  gl_STDIO_MODULE_INDICATOR([printf])
  gl_STDIO_MODULE_INDICATOR([vfprintf])
  gl_STDIO_MODULE_INDICATOR([vprintf])
  gl_STDIO_MODULE_INDICATOR([fputc])
  gl_STDIO_MODULE_INDICATOR([putc])
  gl_STDIO_MODULE_INDICATOR([putchar])
  gl_STDIO_MODULE_INDICATOR([fputs])
  gl_STDIO_MODULE_INDICATOR([puts])
  gl_STDIO_MODULE_INDICATOR([fwrite])
  gl_STDLIB_H
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_STPCPY
  gl_CONDITIONAL([GL_COND_OBJ_STPCPY], [test $HAVE_STPCPY = 0])
  AM_COND_IF([GL_COND_OBJ_STPCPY], [
    gl_PREREQ_STPCPY
  ])
  gl_STRING_MODULE_INDICATOR([stpcpy])
  gl_FUNC_STPNCPY
  gl_CONDITIONAL([GL_COND_OBJ_STPNCPY],
                 [test $HAVE_STPNCPY = 0 || test $REPLACE_STPNCPY = 1])
  AM_COND_IF([GL_COND_OBJ_STPNCPY], [
    gl_PREREQ_STPNCPY
  ])
  gl_STRING_MODULE_INDICATOR([stpncpy])
  gl_FUNC_STRDUP_POSIX
  gl_CONDITIONAL([GL_COND_OBJ_STRDUP], [test $REPLACE_STRDUP = 1])
  AM_COND_IF([GL_COND_OBJ_STRDUP], [
    gl_PREREQ_STRDUP
  ])
  gl_STRING_MODULE_INDICATOR([strdup])
  gl_FUNC_STRERROR
  gl_CONDITIONAL([GL_COND_OBJ_STRERROR], [test $REPLACE_STRERROR = 1])
  gl_MODULE_INDICATOR([strerror])
  gl_STRING_MODULE_INDICATOR([strerror])
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  AC_REQUIRE([gl_FUNC_STRERROR_0])
  gl_CONDITIONAL([GL_COND_OBJ_STRERROR_OVERRIDE],
                 [test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1])
  AM_COND_IF([GL_COND_OBJ_STRERROR_OVERRIDE], [
    gl_PREREQ_SYS_H_WINSOCK2
  ])
  if test $gl_cond_libtool = false; then
    gl_ltlibdeps="$gl_ltlibdeps $LTLIBICONV"
    gl_libdeps="$gl_libdeps $LIBICONV"
  fi
  gl_STRING_H
  gl_STRING_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_STRNCAT
  gl_CONDITIONAL([GL_COND_OBJ_STRNCAT], [test $REPLACE_STRNCAT = 1])
  AM_COND_IF([GL_COND_OBJ_STRNCAT], [
    gl_PREREQ_STRNCAT
  ])
  gl_STRING_MODULE_INDICATOR([strncat])
  gl_FUNC_STRNLEN
  gl_CONDITIONAL([GL_COND_OBJ_STRNLEN],
                 [test $HAVE_DECL_STRNLEN = 0 || test $REPLACE_STRNLEN = 1])
  AM_COND_IF([GL_COND_OBJ_STRNLEN], [
    gl_PREREQ_STRNLEN
  ])
  gl_STRING_MODULE_INDICATOR([strnlen])
  gl_FUNC_STRSIGNAL
  gl_CONDITIONAL([GL_COND_OBJ_STRSIGNAL],
                 [test $HAVE_STRSIGNAL = 0 || test $REPLACE_STRSIGNAL = 1])
  AM_COND_IF([GL_COND_OBJ_STRSIGNAL], [
    gl_PREREQ_STRSIGNAL
  ])
  gl_STRING_MODULE_INDICATOR([strsignal])
  gl_FUNC_STRSTR_SIMPLE
  if test $REPLACE_STRSTR = 1; then
    AC_LIBOBJ([strstr])
  fi
  gl_STRING_MODULE_INDICATOR([strstr])
  gl_FUNC_STRTOD
  gl_CONDITIONAL([GL_COND_OBJ_STRTOD],
                 [test $HAVE_STRTOD = 0 || test $REPLACE_STRTOD = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOD], [
    gl_PREREQ_STRTOD
  ])
  gl_STDLIB_MODULE_INDICATOR([strtod])
  gl_FUNC_STRTOIMAX
  gl_CONDITIONAL([GL_COND_OBJ_STRTOIMAX],
                 [test $HAVE_DECL_STRTOIMAX = 0 || test $REPLACE_STRTOIMAX = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOIMAX], [
    gl_PREREQ_STRTOIMAX
  ])
  gl_INTTYPES_MODULE_INDICATOR([strtoimax])
  gl_FUNC_STRTOLD
  gl_CONDITIONAL([GL_COND_OBJ_STRTOLD],
                 [test $HAVE_STRTOLD = 0 || test $REPLACE_STRTOLD = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOLD], [
    gl_PREREQ_STRTOLD
  ])
  gl_STDLIB_MODULE_INDICATOR([strtold])
  gl_FUNC_STRTOLL
  gl_CONDITIONAL([GL_COND_OBJ_STRTOLL],
                 [test $HAVE_STRTOLL = 0 || test $REPLACE_STRTOLL = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOLL], [
    gl_PREREQ_STRTOLL
  ])
  gl_STDLIB_MODULE_INDICATOR([strtoll])
  gl_FUNC_STRTOULL
  gl_CONDITIONAL([GL_COND_OBJ_STRTOULL],
                 [test $HAVE_STRTOULL = 0 || test $REPLACE_STRTOULL = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOULL], [
    gl_PREREQ_STRTOULL
  ])
  gl_STDLIB_MODULE_INDICATOR([strtoull])
  gl_FUNC_STRTOUMAX
  gl_CONDITIONAL([GL_COND_OBJ_STRTOUMAX],
                 [test $HAVE_DECL_STRTOUMAX = 0 || test $REPLACE_STRTOUMAX = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOUMAX], [
    gl_PREREQ_STRTOUMAX
  ])
  gl_INTTYPES_MODULE_INDICATOR([strtoumax])
  gl_FUNC_SYMLINK
  gl_CONDITIONAL([GL_COND_OBJ_SYMLINK],
                 [test $HAVE_SYMLINK = 0 || test $REPLACE_SYMLINK = 1])
  gl_UNISTD_MODULE_INDICATOR([symlink])
  gl_FUNC_SYMLINKAT
  gl_CONDITIONAL([GL_COND_OBJ_SYMLINKAT],
                 [test $HAVE_SYMLINKAT = 0 || test $REPLACE_SYMLINKAT = 1])
  gl_UNISTD_MODULE_INDICATOR([symlinkat])
  gl_SYS_IOCTL_H
  gl_SYS_IOCTL_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_RANDOM_H
  gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_RESOURCE_H
  gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_SELECT_H
  gl_SYS_SELECT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_SOCKET_H
  gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_STAT_H
  gl_SYS_STAT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TIME_H
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TYPES_H
  gl_SYS_TYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_UIO_H
  gl_SYS_UIO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_UTSNAME_H
  gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_WAIT_H
  gl_SYS_WAIT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_GEN_TEMPNAME
  gl_MODULE_INDICATOR([tempname])
  gl_TERMIOS_H
  gl_TERMIOS_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_THREADLIB])
  gl_TIME_H
  gl_TIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_TIME_R
  gl_CONDITIONAL([GL_COND_OBJ_TIME_R],
                 [test $HAVE_LOCALTIME_R = 0 || test $REPLACE_LOCALTIME_R = 1])
  AM_COND_IF([GL_COND_OBJ_TIME_R], [
    gl_PREREQ_TIME_R
  ])
  gl_TIME_MODULE_INDICATOR([time_r])
  gl_TIME_RZ
  gl_CONDITIONAL([GL_COND_OBJ_TIME_RZ], [test $HAVE_TIMEZONE_T = 0])
  gl_TIME_MODULE_INDICATOR([time_rz])
  gl_FUNC_TIMEGM
  gl_CONDITIONAL([GL_COND_OBJ_TIMEGM],
                 [test $HAVE_TIMEGM = 0 || test $REPLACE_TIMEGM = 1])
  AM_COND_IF([GL_COND_OBJ_TIMEGM], [
    gl_PREREQ_TIMEGM
  ])
  gl_TIME_MODULE_INDICATOR([timegm])
  gl_TIMER_TIME
  gl_TIMESPEC
  gl_TLS
  gl_FUNC_TZSET
  gl_CONDITIONAL([GL_COND_OBJ_TZSET], [test $REPLACE_TZSET = 1])
  gl_TIME_MODULE_INDICATOR([tzset])
  gl_FUNC_UNAME
  gl_CONDITIONAL([GL_COND_OBJ_UNAME], [test $HAVE_UNAME = 0])
  AM_COND_IF([GL_COND_OBJ_UNAME], [
    gl_PREREQ_UNAME
  ])
  gl_SYS_UTSNAME_MODULE_INDICATOR([uname])
  gl_UNICODEIO
  gl_UNISTD_H
  gl_UNISTD_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_UNISTD_SAFER
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [unistr.h])
  AC_PROG_MKDIR_P
  gl_MODULE_INDICATOR([unistr/u8-mbtoucr])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-mbtoucr])
  gl_MODULE_INDICATOR([unistr/u8-uctomb])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-uctomb])
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [unitypes.h])
  AC_PROG_MKDIR_P
  AH_VERBATIM([unitypes_restrict], [
  /* This definition is a duplicate of the one in unitypes.h.
     It is here so that we can cope with an older version of unitypes.h
     that does not contain this definition and that is pre-installed among
     the public header files.  */
  # if defined __restrict \
       || 2 < __GNUC__ + (95 <= __GNUC_MINOR__) \
       || __clang_major__ >= 3
  #  define _UC_RESTRICT __restrict
  # elif 199901L <= __STDC_VERSION__ || defined restrict
  #  define _UC_RESTRICT restrict
  # else
  #  define _UC_RESTRICT
  # endif
  ])
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [uniwidth.h])
  AC_PROG_MKDIR_P
  gl_LIBUNISTRING_MODULE([0.9.11], [uniwidth/width])
  gl_FUNC_UNLINK
  gl_CONDITIONAL([GL_COND_OBJ_UNLINK], [test $REPLACE_UNLINK = 1])
  gl_UNISTD_MODULE_INDICATOR([unlink])
  gl_FUNC_UNLINK_BUSY_TEXT
  gl_FUNC_UNLINKAT
  gl_CONDITIONAL([GL_COND_OBJ_UNLINKAT],
                 [test $HAVE_UNLINKAT = 0 || test $REPLACE_UNLINKAT = 1])
  gl_UNISTD_MODULE_INDICATOR([unlinkat])
  gl_UNLINKDIR
  AC_DEFINE([GNULIB_STDIO_SINGLE_THREAD], [1],
    [Define to 1 if you want the FILE stream functions getc, putc, etc.
     to use unlocked I/O if available, throughout the package.
     Unlocked I/O can improve performance, sometimes dramatically.
     But unlocked I/O is safe only in single-threaded programs,
     as well as in multithreaded programs for which you can guarantee that
     every FILE stream, including stdin, stdout, stderr, is used only
     in a single thread.])
  AC_DEFINE([USE_UNLOCKED_IO], [GNULIB_STDIO_SINGLE_THREAD],
    [An alias of GNULIB_STDIO_SINGLE_THREAD.])
  gl_FUNC_GLIBC_UNLOCKED_IO
  gl_FUNC_UNSETENV
  gl_CONDITIONAL([GL_COND_OBJ_UNSETENV],
                 [test $HAVE_UNSETENV = 0 || test $REPLACE_UNSETENV = 1])
  AM_COND_IF([GL_COND_OBJ_UNSETENV], [
    gl_PREREQ_UNSETENV
  ])
  gl_STDLIB_MODULE_INDICATOR([unsetenv])
  gl_SYS_PROC_UPTIME
  gl_USERSPEC
  gl_FUNC_UTIME
  gl_CONDITIONAL([GL_COND_OBJ_UTIME],
                 [test $HAVE_UTIME = 0 || test $REPLACE_UTIME = 1])
  AM_COND_IF([GL_COND_OBJ_UTIME], [
    gl_PREREQ_UTIME
  ])
  gl_UTIME_MODULE_INDICATOR([utime])
  gl_UTIME_H
  gl_UTIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_UTIMECMP
  gl_UTIMENS
  gl_FUNC_UTIMENSAT
  gl_CONDITIONAL([GL_COND_OBJ_UTIMENSAT],
                 [test $HAVE_UTIMENSAT = 0 || test $REPLACE_UTIMENSAT = 1])
  gl_SYS_STAT_MODULE_INDICATOR([utimensat])
  AC_C_VARARRAYS
  AC_REQUIRE([AC_C_RESTRICT])
  gl_FUNC_VASNPRINTF
  gl_FUNC_VASPRINTF
  gl_STDIO_MODULE_INDICATOR([vasprintf])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=asprintf:2:c-format])
     AM_][XGETTEXT_OPTION([--flag=vasprintf:2:c-format])])
  gl_FUNC_VASPRINTF_POSIX
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=verror:3:c-format])
     AM_][XGETTEXT_OPTION([--flag=verror_at_line:5:c-format])])
  gl_VERSION_ETC
  gl_FUNC_VFPRINTF_POSIX
  gl_STDIO_MODULE_INDICATOR([vfprintf-posix])
  gl_MODULE_INDICATOR([vfprintf-posix])
  gl_FUNC_VPRINTF_POSIX
  gl_STDIO_MODULE_INDICATOR([vprintf-posix])
  gl_MODULE_INDICATOR([vprintf-posix])
  gl_WCHAR_H
  gl_WCHAR_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_MODULE_INDICATOR([wchar-single])
  gl_FUNC_WCRTOMB
  gl_CONDITIONAL([GL_COND_OBJ_WCRTOMB],
                 [test $HAVE_WCRTOMB = 0 || test $REPLACE_WCRTOMB = 1])
  AM_COND_IF([GL_COND_OBJ_WCRTOMB], [
    gl_PREREQ_WCRTOMB
  ])
  gl_WCHAR_MODULE_INDICATOR([wcrtomb])
  gl_FUNC_WCSWIDTH
  gl_CONDITIONAL([GL_COND_OBJ_WCSWIDTH],
                 [test $HAVE_WCSWIDTH = 0 || test $REPLACE_WCSWIDTH = 1])
  gl_WCHAR_MODULE_INDICATOR([wcswidth])
  gl_WCTYPE_H
  gl_WCTYPE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_WCWIDTH
  gl_CONDITIONAL([GL_COND_OBJ_WCWIDTH],
                 [test $HAVE_WCWIDTH = 0 || test $REPLACE_WCWIDTH = 1])
  AM_COND_IF([GL_COND_OBJ_WCWIDTH], [
    gl_PREREQ_WCWIDTH
  ])
  gl_WCHAR_MODULE_INDICATOR([wcwidth])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_COND],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_MUTEX],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_ONCE],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RECMUTEX],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RWLOCK],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_THREAD],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_TIMEDMUTEX],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_TIMEDRECMUTEX],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_TLS],
                 [case "$host_os" in mingw*) true;; *) false;; esac])
  gl_HEADER_TIOCGWINSZ_NEEDS_SYS_IOCTL
  gl_HEADER_TIOCGWINSZ_IN_TERMIOS_H
  gl_WINSIZE_IN_PTEM
  gl_FUNC_WMEMCHR
  gl_CONDITIONAL([GL_COND_OBJ_WMEMCHR], [test $HAVE_WMEMCHR = 0])
  gl_WCHAR_MODULE_INDICATOR([wmemchr])
  gl_FUNC_WMEMPCPY
  gl_CONDITIONAL([GL_COND_OBJ_WMEMPCPY], [test $HAVE_WMEMPCPY = 0])
  gl_WCHAR_MODULE_INDICATOR([wmempcpy])
  gl_FUNC_WRITE
  gl_CONDITIONAL([GL_COND_OBJ_WRITE], [test $REPLACE_WRITE = 1])
  AM_COND_IF([GL_COND_OBJ_WRITE], [
    gl_PREREQ_WRITE
  ])
  gl_UNISTD_MODULE_INDICATOR([write])
  gl_WRITE_ANY_FILE
  gl_XALLOC
  gl_MODULE_INDICATOR([xalloc])
  gl_MODULE_INDICATOR([xalloc-die])
  gl_XGETCWD
  gl_MODULE_INDICATOR([xgetgroups])
  AC_REQUIRE([AC_C_RESTRICT])
  gl_XNANOSLEEP
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=xprintf:1:c-format])
     AM_][XGETTEXT_OPTION([--flag=xvprintf:1:c-format])
     AM_][XGETTEXT_OPTION([--flag=xfprintf:2:c-format])
     AM_][XGETTEXT_OPTION([--flag=xvfprintf:2:c-format])])
  gl_XSIZE
  gl_XSTRTOD
  gl_XSTRTOL
  gl_XSTRTOLD
  gl_XVASPRINTF
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=xasprintf:1:c-format])])
  AC_REQUIRE([gl_YEAR2038])
  gl_YESNO
  # End of code from modules
  m4_ifval(gl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gl_LIBSOURCES_DIR])[ ||
      for gl_file in ]gl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gl_LIBSOURCES_DIR])
  m4_popdef([gl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gl_libobjs=
    gl_ltlibobjs=
    gl_libobjdeps=
    if test -n "$gl_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,^[^/]*$,.,'
      sed_dirname4='s,\(.\)/[^/]*$,\1,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gl_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gl_libobjs="$gl_libobjs lib/$i.$ac_objext"
        gl_ltlibobjs="$gl_ltlibobjs lib/$i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3" -e "$sed_dirname4"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gl_libobjdeps="$gl_libobjdeps lib/$i_dir/\$(DEPDIR)/$i_base.Po"
      done
    fi
    AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
    AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
    AC_SUBST([gl_LIBOBJDEPS], [$gl_libobjdeps])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([gltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gltests_LIBSOURCES]))
  m4_pushdef([gltests_LIBSOURCES_LIST], [])
  m4_pushdef([gltests_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gltests])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  AC_REQUIRE([gl_CC_ALLOW_WARNINGS])
  AC_REQUIRE([gl_CXX_ALLOW_WARNINGS])
  gl_source_base='gnulib-tests'
  gl_source_base_prefix=
changequote(,)dnl
  gltests_WITNESS=IN_`echo "${PACKAGE-$PACKAGE_TARNAME}" | LC_ALL=C tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ | LC_ALL=C sed -e 's/[^A-Z0-9_]/_/g'`_GNULIB_TESTS
changequote([, ])dnl
  AC_SUBST([gltests_WITNESS])
  gl_module_indicator_condition=$gltests_WITNESS
  m4_pushdef([gl_MODULE_INDICATOR_CONDITION], [$gl_module_indicator_condition])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  gl_CONDITIONAL([GL_COND_OBJ_ACCEPT], [test "$ac_cv_header_winsock2_h" = yes])
  gl_SYS_SOCKET_MODULE_INDICATOR([accept])
  gl_FUNC_ATOLL
  gl_CONDITIONAL([GL_COND_OBJ_ATOLL], [test $HAVE_ATOLL = 0])
  AM_COND_IF([GL_COND_OBJ_ATOLL], [
    gl_PREREQ_ATOLL
  ])
  gl_STDLIB_MODULE_INDICATOR([atoll])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  gl_CONDITIONAL([GL_COND_OBJ_BIND], [test "$ac_cv_header_winsock2_h" = yes])
  gl_SYS_SOCKET_MODULE_INDICATOR([bind])
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gt_LOCALE_FR
  gt_LOCALE_TR_UTF8
  AC_CHECK_FUNCS_ONCE([getegid])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  gl_CONDITIONAL([GL_COND_OBJ_CONNECT], [test "$ac_cv_header_winsock2_h" = yes])
  gl_SYS_SOCKET_MODULE_INDICATOR([connect])
  AC_CHECK_FUNCS_ONCE([getegid])
  AC_CHECK_DECLS_ONCE([alarm])
  gl_FUNC_UNGETC_WORKS
  gl_FUNC_UNGETC_WORKS
  gl_FUNC_UNGETC_WORKS
  gl_FUNC_UNGETC_WORKS
  gl_FUNC_GETRUSAGE
  gl_CONDITIONAL([GL_COND_OBJ_GETRUSAGE], [test $HAVE_GETRUSAGE = 0])
  gl_SYS_RESOURCE_MODULE_INDICATOR([getrusage])
  gl_MUSL_LIBC
  dnl Distinguish OpenBSD >= 6.2 from OpenBSD < 6.2.
  AC_CHECK_FUNCS_ONCE([duplocale])
  AC_C_BIGENDIAN
  gl_FUNC_INET_PTON
  gl_CONDITIONAL([GL_COND_OBJ_INET_PTON],
                 [test $HAVE_INET_PTON = 0 || test $REPLACE_INET_PTON = 1])
  AM_COND_IF([GL_COND_OBJ_INET_PTON], [
    gl_PREREQ_INET_PTON
  ])
  gl_ARPA_INET_MODULE_INDICATOR([inet_pton])
  AC_C_BIGENDIAN
  gl_FUNC_IOCTL
  gl_CONDITIONAL([GL_COND_OBJ_IOCTL],
                 [test $HAVE_IOCTL = 0 || test $REPLACE_IOCTL = 1])
  gl_SYS_IOCTL_MODULE_INDICATOR([ioctl])
  gl_DOUBLE_EXPONENT_LOCATION
  gl_FLOAT_EXPONENT_LOCATION
  gl_LONG_DOUBLE_EXPONENT_LOCATION
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gt_LOCALE_JA
  gt_LOCALE_ZH_CN
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gt_LOCALE_JA
  gt_LOCALE_ZH_CN
  AC_CHECK_FUNCS_ONCE([getegid])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  gl_CONDITIONAL([GL_COND_OBJ_LISTEN], [test "$ac_cv_header_winsock2_h" = yes])
  gl_SYS_SOCKET_MODULE_INDICATOR([listen])
  AC_CHECK_FUNCS_ONCE([newlocale])
  gl_LOCALENAME
  gl_LOCALE_MODULE_INDICATOR([localename])
  AC_CHECK_FUNCS_ONCE([newlocale])
  AC_CHECK_HEADERS_ONCE([semaphore.h])
  AC_CHECK_DECLS_ONCE([alarm])
  AC_REQUIRE([gl_SEMAPHORE])
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gt_LOCALE_JA
  gt_LOCALE_ZH_CN
  gt_LOCALE_TR_UTF8
  gt_LOCALE_ZH_CN
  gt_LOCALE_FR_UTF8
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gt_LOCALE_JA
  gt_LOCALE_ZH_CN
  gt_LOCALE_FR_UTF8
  gt_LOCALE_ZH_CN
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])
  dnl Check for prerequisites for memory fence checks.
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])
  AC_CHECK_DECLS_ONCE([alarm])
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gl_FUNC_PERROR
  gl_CONDITIONAL([GL_COND_OBJ_PERROR], [test $REPLACE_PERROR = 1])
  gl_STRING_MODULE_INDICATOR([perror])
  AC_CHECK_HEADERS_ONCE([sys/wait.h])
  dnl Check for prerequisites for memory fence checks.
  dnl FIXME: zerosize-ptr.h requires these: make a module for it
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])
  dnl Check for prerequisites for memory fence checks.
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])
  gl_FUNC_SCHED_YIELD
  gl_CONDITIONAL([GL_COND_OBJ_SCHED_YIELD],
                 [test $HAVE_SCHED_YIELD = 0 || test $REPLACE_SCHED_YIELD = 1])
  gl_SCHED_MODULE_INDICATOR([sched_yield])
  gl_FUNC_SECURE_GETENV
  gl_CONDITIONAL([GL_COND_OBJ_SECURE_GETENV], [test $HAVE_SECURE_GETENV = 0])
  AM_COND_IF([GL_COND_OBJ_SECURE_GETENV], [
    gl_PREREQ_SECURE_GETENV
  ])
  gl_STDLIB_MODULE_INDICATOR([secure_getenv])
  AC_CHECK_HEADERS_ONCE([sys/wait.h])
  gl_FUNC_SETLOCALE
  gl_CONDITIONAL([GL_COND_OBJ_SETLOCALE], [test $REPLACE_SETLOCALE = 1])
  AM_COND_IF([GL_COND_OBJ_SETLOCALE], [
    gl_PREREQ_SETLOCALE
  ])
  gl_LOCALE_MODULE_INDICATOR([setlocale])
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gt_LOCALE_JA
  gt_LOCALE_ZH_CN
  AC_REQUIRE([gl_SYS_SOCKET_H])
  gl_CONDITIONAL([GL_COND_OBJ_SETSOCKOPT],
                 [test "$ac_cv_header_winsock2_h" = yes])
  gl_SYS_SOCKET_MODULE_INDICATOR([setsockopt])
  AC_REQUIRE([gl_FLOAT_EXPONENT_LOCATION])
  AC_REQUIRE([gl_DOUBLE_EXPONENT_LOCATION])
  AC_REQUIRE([gl_LONG_DOUBLE_EXPONENT_LOCATION])
  gl_FUNC_SLEEP
  gl_CONDITIONAL([GL_COND_OBJ_SLEEP],
                 [test $HAVE_SLEEP = 0 || test $REPLACE_SLEEP = 1])
  gl_UNISTD_MODULE_INDICATOR([sleep])
  AC_CHECK_DECLS_ONCE([alarm])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  gl_CONDITIONAL([GL_COND_OBJ_SOCKET], [test "$ac_cv_header_winsock2_h" = yes])
  # When this module is used, sockets may actually occur as file descriptors,
  # hence it is worth warning if the modules 'close' and 'ioctl' are not used.
  m4_ifdef([gl_UNISTD_H_DEFAULTS], [gl_UNISTD_H_REQUIRE_DEFAULTS])
  m4_ifdef([gl_SYS_IOCTL_H_DEFAULTS], [gl_SYS_IOCTL_H_REQUIRE_DEFAULTS])
  AC_REQUIRE([gl_PREREQ_SYS_H_WINSOCK2])
  if test "$ac_cv_header_winsock2_h" = yes; then
    UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=1
    SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=1
  fi
  gl_SYS_SOCKET_MODULE_INDICATOR([socket])
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
  gl_FUNC_STRERROR_R
  AS_IF([test $HAVE_DECL_STRERROR_R = 0 || test $REPLACE_STRERROR_R = 1], [
    AC_LIBOBJ([strerror_r])
    gl_PREREQ_STRERROR_R
  ])
  gl_STRING_MODULE_INDICATOR([strerror_r])
  dnl For the modules argp, error.
  gl_MODULE_INDICATOR([strerror_r-posix])
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])
  dnl Check for prerequisites for memory fence checks.
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  AC_CHECK_FUNCS_ONCE([shutdown])
  gl_THREAD
  AC_CHECK_HEADERS([sys/single_threaded.h])
  AC_CHECK_DECLS_ONCE([alarm])
  gt_TMPDIR
  gl_FUNC_TMPFILE
  gl_CONDITIONAL([GL_COND_OBJ_TMPFILE], [test $REPLACE_TMPFILE = 1])
  AM_COND_IF([GL_COND_OBJ_TMPFILE], [
    gl_PREREQ_TMPFILE
  ])
  gl_STDIO_MODULE_INDICATOR([tmpfile])
  gt_LOCALE_FR_UTF8
  gt_LOCALE_ZH_CN
  abs_aux_dir=`cd "$ac_aux_dir"; pwd`
  AC_SUBST([abs_aux_dir])
  gl_FUNC_USLEEP
  gl_CONDITIONAL([GL_COND_OBJ_USLEEP],
                 [test $HAVE_USLEEP = 0 || test $REPLACE_USLEEP = 1])
  gl_UNISTD_MODULE_INDICATOR([usleep])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  abs_aux_dir=`cd "$ac_aux_dir"; pwd`
  AC_SUBST([abs_aux_dir])
  gl_FUNC_MMAP_ANON
  AC_REQUIRE([AC_C_INLINE])
  AC_CHECK_FUNCS_ONCE([mquery pstat_getprocvm])
  gt_LOCALE_FR
  gt_LOCALE_FR_UTF8
  gt_LOCALE_JA
  gt_LOCALE_ZH_CN
  gl_FUNC_WCTOB
  gl_CONDITIONAL([GL_COND_OBJ_WCTOB],
                 [test $HAVE_WCTOB = 0 || test $REPLACE_WCTOB = 1])
  AM_COND_IF([GL_COND_OBJ_WCTOB], [
    gl_PREREQ_WCTOB
  ])
  gl_WCHAR_MODULE_INDICATOR([wctob])
  gl_FUNC_WCTOMB
  gl_CONDITIONAL([GL_COND_OBJ_WCTOMB], [test $REPLACE_WCTOMB = 1])
  AM_COND_IF([GL_COND_OBJ_WCTOMB], [
    gl_PREREQ_WCTOMB
  ])
  gl_STDLIB_MODULE_INDICATOR([wctomb])
  AC_REQUIRE([gl_YIELD])
  m4_popdef([gl_MODULE_INDICATOR_CONDITION])
  m4_ifval(gltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]gltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gltests_LIBSOURCES_DIR])
  m4_popdef([gltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gltests_libobjs=
    gltests_ltlibobjs=
    gltests_libobjdeps=
    if test -n "$gltests_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,^[^/]*$,.,'
      sed_dirname4='s,\(.\)/[^/]*$,\1,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gltests_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gltests_libobjs="$gltests_libobjs $i.$ac_objext"
        gltests_ltlibobjs="$gltests_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3" -e "$sed_dirname4"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gltests_libobjdeps="$gltests_libobjdeps $i_dir/\$(DEPDIR)/$i_base.Po"
      done
    fi
    AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
    AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
    AC_SUBST([gltests_LIBOBJDEPS], [$gltests_libobjdeps])
  ])
  AC_REQUIRE([gl_CC_GNULIB_WARNINGS])
  LIBCOREUTILS_LIBDEPS="$gl_libdeps"
  AC_SUBST([LIBCOREUTILS_LIBDEPS])
  LIBCOREUTILS_LTLIBDEPS="$gl_ltlibdeps"
  AC_SUBST([LIBCOREUTILS_LTLIBDEPS])
  LIBTESTS_LIBDEPS="$gltests_libdeps"
  AC_SUBST([LIBTESTS_LIBDEPS])
])
m4trace:m4/gnulib-comp.m4:2793: -1- AC_DEFUN([gl_LIBOBJ], [
  AS_LITERAL_IF([$1], [gl_LIBSOURCES([$1.c])])dnl
  gl_LIBOBJS="$gl_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:2800: -1- AC_DEFUN([gl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gl_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:2809: -1- AC_DEFUN([gl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gl_LIBSOURCES_DIR], [lib])
      m4_append([gl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:2820: -1- AC_DEFUN([gltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [gltests_LIBSOURCES([$1.c])])dnl
  gltests_LIBOBJS="$gltests_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:2827: -1- AC_DEFUN([gltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gltests_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:2836: -1- AC_DEFUN([gltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gltests_LIBSOURCES_DIR], [gnulib-tests])
      m4_append([gltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:2847: -1- AC_DEFUN([gl_FILE_LIST], [
  build-aux/announce-gen
  build-aux/config.rpath
  build-aux/do-release-commit-and-tag
  build-aux/gendocs.sh
  build-aux/git-version-gen
  build-aux/gitlog-to-changelog
  build-aux/gnu-web-doc-update
  build-aux/gnupload
  build-aux/update-copyright
  build-aux/useless-if-before-free
  build-aux/vc-list-files
  doc/gendocs_template
  doc/gendocs_template_min
  doc/parse-datetime.texi
  lib/_Noreturn.h
  lib/acl-errno-valid.c
  lib/acl-internal.c
  lib/acl-internal.h
  lib/acl.h
  lib/acl_entries.c
  lib/af_alg.c
  lib/af_alg.h
  lib/alignalloc.c
  lib/alignalloc.h
  lib/alignof.h
  lib/alloca.c
  lib/alloca.in.h
  lib/allocator.c
  lib/allocator.h
  lib/anytostr.c
  lib/areadlink-with-size.c
  lib/areadlink.c
  lib/areadlink.h
  lib/areadlinkat-with-size.c
  lib/areadlinkat.c
  lib/arg-nonnull.h
  lib/argmatch.c
  lib/argmatch.h
  lib/argv-iter.c
  lib/argv-iter.h
  lib/arpa_inet.in.h
  lib/asnprintf.c
  lib/asprintf.c
  lib/assure.h
  lib/at-func.c
  lib/at-func2.c
  lib/attribute.h
  lib/backup-find.c
  lib/backup-internal.h
  lib/backup-rename.c
  lib/backupfile.c
  lib/backupfile.h
  lib/base32.c
  lib/base32.h
  lib/base64.c
  lib/base64.h
  lib/basename-lgpl.c
  lib/basename-lgpl.h
  lib/basename.c
  lib/binary-io.c
  lib/binary-io.h
  lib/bitrotate.c
  lib/bitrotate.h
  lib/btowc.c
  lib/buffer-lcm.c
  lib/buffer-lcm.h
  lib/byteswap.in.h
  lib/c++defs.h
  lib/c-ctype.c
  lib/c-ctype.h
  lib/c-strcase.h
  lib/c-strcasecmp.c
  lib/c-strcaseeq.h
  lib/c-strncasecmp.c
  lib/c-strtod.c
  lib/c-strtod.h
  lib/c-strtold.c
  lib/calloc.c
  lib/canon-host.c
  lib/canon-host.h
  lib/canonicalize.c
  lib/canonicalize.h
  lib/careadlinkat.c
  lib/careadlinkat.h
  lib/cdefs.h
  lib/chdir-long.c
  lib/chdir-long.h
  lib/chmodat.c
  lib/chown.c
  lib/chownat.c
  lib/cl-strtod.c
  lib/cl-strtod.h
  lib/cl-strtold.c
  lib/cloexec.c
  lib/cloexec.h
  lib/close-stream.c
  lib/close-stream.h
  lib/close.c
  lib/closedir.c
  lib/closein.c
  lib/closein.h
  lib/closeout.c
  lib/closeout.h
  lib/copy-acl.c
  lib/copy-file-range.c
  lib/count-leading-zeros.c
  lib/count-leading-zeros.h
  lib/creat-safer.c
  lib/ctype.in.h
  lib/cycle-check.c
  lib/cycle-check.h
  lib/dev-ino.h
  lib/di-set.c
  lib/di-set.h
  lib/dirchownmod.c
  lib/dirchownmod.h
  lib/dirent--.h
  lib/dirent-private.h
  lib/dirent-safer.h
  lib/dirent.in.h
  lib/dirfd.c
  lib/dirname-lgpl.c
  lib/dirname.c
  lib/dirname.h
  lib/dtoastr.c
  lib/dtotimespec.c
  lib/dup-safer-flag.c
  lib/dup-safer.c
  lib/dup.c
  lib/dup2.c
  lib/dynarray.h
  lib/eloop-threshold.h
  lib/errno.in.h
  lib/error.c
  lib/error.h
  lib/euidaccess.c
  lib/exclude.c
  lib/exclude.h
  lib/exitfail.c
  lib/exitfail.h
  lib/explicit_bzero.c
  lib/faccessat.c
  lib/fadvise.c
  lib/fadvise.h
  lib/fchdir.c
  lib/fchmodat.c
  lib/fchown-stub.c
  lib/fchownat.c
  lib/fclose.c
  lib/fcntl--.h
  lib/fcntl-safer.h
  lib/fcntl.c
  lib/fcntl.in.h
  lib/fd-hook.c
  lib/fd-hook.h
  lib/fd-reopen.c
  lib/fd-reopen.h
  lib/fd-safer-flag.c
  lib/fd-safer.c
  lib/fdatasync.c
  lib/fdopen.c
  lib/fdopendir.c
  lib/fdutimensat.c
  lib/fflush.c
  lib/file-has-acl.c
  lib/file-set.c
  lib/file-set.h
  lib/file-type.c
  lib/file-type.h
  lib/fileblocks.c
  lib/filemode.c
  lib/filemode.h
  lib/filename.h
  lib/filenamecat-lgpl.c
  lib/filenamecat.c
  lib/filenamecat.h
  lib/filevercmp.c
  lib/filevercmp.h
  lib/flexmember.h
  lib/float+.h
  lib/float.c
  lib/float.in.h
  lib/fnmatch.c
  lib/fnmatch.in.h
  lib/fnmatch_loop.c
  lib/fopen-safer.c
  lib/fopen.c
  lib/fpending.c
  lib/fpending.h
  lib/fprintftime.c
  lib/fprintftime.h
  lib/fpucw.h
  lib/fpurge.c
  lib/freadahead.c
  lib/freadahead.h
  lib/freading.c
  lib/freading.h
  lib/freadptr.c
  lib/freadptr.h
  lib/freadseek.c
  lib/freadseek.h
  lib/free.c
  lib/freopen-safer.c
  lib/freopen.c
  lib/frexp.c
  lib/frexpl.c
  lib/fseek.c
  lib/fseeko.c
  lib/fseterr.c
  lib/fseterr.h
  lib/fstat.c
  lib/fstatat.c
  lib/fsusage.c
  lib/fsusage.h
  lib/fsync.c
  lib/ftell.c
  lib/ftello.c
  lib/ftoastr.c
  lib/ftoastr.h
  lib/ftruncate.c
  lib/fts-cycle.c
  lib/fts.c
  lib/fts_.h
  lib/full-read.c
  lib/full-read.h
  lib/full-write.c
  lib/full-write.h
  lib/futimens.c
  lib/gai_strerror.c
  lib/get-permissions.c
  lib/getaddrinfo.c
  lib/getcwd-lgpl.c
  lib/getcwd.c
  lib/getdelim.c
  lib/getdtablesize.c
  lib/getfilecon.c
  lib/getgroups.c
  lib/gethostname.c
  lib/gethrxtime.c
  lib/gethrxtime.h
  lib/getline.c
  lib/getloadavg.c
  lib/getlogin.c
  lib/getndelim2.c
  lib/getndelim2.h
  lib/getopt-cdefs.in.h
  lib/getopt-core.h
  lib/getopt-ext.h
  lib/getopt-pfx-core.h
  lib/getopt-pfx-ext.h
  lib/getopt.c
  lib/getopt.in.h
  lib/getopt1.c
  lib/getopt_int.h
  lib/getpagesize.c
  lib/getpass.c
  lib/getpass.h
  lib/getprogname.c
  lib/getprogname.h
  lib/getrandom.c
  lib/gettext.h
  lib/gettime-res.c
  lib/gettime.c
  lib/gettimeofday.c
  lib/getugroups.c
  lib/getugroups.h
  lib/getusershell.c
  lib/gl_openssl.h
  lib/glthread/lock.c
  lib/glthread/lock.h
  lib/glthread/threadlib.c
  lib/glthread/tls.c
  lib/glthread/tls.h
  lib/group-member.c
  lib/hard-locale.c
  lib/hard-locale.h
  lib/hash-pjw.c
  lib/hash-pjw.h
  lib/hash-triple-simple.c
  lib/hash-triple.c
  lib/hash-triple.h
  lib/hash.c
  lib/hash.h
  lib/heap.c
  lib/heap.h
  lib/human.c
  lib/human.h
  lib/i-ring.c
  lib/i-ring.h
  lib/ialloc.c
  lib/ialloc.h
  lib/iconv.c
  lib/iconv.in.h
  lib/iconv_close.c
  lib/iconv_open-aix.gperf
  lib/iconv_open-hpux.gperf
  lib/iconv_open-irix.gperf
  lib/iconv_open-osf.gperf
  lib/iconv_open-solaris.gperf
  lib/iconv_open-zos.gperf
  lib/iconv_open.c
  lib/idcache.c
  lib/idcache.h
  lib/idx.h
  lib/ignore-value.h
  lib/imaxtostr.c
  lib/inet_ntop.c
  lib/ino-map.c
  lib/ino-map.h
  lib/intprops.h
  lib/inttostr.c
  lib/inttostr.h
  lib/inttypes.in.h
  lib/isapipe.c
  lib/isapipe.h
  lib/isatty.c
  lib/isblank.c
  lib/isnan.c
  lib/isnand-nolibm.h
  lib/isnand.c
  lib/isnanf-nolibm.h
  lib/isnanf.c
  lib/isnanl-nolibm.h
  lib/isnanl.c
  lib/iswblank.c
  lib/iswdigit.c
  lib/iswxdigit.c
  lib/itold.c
  lib/langinfo.in.h
  lib/lc-charset-dispatch.c
  lib/lc-charset-dispatch.h
  lib/lchmod.c
  lib/lchown.c
  lib/ldtoastr.c
  lib/libc-config.h
  lib/limits.in.h
  lib/linebuffer.c
  lib/linebuffer.h
  lib/link.c
  lib/linkat.c
  lib/localcharset.c
  lib/localcharset.h
  lib/locale.in.h
  lib/localeconv.c
  lib/long-options.c
  lib/long-options.h
  lib/lseek.c
  lib/lstat.c
  lib/malloc.c
  lib/malloc/dynarray-skeleton.c
  lib/malloc/dynarray.h
  lib/malloc/dynarray_at_failure.c
  lib/malloc/dynarray_emplace_enlarge.c
  lib/malloc/dynarray_finalize.c
  lib/malloc/dynarray_resize.c
  lib/malloc/dynarray_resize_clear.c
  lib/malloc/scratch_buffer.h
  lib/malloc/scratch_buffer_dupfree.c
  lib/malloc/scratch_buffer_grow.c
  lib/malloc/scratch_buffer_grow_preserve.c
  lib/malloc/scratch_buffer_set_array_size.c
  lib/malloca.c
  lib/malloca.h
  lib/math.c
  lib/math.in.h
  lib/mbchar.c
  lib/mbchar.h
  lib/mbiter.c
  lib/mbiter.h
  lib/mbrlen.c
  lib/mbrtowc-impl-utf8.h
  lib/mbrtowc-impl.h
  lib/mbrtowc.c
  lib/mbsalign.c
  lib/mbsalign.h
  lib/mbscasecmp.c
  lib/mbschr.c
  lib/mbsinit.c
  lib/mbslen.c
  lib/mbsrtowcs-impl.h
  lib/mbsrtowcs-state.c
  lib/mbsrtowcs.c
  lib/mbsstr.c
  lib/mbswidth.c
  lib/mbswidth.h
  lib/mbtowc-impl.h
  lib/mbtowc-lock.c
  lib/mbtowc-lock.h
  lib/mbtowc.c
  lib/mbuiter.c
  lib/mbuiter.h
  lib/md5-stream.c
  lib/md5.c
  lib/md5.h
  lib/memcasecmp.c
  lib/memcasecmp.h
  lib/memchr.c
  lib/memchr.valgrind
  lib/memchr2.c
  lib/memchr2.h
  lib/memchr2.valgrind
  lib/memcmp2.c
  lib/memcmp2.h
  lib/memcoll.c
  lib/memcoll.h
  lib/mempcpy.c
  lib/memrchr.c
  lib/mgetgroups.c
  lib/mgetgroups.h
  lib/mini-gmp-gnulib.c
  lib/mini-gmp.c
  lib/mini-gmp.h
  lib/minmax.h
  lib/mkancesdirs.c
  lib/mkancesdirs.h
  lib/mkdir-p.c
  lib/mkdir-p.h
  lib/mkdir.c
  lib/mkdirat.c
  lib/mkfifo.c
  lib/mkfifoat.c
  lib/mknod.c
  lib/mknodat.c
  lib/mkostemp.c
  lib/mkstemp-safer.c
  lib/mkstemp.c
  lib/mktime-internal.h
  lib/mktime.c
  lib/modechange.c
  lib/modechange.h
  lib/mountlist.c
  lib/mountlist.h
  lib/mpsort.c
  lib/mpsort.h
  lib/msvc-inval.c
  lib/msvc-inval.h
  lib/msvc-nothrow.c
  lib/msvc-nothrow.h
  lib/nanosleep.c
  lib/netdb.in.h
  lib/netinet_in.in.h
  lib/nl_langinfo-lock.c
  lib/nl_langinfo.c
  lib/nproc.c
  lib/nproc.h
  lib/nstrftime.c
  lib/obstack.c
  lib/obstack.h
  lib/offtostr.c
  lib/open-safer.c
  lib/open.c
  lib/openat-die.c
  lib/openat-priv.h
  lib/openat-proc.c
  lib/openat-safer.c
  lib/openat.c
  lib/openat.h
  lib/opendir-safer.c
  lib/opendir.c
  lib/opendirat.c
  lib/opendirat.h
  lib/parse-datetime.h
  lib/parse-datetime.y
  lib/pathmax.h
  lib/physmem.c
  lib/physmem.h
  lib/pipe-safer.c
  lib/pipe.c
  lib/pipe2.c
  lib/posix_memalign.c
  lib/posixtm.c
  lib/posixtm.h
  lib/posixver.c
  lib/posixver.h
  lib/printf-args.c
  lib/printf-args.h
  lib/printf-frexp.c
  lib/printf-frexp.h
  lib/printf-frexpl.c
  lib/printf-frexpl.h
  lib/printf-parse.c
  lib/printf-parse.h
  lib/priv-set.c
  lib/priv-set.h
  lib/progname.c
  lib/progname.h
  lib/propername.c
  lib/propername.h
  lib/pselect.c
  lib/pthread-cond.c
  lib/pthread-mutex.c
  lib/pthread-thread.c
  lib/pthread.in.h
  lib/pthread_mutex_timedlock.c
  lib/pthread_sigmask.c
  lib/putenv.c
  lib/qcopy-acl.c
  lib/qset-acl.c
  lib/quote.h
  lib/quotearg.c
  lib/quotearg.h
  lib/raise.c
  lib/rand-isaac.c
  lib/rand-isaac.h
  lib/randint.c
  lib/randint.h
  lib/randperm.c
  lib/randperm.h
  lib/randread.c
  lib/randread.h
  lib/rawmemchr.c
  lib/rawmemchr.valgrind
  lib/read-file.c
  lib/read-file.h
  lib/read.c
  lib/readdir.c
  lib/readlink.c
  lib/readlinkat.c
  lib/readtokens.c
  lib/readtokens.h
  lib/readtokens0.c
  lib/readtokens0.h
  lib/readutmp.c
  lib/readutmp.h
  lib/realloc.c
  lib/reallocarray.c
  lib/regcomp.c
  lib/regex.c
  lib/regex.h
  lib/regex_internal.c
  lib/regex_internal.h
  lib/regexec.c
  lib/remove.c
  lib/rename.c
  lib/renameat.c
  lib/renameatu.c
  lib/renameatu.h
  lib/rewinddir.c
  lib/rmdir.c
  lib/root-dev-ino.c
  lib/root-dev-ino.h
  lib/root-uid.h
  lib/rpmatch.c
  lib/safe-read.c
  lib/safe-read.h
  lib/safe-write.c
  lib/safe-write.h
  lib/same-inode.h
  lib/same.c
  lib/same.h
  lib/save-cwd.c
  lib/save-cwd.h
  lib/savedir.c
  lib/savedir.h
  lib/savewd.c
  lib/savewd.h
  lib/sched.in.h
  lib/scratch_buffer.h
  lib/se-context.c
  lib/se-context.in.h
  lib/se-label.c
  lib/se-label.in.h
  lib/se-selinux.c
  lib/se-selinux.in.h
  lib/select.c
  lib/selinux-at.c
  lib/selinux-at.h
  lib/set-acl.c
  lib/set-permissions.c
  lib/setenv.c
  lib/setlocale-lock.c
  lib/setlocale_null.c
  lib/setlocale_null.h
  lib/settime.c
  lib/sha1-stream.c
  lib/sha1.c
  lib/sha1.h
  lib/sha256-stream.c
  lib/sha256.c
  lib/sha256.h
  lib/sha512-stream.c
  lib/sha512.c
  lib/sha512.h
  lib/sig-handler.c
  lib/sig-handler.h
  lib/sig2str.c
  lib/sig2str.h
  lib/sigaction.c
  lib/siglist.h
  lib/signal.in.h
  lib/signbitd.c
  lib/signbitf.c
  lib/signbitl.c
  lib/sigprocmask.c
  lib/size_max.h
  lib/sm3-stream.c
  lib/sm3.c
  lib/sm3.h
  lib/smack.h
  lib/snprintf.c
  lib/sockets.c
  lib/sockets.h
  lib/stat-macros.h
  lib/stat-size.h
  lib/stat-time.c
  lib/stat-time.h
  lib/stat-w32.c
  lib/stat-w32.h
  lib/stat.c
  lib/stdalign.in.h
  lib/stdarg.in.h
  lib/stdbool.in.h
  lib/stddef.in.h
  lib/stdint.in.h
  lib/stdio--.h
  lib/stdio-impl.h
  lib/stdio-read.c
  lib/stdio-safer.h
  lib/stdio-write.c
  lib/stdio.in.h
  lib/stdlib--.h
  lib/stdlib-safer.h
  lib/stdlib.in.h
  lib/stpcpy.c
  lib/stpncpy.c
  lib/str-kmp.h
  lib/str-two-way.h
  lib/strdup.c
  lib/streq.h
  lib/strerror-override.c
  lib/strerror-override.h
  lib/strerror.c
  lib/strftime.h
  lib/striconv.c
  lib/striconv.h
  lib/string.in.h
  lib/strintcmp.c
  lib/stripslash.c
  lib/strncat.c
  lib/strnlen.c
  lib/strnlen1.c
  lib/strnlen1.h
  lib/strnumcmp-in.h
  lib/strnumcmp.c
  lib/strnumcmp.h
  lib/strsignal.c
  lib/strstr.c
  lib/strtod.c
  lib/strtoimax.c
  lib/strtol.c
  lib/strtold.c
  lib/strtoll.c
  lib/strtoul.c
  lib/strtoull.c
  lib/strtoumax.c
  lib/symlink.c
  lib/symlinkat.c
  lib/sys-limits.h
  lib/sys_ioctl.in.h
  lib/sys_random.in.h
  lib/sys_resource.in.h
  lib/sys_select.in.h
  lib/sys_socket.c
  lib/sys_socket.in.h
  lib/sys_stat.in.h
  lib/sys_time.in.h
  lib/sys_types.in.h
  lib/sys_uio.in.h
  lib/sys_utsname.in.h
  lib/sys_wait.in.h
  lib/targetdir.c
  lib/targetdir.h
  lib/tempname.c
  lib/tempname.h
  lib/termios.in.h
  lib/time-internal.h
  lib/time.in.h
  lib/time_r.c
  lib/time_rz.c
  lib/timegm.c
  lib/timespec.c
  lib/timespec.h
  lib/trim.c
  lib/trim.h
  lib/tzset.c
  lib/u64.c
  lib/u64.h
  lib/uinttostr.c
  lib/umaxtostr.c
  lib/uname.c
  lib/unicodeio.c
  lib/unicodeio.h
  lib/unictype/bitmap.h
  lib/unistd--.h
  lib/unistd-safer.h
  lib/unistd.c
  lib/unistd.in.h
  lib/unistr.in.h
  lib/unistr/u8-mbtoucr.c
  lib/unistr/u8-uctomb-aux.c
  lib/unistr/u8-uctomb.c
  lib/unitypes.in.h
  lib/uniwidth.in.h
  lib/uniwidth/cjk.h
  lib/uniwidth/width.c
  lib/uniwidth/width0.h
  lib/uniwidth/width2.h
  lib/unlink.c
  lib/unlinkat.c
  lib/unlinkdir.c
  lib/unlinkdir.h
  lib/unlocked-io.h
  lib/unsetenv.c
  lib/userspec.c
  lib/userspec.h
  lib/utime.c
  lib/utime.in.h
  lib/utimecmp.c
  lib/utimecmp.h
  lib/utimens.c
  lib/utimens.h
  lib/utimensat.c
  lib/vasnprintf.c
  lib/vasnprintf.h
  lib/vasprintf.c
  lib/verify.h
  lib/verror.c
  lib/verror.h
  lib/version-etc-fsf.c
  lib/version-etc.c
  lib/version-etc.h
  lib/vfprintf.c
  lib/vprintf.c
  lib/w32sock.h
  lib/warn-on-use.h
  lib/wchar.in.h
  lib/wcrtomb.c
  lib/wcswidth-impl.h
  lib/wcswidth.c
  lib/wctype-h.c
  lib/wctype.in.h
  lib/wcwidth.c
  lib/windows-cond.c
  lib/windows-cond.h
  lib/windows-initguard.h
  lib/windows-mutex.c
  lib/windows-mutex.h
  lib/windows-once.c
  lib/windows-once.h
  lib/windows-recmutex.c
  lib/windows-recmutex.h
  lib/windows-rwlock.c
  lib/windows-rwlock.h
  lib/windows-thread.c
  lib/windows-thread.h
  lib/windows-timedmutex.c
  lib/windows-timedmutex.h
  lib/windows-timedrecmutex.c
  lib/windows-timedrecmutex.h
  lib/windows-tls.c
  lib/windows-tls.h
  lib/wmemchr-impl.h
  lib/wmemchr.c
  lib/wmempcpy.c
  lib/write-any-file.c
  lib/write-any-file.h
  lib/write.c
  lib/xalignalloc.c
  lib/xalloc-die.c
  lib/xalloc-oversized.h
  lib/xalloc.h
  lib/xasprintf.c
  lib/xbinary-io.c
  lib/xbinary-io.h
  lib/xdectoimax.c
  lib/xdectoint.c
  lib/xdectoint.h
  lib/xdectoumax.c
  lib/xfts.c
  lib/xfts.h
  lib/xgetaname-impl.h
  lib/xgetcwd.c
  lib/xgetcwd.h
  lib/xgetgroups.c
  lib/xgethostname.c
  lib/xgethostname.h
  lib/xmalloc.c
  lib/xmemcoll.c
  lib/xmemcoll.h
  lib/xnanosleep.c
  lib/xnanosleep.h
  lib/xprintf.c
  lib/xprintf.h
  lib/xreadlink.c
  lib/xreadlink.h
  lib/xsize.c
  lib/xsize.h
  lib/xstriconv.c
  lib/xstriconv.h
  lib/xstrtod.c
  lib/xstrtod.h
  lib/xstrtoimax.c
  lib/xstrtol-error.c
  lib/xstrtol-error.h
  lib/xstrtol.c
  lib/xstrtol.h
  lib/xstrtold.c
  lib/xstrtoul.c
  lib/xstrtoumax.c
  lib/xtime.c
  lib/xtime.h
  lib/xvasprintf.c
  lib/xvasprintf.h
  lib/yesno.c
  lib/yesno.h
  m4/00gnulib.m4
  m4/__inline.m4
  m4/absolute-header.m4
  m4/acl.m4
  m4/af_alg.m4
  m4/alignalloc.m4
  m4/alloca.m4
  m4/arpa_inet_h.m4
  m4/assert.m4
  m4/atoll.m4
  m4/autobuild.m4
  m4/backupfile.m4
  m4/base32.m4
  m4/base64.m4
  m4/bison.m4
  m4/btowc.m4
  m4/builtin-expect.m4
  m4/byteswap.m4
  m4/c-strtod.m4
  m4/calloc.m4
  m4/canon-host.m4
  m4/canonicalize.m4
  m4/chdir-long.m4
  m4/chown.m4
  m4/clock_time.m4
  m4/close.m4
  m4/closedir.m4
  m4/codeset.m4
  m4/config-h.m4
  m4/configmake.m4
  m4/copy-file-range.m4
  m4/ctype_h.m4
  m4/cycle-check.m4
  m4/d-ino.m4
  m4/d-type.m4
  m4/dirent-safer.m4
  m4/dirent_h.m4
  m4/dirfd.m4
  m4/double-slash-root.m4
  m4/dup.m4
  m4/dup2.m4
  m4/eealloc.m4
  m4/environ.m4
  m4/errno_h.m4
  m4/error.m4
  m4/euidaccess.m4
  m4/explicit_bzero.m4
  m4/exponentd.m4
  m4/exponentf.m4
  m4/exponentl.m4
  m4/extensions.m4
  m4/extern-inline.m4
  m4/faccessat.m4
  m4/fchdir.m4
  m4/fchmodat.m4
  m4/fchownat.m4
  m4/fclose.m4
  m4/fcntl-o.m4
  m4/fcntl-safer.m4
  m4/fcntl.m4
  m4/fcntl_h.m4
  m4/fdatasync.m4
  m4/fdopen.m4
  m4/fdopendir.m4
  m4/fflush.m4
  m4/fileblocks.m4
  m4/filemode.m4
  m4/filenamecat.m4
  m4/flexmember.m4
  m4/float_h.m4
  m4/fnmatch.m4
  m4/fnmatch_h.m4
  m4/fopen.m4
  m4/fpending.m4
  m4/fpieee.m4
  m4/fpurge.m4
  m4/freadahead.m4
  m4/freading.m4
  m4/freadptr.m4
  m4/freadseek.m4
  m4/free.m4
  m4/freopen.m4
  m4/frexp.m4
  m4/frexpl.m4
  m4/fseek.m4
  m4/fseeko.m4
  m4/fseterr.m4
  m4/fstat.m4
  m4/fstatat.m4
  m4/fstypename.m4
  m4/fsusage.m4
  m4/fsync.m4
  m4/ftell.m4
  m4/ftello.m4
  m4/ftruncate.m4
  m4/fts.m4
  m4/futimens.m4
  m4/getaddrinfo.m4
  m4/getcwd-abort-bug.m4
  m4/getcwd-path-max.m4
  m4/getcwd.m4
  m4/getdelim.m4
  m4/getdtablesize.m4
  m4/getgroups.m4
  m4/gethostname.m4
  m4/gethrxtime.m4
  m4/getline.m4
  m4/getloadavg.m4
  m4/getlogin.m4
  m4/getndelim2.m4
  m4/getopt.m4
  m4/getpagesize.m4
  m4/getpass.m4
  m4/getprogname.m4
  m4/getrandom.m4
  m4/getrusage.m4
  m4/gettime.m4
  m4/gettimeofday.m4
  m4/getugroups.m4
  m4/getusershell.m4
  m4/gl-openssl.m4
  m4/gnu-make.m4
  m4/gnulib-common.m4
  m4/group-member.m4
  m4/host-cpu-c-abi.m4
  m4/host-os.m4
  m4/hostent.m4
  m4/human.m4
  m4/i-ring.m4
  m4/iconv.m4
  m4/iconv_h.m4
  m4/iconv_open.m4
  m4/idcache.m4
  m4/include_next.m4
  m4/inet_ntop.m4
  m4/inet_pton.m4
  m4/inline.m4
  m4/intl-thread-locale.m4
  m4/intlmacosx.m4
  m4/intmax_t.m4
  m4/inttostr.m4
  m4/inttypes.m4
  m4/inttypes_h.m4
  m4/ioctl.m4
  m4/isapipe.m4
  m4/isatty.m4
  m4/isblank.m4
  m4/isnand.m4
  m4/isnanf.m4
  m4/isnanl.m4
  m4/iswblank.m4
  m4/iswdigit.m4
  m4/iswxdigit.m4
  m4/jm-winsz1.m4
  m4/jm-winsz2.m4
  m4/langinfo_h.m4
  m4/largefile.m4
  m4/lchmod.m4
  m4/lchown.m4
  m4/lcmessage.m4
  m4/ldexp.m4
  m4/ldexpl.m4
  m4/lib-ignore.m4
  m4/lib-ld.m4
  m4/lib-link.m4
  m4/lib-prefix.m4
  m4/libgmp.m4
  m4/libunistring-base.m4
  m4/limits-h.m4
  m4/link-follow.m4
  m4/link.m4
  m4/linkat.m4
  m4/localcharset.m4
  m4/locale-fr.m4
  m4/locale-ja.m4
  m4/locale-tr.m4
  m4/locale-zh.m4
  m4/locale_h.m4
  m4/localeconv.m4
  m4/localename.m4
  m4/lock.m4
  m4/lseek.m4
  m4/lstat.m4
  m4/malloc.m4
  m4/malloca.m4
  m4/manywarnings-c++.m4
  m4/manywarnings.m4
  m4/math_h.m4
  m4/mbchar.m4
  m4/mbiter.m4
  m4/mbrlen.m4
  m4/mbrtowc.m4
  m4/mbsinit.m4
  m4/mbslen.m4
  m4/mbsrtowcs.m4
  m4/mbstate_t.m4
  m4/mbswidth.m4
  m4/mbtowc.m4
  m4/md5.m4
  m4/memcasecmp.m4
  m4/memchr.m4
  m4/memcoll.m4
  m4/mempcpy.m4
  m4/memrchr.m4
  m4/mgetgroups.m4
  m4/minmax.m4
  m4/mkancesdirs.m4
  m4/mkdir-p.m4
  m4/mkdir.m4
  m4/mkdirat.m4
  m4/mkfifo.m4
  m4/mkfifoat.m4
  m4/mknod.m4
  m4/mkostemp.m4
  m4/mkstemp.m4
  m4/mktime.m4
  m4/mmap-anon.m4
  m4/mode_t.m4
  m4/modechange.m4
  m4/mountlist.m4
  m4/mpsort.m4
  m4/msvc-inval.m4
  m4/msvc-nothrow.m4
  m4/multiarch.m4
  m4/musl.m4
  m4/nanosleep.m4
  m4/netdb_h.m4
  m4/netinet_in_h.m4
  m4/nl_langinfo.m4
  m4/nocrash.m4
  m4/nproc.m4
  m4/nstrftime.m4
  m4/obstack.m4
  m4/off_t.m4
  m4/open-cloexec.m4
  m4/open-slash.m4
  m4/open.m4
  m4/openat.m4
  m4/opendir.m4
  m4/parse-datetime.m4
  m4/pathmax.m4
  m4/perl.m4
  m4/perror.m4
  m4/physmem.m4
  m4/pid_t.m4
  m4/pipe.m4
  m4/pipe2.m4
  m4/posix-shell.m4
  m4/posix_memalign.m4
  m4/posixtm.m4
  m4/posixver.m4
  m4/printf-frexp.m4
  m4/printf-frexpl.m4
  m4/printf.m4
  m4/priv-set.m4
  m4/pselect.m4
  m4/pthread-cond.m4
  m4/pthread-mutex.m4
  m4/pthread-thread.m4
  m4/pthread_h.m4
  m4/pthread_mutex_timedlock.m4
  m4/pthread_rwlock_rdlock.m4
  m4/pthread_sigmask.m4
  m4/putenv.m4
  m4/quote.m4
  m4/quotearg.m4
  m4/raise.m4
  m4/rawmemchr.m4
  m4/read-file.m4
  m4/read.m4
  m4/readdir.m4
  m4/readlink.m4
  m4/readlinkat.m4
  m4/readtokens.m4
  m4/readutmp.m4
  m4/realloc.m4
  m4/reallocarray.m4
  m4/regex.m4
  m4/remove.m4
  m4/rename.m4
  m4/renameat.m4
  m4/rewinddir.m4
  m4/rmdir.m4
  m4/rpmatch.m4
  m4/safe-read.m4
  m4/safe-write.m4
  m4/same.m4
  m4/save-cwd.m4
  m4/savedir.m4
  m4/savewd.m4
  m4/sched_h.m4
  m4/sched_yield.m4
  m4/secure_getenv.m4
  m4/select.m4
  m4/selinux-context-h.m4
  m4/selinux-label-h.m4
  m4/selinux-selinux-h.m4
  m4/semaphore.m4
  m4/servent.m4
  m4/setenv.m4
  m4/setlocale.m4
  m4/setlocale_null.m4
  m4/settime.m4
  m4/sha1.m4
  m4/sha256.m4
  m4/sha512.m4
  m4/sig2str.m4
  m4/sigaction.m4
  m4/signal_h.m4
  m4/signalblocking.m4
  m4/signbit.m4
  m4/size_max.m4
  m4/sleep.m4
  m4/sm3.m4
  m4/snprintf.m4
  m4/socketlib.m4
  m4/sockets.m4
  m4/socklen.m4
  m4/sockpfaf.m4
  m4/ssize_t.m4
  m4/stat-size.m4
  m4/stat-time.m4
  m4/stat.m4
  m4/std-gnu11.m4
  m4/stdalign.m4
  m4/stdarg.m4
  m4/stdbool.m4
  m4/stddef_h.m4
  m4/stdint.m4
  m4/stdint_h.m4
  m4/stdio_h.m4
  m4/stdlib_h.m4
  m4/stpcpy.m4
  m4/stpncpy.m4
  m4/strdup.m4
  m4/strerror.m4
  m4/strerror_r.m4
  m4/string_h.m4
  m4/strncat.m4
  m4/strnlen.m4
  m4/strsignal.m4
  m4/strstr.m4
  m4/strtod.m4
  m4/strtoimax.m4
  m4/strtold.m4
  m4/strtoll.m4
  m4/strtoull.m4
  m4/strtoumax.m4
  m4/symlink.m4
  m4/symlinkat.m4
  m4/sys_ioctl_h.m4
  m4/sys_random_h.m4
  m4/sys_resource_h.m4
  m4/sys_select_h.m4
  m4/sys_socket_h.m4
  m4/sys_stat_h.m4
  m4/sys_time_h.m4
  m4/sys_types_h.m4
  m4/sys_uio_h.m4
  m4/sys_utsname_h.m4
  m4/sys_wait_h.m4
  m4/tempname.m4
  m4/termios_h.m4
  m4/thread.m4
  m4/threadlib.m4
  m4/time_h.m4
  m4/time_r.m4
  m4/time_rz.m4
  m4/timegm.m4
  m4/timer_time.m4
  m4/timespec.m4
  m4/tls.m4
  m4/tm_gmtoff.m4
  m4/tmpdir.m4
  m4/tmpfile.m4
  m4/tzset.m4
  m4/uname.m4
  m4/ungetc.m4
  m4/unicodeio.m4
  m4/unistd-safer.m4
  m4/unistd_h.m4
  m4/unlink-busy.m4
  m4/unlink.m4
  m4/unlinkat.m4
  m4/unlinkdir.m4
  m4/unlocked-io.m4
  m4/uptime.m4
  m4/userspec.m4
  m4/usleep.m4
  m4/utime.m4
  m4/utime_h.m4
  m4/utimecmp.m4
  m4/utimens.m4
  m4/utimensat.m4
  m4/utimes.m4
  m4/vararrays.m4
  m4/vasnprintf.m4
  m4/vasprintf-posix.m4
  m4/vasprintf.m4
  m4/version-etc.m4
  m4/vfprintf-posix.m4
  m4/visibility.m4
  m4/vprintf-posix.m4
  m4/warn-on-use.m4
  m4/warnings.m4
  m4/wchar_h.m4
  m4/wchar_t.m4
  m4/wcrtomb.m4
  m4/wcswidth.m4
  m4/wctob.m4
  m4/wctomb.m4
  m4/wctype_h.m4
  m4/wcwidth.m4
  m4/wint_t.m4
  m4/wmemchr.m4
  m4/wmempcpy.m4
  m4/write-any-file.m4
  m4/write.m4
  m4/xalloc.m4
  m4/xgetcwd.m4
  m4/xnanosleep.m4
  m4/xsize.m4
  m4/xstrtod.m4
  m4/xstrtol.m4
  m4/xvasprintf.m4
  m4/year2038.m4
  m4/yesno.m4
  m4/yield.m4
  m4/zzgnulib.m4
  tests/atomic-int-gnulib.h
  tests/atomic-int-posix.h
  tests/bench-digest.h
  tests/bench-md5.c
  tests/bench-sha1.c
  tests/bench-sha224.c
  tests/bench-sha256.c
  tests/bench-sha384.c
  tests/bench-sha512.c
  tests/infinity.h
  tests/init.sh
  tests/locale.c
  tests/macros.h
  tests/minus-zero.h
  tests/nan.h
  tests/nap.h
  tests/null-ptr.h
  tests/qemu.h
  tests/randomd.c
  tests/randoml.c
  tests/signature.h
  tests/test-accept.c
  tests/test-alignalloc.c
  tests/test-alignof.c
  tests/test-alloca-opt.c
  tests/test-areadlink-with-size.c
  tests/test-areadlink.c
  tests/test-areadlink.h
  tests/test-areadlinkat-with-size.c
  tests/test-areadlinkat.c
  tests/test-argmatch.c
  tests/test-argv-iter.c
  tests/test-arpa_inet.c
  tests/test-base32.c
  tests/test-base64.c
  tests/test-binary-io.c
  tests/test-binary-io.sh
  tests/test-bind.c
  tests/test-bitrotate.c
  tests/test-btowc.c
  tests/test-btowc1.sh
  tests/test-btowc2.sh
  tests/test-byteswap.c
  tests/test-c-ctype.c
  tests/test-c-strcase.sh
  tests/test-c-strcasecmp.c
  tests/test-c-strncasecmp.c
  tests/test-calloc-gnu.c
  tests/test-canonicalize.c
  tests/test-chdir.c
  tests/test-chown.c
  tests/test-chown.h
  tests/test-cloexec.c
  tests/test-close.c
  tests/test-closein.c
  tests/test-closein.sh
  tests/test-connect.c
  tests/test-copy-acl-1.sh
  tests/test-copy-acl-2.sh
  tests/test-copy-acl.c
  tests/test-copy-acl.sh
  tests/test-count-leading-zeros.c
  tests/test-ctype.c
  tests/test-di-set.c
  tests/test-digest.h
  tests/test-dirent-safer.c
  tests/test-dirent.c
  tests/test-dirname.c
  tests/test-dup-safer.c
  tests/test-dup.c
  tests/test-dup2.c
  tests/test-dynarray.c
  tests/test-environ.c
  tests/test-errno.c
  tests/test-exclude.c
  tests/test-exclude1.sh
  tests/test-exclude2.sh
  tests/test-exclude3.sh
  tests/test-exclude4.sh
  tests/test-exclude5.sh
  tests/test-exclude6.sh
  tests/test-exclude7.sh
  tests/test-exclude8.sh
  tests/test-explicit_bzero.c
  tests/test-faccessat.c
  tests/test-fadvise.c
  tests/test-fchdir.c
  tests/test-fchmodat.c
  tests/test-fchownat.c
  tests/test-fclose.c
  tests/test-fcntl-h.c
  tests/test-fcntl-safer.c
  tests/test-fcntl.c
  tests/test-fdatasync.c
  tests/test-fdopen.c
  tests/test-fdopendir.c
  tests/test-fdutimensat.c
  tests/test-fflush.c
  tests/test-fflush2.c
  tests/test-fflush2.sh
  tests/test-fgetc.c
  tests/test-file-has-acl-1.sh
  tests/test-file-has-acl-2.sh
  tests/test-file-has-acl.c
  tests/test-file-has-acl.sh
  tests/test-filenamecat.c
  tests/test-filevercmp.c
  tests/test-float.c
  tests/test-fnmatch-h.c
  tests/test-fnmatch.c
  tests/test-fopen-gnu.c
  tests/test-fopen-safer.c
  tests/test-fopen.c
  tests/test-fopen.h
  tests/test-fpending.c
  tests/test-fpending.sh
  tests/test-fprintf-posix.h
  tests/test-fpurge.c
  tests/test-fputc.c
  tests/test-fread.c
  tests/test-freadahead.c
  tests/test-freadahead.sh
  tests/test-freading.c
  tests/test-freadptr.c
  tests/test-freadptr.sh
  tests/test-freadptr2.c
  tests/test-freadptr2.sh
  tests/test-freadseek.c
  tests/test-freadseek.sh
  tests/test-free.c
  tests/test-freopen-safer.c
  tests/test-freopen.c
  tests/test-frexp.c
  tests/test-frexp.h
  tests/test-frexpl.c
  tests/test-fseek.c
  tests/test-fseek.sh
  tests/test-fseek2.sh
  tests/test-fseeko.c
  tests/test-fseeko.sh
  tests/test-fseeko2.sh
  tests/test-fseeko3.c
  tests/test-fseeko3.sh
  tests/test-fseeko4.c
  tests/test-fseeko4.sh
  tests/test-fseterr.c
  tests/test-fstat.c
  tests/test-fstatat.c
  tests/test-fsync.c
  tests/test-ftell.c
  tests/test-ftell.sh
  tests/test-ftell2.sh
  tests/test-ftell3.c
  tests/test-ftello.c
  tests/test-ftello.sh
  tests/test-ftello2.sh
  tests/test-ftello3.c
  tests/test-ftello4.c
  tests/test-ftello4.sh
  tests/test-ftruncate.c
  tests/test-ftruncate.sh
  tests/test-futimens.c
  tests/test-futimens.h
  tests/test-fwrite.c
  tests/test-getaddrinfo.c
  tests/test-getcwd-lgpl.c
  tests/test-getcwd.c
  tests/test-getcwd.sh
  tests/test-getdelim.c
  tests/test-getdtablesize.c
  tests/test-getgroups.c
  tests/test-gethostname.c
  tests/test-getline.c
  tests/test-getloadavg.c
  tests/test-getlogin.c
  tests/test-getlogin.h
  tests/test-getndelim2.c
  tests/test-getopt-gnu.c
  tests/test-getopt-main.h
  tests/test-getopt-posix.c
  tests/test-getopt.h
  tests/test-getopt_long.h
  tests/test-getprogname.c
  tests/test-getrandom.c
  tests/test-getrusage.c
  tests/test-gettimeofday.c
  tests/test-hard-locale.c
  tests/test-hash.c
  tests/test-i-ring.c
  tests/test-iconv-h.c
  tests/test-iconv.c
  tests/test-ignore-value.c
  tests/test-inet_ntop.c
  tests/test-inet_pton.c
  tests/test-init.sh
  tests/test-ino-map.c
  tests/test-intprops.c
  tests/test-inttostr.c
  tests/test-inttypes.c
  tests/test-ioctl.c
  tests/test-isatty.c
  tests/test-isblank.c
  tests/test-isnand-nolibm.c
  tests/test-isnand.h
  tests/test-isnanf-nolibm.c
  tests/test-isnanf.h
  tests/test-isnanl-nolibm.c
  tests/test-isnanl.h
  tests/test-iswblank.c
  tests/test-iswdigit.c
  tests/test-iswdigit.sh
  tests/test-iswxdigit.c
  tests/test-iswxdigit.sh
  tests/test-langinfo.c
  tests/test-lchmod.c
  tests/test-lchown.c
  tests/test-lchown.h
  tests/test-libgmp.c
  tests/test-limits-h.c
  tests/test-link.c
  tests/test-link.h
  tests/test-linkat.c
  tests/test-listen.c
  tests/test-localcharset.c
  tests/test-locale.c
  tests/test-localeconv.c
  tests/test-localename.c
  tests/test-lock.c
  tests/test-lseek.c
  tests/test-lseek.sh
  tests/test-lstat.c
  tests/test-lstat.h
  tests/test-lutimens.h
  tests/test-malloc-gnu.c
  tests/test-malloca.c
  tests/test-math.c
  tests/test-mbrtowc-w32-1.sh
  tests/test-mbrtowc-w32-2.sh
  tests/test-mbrtowc-w32-3.sh
  tests/test-mbrtowc-w32-4.sh
  tests/test-mbrtowc-w32-5.sh
  tests/test-mbrtowc-w32-6.sh
  tests/test-mbrtowc-w32-7.sh
  tests/test-mbrtowc-w32.c
  tests/test-mbrtowc.c
  tests/test-mbrtowc1.sh
  tests/test-mbrtowc2.sh
  tests/test-mbrtowc3.sh
  tests/test-mbrtowc4.sh
  tests/test-mbrtowc5.sh
  tests/test-mbsalign.c
  tests/test-mbscasecmp.c
  tests/test-mbscasecmp.sh
  tests/test-mbschr.c
  tests/test-mbschr.sh
  tests/test-mbsinit.c
  tests/test-mbsinit.sh
  tests/test-mbsrtowcs.c
  tests/test-mbsrtowcs1.sh
  tests/test-mbsrtowcs2.sh
  tests/test-mbsrtowcs3.sh
  tests/test-mbsrtowcs4.sh
  tests/test-mbsstr1.c
  tests/test-mbsstr2.c
  tests/test-mbsstr2.sh
  tests/test-mbsstr3.c
  tests/test-mbsstr3.sh
  tests/test-md5-buffer.c
  tests/test-md5-stream.c
  tests/test-memcasecmp.c
  tests/test-memchr.c
  tests/test-memchr2.c
  tests/test-memcoll.c
  tests/test-memrchr.c
  tests/test-mkdir.c
  tests/test-mkdir.h
  tests/test-mkdirat.c
  tests/test-mkfifo.c
  tests/test-mkfifo.h
  tests/test-mkfifoat.c
  tests/test-mknod.c
  tests/test-nanosleep.c
  tests/test-netdb.c
  tests/test-netinet_in.c
  tests/test-nl_langinfo-mt.c
  tests/test-nl_langinfo.c
  tests/test-nl_langinfo.sh
  tests/test-nstrftime.c
  tests/test-once.c
  tests/test-open.c
  tests/test-open.h
  tests/test-openat-safer.c
  tests/test-openat.c
  tests/test-parse-datetime.c
  tests/test-pathmax.c
  tests/test-perror.c
  tests/test-perror.sh
  tests/test-perror2.c
  tests/test-pipe.c
  tests/test-pipe2.c
  tests/test-posix_memalign.c
  tests/test-posixtm.c
  tests/test-printf-frexp.c
  tests/test-printf-frexpl.c
  tests/test-printf-posix.h
  tests/test-printf-posix.output
  tests/test-priv-set.c
  tests/test-pselect.c
  tests/test-pthread-cond.c
  tests/test-pthread-mutex.c
  tests/test-pthread-thread.c
  tests/test-pthread.c
  tests/test-pthread_sigmask1.c
  tests/test-pthread_sigmask2.c
  tests/test-quotearg-simple.c
  tests/test-quotearg.h
  tests/test-raise.c
  tests/test-rand-isaac.c
  tests/test-rawmemchr.c
  tests/test-read-file.c
  tests/test-read.c
  tests/test-readlink.c
  tests/test-readlink.h
  tests/test-readlinkat.c
  tests/test-readtokens.c
  tests/test-readtokens.sh
  tests/test-realloc-gnu.c
  tests/test-reallocarray.c
  tests/test-regex.c
  tests/test-remove.c
  tests/test-rename.c
  tests/test-rename.h
  tests/test-renameat.c
  tests/test-renameatu.c
  tests/test-rmdir.c
  tests/test-rmdir.h
  tests/test-rwlock1.c
  tests/test-sameacls.c
  tests/test-sched.c
  tests/test-scratch-buffer.c
  tests/test-select-fd.c
  tests/test-select-in.sh
  tests/test-select-out.sh
  tests/test-select-stdin.c
  tests/test-select.c
  tests/test-select.h
  tests/test-set-mode-acl-1.sh
  tests/test-set-mode-acl-2.sh
  tests/test-set-mode-acl.c
  tests/test-set-mode-acl.sh
  tests/test-setenv.c
  tests/test-setlocale1.c
  tests/test-setlocale1.sh
  tests/test-setlocale2.c
  tests/test-setlocale2.sh
  tests/test-setlocale_null-mt-all.c
  tests/test-setlocale_null-mt-one.c
  tests/test-setlocale_null.c
  tests/test-setsockopt.c
  tests/test-sha1-buffer.c
  tests/test-sha1-stream.c
  tests/test-sha256-stream.c
  tests/test-sha512-stream.c
  tests/test-sigaction.c
  tests/test-signal-h.c
  tests/test-signbit.c
  tests/test-sigprocmask.c
  tests/test-sleep.c
  tests/test-sm3-buffer.c
  tests/test-snprintf.c
  tests/test-sockets.c
  tests/test-stat-time.c
  tests/test-stat.c
  tests/test-stat.h
  tests/test-stdalign.c
  tests/test-stdbool.c
  tests/test-stddef.c
  tests/test-stdint.c
  tests/test-stdio.c
  tests/test-stdlib.c
  tests/test-strerror.c
  tests/test-strerror_r.c
  tests/test-striconv.c
  tests/test-string.c
  tests/test-strncat.c
  tests/test-strnlen.c
  tests/test-strsignal.c
  tests/test-strtod.c
  tests/test-strtod1.c
  tests/test-strtod1.sh
  tests/test-strtoimax.c
  tests/test-strtold.c
  tests/test-strtold1.c
  tests/test-strtold1.sh
  tests/test-strtoll.c
  tests/test-strtoull.c
  tests/test-strtoumax.c
  tests/test-symlink.c
  tests/test-symlink.h
  tests/test-symlinkat.c
  tests/test-sys_ioctl.c
  tests/test-sys_random.c
  tests/test-sys_resource.c
  tests/test-sys_select.c
  tests/test-sys_socket.c
  tests/test-sys_stat.c
  tests/test-sys_time.c
  tests/test-sys_types.c
  tests/test-sys_uio.c
  tests/test-sys_utsname.c
  tests/test-sys_wait.c
  tests/test-sys_wait.h
  tests/test-termios.c
  tests/test-thread_create.c
  tests/test-thread_self.c
  tests/test-time.c
  tests/test-timespec.c
  tests/test-tls.c
  tests/test-u64.c
  tests/test-uname.c
  tests/test-unicodeio.c
  tests/test-unicodeio1.sh
  tests/test-unicodeio2.sh
  tests/test-unicodeio3.sh
  tests/test-unistd.c
  tests/test-unlink.c
  tests/test-unlink.h
  tests/test-unlinkat.c
  tests/test-unsetenv.c
  tests/test-update-copyright.sh
  tests/test-userspec.c
  tests/test-usleep.c
  tests/test-utime-h.c
  tests/test-utime.c
  tests/test-utimens-common.h
  tests/test-utimens.c
  tests/test-utimens.h
  tests/test-utimensat.c
  tests/test-vasnprintf.c
  tests/test-vasprintf-posix.c
  tests/test-vasprintf.c
  tests/test-vc-list-files-cvs.sh
  tests/test-vc-list-files-git.sh
  tests/test-verify-try.c
  tests/test-verify.c
  tests/test-verify.sh
  tests/test-version-etc.c
  tests/test-version-etc.sh
  tests/test-vfprintf-posix.c
  tests/test-vfprintf-posix.sh
  tests/test-vprintf-posix.c
  tests/test-vprintf-posix.sh
  tests/test-wchar.c
  tests/test-wcrtomb-w32-1.sh
  tests/test-wcrtomb-w32-2.sh
  tests/test-wcrtomb-w32-3.sh
  tests/test-wcrtomb-w32-4.sh
  tests/test-wcrtomb-w32-5.sh
  tests/test-wcrtomb-w32-6.sh
  tests/test-wcrtomb-w32-7.sh
  tests/test-wcrtomb-w32.c
  tests/test-wcrtomb.c
  tests/test-wcrtomb.sh
  tests/test-wctype-h.c
  tests/test-wcwidth.c
  tests/test-write.c
  tests/test-xalloc-die.c
  tests/test-xalloc-die.sh
  tests/test-xfprintf-posix.c
  tests/test-xprintf-posix.c
  tests/test-xprintf-posix.sh
  tests/test-xstrtoimax.c
  tests/test-xstrtoimax.sh
  tests/test-xstrtol.c
  tests/test-xstrtol.sh
  tests/test-xstrtoul.c
  tests/test-xstrtoumax.c
  tests/test-xstrtoumax.sh
  tests/test-xvasprintf.c
  tests/test-yesno.c
  tests/test-yesno.sh
  tests/unistr/test-strncat.h
  tests/unistr/test-u8-mbtoucr.c
  tests/unistr/test-u8-uctomb.c
  tests/uniwidth/test-uc_width.c
  tests/uniwidth/test-uc_width2.c
  tests/uniwidth/test-uc_width2.sh
  tests/zerosize-ptr.h
  tests=lib/_Noreturn.h
  tests=lib/accept.c
  tests=lib/arg-nonnull.h
  tests=lib/atoll.c
  tests=lib/bind.c
  tests=lib/c++defs.h
  tests=lib/connect.c
  tests=lib/getrusage.c
  tests=lib/glthread/thread.c
  tests=lib/glthread/thread.h
  tests=lib/glthread/yield.h
  tests=lib/inet_pton.c
  tests=lib/ioctl.c
  tests=lib/listen.c
  tests=lib/localename-table.c
  tests=lib/localename-table.h
  tests=lib/localename.c
  tests=lib/localename.h
  tests=lib/perror.c
  tests=lib/sched_yield.c
  tests=lib/secure_getenv.c
  tests=lib/setlocale.c
  tests=lib/setsockopt.c
  tests=lib/sleep.c
  tests=lib/socket.c
  tests=lib/strerror_r.c
  tests=lib/thread-optim.h
  tests=lib/timespec-add.c
  tests=lib/timespec-sub.c
  tests=lib/tmpdir.c
  tests=lib/tmpdir.h
  tests=lib/tmpfile.c
  tests=lib/usleep.c
  tests=lib/vma-iter.c
  tests=lib/vma-iter.h
  tests=lib/w32sock.h
  tests=lib/warn-on-use.h
  tests=lib/wctob.c
  tests=lib/wctomb-impl.h
  tests=lib/wctomb.c
  top/GNUmakefile
  top/maint.mk
])
m4trace:m4/group-member.m4:11: -1- AC_DEFUN([gl_FUNC_GROUP_MEMBER], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare group_member().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Do this replacement check manually because I want the hyphen
  dnl (not the underscore) in the filename.
  AC_CHECK_FUNC([group_member], , [
    HAVE_GROUP_MEMBER=0
  ])
])
m4trace:m4/group-member.m4:26: -1- AC_DEFUN([gl_PREREQ_GROUP_MEMBER], [
  AC_REQUIRE([AC_FUNC_GETGROUPS])
])
m4trace:m4/host-cpu-c-abi.m4:50: -1- AC_DEFUN([gl_HOST_CPU_C_ABI], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_C_ASM])
  AC_CACHE_CHECK([host CPU and C ABI], [gl_cv_host_cpu_c_abi],
    [case "$host_cpu" in

changequote(,)dnl
       i[34567]86 )
changequote([,])dnl
         gl_cv_host_cpu_c_abi=i386
         ;;

       x86_64 )
         # On x86_64 systems, the C compiler may be generating code in one of
         # these ABIs:
         # - 64-bit instruction set, 64-bit pointers, 64-bit 'long': x86_64.
         # - 64-bit instruction set, 64-bit pointers, 32-bit 'long': x86_64
         #   with native Windows (mingw, MSVC).
         # - 64-bit instruction set, 32-bit pointers, 32-bit 'long': x86_64-x32.
         # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': i386.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if (defined __x86_64__ || defined __amd64__ \
                     || defined _M_X64 || defined _M_AMD64)
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                 [[#if defined __ILP32__ || defined _ILP32
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
              [gl_cv_host_cpu_c_abi=x86_64-x32],
              [gl_cv_host_cpu_c_abi=x86_64])],
           [gl_cv_host_cpu_c_abi=i386])
         ;;

changequote(,)dnl
       alphaev[4-8] | alphaev56 | alphapca5[67] | alphaev6[78] )
changequote([,])dnl
         gl_cv_host_cpu_c_abi=alpha
         ;;

       arm* | aarch64 )
         # Assume arm with EABI.
         # On arm64 systems, the C compiler may be generating code in one of
         # these ABIs:
         # - aarch64 instruction set, 64-bit pointers, 64-bit 'long': arm64.
         # - aarch64 instruction set, 32-bit pointers, 32-bit 'long': arm64-ilp32.
         # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': arm or armhf.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#ifdef __aarch64__
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                [[#if defined __ILP32__ || defined _ILP32
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
              [gl_cv_host_cpu_c_abi=arm64-ilp32],
              [gl_cv_host_cpu_c_abi=arm64])],
           [# Don't distinguish little-endian and big-endian arm, since they
            # don't require different machine code for simple operations and
            # since the user can distinguish them through the preprocessor
            # defines __ARMEL__ vs. __ARMEB__.
            # But distinguish arm which passes floating-point arguments and
            # return values in integer registers (r0, r1, ...) - this is
            # gcc -mfloat-abi=soft or gcc -mfloat-abi=softfp - from arm which
            # passes them in float registers (s0, s1, ...) and double registers
            # (d0, d1, ...) - this is gcc -mfloat-abi=hard. GCC 4.6 or newer
            # sets the preprocessor defines __ARM_PCS (for the first case) and
            # __ARM_PCS_VFP (for the second case), but older GCC does not.
            echo 'double ddd; void func (double dd) { ddd = dd; }' > conftest.c
            # Look for a reference to the register d0 in the .s file.
            AC_TRY_COMMAND(${CC-cc} $CFLAGS $CPPFLAGS $gl_c_asm_opt conftest.c) >/dev/null 2>&1
            if LC_ALL=C grep 'd0,' conftest.$gl_asmext >/dev/null; then
              gl_cv_host_cpu_c_abi=armhf
            else
              gl_cv_host_cpu_c_abi=arm
            fi
            rm -f conftest*
           ])
         ;;

       hppa1.0 | hppa1.1 | hppa2.0* | hppa64 )
         # On hppa, the C compiler may be generating 32-bit code or 64-bit
         # code. In the latter case, it defines _LP64 and __LP64__.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#ifdef __LP64__
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=hppa64],
           [gl_cv_host_cpu_c_abi=hppa])
         ;;

       ia64* )
         # On ia64 on HP-UX, the C compiler may be generating 64-bit code or
         # 32-bit code. In the latter case, it defines _ILP32.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#ifdef _ILP32
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=ia64-ilp32],
           [gl_cv_host_cpu_c_abi=ia64])
         ;;

       mips* )
         # We should also check for (_MIPS_SZPTR == 64), but gcc keeps this
         # at 32.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined _MIPS_SZLONG && (_MIPS_SZLONG == 64)
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=mips64],
           [# In the n32 ABI, _ABIN32 is defined, _ABIO32 is not defined (but
            # may later get defined by <sgidefs.h>), and _MIPS_SIM == _ABIN32.
            # In the 32 ABI, _ABIO32 is defined, _ABIN32 is not defined (but
            # may later get defined by <sgidefs.h>), and _MIPS_SIM == _ABIO32.
            AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                 [[#if (_MIPS_SIM == _ABIN32)
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
              [gl_cv_host_cpu_c_abi=mipsn32],
              [gl_cv_host_cpu_c_abi=mips])])
         ;;

       powerpc* )
         # Different ABIs are in use on AIX vs. Mac OS X vs. Linux,*BSD.
         # No need to distinguish them here; the caller may distinguish
         # them based on the OS.
         # On powerpc64 systems, the C compiler may still be generating
         # 32-bit code. And on powerpc-ibm-aix systems, the C compiler may
         # be generating 64-bit code.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __powerpc64__ || defined __LP64__
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [# On powerpc64, there are two ABIs on Linux: The AIX compatible
            # one and the ELFv2 one. The latter defines _CALL_ELF=2.
            AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                 [[#if defined _CALL_ELF && _CALL_ELF == 2
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
              [gl_cv_host_cpu_c_abi=powerpc64-elfv2],
              [gl_cv_host_cpu_c_abi=powerpc64])
           ],
           [gl_cv_host_cpu_c_abi=powerpc])
         ;;

       rs6000 )
         gl_cv_host_cpu_c_abi=powerpc
         ;;

       riscv32 | riscv64 )
         # There are 2 architectures (with variants): rv32* and rv64*.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if __riscv_xlen == 64
                  int ok;
                #else
                  error fail
                #endif
              ]])],
           [cpu=riscv64],
           [cpu=riscv32])
         # There are 6 ABIs: ilp32, ilp32f, ilp32d, lp64, lp64f, lp64d.
         # Size of 'long' and 'void *':
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __LP64__
                  int ok;
                #else
                  error fail
                #endif
              ]])],
           [main_abi=lp64],
           [main_abi=ilp32])
         # Float ABIs:
         # __riscv_float_abi_double:
         #   'float' and 'double' are passed in floating-point registers.
         # __riscv_float_abi_single:
         #   'float' are passed in floating-point registers.
         # __riscv_float_abi_soft:
         #   No values are passed in floating-point registers.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __riscv_float_abi_double
                  int ok;
                #else
                  error fail
                #endif
              ]])],
           [float_abi=d],
           [AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                 [[#if defined __riscv_float_abi_single
                     int ok;
                   #else
                     error fail
                   #endif
                 ]])],
              [float_abi=f],
              [float_abi=''])
           ])
         gl_cv_host_cpu_c_abi="${cpu}-${main_abi}${float_abi}"
         ;;

       s390* )
         # On s390x, the C compiler may be generating 64-bit (= s390x) code
         # or 31-bit (= s390) code.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __LP64__ || defined __s390x__
                  int ok;
                #else
                  error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=s390x],
           [gl_cv_host_cpu_c_abi=s390])
         ;;

       sparc | sparc64 )
         # UltraSPARCs running Linux have `uname -m` = "sparc64", but the
         # C compiler still generates 32-bit code.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __sparcv9 || defined __arch64__
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=sparc64],
           [gl_cv_host_cpu_c_abi=sparc])
         ;;

       *)
         gl_cv_host_cpu_c_abi="$host_cpu"
         ;;
     esac
    ])

  dnl In most cases, $HOST_CPU and $HOST_CPU_C_ABI are the same.
  HOST_CPU=`echo "$gl_cv_host_cpu_c_abi" | sed -e 's/-.*//'`
  HOST_CPU_C_ABI="$gl_cv_host_cpu_c_abi"
  AC_SUBST([HOST_CPU])
  AC_SUBST([HOST_CPU_C_ABI])

  # This was
  #   AC_DEFINE_UNQUOTED([__${HOST_CPU}__])
  #   AC_DEFINE_UNQUOTED([__${HOST_CPU_C_ABI}__])
  # earlier, but KAI C++ 3.2d doesn't like this.
  sed -e 's/-/_/g' >> confdefs.h <<EOF
#ifndef __${HOST_CPU}__
#define __${HOST_CPU}__ 1
#endif
#ifndef __${HOST_CPU_C_ABI}__
#define __${HOST_CPU_C_ABI}__ 1
#endif
EOF
  AH_TOP([/* CPU and C ABI indicator */
#ifndef __i386__
#undef __i386__
#endif
#ifndef __x86_64_x32__
#undef __x86_64_x32__
#endif
#ifndef __x86_64__
#undef __x86_64__
#endif
#ifndef __alpha__
#undef __alpha__
#endif
#ifndef __arm__
#undef __arm__
#endif
#ifndef __armhf__
#undef __armhf__
#endif
#ifndef __arm64_ilp32__
#undef __arm64_ilp32__
#endif
#ifndef __arm64__
#undef __arm64__
#endif
#ifndef __hppa__
#undef __hppa__
#endif
#ifndef __hppa64__
#undef __hppa64__
#endif
#ifndef __ia64_ilp32__
#undef __ia64_ilp32__
#endif
#ifndef __ia64__
#undef __ia64__
#endif
#ifndef __loongarch64__
#undef __loongarch64__
#endif
#ifndef __m68k__
#undef __m68k__
#endif
#ifndef __mips__
#undef __mips__
#endif
#ifndef __mipsn32__
#undef __mipsn32__
#endif
#ifndef __mips64__
#undef __mips64__
#endif
#ifndef __powerpc__
#undef __powerpc__
#endif
#ifndef __powerpc64__
#undef __powerpc64__
#endif
#ifndef __powerpc64_elfv2__
#undef __powerpc64_elfv2__
#endif
#ifndef __riscv32__
#undef __riscv32__
#endif
#ifndef __riscv64__
#undef __riscv64__
#endif
#ifndef __riscv32_ilp32__
#undef __riscv32_ilp32__
#endif
#ifndef __riscv32_ilp32f__
#undef __riscv32_ilp32f__
#endif
#ifndef __riscv32_ilp32d__
#undef __riscv32_ilp32d__
#endif
#ifndef __riscv64_ilp32__
#undef __riscv64_ilp32__
#endif
#ifndef __riscv64_ilp32f__
#undef __riscv64_ilp32f__
#endif
#ifndef __riscv64_ilp32d__
#undef __riscv64_ilp32d__
#endif
#ifndef __riscv64_lp64__
#undef __riscv64_lp64__
#endif
#ifndef __riscv64_lp64f__
#undef __riscv64_lp64f__
#endif
#ifndef __riscv64_lp64d__
#undef __riscv64_lp64d__
#endif
#ifndef __s390__
#undef __s390__
#endif
#ifndef __s390x__
#undef __s390x__
#endif
#ifndef __sh__
#undef __sh__
#endif
#ifndef __sparc__
#undef __sparc__
#endif
#ifndef __sparc64__
#undef __sparc64__
#endif
])

])
m4trace:m4/host-cpu-c-abi.m4:466: -1- AC_DEFUN([gl_HOST_CPU_C_ABI_32BIT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([32-bit host C ABI], [gl_cv_host_cpu_c_abi_32bit],
    [if test -n "$gl_cv_host_cpu_c_abi"; then
       case "$gl_cv_host_cpu_c_abi" in
         i386 | x86_64-x32 | arm | armhf | arm64-ilp32 | hppa | ia64-ilp32 | mips | mipsn32 | powerpc | riscv*-ilp32* | s390 | sparc)
           gl_cv_host_cpu_c_abi_32bit=yes ;;
         x86_64 | alpha | arm64 | hppa64 | ia64 | mips64 | powerpc64 | powerpc64-elfv2 | riscv*-lp64* | s390x | sparc64 )
           gl_cv_host_cpu_c_abi_32bit=no ;;
         *)
           gl_cv_host_cpu_c_abi_32bit=unknown ;;
       esac
     else
       case "$host_cpu" in

         # CPUs that only support a 32-bit ABI.
         arc \
         | bfin \
         | cris* \
         | csky \
         | epiphany \
         | ft32 \
         | h8300 \
         | m68k \
         | microblaze | microblazeel \
         | nds32 | nds32le | nds32be \
         | nios2 | nios2eb | nios2el \
         | or1k* \
         | or32 \
         | sh | sh[1234] | sh[1234]e[lb] \
         | tic6x \
         | xtensa* )
           gl_cv_host_cpu_c_abi_32bit=yes
           ;;

         # CPUs that only support a 64-bit ABI.
changequote(,)dnl
         alpha | alphaev[4-8] | alphaev56 | alphapca5[67] | alphaev6[78] \
         | mmix )
changequote([,])dnl
           gl_cv_host_cpu_c_abi_32bit=no
           ;;

changequote(,)dnl
         i[34567]86 )
changequote([,])dnl
           gl_cv_host_cpu_c_abi_32bit=yes
           ;;

         x86_64 )
           # On x86_64 systems, the C compiler may be generating code in one of
           # these ABIs:
           # - 64-bit instruction set, 64-bit pointers, 64-bit 'long': x86_64.
           # - 64-bit instruction set, 64-bit pointers, 32-bit 'long': x86_64
           #   with native Windows (mingw, MSVC).
           # - 64-bit instruction set, 32-bit pointers, 32-bit 'long': x86_64-x32.
           # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': i386.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if (defined __x86_64__ || defined __amd64__ \
                       || defined _M_X64 || defined _M_AMD64) \
                      && !(defined __ILP32__ || defined _ILP32)
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         arm* | aarch64 )
           # Assume arm with EABI.
           # On arm64 systems, the C compiler may be generating code in one of
           # these ABIs:
           # - aarch64 instruction set, 64-bit pointers, 64-bit 'long': arm64.
           # - aarch64 instruction set, 32-bit pointers, 32-bit 'long': arm64-ilp32.
           # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': arm or armhf.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __aarch64__ && !(defined __ILP32__ || defined _ILP32)
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         hppa1.0 | hppa1.1 | hppa2.0* | hppa64 )
           # On hppa, the C compiler may be generating 32-bit code or 64-bit
           # code. In the latter case, it defines _LP64 and __LP64__.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#ifdef __LP64__
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         ia64* )
           # On ia64 on HP-UX, the C compiler may be generating 64-bit code or
           # 32-bit code. In the latter case, it defines _ILP32.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#ifdef _ILP32
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=yes],
             [gl_cv_host_cpu_c_abi_32bit=no])
           ;;

         mips* )
           # We should also check for (_MIPS_SZPTR == 64), but gcc keeps this
           # at 32.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined _MIPS_SZLONG && (_MIPS_SZLONG == 64)
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         powerpc* )
           # Different ABIs are in use on AIX vs. Mac OS X vs. Linux,*BSD.
           # No need to distinguish them here; the caller may distinguish
           # them based on the OS.
           # On powerpc64 systems, the C compiler may still be generating
           # 32-bit code. And on powerpc-ibm-aix systems, the C compiler may
           # be generating 64-bit code.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __powerpc64__ || defined __LP64__
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         rs6000 )
           gl_cv_host_cpu_c_abi_32bit=yes
           ;;

         riscv32 | riscv64 )
           # There are 6 ABIs: ilp32, ilp32f, ilp32d, lp64, lp64f, lp64d.
           # Size of 'long' and 'void *':
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __LP64__
                    int ok;
                  #else
                    error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         s390* )
           # On s390x, the C compiler may be generating 64-bit (= s390x) code
           # or 31-bit (= s390) code.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __LP64__ || defined __s390x__
                    int ok;
                  #else
                    error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         sparc | sparc64 )
           # UltraSPARCs running Linux have `uname -m` = "sparc64", but the
           # C compiler still generates 32-bit code.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __sparcv9 || defined __arch64__
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         *)
           gl_cv_host_cpu_c_abi_32bit=unknown
           ;;
       esac
     fi
    ])

  HOST_CPU_C_ABI_32BIT="$gl_cv_host_cpu_c_abi_32bit"
])
m4trace:m4/host-os.m4:13: -1- AC_DEFUN([gl_HOST_OS], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl
  AC_CACHE_CHECK([host operating system],
    [gl_cv_host_operating_system],

    [[case $host_os in

       # These operating system names do not use the default heuristic below.
       # They are in reverse order, so that more-specific prefixes come first.
       winnt*)          os='Windows NT';;
       vos*)            os='VOS';;
       sysv*)           os='Unix System V';;
       superux*)        os='SUPER-UX';;
       sunos*)          os='SunOS';;
       stop*)           os='STOP';;
       sco*)            os='SCO Unix';;
       riscos*)         os='RISC OS';;
       riscix*)         os='RISCiX';;
       qnx*)            os='QNX';;
       pw32*)           os='PW32';;
       ptx*)            os='ptx';;
       plan9*)          os='Plan 9';;
       osf*)            os='Tru64';;
       os2*)            os='OS/2';;
       openbsd*)        os='OpenBSD';;
       nsk*)            os='NonStop Kernel';;
       nonstopux*)      os='NonStop-UX';;
       netbsd*-gnu*)    os='GNU/NetBSD';; # NetBSD kernel+libc, GNU userland
       netbsd*)         os='NetBSD';;
       mirbsd*)         os='MirBSD';;
       midnightbsd*)    os='MidnightBSD';;
       knetbsd*-gnu)    os='GNU/kNetBSD';; # NetBSD kernel, GNU libc+userland
       kfreebsd*-gnu)   os='GNU/kFreeBSD';; # FreeBSD kernel, GNU libc+userland
       msdosdjgpp*)     os='DJGPP';;
       mpeix*)          os='MPE/iX';;
       mint*)           os='MiNT';;
       mingw*)          os='MinGW';;
       lynxos*)         os='LynxOS';;
       linux*)          os='GNU/Linux';;
       hpux*)           os='HP-UX';;
       hiux*)           os='HI-UX';;
       gnu*)            os='GNU';;
       freebsd*)        os='FreeBSD';;
       dgux*)           os='DG/UX';;
       dragonfly*)      os='DragonFly BSD';;
       bsdi*)           os='BSD/OS';;
       bsd*)            os='BSD';;
       beos*)           os='BeOS';;
       aux*)            os='A/UX';;
       atheos*)         os='AtheOS';;
       amigaos*)        os='Amiga OS';;
       aix*)            os='AIX';;

       # The default heuristic takes the initial alphabetic string
       # from $host_os, but capitalizes its first letter.
       [A-Za-z]*)
         os=`
           expr "X$host_os" : 'X\([A-Za-z]\)' | LC_ALL=C tr '[a-z]' '[A-Z]'
         ``
           expr "X$host_os" : 'X.\([A-Za-z]*\)'
         `
         ;;

       # If $host_os does not start with an alphabetic string, use it unchanged.
       *)
         os=$host_os;;
     esac
     gl_cv_host_operating_system=$os]])
  AC_DEFINE_UNQUOTED([HOST_OPERATING_SYSTEM],
    "$gl_cv_host_operating_system",
    [The host operating system.])
])
m4trace:m4/hostent.m4:7: -1- AC_DEFUN([gl_HOSTENT], [
  dnl Where are gethostent(), sethostent(), endhostent(), gethostbyname(),
  dnl gethostbyaddr() defined?
  dnl - On Solaris < 11.4, they are in libnsl. Ignore libxnet.
  dnl - On Haiku, they are in libnetwork.
  dnl - On BeOS, they are in libnet.
  dnl - On native Windows, they are in ws2_32.dll.
  dnl - Otherwise they are in libc.
  AC_REQUIRE([gl_SYS_SOCKET_H])dnl for HAVE_SYS_SOCKET_H, HAVE_WINSOCK2_H
  HOSTENT_LIB=
  gl_saved_libs="$LIBS"
  AC_SEARCH_LIBS([gethostbyname], [nsl network net],
    [if test "$ac_cv_search_gethostbyname" != "none required"; then
       HOSTENT_LIB="$ac_cv_search_gethostbyname"
     fi])
  LIBS="$gl_saved_libs"
  if test -z "$HOSTENT_LIB"; then
    AC_CHECK_FUNCS([gethostbyname], , [
      AC_CACHE_CHECK([for gethostbyname in winsock2.h and -lws2_32],
        [gl_cv_w32_gethostbyname],
        [gl_cv_w32_gethostbyname=no
         gl_save_LIBS="$LIBS"
         LIBS="$LIBS -lws2_32"
         AC_LINK_IFELSE(
           [AC_LANG_PROGRAM(
              [[
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
#include <stddef.h>
              ]],
              [[gethostbyname(NULL);]])],
           [gl_cv_w32_gethostbyname=yes])
         LIBS="$gl_save_LIBS"
        ])
      if test "$gl_cv_w32_gethostbyname" = "yes"; then
        HOSTENT_LIB="-lws2_32"
      fi
    ])
  fi
  AC_SUBST([HOSTENT_LIB])
])
m4trace:m4/human.m4:8: -1- AC_DEFUN([gl_HUMAN], [
  :
])
m4trace:m4/i-ring.m4:7: -1- AC_DEFUN([gl_I_RING], [
  :
])
m4trace:m4/iconv.m4:16: -1- AC_DEFUN([AM_ICONV_LINKFLAGS_BODY], [
  dnl Prerequisites of AC_LIB_LINKFLAGS_BODY.
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  AC_REQUIRE([AC_LIB_RPATH])

  dnl Search for libiconv and define LIBICONV, LTLIBICONV and INCICONV
  dnl accordingly.
  AC_LIB_LINKFLAGS_BODY([iconv])
])
m4trace:m4/iconv.m4:27: -1- AC_DEFUN([AM_ICONV_LINK], [
  dnl Some systems have iconv in libc, some have it in libiconv (OSF/1 and
  dnl those with the standalone portable GNU libiconv installed).
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Search for libiconv and define LIBICONV, LTLIBICONV and INCICONV
  dnl accordingly.
  AC_REQUIRE([AM_ICONV_LINKFLAGS_BODY])

  dnl Add $INCICONV to CPPFLAGS before performing the following checks,
  dnl because if the user has installed libiconv and not disabled its use
  dnl via --without-libiconv-prefix, he wants to use it. The first
  dnl AC_LINK_IFELSE will then fail, the second AC_LINK_IFELSE will succeed.
  am_save_CPPFLAGS="$CPPFLAGS"
  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCICONV])

  AC_CACHE_CHECK([for iconv], [am_cv_func_iconv], [
    am_cv_func_iconv="no, consider installing GNU libiconv"
    am_cv_lib_iconv=no
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM(
         [[
#include <stdlib.h>
#include <iconv.h>
         ]],
         [[iconv_t cd = iconv_open("","");
           iconv(cd,NULL,NULL,NULL,NULL);
           iconv_close(cd);]])],
      [am_cv_func_iconv=yes])
    if test "$am_cv_func_iconv" != yes; then
      am_save_LIBS="$LIBS"
      LIBS="$LIBS $LIBICONV"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[
#include <stdlib.h>
#include <iconv.h>
           ]],
           [[iconv_t cd = iconv_open("","");
             iconv(cd,NULL,NULL,NULL,NULL);
             iconv_close(cd);]])],
        [am_cv_lib_iconv=yes]
        [am_cv_func_iconv=yes])
      LIBS="$am_save_LIBS"
    fi
  ])
  if test "$am_cv_func_iconv" = yes; then
    AC_CACHE_CHECK([for working iconv], [am_cv_func_iconv_works], [
      dnl This tests against bugs in AIX 5.1, AIX 6.1..7.1, HP-UX 11.11,
      dnl Solaris 10.
      am_save_LIBS="$LIBS"
      if test $am_cv_lib_iconv = yes; then
        LIBS="$LIBS $LIBICONV"
      fi
      am_cv_func_iconv_works=no
      for ac_iconv_const in '' 'const'; do
        AC_RUN_IFELSE(
          [AC_LANG_PROGRAM(
             [[
#include <iconv.h>
#include <string.h>

#ifndef ICONV_CONST
# define ICONV_CONST $ac_iconv_const
#endif
             ]],
             [[int result = 0;
  /* Test against AIX 5.1...7.2 bug: Failures are not distinguishable from
     successful returns.  This is even documented in
     <https://www.ibm.com/support/knowledgecenter/ssw_aix_72/i_bostechref/iconv.html> */
  {
    iconv_t cd_utf8_to_88591 = iconv_open ("ISO8859-1", "UTF-8");
    if (cd_utf8_to_88591 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\342\202\254"; /* EURO SIGN */
        char buf[10];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_utf8_to_88591,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res == 0)
          result |= 1;
        iconv_close (cd_utf8_to_88591);
      }
  }
  /* Test against Solaris 10 bug: Failures are not distinguishable from
     successful returns.  */
  {
    iconv_t cd_ascii_to_88591 = iconv_open ("ISO8859-1", "646");
    if (cd_ascii_to_88591 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\263";
        char buf[10];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_ascii_to_88591,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res == 0)
          result |= 2;
        iconv_close (cd_ascii_to_88591);
      }
  }
  /* Test against AIX 6.1..7.1 bug: Buffer overrun.  */
  {
    iconv_t cd_88591_to_utf8 = iconv_open ("UTF-8", "ISO-8859-1");
    if (cd_88591_to_utf8 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\304";
        static char buf[2] = { (char)0xDE, (char)0xAD };
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = 1;
        char *outptr = buf;
        size_t outbytesleft = 1;
        size_t res = iconv (cd_88591_to_utf8,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res != (size_t)(-1) || outptr - buf > 1 || buf[1] != (char)0xAD)
          result |= 4;
        iconv_close (cd_88591_to_utf8);
      }
  }
#if 0 /* This bug could be worked around by the caller.  */
  /* Test against HP-UX 11.11 bug: Positive return value instead of 0.  */
  {
    iconv_t cd_88591_to_utf8 = iconv_open ("utf8", "iso88591");
    if (cd_88591_to_utf8 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\304rger mit b\366sen B\374bchen ohne Augenma\337";
        char buf[50];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_88591_to_utf8,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if ((int)res > 0)
          result |= 8;
        iconv_close (cd_88591_to_utf8);
      }
  }
#endif
  /* Test against HP-UX 11.11 bug: No converter from EUC-JP to UTF-8 is
     provided.  */
  {
    /* Try standardized names.  */
    iconv_t cd1 = iconv_open ("UTF-8", "EUC-JP");
    /* Try IRIX, OSF/1 names.  */
    iconv_t cd2 = iconv_open ("UTF-8", "eucJP");
    /* Try AIX names.  */
    iconv_t cd3 = iconv_open ("UTF-8", "IBM-eucJP");
    /* Try HP-UX names.  */
    iconv_t cd4 = iconv_open ("utf8", "eucJP");
    if (cd1 == (iconv_t)(-1) && cd2 == (iconv_t)(-1)
        && cd3 == (iconv_t)(-1) && cd4 == (iconv_t)(-1))
      result |= 16;
    if (cd1 != (iconv_t)(-1))
      iconv_close (cd1);
    if (cd2 != (iconv_t)(-1))
      iconv_close (cd2);
    if (cd3 != (iconv_t)(-1))
      iconv_close (cd3);
    if (cd4 != (iconv_t)(-1))
      iconv_close (cd4);
  }
  return result;
]])],
          [am_cv_func_iconv_works=yes], ,
          [case "$host_os" in
             aix* | hpux*) am_cv_func_iconv_works="guessing no" ;;
             *)            am_cv_func_iconv_works="guessing yes" ;;
           esac])
        test "$am_cv_func_iconv_works" = no || break
      done
      LIBS="$am_save_LIBS"
    ])
    case "$am_cv_func_iconv_works" in
      *no) am_func_iconv=no am_cv_lib_iconv=no ;;
      *)   am_func_iconv=yes ;;
    esac
  else
    am_func_iconv=no am_cv_lib_iconv=no
  fi
  if test "$am_func_iconv" = yes; then
    AC_DEFINE([HAVE_ICONV], [1],
      [Define if you have the iconv() function and it works.])
  fi
  if test "$am_cv_lib_iconv" = yes; then
    AC_MSG_CHECKING([how to link with libiconv])
    AC_MSG_RESULT([$LIBICONV])
  else
    dnl If $LIBICONV didn't lead to a usable library, we don't need $INCICONV
    dnl either.
    CPPFLAGS="$am_save_CPPFLAGS"
    LIBICONV=
    LTLIBICONV=
  fi
  AC_SUBST([LIBICONV])
  AC_SUBST([LTLIBICONV])
])
m4trace:m4/iconv.m4:243: -1- AC_DEFUN_ONCE([AM_ICONV], [
  AM_ICONV_LINK
  if test "$am_cv_func_iconv" = yes; then
    AC_CACHE_CHECK([whether iconv is compatible with its POSIX signature],
      [gl_cv_iconv_nonconst],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[
#include <stdlib.h>
#include <iconv.h>
extern
#ifdef __cplusplus
"C"
#endif
size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
            ]],
            [[]])],
         [gl_cv_iconv_nonconst=yes],
         [gl_cv_iconv_nonconst=no])
      ])
  else
    dnl When compiling GNU libiconv on a system that does not have iconv yet,
    dnl pick the POSIX compliant declaration without 'const'.
    gl_cv_iconv_nonconst=yes
  fi
  if test $gl_cv_iconv_nonconst = yes; then
    iconv_arg1=""
  else
    iconv_arg1="const"
  fi
  AC_DEFINE_UNQUOTED([ICONV_CONST], [$iconv_arg1],
    [Define as const if the declaration of iconv() needs const.])
  dnl Also substitute ICONV_CONST in the gnulib generated <iconv.h>.
  m4_ifdef([gl_ICONV_H_DEFAULTS],
    [AC_REQUIRE([gl_ICONV_H_DEFAULTS])
     if test $gl_cv_iconv_nonconst != yes; then
       ICONV_CONST="const"
     fi
    ])
])
m4trace:m4/iconv_h.m4:7: -1- AC_DEFUN_ONCE([gl_ICONV_H], [
  AC_REQUIRE([gl_ICONV_H_DEFAULTS])

  dnl Execute this unconditionally, because GL_GENERATE_ICONV_H may be set to
  dnl true by other modules, after this code is executed.
  gl_CHECK_NEXT_HEADERS([iconv.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <iconv.h>
    ]], [iconv iconv_open])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/iconv_h.m4:25: -1- AC_DEFUN([gl_REPLACE_ICONV_H], [
  gl_ICONV_H_REQUIRE_DEFAULTS
  GL_GENERATE_ICONV_H=true
])
m4trace:m4/iconv_h.m4:35: -1- AC_DEFUN([gl_ICONV_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_ICONV_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/iconv_h.m4:45: -1- AC_DEFUN([gl_ICONV_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_ICONV_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ICONV])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_ICONV_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_ICONV_H_DEFAULTS])
])
m4trace:m4/iconv_h.m4:54: -1- AC_DEFUN([gl_ICONV_H_DEFAULTS], [
  m4_ifdef([gl_ANSI_CXX], [AC_REQUIRE([gl_ANSI_CXX])])
  dnl Assume proper GNU behavior unless another module says otherwise.
  ICONV_CONST=;         AC_SUBST([ICONV_CONST])
  REPLACE_ICONV=0;      AC_SUBST([REPLACE_ICONV])
  REPLACE_ICONV_OPEN=0; AC_SUBST([REPLACE_ICONV_OPEN])
  REPLACE_ICONV_UTF=0;  AC_SUBST([REPLACE_ICONV_UTF])
  GL_GENERATE_ICONV_H=false
  m4_ifdef([gl_POSIXCHECK],
    [GL_GENERATE_ICONV_H=true],
    [if m4_ifdef([gl_ANSI_CXX], [test "$CXX" != no], [false]); then
       dnl Override <fnmatch.h> always, to support the C++ GNULIB_NAMESPACE.
       GL_GENERATE_ICONV_H=true
     fi
    ])
])
m4trace:m4/iconv_open.m4:7: -1- AC_DEFUN([gl_FUNC_ICONV_OPEN], [
  AC_REQUIRE([AM_ICONV])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_ICONV_H_DEFAULTS])
  if test "$am_cv_func_iconv" = yes; then
    dnl Provide the <iconv.h> override, for the sake of the C++ aliases.
    gl_REPLACE_ICONV_H
    dnl Test whether iconv_open accepts standardized encoding names.
    dnl We know that GNU libiconv and GNU libc do.
    AC_EGREP_CPP([gnu_iconv], [
      #include <iconv.h>
      #if defined _LIBICONV_VERSION || (defined __GLIBC__ && !defined __UCLIBC__)
       gnu_iconv
      #endif
      ], [gl_func_iconv_gnu=yes], [gl_func_iconv_gnu=no])
    if test $gl_func_iconv_gnu = no; then
      iconv_flavor=
      case "$host_os" in
        aix*)         iconv_flavor=ICONV_FLAVOR_AIX ;;
        irix*)        iconv_flavor=ICONV_FLAVOR_IRIX ;;
        hpux*)        iconv_flavor=ICONV_FLAVOR_HPUX ;;
        osf*)         iconv_flavor=ICONV_FLAVOR_OSF ;;
        solaris*)     iconv_flavor=ICONV_FLAVOR_SOLARIS ;;
        openedition*) iconv_flavor=ICONV_FLAVOR_ZOS ;;
      esac
      if test -n "$iconv_flavor"; then
        AC_DEFINE_UNQUOTED([ICONV_FLAVOR], [$iconv_flavor],
          [Define to a symbolic name denoting the flavor of iconv_open()
           implementation.])
        gl_REPLACE_ICONV_OPEN
      fi
    fi
    m4_ifdef([gl_FUNC_ICONV_OPEN_UTF_SUPPORT], [
      gl_FUNC_ICONV_OPEN_UTF_SUPPORT
      case "$gl_cv_func_iconv_supports_utf" in
        *yes) ;;
        *)
          REPLACE_ICONV_UTF=1
          AC_DEFINE([REPLACE_ICONV_UTF], [1],
            [Define if the iconv() functions are enhanced to handle the UTF-{16,32}{BE,LE} encodings.])
          REPLACE_ICONV=1
          gl_REPLACE_ICONV_OPEN
          ;;
      esac
    ])
  fi
])
m4trace:m4/iconv_open.m4:56: -1- AC_DEFUN([gl_REPLACE_ICONV_OPEN], [
  gl_REPLACE_ICONV_H
  REPLACE_ICONV_OPEN=1
])
m4trace:m4/idcache.m4:8: -1- AC_DEFUN([gl_IDCACHE], [
  :
])
m4trace:m4/include-exclude-prog.m4:10: -1- AC_DEFUN([gl_ADD_PROG], [{
  if test -z "$$1"; then
    $1=$2
  else
    $1="$$1 $2"
  fi
}])
m4trace:m4/include-exclude-prog.m4:20: -1- AC_DEFUN([gl_REMOVE_PROG], [{
  $1=`for gl_rem_i in $$1; do
        test "$gl_rem_i" = "$2" || echo "$gl_rem_i"
      done | tr '\012' ' ' | sed 's/ $//'; echo`
}])
m4trace:m4/include-exclude-prog.m4:34: -1- AC_DEFUN([gl_INCLUDE_EXCLUDE_PROG], [{
  gl_no_install_progs_default=`echo '$2'|sed 's/,/ /g'`
  AC_ARG_ENABLE([install-program],
    [AS_HELP_STRING([--enable-install-program=PROG_LIST],
                    [install the programs in PROG_LIST (comma-separated,
                    default: none)])],
    [gl_do_install_prog=$enableval],
    [gl_do_install_prog=]
  )

  # If you want to refrain from installing programs A and B,
  # use --enable-no-install-program=A,B
  AC_ARG_ENABLE([no-install-program],
    [AS_HELP_STRING([--enable-no-install-program=PROG_LIST],
                    [do NOT install the programs in PROG_LIST
                    (comma-separated, default: $2)])],
    [gl_no_install_prog=$enableval],
    [gl_no_install_prog=]
  )

  # Convert to space separated lists.
  gl_do_install_prog=`echo "$gl_do_install_prog"|tr -s , ' '`
  gl_no_install_prog=`echo "$gl_no_install_prog"|tr -s , ' '`

  # For each not-to-be-installed program name, ensure that it's a
  # valid name, remove it from the list of programs to build/install,
  # as well as from the list of man pages to install.
  for gl_i in $gl_no_install_prog; do

    # Fail upon a request to install and not-install the same program.
    case " $gl_do_install_prog " in
      *" $gl_i "*) AC_MSG_ERROR(['$gl_i' is both included and excluded]) ;;
    esac

    gl_msg=
    # Warn about a request not to install a program that is not being
    # built (which may be because the systems lacks a required interface).
    case " $$1 " in
      *" $gl_i "*) gl_REMOVE_PROG([$1], $gl_i) ;;
      *) gl_msg="'$gl_i' is already not being installed" ;;
    esac

    if test "$gl_msg" = ''; then
      # Warn about a request not to install a program that is
      # already on the default-no-install list.
      case " $gl_no_install_progs_default " in
        *" $gl_i "*) gl_msg="by default, '$gl_i' is not installed" ;;
      esac
    fi

    test "$gl_msg" != '' && AC_MSG_WARN([$gl_msg])
  done

  for gl_i in $gl_do_install_prog; do
    case " $gl_no_install_progs_default " in
      *" $gl_i "*) gl_ADD_PROG([$1], $gl_i) ;;
      *) AC_MSG_WARN(['$gl_i' is not an optionally-installable program]) ;;
    esac
  done
}])
m4trace:m4/include_next.m4:36: -1- AC_DEFUN([gl_INCLUDE_NEXT], [
  AC_LANG_PREPROC_REQUIRE()
  AC_CACHE_CHECK([whether the preprocessor supports include_next],
    [gl_cv_have_include_next],
    [rm -rf conftestd1a conftestd1b conftestd2
     mkdir conftestd1a conftestd1b conftestd2
     dnl IBM C 9.0, 10.1 (original versions, prior to the 2009-01 updates) on
     dnl AIX 6.1 support include_next when used as first preprocessor directive
     dnl in a file, but not when preceded by another include directive. Check
     dnl for this bug by including <stdio.h>.
     dnl Additionally, with this same compiler, include_next is a no-op when
     dnl used in a header file that was included by specifying its absolute
     dnl file name. Despite these two bugs, include_next is used in the
     dnl compiler's <math.h>. By virtue of the second bug, we need to use
     dnl include_next as well in this case.
     cat <<EOF > conftestd1a/conftest.h
#define DEFINED_IN_CONFTESTD1
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd1b/conftest.h
#define DEFINED_IN_CONFTESTD1
#include <stdio.h>
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd2/conftest.h
#ifndef DEFINED_IN_CONFTESTD1
#error "include_next test doesn't work"
#endif
#define DEFINED_IN_CONFTESTD2
EOF
     gl_save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1b -Iconftestd2"
dnl We intentionally avoid using AC_LANG_SOURCE here.
     AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
       [gl_cv_have_include_next=yes],
       [CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1a -Iconftestd2"
        AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
          [gl_cv_have_include_next=buggy],
          [gl_cv_have_include_next=no])
       ])
     CPPFLAGS="$gl_save_CPPFLAGS"
     rm -rf conftestd1a conftestd1b conftestd2
    ])
  PRAGMA_SYSTEM_HEADER=
  if test $gl_cv_have_include_next = yes; then
    INCLUDE_NEXT=include_next
    INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    if test -n "$GCC"; then
      PRAGMA_SYSTEM_HEADER='#pragma GCC system_header'
    fi
  else
    if test $gl_cv_have_include_next = buggy; then
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    else
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include
    fi
  fi
  AC_SUBST([INCLUDE_NEXT])
  AC_SUBST([INCLUDE_NEXT_AS_FIRST_DIRECTIVE])
  AC_SUBST([PRAGMA_SYSTEM_HEADER])

  dnl HP NonStop systems, which define __TANDEM, limit the line length
  dnl after including some system header files.
  AC_CACHE_CHECK([whether source code line length is unlimited],
    [gl_cv_source_line_length_unlimited],
    [AC_EGREP_CPP([choke me],
       [
#ifdef __TANDEM
choke me
#endif
       ],
       [gl_cv_source_line_length_unlimited=no],
       [gl_cv_source_line_length_unlimited=yes])
    ])
  if test $gl_cv_source_line_length_unlimited = no; then
    PRAGMA_COLUMNS="#pragma COLUMNS 10000"
  else
    PRAGMA_COLUMNS=
  fi
  AC_SUBST([PRAGMA_COLUMNS])
])
m4trace:m4/include_next.m4:156: -1- AC_DEFUN([gl_CHECK_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [check])
])
m4trace:m4/include_next.m4:166: -1- AC_DEFUN([gl_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [assume])
])
m4trace:m4/include_next.m4:172: -1- AC_DEFUN([gl_NEXT_HEADERS_INTERNAL], [
  AC_REQUIRE([gl_INCLUDE_NEXT])
  AC_REQUIRE([AC_CANONICAL_HOST])

  m4_if([$2], [check],
    [AC_CHECK_HEADERS_ONCE([$1])
    ])

  m4_foreach_w([gl_HEADER_NAME], [$1],
    [AS_VAR_PUSHDEF([gl_next_header],
                    [gl_cv_next_]m4_defn([gl_HEADER_NAME]))
     if test $gl_cv_have_include_next = yes; then
       AS_VAR_SET([gl_next_header], ['<'gl_HEADER_NAME'>'])
     else
       AC_CACHE_CHECK(
         [absolute name of <]m4_defn([gl_HEADER_NAME])[>],
         [gl_next_header],
         [m4_if([$2], [check],
            [AS_VAR_PUSHDEF([gl_header_exists],
                            [ac_cv_header_]m4_defn([gl_HEADER_NAME]))
             if test AS_VAR_GET([gl_header_exists]) = yes; then
             AS_VAR_POPDEF([gl_header_exists])
            ])
          gl_ABSOLUTE_HEADER_ONE(gl_HEADER_NAME)
          AS_VAR_COPY([gl_header], [gl_cv_absolute_]AS_TR_SH(gl_HEADER_NAME))
          AS_VAR_SET([gl_next_header], ['"'$gl_header'"'])
          m4_if([$2], [check],
            [else
               AS_VAR_SET([gl_next_header], ['<'gl_HEADER_NAME'>'])
             fi
            ])
         ])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_]m4_defn([gl_HEADER_NAME])),
       [AS_VAR_GET([gl_next_header])])
     if test $gl_cv_have_include_next = yes || test $gl_cv_have_include_next = buggy; then
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include_next'
       gl_next_as_first_directive='<'gl_HEADER_NAME'>'
     else
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include'
       gl_next_as_first_directive=AS_VAR_GET([gl_next_header])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_AS_FIRST_DIRECTIVE_]m4_defn([gl_HEADER_NAME])),
       [$gl_next_as_first_directive])
     AS_VAR_POPDEF([gl_next_header])])
])
m4trace:m4/inet_ntop.m4:7: -1- AC_DEFUN([gl_FUNC_INET_NTOP], [
  AC_REQUIRE([gl_ARPA_INET_H_DEFAULTS])

  dnl Persuade Solaris <arpa/inet.h> to declare inet_ntop.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_C_RESTRICT])

  dnl Most platforms that provide inet_ntop define it in libc.
  dnl Solaris 8..10 provide inet_ntop in libnsl instead.
  dnl Solaris 2.6..7 provide inet_ntop in libresolv instead.
  dnl Haiku provides it in -lnetwork.
  dnl Native Windows provides it in -lws2_32 instead, with a declaration in
  dnl <ws2tcpip.h>, and it uses stdcall calling convention, not cdecl
  dnl (hence we cannot use AC_CHECK_FUNCS, AC_SEARCH_LIBS to find it).
  HAVE_INET_NTOP=1
  INET_NTOP_LIB=
  gl_PREREQ_SYS_H_WINSOCK2
  if test $HAVE_WINSOCK2_H = 1; then
    dnl It needs to be overridden, because the stdcall calling convention
    dnl is not compliant with POSIX.  Set REPLACE_INET_NTOP in order to avoid
    dnl a name conflict at the linker level, even though the header file
    dnl <ws2tcpip.h> declares inet_ntop only if _WIN32_WINNT >= 0x0600.
    REPLACE_INET_NTOP=1
    AC_CHECK_DECLS([inet_ntop],,, [[#include <ws2tcpip.h>]])
    if test $ac_cv_have_decl_inet_ntop = yes; then
      INET_NTOP_LIB="-lws2_32"
    else
      HAVE_DECL_INET_NTOP=0
    fi
  else
    gl_save_LIBS=$LIBS
    AC_SEARCH_LIBS([inet_ntop], [nsl resolv network], [],
      [AC_CHECK_FUNCS([inet_ntop])
       if test $ac_cv_func_inet_ntop = no; then
         HAVE_INET_NTOP=0
       fi
      ])
    LIBS=$gl_save_LIBS

    if test "$ac_cv_search_inet_ntop" != "no" \
       && test "$ac_cv_search_inet_ntop" != "none required"; then
      INET_NTOP_LIB="$ac_cv_search_inet_ntop"
    fi

    AC_CHECK_HEADERS_ONCE([netdb.h])
    AC_CHECK_DECLS([inet_ntop],,,
      [[#include <arpa/inet.h>
        #if HAVE_NETDB_H
        # include <netdb.h>
        #endif
      ]])
    if test $ac_cv_have_decl_inet_ntop = no; then
      HAVE_DECL_INET_NTOP=0
    fi
  fi
  AC_SUBST([INET_NTOP_LIB])
])
m4trace:m4/inet_ntop.m4:68: -1- AC_DEFUN([gl_PREREQ_INET_NTOP], [
  AC_REQUIRE([gl_SOCKET_FAMILIES])
])
m4trace:m4/inet_pton.m4:7: -1- AC_DEFUN([gl_FUNC_INET_PTON], [
  AC_REQUIRE([gl_ARPA_INET_H_DEFAULTS])

  dnl Persuade Solaris <arpa/inet.h> to declare inet_pton.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_C_RESTRICT])

  dnl Most platforms that provide inet_pton define it in libc.
  dnl Solaris 8..10 provide inet_pton in libnsl instead.
  dnl Solaris 2.6..7 provide inet_pton in libresolv instead.
  dnl Haiku provides it in -lnetwork.
  dnl Native Windows provides it in -lws2_32 instead, with a declaration in
  dnl <ws2tcpip.h>, and it uses stdcall calling convention, not cdecl
  dnl (hence we cannot use AC_CHECK_FUNCS, AC_SEARCH_LIBS to find it).
  HAVE_INET_PTON=1
  INET_PTON_LIB=
  gl_PREREQ_SYS_H_WINSOCK2
  if test $HAVE_WINSOCK2_H = 1; then
    dnl It needs to be overridden, because the stdcall calling convention
    dnl is not compliant with POSIX.  Set REPLACE_INET_PTON in order to avoid
    dnl a name conflict at the linker level, even though the header file
    dnl <ws2tcpip.h> declares inet_pton only if _WIN32_WINNT >= 0x0600.
    REPLACE_INET_PTON=1
    AC_CHECK_DECLS([inet_pton],,, [[#include <ws2tcpip.h>]])
    if test $ac_cv_have_decl_inet_pton = yes; then
      INET_PTON_LIB="-lws2_32"
    else
      HAVE_DECL_INET_PTON=0
    fi
  else
    gl_save_LIBS=$LIBS
    AC_SEARCH_LIBS([inet_pton], [nsl resolv network], [],
      [AC_CHECK_FUNCS([inet_pton])
       if test $ac_cv_func_inet_pton = no; then
         HAVE_INET_PTON=0
       fi
      ])
    LIBS=$gl_save_LIBS

    if test "$ac_cv_search_inet_pton" != "no" \
       && test "$ac_cv_search_inet_pton" != "none required"; then
      INET_PTON_LIB="$ac_cv_search_inet_pton"
    fi

    AC_CHECK_HEADERS_ONCE([netdb.h])
    AC_CHECK_DECLS([inet_pton],,,
      [[#include <arpa/inet.h>
        #if HAVE_NETDB_H
        # include <netdb.h>
        #endif
      ]])
    if test $ac_cv_have_decl_inet_pton = no; then
      HAVE_DECL_INET_PTON=0
    fi
  fi
  AC_SUBST([INET_PTON_LIB])
])
m4trace:m4/inet_pton.m4:68: -1- AC_DEFUN([gl_PREREQ_INET_PTON], [
  AC_REQUIRE([gl_SOCKET_FAMILIES])
])
m4trace:m4/inline.m4:12: -1- AC_DEFUN([gl_INLINE], [
  AC_REQUIRE([AC_C_INLINE])
  AC_CACHE_CHECK([whether the compiler generally respects inline],
    [gl_cv_c_inline_effective],
    [if test $ac_cv_c_inline = no; then
       gl_cv_c_inline_effective=no
     else
       dnl GCC defines __NO_INLINE__ if not optimizing or if -fno-inline is
       dnl specified.
       dnl Use AC_COMPILE_IFELSE here, not AC_EGREP_CPP, because the result
       dnl depends on optimization flags, which can be in CFLAGS.
       dnl (AC_EGREP_CPP looks only at the CPPFLAGS.)
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[]],
           [[#ifdef __NO_INLINE__
               #error "inline is not effective"
             #endif]])],
         [gl_cv_c_inline_effective=yes],
         [gl_cv_c_inline_effective=no])
     fi
    ])
  if test $gl_cv_c_inline_effective = yes; then
    AC_DEFINE([HAVE_INLINE], [1],
      [Define to 1 if the compiler supports one of the keywords
       'inline', '__inline__', '__inline' and effectively inlines
       functions marked as such.])
  fi
])
m4trace:m4/intl-thread-locale.m4:18: -1- AC_DEFUN([gt_INTL_THREAD_LOCALE_NAME], [
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl Persuade Solaris <locale.h> to define 'locale_t'.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Test whether uselocale() exists and works at all.
  gt_FUNC_USELOCALE

  dnl On OpenBSD >= 6.2, the locale_t type and the uselocale(), newlocale(),
  dnl duplocale(), freelocale() functions exist but are effectively useless,
  dnl because the locale_t value depends only on the LC_CTYPE category of the
  dnl locale and furthermore contains only one bit of information (it
  dnl distinguishes the "C" locale from the *.UTF-8 locales). See
  dnl <https://cvsweb.openbsd.org/src/lib/libc/locale/newlocale.c?rev=1.1&content-type=text/x-cvsweb-markup>.
  dnl In the setlocale() implementation they have thought about the programs
  dnl that use the API ("Even though only LC_CTYPE has any effect in the
  dnl OpenBSD base system, store complete information about the global locale,
  dnl such that third-party software can access it"), but for uselocale()
  dnl they did not think about the programs.
  dnl In this situation, even the HAVE_NAMELESS_LOCALES support does not work.
  dnl So, define HAVE_FAKE_LOCALES and disable all locale_t support.
  case "$gt_cv_func_uselocale_works" in
    *yes)
      AC_CHECK_HEADERS_ONCE([xlocale.h])
      AC_CACHE_CHECK([for fake locale system (OpenBSD)],
        [gt_cv_locale_fake],
        [AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <locale.h>
#if HAVE_XLOCALE_H
# include <xlocale.h>
#endif
int main ()
{
  locale_t loc1, loc2;
  if (setlocale (LC_ALL, "de_DE.UTF-8") == NULL) return 1;
  if (setlocale (LC_ALL, "fr_FR.UTF-8") == NULL) return 1;
  loc1 = newlocale (LC_ALL_MASK, "de_DE.UTF-8", (locale_t)0);
  loc2 = newlocale (LC_ALL_MASK, "fr_FR.UTF-8", (locale_t)0);
  return !(loc1 == loc2);
}]])],
           [gt_cv_locale_fake=yes],
           [gt_cv_locale_fake=no],
           [dnl Guess the locale system is fake only on OpenBSD.
            case "$host_os" in
              openbsd*) gt_cv_locale_fake="guessing yes" ;;
              *)        gt_cv_locale_fake="guessing no" ;;
            esac
           ])
        ])
      ;;
    *) gt_cv_locale_fake=no ;;
  esac
  case "$gt_cv_locale_fake" in
    *yes)
      gt_fake_locales=yes
      AC_DEFINE([HAVE_FAKE_LOCALES], [1],
        [Define if the locale_t type contains insufficient information, as on OpenBSD.])
      ;;
    *)
      gt_fake_locales=no
      ;;
  esac

  case "$gt_cv_func_uselocale_works" in
    *yes)
      AC_CACHE_CHECK([for Solaris 11.4 locale system],
        [gt_cv_locale_solaris114],
        [case "$host_os" in
           solaris*)
             dnl Test whether <locale.h> defines locale_t as a typedef of
             dnl 'struct _LC_locale_t **' (whereas Illumos defines it as a
             dnl typedef of 'struct _locale *').
             dnl Another possible test would be to include <sys/localedef.h>
             dnl and test whether it defines the _LC_core_data_locale_t type.
             dnl This type was added in Solaris 11.4.
             AC_COMPILE_IFELSE(
               [AC_LANG_PROGRAM([[
                  #include <locale.h>
                  struct _LC_locale_t *x;
                  locale_t y;
                ]],
                [[*y = x;]])],
               [gt_cv_locale_solaris114=yes],
               [gt_cv_locale_solaris114=no])
             ;;
           *) gt_cv_locale_solaris114=no ;;
         esac
        ])
      ;;
    *) gt_cv_locale_solaris114=no ;;
  esac
  if test $gt_cv_locale_solaris114 = yes; then
    AC_DEFINE([HAVE_SOLARIS114_LOCALES], [1],
      [Define if the locale_t type is as on Solaris 11.4.])
  fi

  dnl Solaris 12 will maybe provide getlocalename_l.  If it does, it will
  dnl improve the implementation of gl_locale_name_thread(), by removing
  dnl the use of undocumented structures.
  case "$gt_cv_func_uselocale_works" in
    *yes)
      AC_CHECK_FUNCS([getlocalename_l])
      ;;
  esac

  dnl This code is for platforms where the locale_t type does not provide access
  dnl to the name of each locale category.  This code has the drawback that it
  dnl requires the gnulib overrides of 'newlocale', 'duplocale', 'freelocale',
  dnl which is a problem for GNU libunistring.  Therefore try hard to avoid
  dnl enabling this code!
  gt_nameless_locales=no
  case "$host_os" in
    dnl It's needed on AIX 7.2.
    aix*)
      gt_nameless_locales=yes
      AC_DEFINE([HAVE_NAMELESS_LOCALES], [1],
        [Define if the locale_t type does not contain the name of each locale category.])
      ;;
  esac

  dnl We cannot support uselocale() on platforms where the locale_t type is
  dnl fake.  So, set
  dnl   gt_good_uselocale = gt_working_uselocale && !gt_fake_locales.
  if test $gt_working_uselocale = yes && test $gt_fake_locales = no; then
    gt_good_uselocale=yes
    AC_DEFINE([HAVE_GOOD_USELOCALE], [1],
      [Define if the uselocale exists, may be safely called, and returns sufficient information.])
  else
    gt_good_uselocale=no
  fi

  dnl Set gt_localename_enhances_locale_funcs to indicate whether localename.c
  dnl overrides newlocale(), duplocale(), freelocale() to keep track of locale
  dnl names.
  if test $gt_good_uselocale = yes && test $gt_nameless_locales = yes; then
    gt_localename_enhances_locale_funcs=yes
    LOCALENAME_ENHANCE_LOCALE_FUNCS=1
    AC_DEFINE([LOCALENAME_ENHANCE_LOCALE_FUNCS], [1],
      [Define if localename.c overrides newlocale(), duplocale(), freelocale().])
  else
    gt_localename_enhances_locale_funcs=no
  fi
])
m4trace:m4/intl-thread-locale.m4:167: -1- AC_DEFUN([gt_FUNC_USELOCALE], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc and Solaris <locale.h> to define 'locale_t'.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([uselocale])

  dnl On AIX 7.2, the uselocale() function is not documented and leads to
  dnl crashes in subsequent setlocale() invocations.
  dnl In 2019, some versions of z/OS lack the locale_t type and have a broken
  dnl uselocale function.
  if test $ac_cv_func_uselocale = yes; then
    AC_CHECK_HEADERS_ONCE([xlocale.h])
    AC_CACHE_CHECK([whether uselocale works],
      [gt_cv_func_uselocale_works],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE([[
#include <locale.h>
#if HAVE_XLOCALE_H
# include <xlocale.h>
#endif
locale_t loc1;
int main ()
{
  uselocale (NULL);
  setlocale (LC_ALL, "en_US.UTF-8");
  return 0;
}]])],
         [gt_cv_func_uselocale_works=yes],
         [gt_cv_func_uselocale_works=no],
         [# Guess no on AIX and z/OS, yes otherwise.
          case "$host_os" in
            aix* | openedition*) gt_cv_func_uselocale_works="guessing no" ;;
            *)                   gt_cv_func_uselocale_works="guessing yes" ;;
          esac
         ])
      ])
  else
    gt_cv_func_uselocale_works=no
  fi
  case "$gt_cv_func_uselocale_works" in
    *yes)
      gt_working_uselocale=yes
      AC_DEFINE([HAVE_WORKING_USELOCALE], [1],
        [Define if the uselocale function exists and may safely be called.])
      ;;
    *)
      gt_working_uselocale=no
      ;;
  esac
])
m4trace:m4/intlmacosx.m4:18: -1- AC_DEFUN([gt_INTL_MACOSX], [
  dnl Check for API introduced in Mac OS X 10.4.
  AC_CACHE_CHECK([for CFPreferencesCopyAppValue],
    [gt_cv_func_CFPreferencesCopyAppValue],
    [gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <CoreFoundation/CFPreferences.h>]],
          [[CFPreferencesCopyAppValue(NULL, NULL)]])],
       [gt_cv_func_CFPreferencesCopyAppValue=yes],
       [gt_cv_func_CFPreferencesCopyAppValue=no])
     LIBS="$gt_save_LIBS"])
  if test $gt_cv_func_CFPreferencesCopyAppValue = yes; then
    AC_DEFINE([HAVE_CFPREFERENCESCOPYAPPVALUE], [1],
      [Define to 1 if you have the Mac OS X function CFPreferencesCopyAppValue in the CoreFoundation framework.])
  fi
  dnl Don't check for the API introduced in Mac OS X 10.5, CFLocaleCopyCurrent,
  dnl because in macOS 10.13.4 it has the following behaviour:
  dnl When two or more languages are specified in the
  dnl "System Preferences > Language & Region > Preferred Languages" panel,
  dnl it returns en_CC where CC is the territory (even when English is not among
  dnl the preferred languages!).  What we want instead is what
  dnl CFLocaleCopyCurrent returned in earlier macOS releases and what
  dnl CFPreferencesCopyAppValue still returns, namely ll_CC where ll is the
  dnl first among the preferred languages and CC is the territory.
  AC_CACHE_CHECK([for CFLocaleCopyPreferredLanguages], [gt_cv_func_CFLocaleCopyPreferredLanguages],
    [gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <CoreFoundation/CFLocale.h>]],
          [[CFLocaleCopyPreferredLanguages();]])],
       [gt_cv_func_CFLocaleCopyPreferredLanguages=yes],
       [gt_cv_func_CFLocaleCopyPreferredLanguages=no])
     LIBS="$gt_save_LIBS"])
  if test $gt_cv_func_CFLocaleCopyPreferredLanguages = yes; then
    AC_DEFINE([HAVE_CFLOCALECOPYPREFERREDLANGUAGES], [1],
      [Define to 1 if you have the Mac OS X function CFLocaleCopyPreferredLanguages in the CoreFoundation framework.])
  fi
  INTL_MACOSX_LIBS=
  if test $gt_cv_func_CFPreferencesCopyAppValue = yes \
     || test $gt_cv_func_CFLocaleCopyPreferredLanguages = yes; then
    INTL_MACOSX_LIBS="-Wl,-framework -Wl,CoreFoundation"
  fi
  AC_SUBST([INTL_MACOSX_LIBS])
])
m4trace:m4/intmax_t.m4:15: -1- AC_DEFUN([gl_AC_TYPE_INTMAX_T], [
  dnl For simplicity, we assume that a header file defines 'intmax_t' if and
  dnl only if it defines 'uintmax_t'.
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  if test $gl_cv_header_inttypes_h = no && test $gl_cv_header_stdint_h = no; then
    AC_DEFINE_UNQUOTED([intmax_t], [long long],
     [Define to long or long long if <inttypes.h> and <stdint.h> don't define.])
  else
    AC_DEFINE([HAVE_INTMAX_T], [1],
      [Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>.])
  fi
])
m4trace:m4/intmax_t.m4:32: -1- AC_DEFUN([gt_AC_TYPE_INTMAX_T], [
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  AC_CACHE_CHECK([for intmax_t], [gt_cv_c_intmax_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[
#include <stddef.h>
#include <stdlib.h>
#if HAVE_STDINT_H_WITH_UINTMAX
#include <stdint.h>
#endif
#if HAVE_INTTYPES_H_WITH_UINTMAX
#include <inttypes.h>
#endif
          ]],
          [[intmax_t x = -1; return !x;]])],
       [gt_cv_c_intmax_t=yes],
       [gt_cv_c_intmax_t=no])])
  if test $gt_cv_c_intmax_t = yes; then
    AC_DEFINE([HAVE_INTMAX_T], [1],
      [Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>.])
  else
    AC_DEFINE_UNQUOTED([intmax_t], [long long],
     [Define to long or long long if <stdint.h> and <inttypes.h> don't define.])
  fi
])
m4trace:m4/inttostr.m4:7: -1- AC_DEFUN([gl_INTTOSTR], [
  gl_PREREQ_INTTOSTR
  gl_PREREQ_IMAXTOSTR
  gl_PREREQ_OFFTOSTR
  gl_PREREQ_UMAXTOSTR
  gl_PREREQ_UINTTOSTR
])
m4trace:m4/inttostr.m4:17: -1- AC_DEFUN([gl_PREREQ_INTTOSTR], [
  AC_REQUIRE([AC_TYPE_OFF_T])
  :
])
m4trace:m4/inttostr.m4:23: -1- AC_DEFUN([gl_PREREQ_IMAXTOSTR], [:])
m4trace:m4/inttostr.m4:26: -1- AC_DEFUN([gl_PREREQ_OFFTOSTR], [:])
m4trace:m4/inttostr.m4:29: -1- AC_DEFUN([gl_PREREQ_UMAXTOSTR], [:])
m4trace:m4/inttostr.m4:32: -1- AC_DEFUN([gl_PREREQ_UINTTOSTR], [:])
m4trace:m4/inttypes.m4:10: -1- AC_DEFUN_ONCE([gl_INTTYPES_H], [
  AC_REQUIRE([gl_INTTYPES_INCOMPLETE])
  gl_INTTYPES_PRI_SCN
])
m4trace:m4/inttypes.m4:16: -1- AC_DEFUN_ONCE([gl_INTTYPES_INCOMPLETE], [
  AC_REQUIRE([gl_STDINT_H])
  AC_CHECK_HEADERS_ONCE([inttypes.h])

  dnl Override <inttypes.h> always, so that the portability warnings work.
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([inttypes.h])

  AC_REQUIRE([gl_MULTIARCH])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <inttypes.h>
    ]], [imaxabs imaxdiv strtoimax strtoumax])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/inttypes.m4:36: -1- AC_DEFUN([gl_INTTYPES_PRI_SCN], [
  PRIPTR_PREFIX=
  if $GL_GENERATE_STDINT_H; then
    dnl Using the gnulib <stdint.h>. It defines intptr_t to 'long' or
    dnl 'long long', depending on _WIN64.
    AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM([[
         #ifdef _WIN64
         LLP64
         #endif
         ]])
      ],
      [PRIPTR_PREFIX='"l"'],
      [PRIPTR_PREFIX='"ll"'])
  else
    dnl Using the system's <stdint.h>.
    for glpfx in '' l ll I64; do
      case $glpfx in
        '')  gltype1='int';;
        l)   gltype1='long int';;
        ll)  gltype1='long long int';;
        I64) gltype1='__int64';;
      esac
      AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[#include <stdint.h>
           extern intptr_t foo;
           extern $gltype1 foo;]])],
        [PRIPTR_PREFIX='"'$glpfx'"'])
      test -n "$PRIPTR_PREFIX" && break
    done
  fi
  AC_SUBST([PRIPTR_PREFIX])

  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [INT32_MAX_LT_INTMAX_MAX],
    [defined INT32_MAX && defined INTMAX_MAX],
    [INT32_MAX < INTMAX_MAX],
    [sizeof (int) < sizeof (long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [INT64_MAX_EQ_LONG_MAX],
      [defined INT64_MAX],
      [INT64_MAX == LONG_MAX],
      [sizeof (long long int) == sizeof (long int)])
  else
    INT64_MAX_EQ_LONG_MAX=-1
  fi
  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [UINT32_MAX_LT_UINTMAX_MAX],
    [defined UINT32_MAX && defined UINTMAX_MAX],
    [UINT32_MAX < UINTMAX_MAX],
    [sizeof (unsigned int) < sizeof (unsigned long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [UINT64_MAX_EQ_ULONG_MAX],
      [defined UINT64_MAX],
      [UINT64_MAX == ULONG_MAX],
      [sizeof (unsigned long long int) == sizeof (unsigned long int)])
  else
    UINT64_MAX_EQ_ULONG_MAX=-1
  fi
])
m4trace:m4/inttypes.m4:106: -1- AC_DEFUN([gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION], [
  AC_CACHE_CHECK([whether $3],
    [gl_cv_test_$1],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[/* Work also in C++ mode.  */
            #define __STDC_LIMIT_MACROS 1

            /* Work if build is not clean.  */
            #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H

            #include <limits.h>
            #if HAVE_STDINT_H
             #include <stdint.h>
            #endif

            #if $2
             #define CONDITION ($3)
            #else
             #define CONDITION ($4)
            #endif
            int test[CONDITION ? 1 : -1];]])],
       [gl_cv_test_$1=yes],
       [gl_cv_test_$1=no])])
  if test $gl_cv_test_$1 = yes; then
    $1=1;
  else
    $1=0;
  fi
  AC_SUBST([$1])
])
m4trace:m4/inttypes.m4:143: -1- AC_DEFUN([gl_INTTYPES_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/inttypes.m4:153: -1- AC_DEFUN([gl_INTTYPES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_INTTYPES_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXABS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXDIV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOIMAX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUMAX])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_INTTYPES_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
])
m4trace:m4/inttypes.m4:165: -1- AC_DEFUN([gl_INTTYPES_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_IMAXABS=1;   AC_SUBST([HAVE_DECL_IMAXABS])
  HAVE_DECL_IMAXDIV=1;   AC_SUBST([HAVE_DECL_IMAXDIV])
  HAVE_DECL_STRTOIMAX=1; AC_SUBST([HAVE_DECL_STRTOIMAX])
  HAVE_DECL_STRTOUMAX=1; AC_SUBST([HAVE_DECL_STRTOUMAX])
  HAVE_IMAXDIV_T=1;      AC_SUBST([HAVE_IMAXDIV_T])
  REPLACE_STRTOIMAX=0;   AC_SUBST([REPLACE_STRTOIMAX])
  REPLACE_STRTOUMAX=0;   AC_SUBST([REPLACE_STRTOUMAX])
  INT32_MAX_LT_INTMAX_MAX=1;  AC_SUBST([INT32_MAX_LT_INTMAX_MAX])
  INT64_MAX_EQ_LONG_MAX='defined _LP64';  AC_SUBST([INT64_MAX_EQ_LONG_MAX])
  PRIPTR_PREFIX=__PRIPTR_PREFIX;  AC_SUBST([PRIPTR_PREFIX])
  UINT32_MAX_LT_UINTMAX_MAX=1;  AC_SUBST([UINT32_MAX_LT_UINTMAX_MAX])
  UINT64_MAX_EQ_ULONG_MAX='defined _LP64';  AC_SUBST([UINT64_MAX_EQ_ULONG_MAX])
])
m4trace:m4/inttypes_h.m4:12: -1- AC_DEFUN([gl_AC_HEADER_INTTYPES_H], [
  AC_CACHE_CHECK([for inttypes.h], [gl_cv_header_inttypes_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[
#include <sys/types.h>
#include <inttypes.h>
          ]],
          [[uintmax_t i = (uintmax_t) -1; return !i;]])],
       [gl_cv_header_inttypes_h=yes],
       [gl_cv_header_inttypes_h=no])])
  if test $gl_cv_header_inttypes_h = yes; then
    AC_DEFINE_UNQUOTED([HAVE_INTTYPES_H_WITH_UINTMAX], [1],
      [Define if <inttypes.h> exists, doesn't clash with <sys/types.h>,
       and declares uintmax_t. ])
  fi
])
m4trace:m4/ioctl.m4:7: -1- AC_DEFUN([gl_FUNC_IOCTL], [
  AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  HAVE_IOCTL=1
  if test "$ac_cv_header_winsock2_h" = yes; then
    dnl Even if the 'socket' module is not used here, another part of the
    dnl application may use it and pass file descriptors that refer to
    dnl sockets to the ioctl() function. So enable the support for sockets.
    HAVE_IOCTL=0
  else
    AC_CHECK_FUNCS([ioctl])
    dnl On glibc systems, the second parameter is 'unsigned long int request',
    dnl not 'int request'. We cannot simply cast the function pointer, but
    dnl instead need a wrapper.
    AC_CACHE_CHECK([for ioctl with POSIX signature],
      [gl_cv_func_ioctl_posix_signature],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/ioctl.h>
              /* On some platforms, ioctl() is declared in <unistd.h>.  */
              #include <unistd.h>
            ]],
            [[extern
              #ifdef __cplusplus
              "C"
              #endif
              int ioctl (int, int, ...);
            ]])
         ],
         [gl_cv_func_ioctl_posix_signature=yes],
         [gl_cv_func_ioctl_posix_signature=no])
      ])
    if test $gl_cv_func_ioctl_posix_signature != yes; then
      REPLACE_IOCTL=1
    fi
  fi
])
m4trace:m4/isapipe.m4:11: -1- AC_DEFUN([gl_ISAPIPE], [
  # OpenVMS has isapipe already, so check for it.
  AC_CHECK_FUNCS([isapipe])
  if test $ac_cv_func_isapipe = yes; then
    HAVE_ISAPIPE=1
  else
    HAVE_ISAPIPE=0
  fi
])
m4trace:m4/isapipe.m4:23: -1- AC_DEFUN([gl_PREREQ_ISAPIPE], [
  AC_CACHE_CHECK([whether pipes are FIFOs (and for their link count)],
    [gl_cv_pipes_are_fifos],
    [AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
          [[#include <stdio.h>
            #include <sys/types.h>
            #include <sys/stat.h>
            #include <unistd.h>
            #ifndef S_ISFIFO
             #define S_ISFIFO(m) 0
            #endif
            #ifndef S_ISSOCK
             #define S_ISSOCK(m) 0
            #endif
            int
            main (int argc, char **argv)
            {
              int fd[2];
              struct stat st;
              if (pipe (fd) != 0)
                return 1;
              if (fstat (fd[0], &st) != 0)
                return 2;
              if (2 <= argc && argv[1][0] == '-')
                {
                  char const *yesno = (S_ISFIFO (st.st_mode) ? "yes" : "no");
                  if (st.st_nlink <= 1)
                    {
                      long int i = st.st_nlink;
                      if (i != st.st_nlink)
                        return 3;
                      printf ("%s (%ld)\n", yesno, i);
                    }
                  else
                    {
                      unsigned long int i = st.st_nlink;
                      if (i != st.st_nlink)
                        return 4;
                      printf ("%s (%lu)\n", yesno, i);
                    }
                }
              else
                {
                  if (! S_ISFIFO (st.st_mode) && ! S_ISSOCK (st.st_mode))
                    return 5;
                }
              return 0;
            }]])],
       [gl_cv_pipes_are_fifos=`./conftest$ac_exeext -`
        test -z "$gl_cv_pipes_are_fifos" && gl_cv_pipes_are_fifos=no],
       [gl_cv_pipes_are_fifos=unknown],
       [gl_cv_pipes_are_fifos=cross-compiling])])

  case $gl_cv_pipes_are_fifos in #(
  'yes ('*')')
    AC_DEFINE([HAVE_FIFO_PIPES], [1],
      [Define to 1 if pipes are FIFOs, 0 if sockets.  Leave undefined
       if not known.]);; #(
  'no ('*')')
    AC_DEFINE([HAVE_FIFO_PIPES], [0]);;
  esac

  case $gl_cv_pipes_are_fifos in #(
  *'('*')')
    AC_DEFINE_UNQUOTED([PIPE_LINK_COUNT_MAX],
      [`expr "$gl_cv_pipes_are_fifos" : '.*\((.*)\)'`],
      [Define to the maximum link count that a true pipe can have.]);;
  esac
])
m4trace:m4/isatty.m4:7: -1- AC_DEFUN([gl_FUNC_ISATTY], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl On native Windows, the system's isatty(), defined as an alias of _isatty()
  dnl in the "oldnames" library, returns true for the NUL device.
  case $host_os in
    mingw*) REPLACE_ISATTY=1 ;;
  esac
])
m4trace:m4/isatty.m4:19: -1- AC_DEFUN([gl_PREREQ_ISATTY], [:])
m4trace:m4/isblank.m4:7: -1- AC_DEFUN([gl_FUNC_ISBLANK], [
  dnl Persuade glibc <ctype.h> to declare isblank().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_CTYPE_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([isblank])
  if test $ac_cv_func_isblank = no; then
    HAVE_ISBLANK=0
  fi
])
m4trace:m4/isnand.m4:9: -1- AC_DEFUN([gl_FUNC_ISNAND], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  ISNAND_LIBM=
  gl_HAVE_ISNAND_NO_LIBM
  if test $gl_cv_func_isnand_no_libm = no; then
    gl_HAVE_ISNAND_IN_LIBM
    if test $gl_cv_func_isnand_in_libm = yes; then
      ISNAND_LIBM=-lm
    fi
  fi
  dnl The variable gl_func_isnand set here is used by isnan.m4.
  if test $gl_cv_func_isnand_no_libm = yes \
     || test $gl_cv_func_isnand_in_libm = yes; then
    gl_func_isnand=yes
  else
    gl_func_isnand=no
    HAVE_ISNAND=0
  fi
  AC_SUBST([ISNAND_LIBM])
])
m4trace:m4/isnand.m4:33: -1- AC_DEFUN([gl_FUNC_ISNAND_NO_LIBM], [
  gl_HAVE_ISNAND_NO_LIBM
  gl_func_isnand_no_libm=$gl_cv_func_isnand_no_libm
  if test $gl_cv_func_isnand_no_libm = yes; then
    AC_DEFINE([HAVE_ISNAND_IN_LIBC], [1],
      [Define if the isnan(double) function is available in libc.])
  fi
])
m4trace:m4/isnand.m4:44: -1- AC_DEFUN([gl_PREREQ_ISNAND], [
  AC_REQUIRE([gl_DOUBLE_EXPONENT_LOCATION])
])
m4trace:m4/isnand.m4:51: -1- AC_DEFUN([gl_HAVE_ISNAND_IN_LIBM], [
  AC_CACHE_CHECK([whether isnan(double) can be used with libm],
    [gl_cv_func_isnand_in_libm],
    [
      save_LIBS="$LIBS"
      LIBS="$LIBS -lm"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnand
             # define isnand(x) __builtin_isnan ((double)(x))
             #elif defined isnan
             # undef isnand
             # define isnand(x) isnan ((double)(x))
             #endif
             double x;]],
           [[return isnand (x);]])],
        [gl_cv_func_isnand_in_libm=yes],
        [gl_cv_func_isnand_in_libm=no])
      LIBS="$save_LIBS"
    ])
])
m4trace:m4/isnand.m4:76: -1- AC_DEFUN([gl_HAVE_ISNAND_NO_LIBM], [
  AC_CACHE_CHECK([whether isnan(double) can be used without linking with libm],
    [gl_cv_func_isnand_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnand
             # define isnand(x) __builtin_isnan ((double)(x))
             #else
             # undef isnand
             # define isnand(x) isnan ((double)(x))
             #endif
             double x;]],
           [[return isnand (x);]])],
        [gl_cv_func_isnand_no_libm=yes],
        [gl_cv_func_isnand_no_libm=no])
    ])
])
m4trace:m4/isnanf.m4:9: -1- AC_DEFUN([gl_FUNC_ISNANF], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  ISNANF_LIBM=
  gl_HAVE_ISNANF_NO_LIBM
  if test $gl_cv_func_isnanf_no_libm = no; then
    gl_HAVE_ISNANF_IN_LIBM
    if test $gl_cv_func_isnanf_in_libm = yes; then
      ISNANF_LIBM=-lm
    fi
  fi
  dnl The variable gl_func_isnanf set here is used by isnan.m4.
  if test $gl_cv_func_isnanf_no_libm = yes \
     || test $gl_cv_func_isnanf_in_libm = yes; then
    save_LIBS="$LIBS"
    LIBS="$LIBS $ISNANF_LIBM"
    gl_ISNANF_WORKS
    LIBS="$save_LIBS"
    case "$gl_cv_func_isnanf_works" in
      *yes) gl_func_isnanf=yes ;;
      *)    gl_func_isnanf=no; ISNANF_LIBM= ;;
    esac
  else
    gl_func_isnanf=no
  fi
  if test $gl_func_isnanf != yes; then
    HAVE_ISNANF=0
  fi
  AC_SUBST([ISNANF_LIBM])
])
m4trace:m4/isnanf.m4:42: -1- AC_DEFUN([gl_FUNC_ISNANF_NO_LIBM], [
  gl_HAVE_ISNANF_NO_LIBM
  if test $gl_cv_func_isnanf_no_libm = yes; then
    gl_ISNANF_WORKS
  fi
  if test $gl_cv_func_isnanf_no_libm = yes \
     && { case "$gl_cv_func_isnanf_works" in
            *yes) true;;
            *) false;;
          esac
        }; then
    gl_func_isnanf_no_libm=yes
    AC_DEFINE([HAVE_ISNANF_IN_LIBC], [1],
      [Define if the isnan(float) function is available in libc.])
  else
    gl_func_isnanf_no_libm=no
  fi
])
m4trace:m4/isnanf.m4:63: -1- AC_DEFUN([gl_PREREQ_ISNANF], [
  gl_FLOAT_EXPONENT_LOCATION
])
m4trace:m4/isnanf.m4:69: -1- AC_DEFUN([gl_HAVE_ISNANF_NO_LIBM], [
  AC_CACHE_CHECK([whether isnan(float) can be used without linking with libm],
    [gl_cv_func_isnanf_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnanf
             # define isnanf(x) __builtin_isnan ((float)(x))
             #elif defined isnan
             # undef isnanf
             # define isnanf(x) isnan ((float)(x))
             #endif
             float x;]],
           [[return isnanf (x);]])],
        [gl_cv_func_isnanf_no_libm=yes],
        [gl_cv_func_isnanf_no_libm=no])
    ])
])
m4trace:m4/isnanf.m4:92: -1- AC_DEFUN([gl_HAVE_ISNANF_IN_LIBM], [
  AC_CACHE_CHECK([whether isnan(float) can be used with libm],
    [gl_cv_func_isnanf_in_libm],
    [
      save_LIBS="$LIBS"
      LIBS="$LIBS -lm"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnanf
             # define isnanf(x) __builtin_isnan ((float)(x))
             #elif defined isnan
             # undef isnanf
             # define isnanf(x) isnan ((float)(x))
             #endif
             float x;]],
           [[return isnanf (x);]])],
        [gl_cv_func_isnanf_in_libm=yes],
        [gl_cv_func_isnanf_in_libm=no])
      LIBS="$save_LIBS"
    ])
])
m4trace:m4/isnanf.m4:120: -1- AC_DEFUN([gl_ISNANF_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_FLOAT_EXPONENT_LOCATION])
  AC_CACHE_CHECK([whether isnan(float) works], [gl_cv_func_isnanf_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <math.h>
#if (__GNUC__ >= 4) || (__clang_major__ >= 4)
# undef isnanf
# define isnanf(x) __builtin_isnan ((float)(x))
#elif defined isnan
# undef isnanf
# define isnanf(x) isnan ((float)(x))
#endif
/* The Compaq (ex-DEC) C 6.4 compiler chokes on the expression 0.0 / 0.0.  */
#ifdef __DECC
static float
NaN ()
{
  static float zero = 0.0f;
  return zero / zero;
}
#else
# define NaN() (0.0f / 0.0f)
#endif
#define NWORDS \
  ((sizeof (float) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { unsigned int word[NWORDS]; float value; } memory_float;
int main()
{
  int result = 0;

  if (isnanf (1.0f / 0.0f))
    result |= 1;

  if (!isnanf (NaN ()))
    result |= 2;

#if defined FLT_EXPBIT0_WORD && defined FLT_EXPBIT0_BIT
  /* The isnanf function should be immune against changes in the sign bit and
     in the mantissa bits.  The xor operation twiddles a bit that can only be
     a sign bit or a mantissa bit.  */
  if (FLT_EXPBIT0_WORD == 0 && FLT_EXPBIT0_BIT > 0)
    {
      memory_float m;

      m.value = NaN ();
      /* Set the bits below the exponent to 01111...111.  */
      m.word[0] &= -1U << FLT_EXPBIT0_BIT;
      m.word[0] |= (1U << (FLT_EXPBIT0_BIT - 1)) - 1;
      if (!isnanf (m.value))
        result |= 4;
    }
#endif

  return result;
}]])],
        [gl_cv_func_isnanf_works=yes],
        [gl_cv_func_isnanf_works=no],
        [case "$host_os" in
           irix* | solaris*) gl_cv_func_isnanf_works="guessing no" ;;
           mingw*) # Guess yes on mingw, no on MSVC.
             AC_EGREP_CPP([Known], [
#ifdef __MINGW32__
 Known
#endif
               ],
               [gl_cv_func_isnanf_works="guessing yes"],
               [gl_cv_func_isnanf_works="guessing no"])
             ;;
           *) gl_cv_func_isnanf_works="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/isnanl.m4:7: -1- AC_DEFUN([gl_FUNC_ISNANL], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  ISNANL_LIBM=
  gl_HAVE_ISNANL_NO_LIBM
  if test $gl_cv_func_isnanl_no_libm = no; then
    gl_HAVE_ISNANL_IN_LIBM
    if test $gl_cv_func_isnanl_in_libm = yes; then
      ISNANL_LIBM=-lm
    fi
  fi
  dnl The variable gl_func_isnanl set here is used by isnan.m4.
  if test $gl_cv_func_isnanl_no_libm = yes \
     || test $gl_cv_func_isnanl_in_libm = yes; then
    save_LIBS="$LIBS"
    LIBS="$LIBS $ISNANL_LIBM"
    gl_FUNC_ISNANL_WORKS
    LIBS="$save_LIBS"
    case "$gl_cv_func_isnanl_works" in
      *yes) gl_func_isnanl=yes ;;
      *)    gl_func_isnanl=no; ISNANL_LIBM= ;;
    esac
  else
    gl_func_isnanl=no
  fi
  if test $gl_func_isnanl != yes; then
    HAVE_ISNANL=0
  fi
  AC_SUBST([ISNANL_LIBM])
])
m4trace:m4/isnanl.m4:38: -1- AC_DEFUN([gl_FUNC_ISNANL_NO_LIBM], [
  gl_HAVE_ISNANL_NO_LIBM
  gl_func_isnanl_no_libm=$gl_cv_func_isnanl_no_libm
  if test $gl_func_isnanl_no_libm = yes; then
    gl_FUNC_ISNANL_WORKS
    case "$gl_cv_func_isnanl_works" in
      *yes) ;;
      *)    gl_func_isnanl_no_libm=no ;;
    esac
  fi
  if test $gl_func_isnanl_no_libm = yes; then
    AC_DEFINE([HAVE_ISNANL_IN_LIBC], [1],
      [Define if the isnan(long double) function is available in libc.])
  fi
])
m4trace:m4/isnanl.m4:56: -1- AC_DEFUN([gl_PREREQ_ISNANL], [
  gl_LONG_DOUBLE_EXPONENT_LOCATION
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
])
m4trace:m4/isnanl.m4:63: -1- AC_DEFUN([gl_HAVE_ISNANL_NO_LIBM], [
  AC_CACHE_CHECK([whether isnan(long double) can be used without linking with libm],
    [gl_cv_func_isnanl_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnanl
             # define isnanl(x) __builtin_isnan ((long double)(x))
             #elif defined isnan
             # undef isnanl
             # define isnanl(x) isnan ((long double)(x))
             #endif
             long double x;]],
           [[return isnanl (x);]])],
        [gl_cv_func_isnanl_no_libm=yes],
        [gl_cv_func_isnanl_no_libm=no])
    ])
])
m4trace:m4/isnanl.m4:86: -1- AC_DEFUN([gl_HAVE_ISNANL_IN_LIBM], [
  AC_CACHE_CHECK([whether isnan(long double) can be used with libm],
    [gl_cv_func_isnanl_in_libm],
    [
      save_LIBS="$LIBS"
      LIBS="$LIBS -lm"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnanl
             # define isnanl(x) __builtin_isnan ((long double)(x))
             #elif defined isnan
             # undef isnanl
             # define isnanl(x) isnan ((long double)(x))
             #endif
             long double x;]],
           [[return isnanl (x);]])],
        [gl_cv_func_isnanl_in_libm=yes],
        [gl_cv_func_isnanl_in_libm=no])
      LIBS="$save_LIBS"
    ])
])
m4trace:m4/isnanl.m4:113: -1- AC_DEFUN([gl_FUNC_ISNANL_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_BIGENDIAN])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether isnanl works], [gl_cv_func_isnanl_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <limits.h>
#include <math.h>
#if (__GNUC__ >= 4) || (__clang_major__ >= 4)
# undef isnanl
# define isnanl(x) __builtin_isnan ((long double)(x))
#elif defined isnan
# undef isnanl
# define isnanl(x) isnan ((long double)(x))
#endif
#define NWORDS \
  ((sizeof (long double) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { unsigned int word[NWORDS]; long double value; }
        memory_long_double;
/* On Irix 6.5, gcc 3.4.3 can't compute compile-time NaN, and needs the
   runtime type conversion.  */
#ifdef __sgi
static long double NaNl ()
{
  double zero = 0.0;
  return zero / zero;
}
#else
# define NaNl() (0.0L / 0.0L)
#endif
int main ()
{
  int result = 0;

  if (!isnanl (NaNl ()))
    result |= 1;

  {
    memory_long_double m;
    unsigned int i;

    /* The isnanl function should be immune against changes in the sign bit and
       in the mantissa bits.  The xor operation twiddles a bit that can only be
       a sign bit or a mantissa bit (since the exponent never extends to
       bit 31).  */
    m.value = NaNl ();
    m.word[NWORDS / 2] ^= (unsigned int) 1 << (sizeof (unsigned int) * CHAR_BIT - 1);
    for (i = 0; i < NWORDS; i++)
      m.word[i] |= 1;
    if (!isnanl (m.value))
      result |= 1;
  }

#if ((defined __ia64 && LDBL_MANT_DIG == 64) || (defined __x86_64__ || defined __amd64__) || (defined __i386 || defined __i386__ || defined _I386 || defined _M_IX86 || defined _X86_)) && !HAVE_SAME_LONG_DOUBLE_AS_DOUBLE
/* Representation of an 80-bit 'long double' as an initializer for a sequence
   of 'unsigned int' words.  */
# ifdef WORDS_BIGENDIAN
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { ((unsigned int) (exponent) << 16) | ((unsigned int) (manthi) >> 16), \
       ((unsigned int) (manthi) << 16) | ((unsigned int) (mantlo) >> 16),   \
       (unsigned int) (mantlo) << 16                                        \
     }
# else
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { mantlo, manthi, exponent }
# endif
  { /* Quiet NaN.  */
    static memory_long_double x =
      { LDBL80_WORDS (0xFFFF, 0xC3333333, 0x00000000) };
    if (!isnanl (x.value))
      result |= 2;
  }
  {
    /* Signalling NaN.  */
    static memory_long_double x =
      { LDBL80_WORDS (0xFFFF, 0x83333333, 0x00000000) };
    if (!isnanl (x.value))
      result |= 2;
  }
  /* isnanl should return something even for noncanonical values.  */
  { /* Pseudo-NaN.  */
    static memory_long_double x =
      { LDBL80_WORDS (0xFFFF, 0x40000001, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 4;
  }
  { /* Pseudo-Infinity.  */
    static memory_long_double x =
      { LDBL80_WORDS (0xFFFF, 0x00000000, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 8;
  }
  { /* Pseudo-Zero.  */
    static memory_long_double x =
      { LDBL80_WORDS (0x4004, 0x00000000, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 16;
  }
  { /* Unnormalized number.  */
    static memory_long_double x =
      { LDBL80_WORDS (0x4000, 0x63333333, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 32;
  }
  { /* Pseudo-Denormal.  */
    static memory_long_double x =
      { LDBL80_WORDS (0x0000, 0x83333333, 0x00000000) };
    if (isnanl (x.value) && !isnanl (x.value))
      result |= 64;
  }
#endif

  return result;
}]])],
        [gl_cv_func_isnanl_works=yes],
        [gl_cv_func_isnanl_works=no],
        [case "$host_os" in
           mingw*) # Guess yes on mingw, no on MSVC.
             AC_EGREP_CPP([Known], [
#ifdef __MINGW32__
 Known
#endif
               ],
               [gl_cv_func_isnanl_works="guessing yes"],
               [gl_cv_func_isnanl_works="guessing no"])
             ;;
           *) gl_cv_func_isnanl_works="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/iswblank.m4:7: -1- AC_DEFUN([gl_FUNC_ISWBLANK], [
  AC_REQUIRE([gl_WCTYPE_H_DEFAULTS])
  AC_REQUIRE([gl_WCTYPE_H])
  dnl Persuade glibc <wctype.h> to declare iswblank().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([iswblank])
  AC_CHECK_DECLS([iswblank], , , [[
    #include <wchar.h>
    #include <wctype.h>
  ]])
  if test $ac_cv_func_iswblank = no; then
    HAVE_ISWBLANK=0
    if test $ac_cv_have_decl_iswblank = yes; then
      REPLACE_ISWBLANK=1
    fi
  fi
  if test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; then
    dnl Redefine all of iswcntrl, ..., towupper in <wctype.h>.
    :
  else
    if test $HAVE_ISWBLANK = 0 || test $REPLACE_ISWBLANK = 1; then
      dnl Redefine only iswblank.
      :
    fi
  fi

])
m4trace:m4/iswdigit.m4:7: -1- AC_DEFUN([gl_FUNC_ISWDIGIT], [
  AC_REQUIRE([gl_WCTYPE_H_DEFAULTS])
  AC_REQUIRE([gl_WCTYPE_H])
  AC_REQUIRE([gt_LOCALE_FR])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([gt_LOCALE_ZH_CN])

  if test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; then
    dnl <wctype.h> redefines iswdigit already.
    REPLACE_ISWDIGIT="$REPLACE_ISWCNTRL"
  else
    AC_CACHE_CHECK([whether iswdigit is ISO C compliant],
      [gl_cv_func_iswdigit_works],
      [
       dnl Initial guess, used when cross-compiling or when no suitable locale
       dnl is present.
changequote(,)dnl
       case "$host_os" in
         # Guess no on FreeBSD, NetBSD, Solaris, native Windows.
         freebsd* | dragonfly* | netbsd* | solaris* | mingw*)
           gl_cv_func_iswdigit_works="guessing no" ;;
         # Guess yes otherwise.
         *) gl_cv_func_iswdigit_works="guessing yes" ;;
       esac
changequote([,])dnl
       if test $LOCALE_FR != none || test $LOCALE_JA != none || test $LOCALE_FR_UTF8 != none || test $LOCALE_ZH_CN != none; then
         AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <string.h>
#include <wchar.h>
#include <wctype.h>

/* Returns the value of iswdigit for the multibyte character s[0..n-1].  */
static int
for_character (const char *s, size_t n)
{
  mbstate_t state;
  wchar_t wc;
  size_t ret;

  memset (&state, '\0', sizeof (mbstate_t));
  wc = (wchar_t) 0xBADFACE;
  ret = mbrtowc (&wc, s, n, &state);
  if (ret != n)
    abort ();

  return iswdigit (wc);
}

int
main (int argc, char *argv[])
{
  int is;
  int result = 0;

  if (setlocale (LC_ALL, "$LOCALE_FR") != NULL)
    {
      /* This fails on mingw, MSVC 14.  */
      /* U+00B2 SUPERSCRIPT TWO */
      is = for_character ("\262", 1);
      if (!(is == 0))
        result |= 1;
    }
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      /* This fails on NetBSD 8.0.  */
      /* U+FF11 FULLWIDTH DIGIT ONE */
      is = for_character ("\243\261", 2);
      if (!(is == 0))
        result |= 2;
    }
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      /* This fails on FreeBSD 13.0, NetBSD 8.0, MSVC 14.  */
      /* U+0663 ARABIC-INDIC DIGIT THREE */
      is = for_character ("\331\243", 2);
      if (!(is == 0))
        result |= 4;
      /* This fails on FreeBSD 13.0, NetBSD 8.0, MSVC 14.  */
      /* U+FF11 FULLWIDTH DIGIT ONE */
      is = for_character ("\357\274\221", 3);
      if (!(is == 0))
        result |= 8;
    }
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      /* This fails on NetBSD 8.0, Solaris 10, Solaris 11.4.  */
      /* U+FF11 FULLWIDTH DIGIT ONE */
      is = for_character ("\243\261", 2);
      if (!(is == 0))
        result |= 16;
    }
  return result;
}]])],
           [gl_cv_func_iswdigit_works=yes],
           [gl_cv_func_iswdigit_works=no],
           [:])
       fi
      ])
    case "$gl_cv_func_iswdigit_works" in
      *yes) ;;
      *) REPLACE_ISWDIGIT=1 ;;
    esac
  fi
])
m4trace:m4/iswxdigit.m4:7: -1- AC_DEFUN([gl_FUNC_ISWXDIGIT], [
  AC_REQUIRE([gl_WCTYPE_H_DEFAULTS])
  AC_REQUIRE([gl_WCTYPE_H])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([gt_LOCALE_ZH_CN])

  if test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; then
    dnl <wctype.h> redefines iswxdigit already.
    REPLACE_ISWXDIGIT="$REPLACE_ISWCNTRL"
  else
    AC_CACHE_CHECK([whether iswxdigit is ISO C compliant],
      [gl_cv_func_iswxdigit_works],
      [
       dnl Initial guess, used when cross-compiling or when no suitable locale
       dnl is present.
changequote(,)dnl
       case "$host_os" in
         # Guess no on FreeBSD, NetBSD, Solaris, native Windows.
         freebsd* | dragonfly* | netbsd* | solaris* | mingw*)
           gl_cv_func_iswxdigit_works="guessing no" ;;
         # Guess yes otherwise.
         *) gl_cv_func_iswxdigit_works="guessing yes" ;;
       esac
changequote([,])dnl
       if test $LOCALE_JA != none || test $LOCALE_FR_UTF8 != none || test $LOCALE_ZH_CN != none; then
         AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <string.h>
#include <wchar.h>
#include <wctype.h>

/* Returns the value of iswxdigit for the multibyte character s[0..n-1].  */
static int
for_character (const char *s, size_t n)
{
  mbstate_t state;
  wchar_t wc;
  size_t ret;

  memset (&state, '\0', sizeof (mbstate_t));
  wc = (wchar_t) 0xBADFACE;
  ret = mbrtowc (&wc, s, n, &state);
  if (ret != n)
    abort ();

  return iswxdigit (wc);
}

int
main (int argc, char *argv[])
{
  int is;
  int result = 0;

  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      /* This fails on NetBSD 8.0.  */
      /* U+FF21 FULLWIDTH LATIN CAPITAL LETTER A */
      is = for_character ("\243\301", 2);
      if (!(is == 0))
        result |= 1;
    }
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      /* This fails on FreeBSD 13.0.  */
      /* U+0663 ARABIC-INDIC DIGIT THREE */
      is = for_character ("\331\243", 2);
      if (!(is == 0))
        result |= 2;
      /* This fails on MSVC 14.  */
      /* U+FF21 FULLWIDTH LATIN CAPITAL LETTER A */
      is = for_character ("\357\274\241", 3);
      if (!(is == 0))
        result |= 4;
    }
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      /* This fails on Solaris 10, Solaris 11.4.  */
      /* U+FF11 FULLWIDTH DIGIT ONE */
      is = for_character ("\243\261", 2);
      if (!(is == 0))
        result |= 8;
    }
  return result;
}]])],
           [gl_cv_func_iswxdigit_works=yes],
           [gl_cv_func_iswxdigit_works=no],
           [:])
       fi
      ])
    case "$gl_cv_func_iswxdigit_works" in
      *yes) ;;
      *) REPLACE_ISWXDIGIT=1 ;;
    esac
  fi
])
m4trace:m4/jm-macros.m4:22: -1- AC_DEFUN([coreutils_MACROS], [
  AM_MISSING_PROG(HELP2MAN, help2man)
  AC_SUBST([MAN])

  gl_CHECK_ALL_TYPES

  AC_REQUIRE([gl_CHECK_DECLS])

  AC_REQUIRE([gl_PREREQ])

  AC_REQUIRE([AC_FUNC_FSEEKO])

  # By default, argmatch should fail calling usage (EXIT_FAILURE).
  AC_DEFINE([ARGMATCH_DIE], [usage (EXIT_FAILURE)],
            [Define to the function xargmatch calls on failures.])
  AC_DEFINE([ARGMATCH_DIE_DECL], [void usage (int _e)],
            [Define to the declaration of the xargmatch failure function.])

  # Ensure VLAs are not used.
  # Note -Wvla is implicitly added by gl_MANYWARN_ALL_GCC
  AC_DEFINE([GNULIB_NO_VLA], [1], [Define to 1 to disable use of VLAs])

  # used by shred
  AC_CHECK_FUNCS_ONCE([directio])

  coreutils_saved_libs=$LIBS
    LIBS="$LIBS $LIB_SELINUX"
    # Used by selinux.c.
    AC_CHECK_FUNCS([mode_to_security_class], [], [])
  LIBS=$coreutils_saved_libs

  # Used by sort.c.
  AC_CHECK_FUNCS_ONCE([nl_langinfo])
  # Used by timeout.c
  AC_CHECK_FUNCS_ONCE([setitimer setrlimit prctl])

  # Used by tail.c.
  AC_CHECK_FUNCS([inotify_init],
    [AC_DEFINE([HAVE_INOTIFY], [1],
     [Define to 1 if you have usable inotify support.])])

  AC_CHECK_FUNCS_ONCE([
    endgrent
    endpwent
    fallocate
    fchown
    fchmod
    ftruncate
    iswspace
    mkfifo
    mbrlen
    setgroups
    sethostname
    siginterrupt
    sync
    syncfs
    sysctl
    sysinfo
    tcgetpgrp
  ])

  # These checks are for Interix, to avoid its getgr* functions, in favor
  # of these replacements.  The replacement functions are much more efficient
  # because they do not query the domain controller for user information
  # when it is not needed.
  AC_CHECK_FUNCS_ONCE([
    getgrgid_nomembers
    getgrnam_nomembers
    getgrent_nomembers
  ])

  dnl This can't use AC_REQUIRE; I'm not quite sure why.
  cu_PREREQ_STAT_PROG

  # for dd.c and shred.c
  #
  # Use fdatasync only if declared.  On MacOS X 10.7, fdatasync exists but
  # is not declared, and is ineffective.
  LIB_FDATASYNC=
  AC_SUBST([LIB_FDATASYNC])
  AC_CHECK_DECLS_ONCE([fdatasync])
  if test $ac_cv_have_decl_fdatasync = yes; then
    coreutils_saved_libs=$LIBS
    AC_SEARCH_LIBS([fdatasync], [rt posix4],
                   [test "$ac_cv_search_fdatasync" = "none required" ||
                    LIB_FDATASYNC=$ac_cv_search_fdatasync])
    AC_CHECK_FUNCS([fdatasync])
    LIBS=$coreutils_saved_libs
  fi

  # Check whether libcap is usable -- for ls --color support
  LIB_CAP=
  AC_ARG_ENABLE([libcap],
    AS_HELP_STRING([--disable-libcap], [disable libcap support]))
  if test "X$enable_libcap" != "Xno"; then
    AC_CHECK_LIB([cap], [cap_get_file],
      [AC_CHECK_HEADER([sys/capability.h],
        [LIB_CAP=-lcap
         AC_DEFINE([HAVE_CAP], [1], [libcap usability])]
      )])
    if test "X$LIB_CAP" = "X"; then
      if test "X$enable_libcap" = "Xyes"; then
        AC_MSG_ERROR([libcap library was not found or not usable])
      else
        AC_MSG_WARN([libcap library was not found or not usable.])
        AC_MSG_WARN([AC_PACKAGE_NAME will be built without capability support.])
      fi
    fi
  else
    AC_MSG_WARN([libcap support disabled by user])
  fi
  AC_SUBST([LIB_CAP])

  # See if linking 'seq' requires -lm.
  # It does on nearly every system.  The single exception (so far) is
  # BeOS which has all the math functions in the normal runtime library
  # and doesn't have a separate math library.

  AC_SUBST([SEQ_LIBM])
  jm_break=:
  for jm_seqlibs in '' '-lm'; do
    jm_seq_save_LIBS=$LIBS
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <math.h>
         ]],
         [[static double x, y;
           x = floor (x);
           x = rint (x);
           x = modf (x, &y);]])],
      [SEQ_LIBM=$jm_seqlibs
       jm_break=break])
    LIBS=$jm_seq_save_LIBS
    $jm_break
  done

  # See is fpsetprec() required to use extended double precision
  # This is needed on 32 bit FreeBSD to give accurate conversion of:
  # `numfmt 9223372036854775808`
  AC_LINK_IFELSE(
    [AC_LANG_PROGRAM(
       [[#include <ieeefp.h>
       ]],
       [[#ifdef __i386__
          fpsetprec (FP_PE);
         #else
         # error not required on 64 bit
         #endif
       ]])],
    [ac_have_fpsetprec=yes],
    [ac_have_fpsetprec=no])
  if test "$ac_have_fpsetprec" = "yes" ; then
    AC_DEFINE([HAVE_FPSETPREC], 1, [whether fpsetprec is present and required])
  fi

  AC_REQUIRE([AM_LANGINFO_CODESET])

  # Accept configure options: --with-tty-group[=GROUP], --without-tty-group
  # You can determine the group of a TTY via 'stat --format %G /dev/tty'
  # Omitting this option is equivalent to using --without-tty-group.
  AC_ARG_WITH([tty-group],
    AS_HELP_STRING([--with-tty-group[[[=NAME]]]],
      [group used by system for TTYs, "tty" when not specified]
      [ (default: do not rely on any group used for TTYs)]),
    [tty_group_name=$withval],
    [tty_group_name=no])

  if test "x$tty_group_name" != xno; then
    if test "x$tty_group_name" = xyes; then
      tty_group_name=tty
    fi
    AC_MSG_NOTICE([TTY group used by system set to "$tty_group_name"])
    AC_DEFINE_UNQUOTED([TTY_GROUP_NAME], ["$tty_group_name"],
      [group used by system for TTYs])
  fi
])
m4trace:m4/jm-macros.m4:200: -1- AC_DEFUN([gl_CHECK_ALL_HEADERS], [
  AC_CHECK_HEADERS_ONCE([
    hurd.h
    linux/falloc.h
    linux/fs.h
    paths.h
    priv.h
    stropts.h
    sys/mtio.h
    sys/param.h
    sys/systeminfo.h
    syslog.h
  ])
  AC_CHECK_HEADERS([sys/sysctl.h], [], [],
    [AC_INCLUDES_DEFAULT
     [#if HAVE_SYS_PARAM_H
       #include <sys/param.h>
      #endif]])
])
m4trace:m4/jm-macros.m4:222: -1- AC_DEFUN([gl_CHECK_ALL_TYPES], [
  dnl Checks for typedefs, structures, and compiler characteristics.
  AC_REQUIRE([gl_BIGENDIAN])
  AC_REQUIRE([AC_C_VOLATILE])
  AC_REQUIRE([AC_C_INLINE])
  AC_REQUIRE([AC_TYPE_UNSIGNED_LONG_LONG_INT])

  AC_REQUIRE([gl_CHECK_ALL_HEADERS])
  AC_CHECK_MEMBERS(
    [struct stat.st_author],,,
    [$ac_includes_default
#include <sys/stat.h>
  ])
  AC_REQUIRE([AC_STRUCT_ST_BLOCKS])

  AC_REQUIRE([AC_TYPE_GETGROUPS])
  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  AC_REQUIRE([AC_TYPE_MODE_T])
  AC_REQUIRE([AC_TYPE_OFF_T])
  AC_REQUIRE([AC_TYPE_PID_T])
  AC_REQUIRE([AC_TYPE_SIZE_T])
  AC_REQUIRE([AC_TYPE_UID_T])
  AC_CHECK_TYPE([ino_t], [unsigned long int])

  dnl This relies on the fact that Autoconf's implementation of
  dnl AC_CHECK_TYPE checks includes unistd.h.
  AC_CHECK_TYPE([major_t], [unsigned int])
  AC_CHECK_TYPE([minor_t], [unsigned int])

  AC_REQUIRE([AC_HEADER_MAJOR])
])
m4trace:m4/jm-winsz1.m4:10: -1- AC_DEFUN([gl_HEADER_TIOCGWINSZ_IN_TERMIOS_H], [AC_REQUIRE([AC_SYS_POSIX_TERMIOS])
 AC_CACHE_CHECK([whether use of TIOCGWINSZ requires termios.h],
                [gl_cv_sys_tiocgwinsz_needs_termios_h],
  [gl_cv_sys_tiocgwinsz_needs_termios_h=no

   if test $ac_cv_sys_posix_termios = yes; then
     AC_EGREP_CPP([yes],
     [#include <sys/types.h>
#      include <termios.h>
#      ifdef TIOCGWINSZ
         yes
#      endif
     ], [gl_cv_sys_tiocgwinsz_needs_termios_h=yes])
   fi
  ])
])
m4trace:m4/jm-winsz1.m4:28: -1- AC_DEFUN([gl_WINSIZE_IN_PTEM], [
   AC_REQUIRE([AC_SYS_POSIX_TERMIOS])
   AC_CACHE_CHECK([whether use of struct winsize requires sys/ptem.h],
     [gl_cv_sys_struct_winsize_needs_sys_ptem_h],
     [gl_cv_sys_struct_winsize_needs_sys_ptem_h=yes
      if test $ac_cv_sys_posix_termios = yes; then
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <termios.h>]],
          [[struct winsize x;
            if (sizeof x > 0) return 0;]])],
          [gl_cv_sys_struct_winsize_needs_sys_ptem_h=no])
      fi
      if test $gl_cv_sys_struct_winsize_needs_sys_ptem_h = yes; then
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/ptem.h>]],
          [[struct winsize x;
            if (sizeof x > 0) return 0;]])],
          [], [gl_cv_sys_struct_winsize_needs_sys_ptem_h=no])
      fi])
   if test $gl_cv_sys_struct_winsize_needs_sys_ptem_h = yes; then
     AC_DEFINE([WINSIZE_IN_PTEM], [1],
       [Define if sys/ptem.h is required for struct winsize.])
   fi
])
m4trace:m4/jm-winsz2.m4:9: -1- AC_DEFUN([gl_HEADER_TIOCGWINSZ_NEEDS_SYS_IOCTL], [AC_REQUIRE([gl_HEADER_TIOCGWINSZ_IN_TERMIOS_H])
 AC_CACHE_CHECK([whether use of TIOCGWINSZ requires sys/ioctl.h],
                [gl_cv_sys_tiocgwinsz_needs_sys_ioctl_h],
  [gl_cv_sys_tiocgwinsz_needs_sys_ioctl_h=no

   if test $gl_cv_sys_tiocgwinsz_needs_termios_h = no; then
     AC_EGREP_CPP([yes],
       [#include <sys/types.h>
#        include <sys/ioctl.h>
#        ifdef TIOCGWINSZ
           yes
#        endif
       ], [gl_cv_sys_tiocgwinsz_needs_sys_ioctl_h=yes])
   fi
  ])
  if test $gl_cv_sys_tiocgwinsz_needs_sys_ioctl_h = yes; then
    AC_DEFINE([GWINSZ_IN_SYS_IOCTL], [1],
      [Define if your system defines TIOCGWINSZ in sys/ioctl.h.])
  fi
])
m4trace:m4/langinfo_h.m4:7: -1- AC_DEFUN_ONCE([gl_LANGINFO_H], [
  AC_REQUIRE([gl_LANGINFO_H_DEFAULTS])

  dnl Persuade glibc-2.0.6 <langinfo.h> to define CODESET.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl <langinfo.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([langinfo.h])

  dnl Determine whether <langinfo.h> exists. It is missing on mingw and BeOS.
  HAVE_LANGINFO_CODESET=0
  HAVE_LANGINFO_T_FMT_AMPM=0
  HAVE_LANGINFO_ALTMON=0
  HAVE_LANGINFO_ERA=0
  HAVE_LANGINFO_YESEXPR=0
  AC_CHECK_HEADERS_ONCE([langinfo.h])
  if test $ac_cv_header_langinfo_h = yes; then
    HAVE_LANGINFO_H=1
    dnl Determine what <langinfo.h> defines.
    dnl CODESET is missing on OpenBSD 3.8.
    dnl ERA etc. are missing on OpenBSD 6.7.
    dnl T_FMT_AMPM and YESEXPR, NOEXPR are missing on IRIX 5.3.
    dnl ALTMON_* are missing on glibc 2.26 and many other systems.
    AC_CACHE_CHECK([whether langinfo.h defines CODESET],
      [gl_cv_header_langinfo_codeset],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = CODESET;
]])],
         [gl_cv_header_langinfo_codeset=yes],
         [gl_cv_header_langinfo_codeset=no])
      ])
    if test $gl_cv_header_langinfo_codeset = yes; then
      HAVE_LANGINFO_CODESET=1
    fi
    AC_CACHE_CHECK([whether langinfo.h defines T_FMT_AMPM],
      [gl_cv_header_langinfo_t_fmt_ampm],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = T_FMT_AMPM;
]])],
         [gl_cv_header_langinfo_t_fmt_ampm=yes],
         [gl_cv_header_langinfo_t_fmt_ampm=no])
      ])
    if test $gl_cv_header_langinfo_t_fmt_ampm = yes; then
      HAVE_LANGINFO_T_FMT_AMPM=1
    fi
    AC_CACHE_CHECK([whether langinfo.h defines ALTMON_1],
      [gl_cv_header_langinfo_altmon],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = ALTMON_1;
]])],
         [gl_cv_header_langinfo_altmon=yes],
         [gl_cv_header_langinfo_altmon=no])
      ])
    if test $gl_cv_header_langinfo_altmon = yes; then
      HAVE_LANGINFO_ALTMON=1
    fi
    AC_CACHE_CHECK([whether langinfo.h defines ERA],
      [gl_cv_header_langinfo_era],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = ERA;
]])],
         [gl_cv_header_langinfo_era=yes],
         [gl_cv_header_langinfo_era=no])
      ])
    if test $gl_cv_header_langinfo_era = yes; then
      HAVE_LANGINFO_ERA=1
    fi
    AC_CACHE_CHECK([whether langinfo.h defines YESEXPR],
      [gl_cv_header_langinfo_yesexpr],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = YESEXPR;
]])],
         [gl_cv_header_langinfo_yesexpr=yes],
         [gl_cv_header_langinfo_yesexpr=no])
      ])
    if test $gl_cv_header_langinfo_yesexpr = yes; then
      HAVE_LANGINFO_YESEXPR=1
    fi
  else
    HAVE_LANGINFO_H=0
  fi
  AC_SUBST([HAVE_LANGINFO_H])
  AC_SUBST([HAVE_LANGINFO_CODESET])
  AC_SUBST([HAVE_LANGINFO_T_FMT_AMPM])
  AC_SUBST([HAVE_LANGINFO_ALTMON])
  AC_SUBST([HAVE_LANGINFO_ERA])
  AC_SUBST([HAVE_LANGINFO_YESEXPR])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <langinfo.h>
    ]], [nl_langinfo])
])
m4trace:m4/langinfo_h.m4:111: -1- AC_DEFUN([gl_LANGINFO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_LANGINFO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/langinfo_h.m4:123: -1- AC_DEFUN([gl_LANGINFO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_LANGINFO_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NL_LANGINFO])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_LANGINFO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_LANGINFO_H_DEFAULTS])
])
m4trace:m4/langinfo_h.m4:132: -1- AC_DEFUN([gl_LANGINFO_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_NL_LANGINFO=1;    AC_SUBST([HAVE_NL_LANGINFO])
  REPLACE_NL_LANGINFO=0; AC_SUBST([REPLACE_NL_LANGINFO])
])
m4trace:m4/largefile.m4:13: -1- AC_DEFUN([gl_SET_LARGEFILE_SOURCE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_FUNC_FSEEKO
  case "$host_os" in
    hpux*)
      AC_DEFINE([_LARGEFILE_SOURCE], [1],
        [Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2).])
      ;;
  esac
])
m4trace:m4/largefile.m4:83: -1- AC_DEFUN([AC_SYS_LARGEFILE], [AC_ARG_ENABLE(largefile,
               [  --disable-largefile     omit support for large files])
AS_IF([test "$enable_largefile" != no],
 [AC_CACHE_CHECK([for special C compiler options needed for large files],
    ac_cv_sys_largefile_CC,
    [ac_cv_sys_largefile_CC=no
     if test "$GCC" != yes; then
       ac_save_CC=$CC
       while :; do
         # IRIX 6.2 and later do not support large files by default,
         # so use the C compiler's -n32 option if that helps.
         AC_LANG_CONFTEST([AC_LANG_PROGRAM([_AC_SYS_LARGEFILE_TEST_INCLUDES])])
         AC_COMPILE_IFELSE([], [break])
         CC="$CC -n32"
         AC_COMPILE_IFELSE([], [ac_cv_sys_largefile_CC=' -n32'; break])
         break
       done
       CC=$ac_save_CC
       rm -f conftest.$ac_ext
    fi])
  if test "$ac_cv_sys_largefile_CC" != no; then
    CC=$CC$ac_cv_sys_largefile_CC
  fi

  _AC_SYS_LARGEFILE_MACRO_VALUE(_FILE_OFFSET_BITS, 64,
    ac_cv_sys_file_offset_bits,
    [Number of bits in a file offset, on hosts where this is settable.],
    [_AC_SYS_LARGEFILE_TEST_INCLUDES])
  AS_CASE([$ac_cv_sys_file_offset_bits],
    [unknown],
      [_AC_SYS_LARGEFILE_MACRO_VALUE([_LARGE_FILES], [1],
         [ac_cv_sys_large_files],
         [Define for large files, on AIX-style hosts.],
         [_AC_SYS_LARGEFILE_TEST_INCLUDES])],
    [64],
      [gl_YEAR2038_BODY([])])])
])
m4trace:m4/largefile.m4:126: -1- AC_DEFUN([gl_LARGEFILE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      dnl Native Windows.
      dnl mingw64 defines off_t to a 64-bit type already, if
      dnl _FILE_OFFSET_BITS=64, which is ensured by AC_SYS_LARGEFILE.
      AC_CACHE_CHECK([for 64-bit off_t], [gl_cv_type_off_t_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                int verify_off_t_size[sizeof (off_t) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_type_off_t_64=yes], [gl_cv_type_off_t_64=no])
        ])
      if test $gl_cv_type_off_t_64 = no; then
        WINDOWS_64_BIT_OFF_T=1
      else
        WINDOWS_64_BIT_OFF_T=0
      fi
      dnl Some mingw versions define, if _FILE_OFFSET_BITS=64, 'struct stat'
      dnl to 'struct _stat32i64' or 'struct _stat64' (depending on
      dnl _USE_32BIT_TIME_T), which has a 32-bit st_size member.
      AC_CACHE_CHECK([for 64-bit st_size], [gl_cv_member_st_size_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                struct stat buf;
                int verify_st_size_size[sizeof (buf.st_size) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_member_st_size_64=yes], [gl_cv_member_st_size_64=no])
        ])
      if test $gl_cv_member_st_size_64 = no; then
        WINDOWS_64_BIT_ST_SIZE=1
      else
        WINDOWS_64_BIT_ST_SIZE=0
      fi
      ;;
    *)
      dnl Nothing to do on gnulib's side.
      dnl A 64-bit off_t is
      dnl   - already the default on Mac OS X, FreeBSD, NetBSD, OpenBSD, IRIX,
      dnl     OSF/1, Cygwin,
      dnl   - enabled by _FILE_OFFSET_BITS=64 (ensured by AC_SYS_LARGEFILE) on
      dnl     glibc, HP-UX, Solaris,
      dnl   - enabled by _LARGE_FILES=1 (ensured by AC_SYS_LARGEFILE) on AIX,
      dnl   - impossible to achieve on Minix 3.1.8.
      WINDOWS_64_BIT_OFF_T=0
      WINDOWS_64_BIT_ST_SIZE=0
      ;;
  esac
])
m4trace:m4/lchmod.m4:11: -1- AC_DEFUN([gl_FUNC_LCHMOD], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  dnl Persuade glibc <sys/stat.h> to declare lchmod().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_FUNCS_ONCE([lchmod lstat])
  if test "$ac_cv_func_lchmod" = no; then
    HAVE_LCHMOD=0
  fi
])
m4trace:m4/lchmod.m4:27: -1- AC_DEFUN([gl_PREREQ_LCHMOD], [
  :
])
m4trace:m4/lchown.m4:15: -1- AC_DEFUN([gl_FUNC_LCHOWN], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_CHOWN])
  AC_CHECK_FUNCS_ONCE([lchmod])
  AC_CHECK_FUNCS([lchown])
  if test $ac_cv_func_lchown = no; then
    HAVE_LCHOWN=0
  else
    dnl Trailing slash and ctime bugs in chown also occur in lchown.
    case "$gl_cv_func_chown_slash_works" in
      *yes) ;;
      *)
        REPLACE_LCHOWN=1
        ;;
    esac
    case "$gl_cv_func_chown_ctime_works" in
      *yes) ;;
      *)
        REPLACE_LCHOWN=1
        ;;
    esac
  fi
])
m4trace:m4/lcmessage.m4:22: -1- AC_DEFUN([gt_LC_MESSAGES], [
  AC_CACHE_CHECK([for LC_MESSAGES], [gt_cv_val_LC_MESSAGES],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <locale.h>]],
          [[return LC_MESSAGES]])],
       [gt_cv_val_LC_MESSAGES=yes],
       [gt_cv_val_LC_MESSAGES=no])])
  if test $gt_cv_val_LC_MESSAGES = yes; then
    AC_DEFINE([HAVE_LC_MESSAGES], [1],
      [Define if your <locale.h> file defines LC_MESSAGES.])
  fi
])
m4trace:m4/ldexp.m4:7: -1- AC_DEFUN([gl_FUNC_LDEXP], [
  AC_REQUIRE([gl_CHECK_LDEXP_NO_LIBM])
  LDEXP_LIBM=
  if test $gl_cv_func_ldexp_no_libm = no; then
    AC_CACHE_CHECK([whether ldexp() can be used with libm],
      [gl_cv_func_ldexp_in_libm],
      [
        save_LIBS="$LIBS"
        LIBS="$LIBS -lm"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM([[#ifndef __NO_MATH_INLINES
                             # define __NO_MATH_INLINES 1 /* for glibc */
                             #endif
                             #include <math.h>
                             double (*funcptr) (double, int) = ldexp;
                             double x;]],
                           [[return ldexp (x, -1) > 0;]])],
          [gl_cv_func_ldexp_in_libm=yes],
          [gl_cv_func_ldexp_in_libm=no])
        LIBS="$save_LIBS"
      ])
    if test $gl_cv_func_ldexp_in_libm = yes; then
      LDEXP_LIBM=-lm
    fi
  fi
  AC_SUBST([LDEXP_LIBM])
])
m4trace:m4/ldexp.m4:38: -1- AC_DEFUN([gl_CHECK_LDEXP_NO_LIBM], [
  AC_CACHE_CHECK([whether ldexp() can be used without linking with libm],
    [gl_cv_func_ldexp_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM([[#ifndef __NO_MATH_INLINES
                           # define __NO_MATH_INLINES 1 /* for glibc */
                           #endif
                           #include <math.h>
                           double (*funcptr) (double, int) = ldexp;
                           double x;]],
                         [[return ldexp (x, -1) > 0;]])],
        [gl_cv_func_ldexp_no_libm=yes],
        [gl_cv_func_ldexp_no_libm=no])
    ])
])
m4trace:m4/ldexpl.m4:7: -1- AC_DEFUN([gl_FUNC_LDEXPL], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  AC_REQUIRE([gl_FUNC_ISNANL]) dnl for ISNANL_LIBM

  dnl Persuade glibc <math.h> to declare ldexpl().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl Check whether it's declared.
  dnl Mac OS X 10.3 has ldexpl() in libc but doesn't declare it in <math.h>.
  AC_CHECK_DECL([ldexpl], , [HAVE_DECL_LDEXPL=0], [[#include <math.h>]])

  LDEXPL_LIBM=
  if test $HAVE_DECL_LDEXPL = 1; then
    gl_CHECK_LDEXPL_NO_LIBM
    if test $gl_cv_func_ldexpl_no_libm = no; then
      AC_CACHE_CHECK([whether ldexpl() can be used with libm],
        [gl_cv_func_ldexpl_in_libm],
        [
          save_LIBS="$LIBS"
          LIBS="$LIBS -lm"
          AC_LINK_IFELSE(
            [AC_LANG_PROGRAM(
               [[#include <math.h>
                 long double x;]],
               [[return ldexpl (x, -1) > 0;]])],
            [gl_cv_func_ldexpl_in_libm=yes],
            [gl_cv_func_ldexpl_in_libm=no])
          LIBS="$save_LIBS"
        ])
      if test $gl_cv_func_ldexpl_in_libm = yes; then
        LDEXPL_LIBM=-lm
      fi
    fi
    if test $gl_cv_func_ldexpl_no_libm = yes \
       || test $gl_cv_func_ldexpl_in_libm = yes; then
      save_LIBS="$LIBS"
      LIBS="$LIBS $LDEXPL_LIBM"
      gl_FUNC_LDEXPL_WORKS
      LIBS="$save_LIBS"
      case "$gl_cv_func_ldexpl_works" in
        *yes) gl_func_ldexpl=yes ;;
        *)    gl_func_ldexpl=no; REPLACE_LDEXPL=1 ;;
      esac
    else
      gl_func_ldexpl=no
    fi
    if test $gl_func_ldexpl = yes; then
      AC_DEFINE([HAVE_LDEXPL], [1],
        [Define if the ldexpl() function is available.])
    fi
  fi
  if test $HAVE_DECL_LDEXPL = 0 || test $gl_func_ldexpl = no; then
    dnl Find libraries needed to link lib/ldexpl.c.
    if test $HAVE_SAME_LONG_DOUBLE_AS_DOUBLE = 1; then
      AC_REQUIRE([gl_FUNC_LDEXP])
      LDEXPL_LIBM="$LDEXP_LIBM"
    else
      LDEXPL_LIBM="$ISNANL_LIBM"
    fi
  fi
  AC_SUBST([LDEXPL_LIBM])
])
m4trace:m4/ldexpl.m4:74: -1- AC_DEFUN([gl_CHECK_LDEXPL_NO_LIBM], [
  AC_CACHE_CHECK([whether ldexpl() can be used without linking with libm],
    [gl_cv_func_ldexpl_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             long double x;]],
           [[return ldexpl (x, -1) > 0;]])],
        [gl_cv_func_ldexpl_no_libm=yes],
        [gl_cv_func_ldexpl_no_libm=no])
    ])
])
m4trace:m4/ldexpl.m4:91: -1- AC_DEFUN([gl_FUNC_LDEXPL_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether ldexpl works], [gl_cv_func_ldexpl_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <math.h>
extern
#ifdef __cplusplus
"C"
#endif
long double ldexpl (long double, int);
int main()
{
  int result = 0;
  {
    volatile long double x = 1.0;
    volatile long double y = ldexpl (x, -1);
    if (y != 0.5L)
      result |= 1;
  }
  {
    volatile long double x = 1.73205L;
    volatile long double y = ldexpl (x, 0);
    if (y != x)
      result |= 2;
  }
  return result;
}]])],
        [gl_cv_func_ldexpl_works=yes],
        [gl_cv_func_ldexpl_works=no],
        [
changequote(,)dnl
         case "$host_os" in
           aix | aix[3-6]*) gl_cv_func_ldexpl_works="guessing no" ;;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_ldexpl_works="guessing yes" ;;
           *)               gl_cv_func_ldexpl_works="guessing yes" ;;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/lib-ignore.m4:48: -1- AC_DEFUN([gl_IGNORE_UNUSED_LIBRARIES], [
  AC_CACHE_CHECK([for []_AC_LANG[] compiler flag to ignore unused libraries],
    [gl_cv_prog_[]_AC_LANG_ABBREV[]_ignore_unused_libraries],
    [gl_cv_prog_[]_AC_LANG_ABBREV[]_ignore_unused_libraries=none
     gl_saved_ldflags=$LDFLAGS
     gl_saved_libs=$LIBS
     # Link with -lm to detect binutils 2.16 bug with --as-needed; see
     # <https://lists.gnu.org/r/bug-gnulib/2006-06/msg00131.html>.
     LIBS="$LIBS -lm"
     # Use long option sequences like '-z ignore' to test for the feature,
     # to forestall problems with linkers that have -z, -i, -g, -n, etc. flags.
     # GCC + binutils likes '-Wl,--as-needed'.
     # GCC + Solaris ld likes '-Wl,-z,ignore'.
     # Sun C likes '-Wl,-z,ignore'. '-z ignore' is accepted but has no effect.
     # Don't try bare '--as-needed'; nothing likes it and the HP-UX 11.11
     # native cc issues annoying warnings and then ignores it,
     # which would cause us to incorrectly conclude that it worked.
     for gl_flags in _gl_IGNORE_UNUSED_LIBRARIES_OPTIONS
     do
       LDFLAGS="$gl_flags $LDFLAGS"
       AC_LINK_IFELSE([AC_LANG_PROGRAM()],
         [gl_cv_prog_[]_AC_LANG_ABBREV[]_ignore_unused_libraries=$gl_flags])
       LDFLAGS=$gl_saved_ldflags
       test "$gl_cv_prog_[]_AC_LANG_ABBREV[]_ignore_unused_libraries" != none &&
         break
     done
     LIBS=$gl_saved_libs
    ])
  IGNORE_UNUSED_LIBRARIES_[]_AC_LANG_PREFIX[]FLAGS=
  if test "$gl_cv_prog_[]_AC_LANG_ABBREV[]_ignore_unused_libraries" != none; then
    IGNORE_UNUSED_LIBRARIES_[]_AC_LANG_PREFIX[]FLAGS="$gl_cv_prog_[]_AC_LANG_ABBREV[]_ignore_unused_libraries"
  fi
  AC_SUBST([IGNORE_UNUSED_LIBRARIES_]_AC_LANG_PREFIX[FLAGS])
])
m4trace:m4/lib-ignore.m4:87: -1- AC_DEFUN([_gl_IGNORE_UNUSED_LIBRARIES_OPTIONS], [_AC_LANG_DISPATCH([$0], _AC_LANG, $@)])
m4trace:m4/lib-ld.m4:12: -1- AC_DEFUN([AC_LIB_PROG_LD_GNU], [AC_CACHE_CHECK([if the linker ($LD) is GNU ld], [acl_cv_prog_gnu_ld],
[# I'd rather use --version here, but apparently some GNU lds only accept -v.
case `$LD -v 2>&1 </dev/null` in
*GNU* | *'with BFD'*)
  acl_cv_prog_gnu_ld=yes
  ;;
*)
  acl_cv_prog_gnu_ld=no
  ;;
esac])
with_gnu_ld=$acl_cv_prog_gnu_ld
])
m4trace:m4/lib-ld.m4:27: -1- AC_DEFUN([AC_LIB_PROG_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
        [assume the C compiler uses GNU ld [default=no]])],
    [test "$withval" = no || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

# Prepare PATH_SEPARATOR.
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
  # contains only /bin. Note that ksh looks also at the FPATH variable,
  # so we have to set that as well for the test.
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
           || PATH_SEPARATOR=';'
       }
fi

if test -n "$LD"; then
  AC_MSG_CHECKING([for ld])
elif test "$GCC" = yes; then
  AC_MSG_CHECKING([for ld used by $CC])
elif test "$with_gnu_ld" = yes; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
if test -n "$LD"; then
  # Let the user override the test with a path.
  :
else
  AC_CACHE_VAL([acl_cv_path_LD],
  [
    acl_cv_path_LD= # Final result of this test
    ac_prog=ld # Program to search in $PATH
    if test "$GCC" = yes; then
      # Check if gcc -print-prog-name=ld gives a path.
      case $host in
        *-*-mingw*)
          # gcc leaves a trailing carriage return which upsets mingw
          acl_output=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
        *)
          acl_output=`($CC -print-prog-name=ld) 2>&5` ;;
      esac
      case $acl_output in
        # Accept absolute paths.
        [[\\/]]* | ?:[[\\/]]*)
          re_direlt='/[[^/]][[^/]]*/\.\./'
          # Canonicalize the pathname of ld
          acl_output=`echo "$acl_output" | sed 's%\\\\%/%g'`
          while echo "$acl_output" | grep "$re_direlt" > /dev/null 2>&1; do
            acl_output=`echo $acl_output | sed "s%$re_direlt%/%"`
          done
          # Got the pathname. No search in PATH is needed.
          acl_cv_path_LD="$acl_output"
          ac_prog=
          ;;
        "")
          # If it fails, then pretend we aren't using GCC.
          ;;
        *)
          # If it is relative, then search for the first ld in PATH.
          with_gnu_ld=unknown
          ;;
      esac
    fi
    if test -n "$ac_prog"; then
      # Search for $ac_prog in $PATH.
      acl_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
      for ac_dir in $PATH; do
        IFS="$acl_save_ifs"
        test -z "$ac_dir" && ac_dir=.
        if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
          acl_cv_path_LD="$ac_dir/$ac_prog"
          # Check to see if the program is GNU ld.  I'd rather use --version,
          # but apparently some variants of GNU ld only accept -v.
          # Break only if it was the GNU/non-GNU ld that we prefer.
          case `"$acl_cv_path_LD" -v 2>&1 </dev/null` in
            *GNU* | *'with BFD'*)
              test "$with_gnu_ld" != no && break
              ;;
            *)
              test "$with_gnu_ld" != yes && break
              ;;
          esac
        fi
      done
      IFS="$acl_save_ifs"
    fi
    case $host in
      *-*-aix*)
        AC_COMPILE_IFELSE(
          [AC_LANG_SOURCE(
             [[#if defined __powerpc64__ || defined __LP64__
                int ok;
               #else
                error fail
               #endif
             ]])],
          [# The compiler produces 64-bit code. Add option '-b64' so that the
           # linker groks 64-bit object files.
           case "$acl_cv_path_LD " in
             *" -b64 "*) ;;
             *) acl_cv_path_LD="$acl_cv_path_LD -b64" ;;
           esac
          ], [])
        ;;
      sparc64-*-netbsd*)
        AC_COMPILE_IFELSE(
          [AC_LANG_SOURCE(
             [[#if defined __sparcv9 || defined __arch64__
                int ok;
               #else
                error fail
               #endif
             ]])],
          [],
          [# The compiler produces 32-bit code. Add option '-m elf32_sparc'
           # so that the linker groks 32-bit object files.
           case "$acl_cv_path_LD " in
             *" -m elf32_sparc "*) ;;
             *) acl_cv_path_LD="$acl_cv_path_LD -m elf32_sparc" ;;
           esac
          ])
        ;;
    esac
  ])
  LD="$acl_cv_path_LD"
fi
if test -n "$LD"; then
  AC_MSG_RESULT([$LD])
else
  AC_MSG_RESULT([no])
  AC_MSG_ERROR([no acceptable ld found in \$PATH])
fi
AC_LIB_PROG_LD_GNU
])
m4trace:m4/lib-link.m4:17: -1- AC_DEFUN([AC_LIB_LINKFLAGS], [
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  AC_REQUIRE([AC_LIB_RPATH])
  pushdef([Name],[m4_translit([$1],[./+-], [____])])
  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [
    AC_LIB_LINKFLAGS_BODY([$1], [$2])
    ac_cv_lib[]Name[]_libs="$LIB[]NAME"
    ac_cv_lib[]Name[]_ltlibs="$LTLIB[]NAME"
    ac_cv_lib[]Name[]_cppflags="$INC[]NAME"
    ac_cv_lib[]Name[]_prefix="$LIB[]NAME[]_PREFIX"
  ])
  LIB[]NAME="$ac_cv_lib[]Name[]_libs"
  LTLIB[]NAME="$ac_cv_lib[]Name[]_ltlibs"
  INC[]NAME="$ac_cv_lib[]Name[]_cppflags"
  LIB[]NAME[]_PREFIX="$ac_cv_lib[]Name[]_prefix"
  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)
  AC_SUBST([LIB]NAME)
  AC_SUBST([LTLIB]NAME)
  AC_SUBST([LIB]NAME[_PREFIX])
  dnl Also set HAVE_LIB[]NAME so that AC_LIB_HAVE_LINKFLAGS can reuse the
  dnl results of this search when this library appears as a dependency.
  HAVE_LIB[]NAME=yes
  popdef([NAME])
  popdef([Name])
])
m4trace:m4/lib-link.m4:57: -1- AC_DEFUN([AC_LIB_HAVE_LINKFLAGS], [
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  AC_REQUIRE([AC_LIB_RPATH])
  pushdef([Name],[m4_translit([$1],[./+-], [____])])
  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])

  dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME
  dnl accordingly.
  AC_LIB_LINKFLAGS_BODY([$1], [$2])

  dnl Add $INC[]NAME to CPPFLAGS before performing the following checks,
  dnl because if the user has installed lib[]Name and not disabled its use
  dnl via --without-lib[]Name-prefix, he wants to use it.
  ac_save_CPPFLAGS="$CPPFLAGS"
  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)

  AC_CACHE_CHECK([for lib[]$1], [ac_cv_lib[]Name], [
    ac_save_LIBS="$LIBS"
    dnl If $LIB[]NAME contains some -l options, add it to the end of LIBS,
    dnl because these -l options might require -L options that are present in
    dnl LIBS. -l options benefit only from the -L options listed before it.
    dnl Otherwise, add it to the front of LIBS, because it may be a static
    dnl library that depends on another static library that is present in LIBS.
    dnl Static libraries benefit only from the static libraries listed after
    dnl it.
    case " $LIB[]NAME" in
      *" -l"*) LIBS="$LIBS $LIB[]NAME" ;;
      *)       LIBS="$LIB[]NAME $LIBS" ;;
    esac
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM([[$3]], [[$4]])],
      [ac_cv_lib[]Name=yes],
      [ac_cv_lib[]Name='m4_if([$5], [], [no], [[$5]])'])
    LIBS="$ac_save_LIBS"
  ])
  if test "$ac_cv_lib[]Name" = yes; then
    HAVE_LIB[]NAME=yes
    AC_DEFINE([HAVE_LIB]NAME, 1, [Define if you have the lib][$1 library.])
    AC_MSG_CHECKING([how to link with lib[]$1])
    AC_MSG_RESULT([$LIB[]NAME])
  else
    HAVE_LIB[]NAME=no
    dnl If $LIB[]NAME didn't lead to a usable library, we don't need
    dnl $INC[]NAME either.
    CPPFLAGS="$ac_save_CPPFLAGS"
    LIB[]NAME=
    LTLIB[]NAME=
    LIB[]NAME[]_PREFIX=
  fi
  AC_SUBST([HAVE_LIB]NAME)
  AC_SUBST([LIB]NAME)
  AC_SUBST([LTLIB]NAME)
  AC_SUBST([LIB]NAME[_PREFIX])
  popdef([NAME])
  popdef([Name])
])
m4trace:m4/lib-link.m4:125: -1- AC_DEFUN([AC_LIB_RPATH], [
  dnl Complain if config.rpath is missing.
  AC_REQUIRE_AUX_FILE([config.rpath])
  AC_REQUIRE([AC_PROG_CC])                dnl we use $CC, $GCC, $LDFLAGS
  AC_REQUIRE([AC_LIB_PROG_LD])            dnl we use $LD, $with_gnu_ld
  AC_REQUIRE([AC_CANONICAL_HOST])         dnl we use $host
  AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir
  AC_CACHE_CHECK([for shared library run path origin], [acl_cv_rpath], [
    CC="$CC" GCC="$GCC" LDFLAGS="$LDFLAGS" LD="$LD" with_gnu_ld="$with_gnu_ld" \
    ${CONFIG_SHELL-/bin/sh} "$ac_aux_dir/config.rpath" "$host" > conftest.sh
    . ./conftest.sh
    rm -f ./conftest.sh
    acl_cv_rpath=done
  ])
  wl="$acl_cv_wl"
  acl_libext="$acl_cv_libext"
  acl_shlibext="$acl_cv_shlibext"
  acl_libname_spec="$acl_cv_libname_spec"
  acl_library_names_spec="$acl_cv_library_names_spec"
  acl_hardcode_libdir_flag_spec="$acl_cv_hardcode_libdir_flag_spec"
  acl_hardcode_libdir_separator="$acl_cv_hardcode_libdir_separator"
  acl_hardcode_direct="$acl_cv_hardcode_direct"
  acl_hardcode_minus_L="$acl_cv_hardcode_minus_L"
  dnl Determine whether the user wants rpath handling at all.
  AC_ARG_ENABLE([rpath],
    [  --disable-rpath         do not hardcode runtime library paths],
    :, enable_rpath=yes)
])
m4trace:m4/lib-link.m4:161: -1- AC_DEFUN([AC_LIB_FROMPACKAGE], [
  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  define([acl_frompackage_]NAME, [$2])
  popdef([NAME])
  pushdef([PACK],[$2])
  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],
                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  define([acl_libsinpackage_]PACKUP,
    m4_ifdef([acl_libsinpackage_]PACKUP, [m4_defn([acl_libsinpackage_]PACKUP)[, ]],)[lib$1])
  popdef([PACKUP])
  popdef([PACK])
])
m4trace:m4/lib-link.m4:181: -1- AC_DEFUN([AC_LIB_LINKFLAGS_BODY], [
  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])
  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  pushdef([PACK],[m4_ifdef([acl_frompackage_]NAME, [acl_frompackage_]NAME, lib[$1])])
  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],
                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  pushdef([PACKLIBS],[m4_ifdef([acl_frompackage_]NAME, [acl_libsinpackage_]PACKUP, lib[$1])])
  dnl By default, look in $includedir and $libdir.
  use_additional=yes
  AC_LIB_WITH_FINAL_PREFIX([
    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"
    eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
    eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
  ])
  AC_ARG_WITH(PACK[-prefix],
[[  --with-]]PACK[[-prefix[=DIR]  search for ]PACKLIBS[ in DIR/include and DIR/lib
  --without-]]PACK[[-prefix     don't search for ]PACKLIBS[ in includedir and libdir]],
[
    if test "X$withval" = "Xno"; then
      use_additional=no
    else
      if test "X$withval" = "X"; then
        AC_LIB_WITH_FINAL_PREFIX([
          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"
          eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
          eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
        ])
      else
        additional_includedir="$withval/include"
        additional_libdir="$withval/$acl_libdirstem"
        additional_libdir2="$withval/$acl_libdirstem2"
        additional_libdir3="$withval/$acl_libdirstem3"
      fi
    fi
])
  if test "X$additional_libdir2" = "X$additional_libdir"; then
    additional_libdir2=
  fi
  if test "X$additional_libdir3" = "X$additional_libdir"; then
    additional_libdir3=
  fi
  dnl Search the library and its dependencies in $additional_libdir and
  dnl $LDFLAGS. Using breadth-first-seach.
  LIB[]NAME=
  LTLIB[]NAME=
  INC[]NAME=
  LIB[]NAME[]_PREFIX=
  dnl HAVE_LIB${NAME} is an indicator that LIB${NAME}, LTLIB${NAME} have been
  dnl computed. So it has to be reset here.
  HAVE_LIB[]NAME=
  rpathdirs=
  ltrpathdirs=
  names_already_handled=
  names_next_round='$1 $2'
  while test -n "$names_next_round"; do
    names_this_round="$names_next_round"
    names_next_round=
    for name in $names_this_round; do
      already_handled=
      for n in $names_already_handled; do
        if test "$n" = "$name"; then
          already_handled=yes
          break
        fi
      done
      if test -z "$already_handled"; then
        names_already_handled="$names_already_handled $name"
        dnl See if it was already located by an earlier AC_LIB_LINKFLAGS
        dnl or AC_LIB_HAVE_LINKFLAGS call.
        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`
        eval value=\"\$HAVE_LIB$uppername\"
        if test -n "$value"; then
          if test "$value" = yes; then
            eval value=\"\$LIB$uppername\"
            test -z "$value" || LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$value"
            eval value=\"\$LTLIB$uppername\"
            test -z "$value" || LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }$value"
          else
            dnl An earlier call to AC_LIB_HAVE_LINKFLAGS has determined
            dnl that this library doesn't exist. So just drop it.
            :
          fi
        else
          dnl Search the library lib$name in $additional_libdir and $LDFLAGS
          dnl and the already constructed $LIBNAME/$LTLIBNAME.
          found_dir=
          found_la=
          found_so=
          found_a=
          eval libname=\"$acl_libname_spec\"    # typically: libname=lib$name
          if test -n "$acl_shlibext"; then
            shrext=".$acl_shlibext"             # typically: shrext=.so
          else
            shrext=
          fi
          if test $use_additional = yes; then
            for additional_libdir_variable in additional_libdir additional_libdir2 additional_libdir3; do
              if test "X$found_dir" = "X"; then
                eval dir=\$$additional_libdir_variable
                if test -n "$dir"; then
                  dnl The same code as in the loop below:
                  dnl First look for a shared library.
                  if test -n "$acl_shlibext"; then
                    if test -f "$dir/$libname$shrext" && acl_is_expected_elfclass < "$dir/$libname$shrext"; then
                      found_dir="$dir"
                      found_so="$dir/$libname$shrext"
                    else
                      if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                        ver=`(cd "$dir" && \
                              for f in "$libname$shrext".*; do echo "$f"; done \
                              | sed -e "s,^$libname$shrext\\\\.,," \
                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                              | sed 1q ) 2>/dev/null`
                        if test -n "$ver" && test -f "$dir/$libname$shrext.$ver" && acl_is_expected_elfclass < "$dir/$libname$shrext.$ver"; then
                          found_dir="$dir"
                          found_so="$dir/$libname$shrext.$ver"
                        fi
                      else
                        eval library_names=\"$acl_library_names_spec\"
                        for f in $library_names; do
                          if test -f "$dir/$f" && acl_is_expected_elfclass < "$dir/$f"; then
                            found_dir="$dir"
                            found_so="$dir/$f"
                            break
                          fi
                        done
                      fi
                    fi
                  fi
                  dnl Then look for a static library.
                  if test "X$found_dir" = "X"; then
                    if test -f "$dir/$libname.$acl_libext" && ${AR-ar} -p "$dir/$libname.$acl_libext" | acl_is_expected_elfclass; then
                      found_dir="$dir"
                      found_a="$dir/$libname.$acl_libext"
                    fi
                  fi
                  if test "X$found_dir" != "X"; then
                    if test -f "$dir/$libname.la"; then
                      found_la="$dir/$libname.la"
                    fi
                  fi
                fi
              fi
            done
          fi
          if test "X$found_dir" = "X"; then
            for x in $LDFLAGS $LTLIB[]NAME; do
              AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
              case "$x" in
                -L*)
                  dir=`echo "X$x" | sed -e 's/^X-L//'`
                  dnl First look for a shared library.
                  if test -n "$acl_shlibext"; then
                    if test -f "$dir/$libname$shrext" && acl_is_expected_elfclass < "$dir/$libname$shrext"; then
                      found_dir="$dir"
                      found_so="$dir/$libname$shrext"
                    else
                      if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                        ver=`(cd "$dir" && \
                              for f in "$libname$shrext".*; do echo "$f"; done \
                              | sed -e "s,^$libname$shrext\\\\.,," \
                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                              | sed 1q ) 2>/dev/null`
                        if test -n "$ver" && test -f "$dir/$libname$shrext.$ver" && acl_is_expected_elfclass < "$dir/$libname$shrext.$ver"; then
                          found_dir="$dir"
                          found_so="$dir/$libname$shrext.$ver"
                        fi
                      else
                        eval library_names=\"$acl_library_names_spec\"
                        for f in $library_names; do
                          if test -f "$dir/$f" && acl_is_expected_elfclass < "$dir/$f"; then
                            found_dir="$dir"
                            found_so="$dir/$f"
                            break
                          fi
                        done
                      fi
                    fi
                  fi
                  dnl Then look for a static library.
                  if test "X$found_dir" = "X"; then
                    if test -f "$dir/$libname.$acl_libext" && ${AR-ar} -p "$dir/$libname.$acl_libext" | acl_is_expected_elfclass; then
                      found_dir="$dir"
                      found_a="$dir/$libname.$acl_libext"
                    fi
                  fi
                  if test "X$found_dir" != "X"; then
                    if test -f "$dir/$libname.la"; then
                      found_la="$dir/$libname.la"
                    fi
                  fi
                  ;;
              esac
              if test "X$found_dir" != "X"; then
                break
              fi
            done
          fi
          if test "X$found_dir" != "X"; then
            dnl Found the library.
            LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$found_dir -l$name"
            if test "X$found_so" != "X"; then
              dnl Linking with a shared library. We attempt to hardcode its
              dnl directory into the executable's runpath, unless it's the
              dnl standard /usr/lib.
              if test "$enable_rpath" = no \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem" \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem2" \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem3"; then
                dnl No hardcoding is needed.
                LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
              else
                dnl Use an explicit option to hardcode DIR into the resulting
                dnl binary.
                dnl Potentially add DIR to ltrpathdirs.
                dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.
                haveit=
                for x in $ltrpathdirs; do
                  if test "X$x" = "X$found_dir"; then
                    haveit=yes
                    break
                  fi
                done
                if test -z "$haveit"; then
                  ltrpathdirs="$ltrpathdirs $found_dir"
                fi
                dnl The hardcoding into $LIBNAME is system dependent.
                if test "$acl_hardcode_direct" = yes; then
                  dnl Using DIR/libNAME.so during linking hardcodes DIR into the
                  dnl resulting binary.
                  LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
                else
                  if test -n "$acl_hardcode_libdir_flag_spec" && test "$acl_hardcode_minus_L" = no; then
                    dnl Use an explicit option to hardcode DIR into the resulting
                    dnl binary.
                    LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
                    dnl Potentially add DIR to rpathdirs.
                    dnl The rpathdirs will be appended to $LIBNAME at the end.
                    haveit=
                    for x in $rpathdirs; do
                      if test "X$x" = "X$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      rpathdirs="$rpathdirs $found_dir"
                    fi
                  else
                    dnl Rely on "-L$found_dir".
                    dnl But don't add it if it's already contained in the LDFLAGS
                    dnl or the already constructed $LIBNAME
                    haveit=
                    for x in $LDFLAGS $LIB[]NAME; do
                      AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
                      if test "X$x" = "X-L$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir"
                    fi
                    if test "$acl_hardcode_minus_L" != no; then
                      dnl FIXME: Not sure whether we should use
                      dnl "-L$found_dir -l$name" or "-L$found_dir $found_so"
                      dnl here.
                      LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
                    else
                      dnl We cannot use $acl_hardcode_runpath_var and LD_RUN_PATH
                      dnl here, because this doesn't fit in flags passed to the
                      dnl compiler. So give up. No hardcoding. This affects only
                      dnl very old systems.
                      dnl FIXME: Not sure whether we should use
                      dnl "-L$found_dir -l$name" or "-L$found_dir $found_so"
                      dnl here.
                      LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-l$name"
                    fi
                  fi
                fi
              fi
            else
              if test "X$found_a" != "X"; then
                dnl Linking with a static library.
                LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_a"
              else
                dnl We shouldn't come here, but anyway it's good to have a
                dnl fallback.
                LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir -l$name"
              fi
            fi
            dnl Assume the include files are nearby.
            additional_includedir=
            case "$found_dir" in
              */$acl_libdirstem | */$acl_libdirstem/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem/"'*$,,'`
                if test "$name" = '$1'; then
                  LIB[]NAME[]_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
              */$acl_libdirstem2 | */$acl_libdirstem2/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem2/"'*$,,'`
                if test "$name" = '$1'; then
                  LIB[]NAME[]_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
              */$acl_libdirstem3 | */$acl_libdirstem3/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem3/"'*$,,'`
                if test "$name" = '$1'; then
                  LIB[]NAME[]_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
            esac
            if test "X$additional_includedir" != "X"; then
              dnl Potentially add $additional_includedir to $INCNAME.
              dnl But don't add it
              dnl   1. if it's the standard /usr/include,
              dnl   2. if it's /usr/local/include and we are using GCC on Linux,
              dnl   3. if it's already present in $CPPFLAGS or the already
              dnl      constructed $INCNAME,
              dnl   4. if it doesn't exist as a directory.
              if test "X$additional_includedir" != "X/usr/include"; then
                haveit=
                if test "X$additional_includedir" = "X/usr/local/include"; then
                  if test -n "$GCC"; then
                    case $host_os in
                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                    esac
                  fi
                fi
                if test -z "$haveit"; then
                  for x in $CPPFLAGS $INC[]NAME; do
                    AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
                    if test "X$x" = "X-I$additional_includedir"; then
                      haveit=yes
                      break
                    fi
                  done
                  if test -z "$haveit"; then
                    if test -d "$additional_includedir"; then
                      dnl Really add $additional_includedir to $INCNAME.
                      INC[]NAME="${INC[]NAME}${INC[]NAME:+ }-I$additional_includedir"
                    fi
                  fi
                fi
              fi
            fi
            dnl Look for dependencies.
            if test -n "$found_la"; then
              dnl Read the .la file. It defines the variables
              dnl dlname, library_names, old_library, dependency_libs, current,
              dnl age, revision, installed, dlopen, dlpreopen, libdir.
              save_libdir="$libdir"
              case "$found_la" in
                */* | *\\*) . "$found_la" ;;
                *) . "./$found_la" ;;
              esac
              libdir="$save_libdir"
              dnl We use only dependency_libs.
              for dep in $dependency_libs; do
                case "$dep" in
                  -L*)
                    dependency_libdir=`echo "X$dep" | sed -e 's/^X-L//'`
                    dnl Potentially add $dependency_libdir to $LIBNAME and $LTLIBNAME.
                    dnl But don't add it
                    dnl   1. if it's the standard /usr/lib,
                    dnl   2. if it's /usr/local/lib and we are using GCC on Linux,
                    dnl   3. if it's already present in $LDFLAGS or the already
                    dnl      constructed $LIBNAME,
                    dnl   4. if it doesn't exist as a directory.
                    if test "X$dependency_libdir" != "X/usr/$acl_libdirstem" \
                       && test "X$dependency_libdir" != "X/usr/$acl_libdirstem2" \
                       && test "X$dependency_libdir" != "X/usr/$acl_libdirstem3"; then
                      haveit=
                      if test "X$dependency_libdir" = "X/usr/local/$acl_libdirstem" \
                         || test "X$dependency_libdir" = "X/usr/local/$acl_libdirstem2" \
                         || test "X$dependency_libdir" = "X/usr/local/$acl_libdirstem3"; then
                        if test -n "$GCC"; then
                          case $host_os in
                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                          esac
                        fi
                      fi
                      if test -z "$haveit"; then
                        haveit=
                        for x in $LDFLAGS $LIB[]NAME; do
                          AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
                          if test "X$x" = "X-L$dependency_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$dependency_libdir"; then
                            dnl Really add $dependency_libdir to $LIBNAME.
                            LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$dependency_libdir"
                          fi
                        fi
                        haveit=
                        for x in $LDFLAGS $LTLIB[]NAME; do
                          AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
                          if test "X$x" = "X-L$dependency_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$dependency_libdir"; then
                            dnl Really add $dependency_libdir to $LTLIBNAME.
                            LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$dependency_libdir"
                          fi
                        fi
                      fi
                    fi
                    ;;
                  -R*)
                    dir=`echo "X$dep" | sed -e 's/^X-R//'`
                    if test "$enable_rpath" != no; then
                      dnl Potentially add DIR to rpathdirs.
                      dnl The rpathdirs will be appended to $LIBNAME at the end.
                      haveit=
                      for x in $rpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        rpathdirs="$rpathdirs $dir"
                      fi
                      dnl Potentially add DIR to ltrpathdirs.
                      dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.
                      haveit=
                      for x in $ltrpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        ltrpathdirs="$ltrpathdirs $dir"
                      fi
                    fi
                    ;;
                  -l*)
                    dnl Handle this in the next round.
                    dnl But on GNU systems, ignore -lc options, because
                    dnl   - linking with libc is the default anyway,
                    dnl   - linking with libc.a may produce an error
                    dnl     "/usr/bin/ld: dynamic STT_GNU_IFUNC symbol `strcmp' with pointer equality in `/usr/lib/libc.a(strcmp.o)' can not be used when making an executable; recompile with -fPIE and relink with -pie"
                    dnl     or may produce an executable that always crashes, see
                    dnl     <https://lists.gnu.org/archive/html/grep-devel/2020-09/msg00052.html>.
                    dep=`echo "X$dep" | sed -e 's/^X-l//'`
                    if test "X$dep" != Xc \
                       || case $host_os in
                            linux* | gnu* | k*bsd*-gnu) false ;;
                            *)                          true ;;
                          esac; then
                      names_next_round="$names_next_round $dep"
                    fi
                    ;;
                  *.la)
                    dnl Handle this in the next round. Throw away the .la's
                    dnl directory; it is already contained in a preceding -L
                    dnl option.
                    names_next_round="$names_next_round "`echo "X$dep" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\.la$,,'`
                    ;;
                  *)
                    dnl Most likely an immediate library name.
                    LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$dep"
                    LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }$dep"
                    ;;
                esac
              done
            fi
          else
            dnl Didn't find the library; assume it is in the system directories
            dnl known to the linker and runtime loader. (All the system
            dnl directories known to the linker should also be known to the
            dnl runtime loader, otherwise the system is severely misconfigured.)
            LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-l$name"
            LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name"
          fi
        fi
      fi
    done
  done
  if test "X$rpathdirs" != "X"; then
    if test -n "$acl_hardcode_libdir_separator"; then
      dnl Weird platform: only the last -rpath option counts, the user must
      dnl pass all path elements in one option. We can arrange that for a
      dnl single library, but not when more than one $LIBNAMEs are used.
      alldirs=
      for found_dir in $rpathdirs; do
        alldirs="${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir"
      done
      dnl Note: acl_hardcode_libdir_flag_spec uses $libdir and $wl.
      acl_save_libdir="$libdir"
      libdir="$alldirs"
      eval flag=\"$acl_hardcode_libdir_flag_spec\"
      libdir="$acl_save_libdir"
      LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$flag"
    else
      dnl The -rpath options are cumulative.
      for found_dir in $rpathdirs; do
        acl_save_libdir="$libdir"
        libdir="$found_dir"
        eval flag=\"$acl_hardcode_libdir_flag_spec\"
        libdir="$acl_save_libdir"
        LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$flag"
      done
    fi
  fi
  if test "X$ltrpathdirs" != "X"; then
    dnl When using libtool, the option that works for both libraries and
    dnl executables is -R. The -R options are cumulative.
    for found_dir in $ltrpathdirs; do
      LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-R$found_dir"
    done
  fi
  popdef([PACKLIBS])
  popdef([PACKUP])
  popdef([PACK])
  popdef([NAME])
])
m4trace:m4/lib-link.m4:718: -1- AC_DEFUN([AC_LIB_APPENDTOVAR], [
  for element in [$2]; do
    haveit=
    for x in $[$1]; do
      AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
      if test "X$x" = "X$element"; then
        haveit=yes
        break
      fi
    done
    if test -z "$haveit"; then
      [$1]="${[$1]}${[$1]:+ }$element"
    fi
  done
])
m4trace:m4/lib-link.m4:742: -1- AC_DEFUN([AC_LIB_LINKFLAGS_FROM_LIBS], [
  AC_REQUIRE([AC_LIB_RPATH])
  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])
  $1=
  if test "$enable_rpath" != no; then
    if test -n "$acl_hardcode_libdir_flag_spec" && test "$acl_hardcode_minus_L" = no; then
      dnl Use an explicit option to hardcode directories into the resulting
      dnl binary.
      rpathdirs=
      next=
      for opt in $2; do
        if test -n "$next"; then
          dir="$next"
          dnl No need to hardcode the standard /usr/lib.
          if test "X$dir" != "X/usr/$acl_libdirstem" \
             && test "X$dir" != "X/usr/$acl_libdirstem2" \
             && test "X$dir" != "X/usr/$acl_libdirstem3"; then
            rpathdirs="$rpathdirs $dir"
          fi
          next=
        else
          case $opt in
            -L) next=yes ;;
            -L*) dir=`echo "X$opt" | sed -e 's,^X-L,,'`
                 dnl No need to hardcode the standard /usr/lib.
                 if test "X$dir" != "X/usr/$acl_libdirstem" \
                    && test "X$dir" != "X/usr/$acl_libdirstem2" \
                    && test "X$dir" != "X/usr/$acl_libdirstem3"; then
                   rpathdirs="$rpathdirs $dir"
                 fi
                 next= ;;
            *) next= ;;
          esac
        fi
      done
      if test "X$rpathdirs" != "X"; then
        if test -n ""$3""; then
          dnl libtool is used for linking. Use -R options.
          for dir in $rpathdirs; do
            $1="${$1}${$1:+ }-R$dir"
          done
        else
          dnl The linker is used for linking directly.
          if test -n "$acl_hardcode_libdir_separator"; then
            dnl Weird platform: only the last -rpath option counts, the user
            dnl must pass all path elements in one option.
            alldirs=
            for dir in $rpathdirs; do
              alldirs="${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$dir"
            done
            acl_save_libdir="$libdir"
            libdir="$alldirs"
            eval flag=\"$acl_hardcode_libdir_flag_spec\"
            libdir="$acl_save_libdir"
            $1="$flag"
          else
            dnl The -rpath options are cumulative.
            for dir in $rpathdirs; do
              acl_save_libdir="$libdir"
              libdir="$dir"
              eval flag=\"$acl_hardcode_libdir_flag_spec\"
              libdir="$acl_save_libdir"
              $1="${$1}${$1:+ }$flag"
            done
          fi
        fi
      fi
    fi
  fi
  AC_SUBST([$1])
])
m4trace:m4/lib-prefix.m4:15: -1- AC_DEFUN([AC_LIB_PREFIX], [
  AC_BEFORE([$0], [AC_LIB_LINKFLAGS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  dnl By default, look in $includedir and $libdir.
  use_additional=yes
  AC_LIB_WITH_FINAL_PREFIX([
    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"
  ])
  AC_ARG_WITH([lib-prefix],
[[  --with-lib-prefix[=DIR] search for libraries in DIR/include and DIR/lib
  --without-lib-prefix    don't search for libraries in includedir and libdir]],
[
    if test "X$withval" = "Xno"; then
      use_additional=no
    else
      if test "X$withval" = "X"; then
        AC_LIB_WITH_FINAL_PREFIX([
          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"
        ])
      else
        additional_includedir="$withval/include"
        additional_libdir="$withval/$acl_libdirstem"
      fi
    fi
])
  if test $use_additional = yes; then
    dnl Potentially add $additional_includedir to $CPPFLAGS.
    dnl But don't add it
    dnl   1. if it's the standard /usr/include,
    dnl   2. if it's already present in $CPPFLAGS,
    dnl   3. if it's /usr/local/include and we are using GCC on Linux,
    dnl   4. if it doesn't exist as a directory.
    if test "X$additional_includedir" != "X/usr/include"; then
      haveit=
      for x in $CPPFLAGS; do
        AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
        if test "X$x" = "X-I$additional_includedir"; then
          haveit=yes
          break
        fi
      done
      if test -z "$haveit"; then
        if test "X$additional_includedir" = "X/usr/local/include"; then
          if test -n "$GCC"; then
            case $host_os in
              linux* | gnu* | k*bsd*-gnu) haveit=yes;;
            esac
          fi
        fi
        if test -z "$haveit"; then
          if test -d "$additional_includedir"; then
            dnl Really add $additional_includedir to $CPPFLAGS.
            CPPFLAGS="${CPPFLAGS}${CPPFLAGS:+ }-I$additional_includedir"
          fi
        fi
      fi
    fi
    dnl Potentially add $additional_libdir to $LDFLAGS.
    dnl But don't add it
    dnl   1. if it's the standard /usr/lib,
    dnl   2. if it's already present in $LDFLAGS,
    dnl   3. if it's /usr/local/lib and we are using GCC on Linux,
    dnl   4. if it doesn't exist as a directory.
    if test "X$additional_libdir" != "X/usr/$acl_libdirstem"; then
      haveit=
      for x in $LDFLAGS; do
        AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
        if test "X$x" = "X-L$additional_libdir"; then
          haveit=yes
          break
        fi
      done
      if test -z "$haveit"; then
        if test "X$additional_libdir" = "X/usr/local/$acl_libdirstem"; then
          if test -n "$GCC"; then
            case $host_os in
              linux*) haveit=yes;;
            esac
          fi
        fi
        if test -z "$haveit"; then
          if test -d "$additional_libdir"; then
            dnl Really add $additional_libdir to $LDFLAGS.
            LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-L$additional_libdir"
          fi
        fi
      fi
    fi
  fi
])
m4trace:m4/lib-prefix.m4:115: -1- AC_DEFUN([AC_LIB_PREPARE_PREFIX], [
  dnl Unfortunately, prefix and exec_prefix get only finally determined
  dnl at the end of configure.
  if test "X$prefix" = "XNONE"; then
    acl_final_prefix="$ac_default_prefix"
  else
    acl_final_prefix="$prefix"
  fi
  if test "X$exec_prefix" = "XNONE"; then
    acl_final_exec_prefix='${prefix}'
  else
    acl_final_exec_prefix="$exec_prefix"
  fi
  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  eval acl_final_exec_prefix=\"$acl_final_exec_prefix\"
  prefix="$acl_save_prefix"
])
m4trace:m4/lib-prefix.m4:138: -1- AC_DEFUN([AC_LIB_WITH_FINAL_PREFIX], [
  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  $1
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"
])
m4trace:m4/lib-prefix.m4:155: -1- AC_DEFUN([AC_LIB_PREPARE_MULTILIB], [
  dnl There is no formal standard regarding lib, lib32, and lib64.
  dnl On most glibc systems, the current practice is that on a system supporting
  dnl 32-bit and 64-bit instruction sets or ABIs, 64-bit libraries go under
  dnl $prefix/lib64 and 32-bit libraries go under $prefix/lib. However, on
  dnl Arch Linux based distributions, it's the opposite: 32-bit libraries go
  dnl under $prefix/lib32 and 64-bit libraries go under $prefix/lib.
  dnl We determine the compiler's default mode by looking at the compiler's
  dnl library search path. If at least one of its elements ends in /lib64 or
  dnl points to a directory whose absolute pathname ends in /lib64, we use that
  dnl for 64-bit ABIs. Similarly for 32-bit ABIs. Otherwise we use the default,
  dnl namely "lib".
  dnl On Solaris systems, the current practice is that on a system supporting
  dnl 32-bit and 64-bit instruction sets or ABIs, 64-bit libraries go under
  dnl $prefix/lib/64 (which is a symlink to either $prefix/lib/sparcv9 or
  dnl $prefix/lib/amd64) and 32-bit libraries go under $prefix/lib.
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_HOST_CPU_C_ABI_32BIT])

  AC_CACHE_CHECK([for ELF binary format], [gl_cv_elf],
    [AC_EGREP_CPP([Extensible Linking Format],
       [#if defined __ELF__ || (defined __linux__ && defined __EDG__)
        Extensible Linking Format
        #endif
       ],
       [gl_cv_elf=yes],
       [gl_cv_elf=no])
    ])
  if test $gl_cv_elf = yes; then
    # Extract the ELF class of a file (5th byte) in decimal.
    # Cf. https://en.wikipedia.org/wiki/Executable_and_Linkable_Format#File_header
    if od -A x < /dev/null >/dev/null 2>/dev/null; then
      # Use POSIX od.
      func_elfclass ()
      {
        od -A n -t d1 -j 4 -N 1
      }
    else
      # Use BSD hexdump.
      func_elfclass ()
      {
        dd bs=1 count=1 skip=4 2>/dev/null | hexdump -e '1/1 "%3d "'
        echo
      }
    fi
    # Use 'expr', not 'test', to compare the values of func_elfclass, because on
    # Solaris 11 OpenIndiana and Solaris 11 OmniOS, the result is 001 or 002,
    # not 1 or 2.
changequote(,)dnl
    case $HOST_CPU_C_ABI_32BIT in
      yes)
        # 32-bit ABI.
        acl_is_expected_elfclass ()
        {
          expr "`func_elfclass | sed -e 's/[ 	]//g'`" = 1 > /dev/null
        }
        ;;
      no)
        # 64-bit ABI.
        acl_is_expected_elfclass ()
        {
          expr "`func_elfclass | sed -e 's/[ 	]//g'`" = 2 > /dev/null
        }
        ;;
      *)
        # Unknown.
        acl_is_expected_elfclass ()
        {
          :
        }
        ;;
    esac
changequote([,])dnl
  else
    acl_is_expected_elfclass ()
    {
      :
    }
  fi

  dnl Allow the user to override the result by setting acl_cv_libdirstems.
  AC_CACHE_CHECK([for the common suffixes of directories in the library search path],
    [acl_cv_libdirstems],
    [dnl Try 'lib' first, because that's the default for libdir in GNU, see
     dnl <https://www.gnu.org/prep/standards/html_node/Directory-Variables.html>.
     acl_libdirstem=lib
     acl_libdirstem2=
     acl_libdirstem3=
     case "$host_os" in
       solaris*)
         dnl See Solaris 10 Software Developer Collection > Solaris 64-bit Developer's Guide > The Development Environment
         dnl <https://docs.oracle.com/cd/E19253-01/816-5138/dev-env/index.html>.
         dnl "Portable Makefiles should refer to any library directories using the 64 symbolic link."
         dnl But we want to recognize the sparcv9 or amd64 subdirectory also if the
         dnl symlink is missing, so we set acl_libdirstem2 too.
         if test $HOST_CPU_C_ABI_32BIT = no; then
           acl_libdirstem2=lib/64
           case "$host_cpu" in
             sparc*)        acl_libdirstem3=lib/sparcv9 ;;
             i*86 | x86_64) acl_libdirstem3=lib/amd64 ;;
           esac
         fi
         ;;
       *)
         dnl If $CC generates code for a 32-bit ABI, the libraries are
         dnl surely under $prefix/lib or $prefix/lib32, not $prefix/lib64.
         dnl Similarly, if $CC generates code for a 64-bit ABI, the libraries
         dnl are surely under $prefix/lib or $prefix/lib64, not $prefix/lib32.
         dnl Find the compiler's search path. However, non-system compilers
         dnl sometimes have odd library search paths. But we can't simply invoke
         dnl '/usr/bin/gcc -print-search-dirs' because that would not take into
         dnl account the -m32/-m31 or -m64 options from the $CC or $CFLAGS.
         searchpath=`(LC_ALL=C $CC $CPPFLAGS $CFLAGS -print-search-dirs) 2>/dev/null \
                     | sed -n -e 's,^libraries: ,,p' | sed -e 's,^=,,'`
         if test $HOST_CPU_C_ABI_32BIT != no; then
           # 32-bit or unknown ABI.
           if test -d /usr/lib32; then
             acl_libdirstem2=lib32
           fi
         fi
         if test $HOST_CPU_C_ABI_32BIT != yes; then
           # 64-bit or unknown ABI.
           if test -d /usr/lib64; then
             acl_libdirstem3=lib64
           fi
         fi
         if test -n "$searchpath"; then
           acl_save_IFS="${IFS= 	}"; IFS=":"
           for searchdir in $searchpath; do
             if test -d "$searchdir"; then
               case "$searchdir" in
                 */lib32/ | */lib32 ) acl_libdirstem2=lib32 ;;
                 */lib64/ | */lib64 ) acl_libdirstem3=lib64 ;;
                 */../ | */.. )
                   # Better ignore directories of this form. They are misleading.
                   ;;
                 *) searchdir=`cd "$searchdir" && pwd`
                    case "$searchdir" in
                      */lib32 ) acl_libdirstem2=lib32 ;;
                      */lib64 ) acl_libdirstem3=lib64 ;;
                    esac ;;
               esac
             fi
           done
           IFS="$acl_save_IFS"
           if test $HOST_CPU_C_ABI_32BIT = yes; then
             # 32-bit ABI.
             acl_libdirstem3=
           fi
           if test $HOST_CPU_C_ABI_32BIT = no; then
             # 64-bit ABI.
             acl_libdirstem2=
           fi
         fi
         ;;
     esac
     test -n "$acl_libdirstem2" || acl_libdirstem2="$acl_libdirstem"
     test -n "$acl_libdirstem3" || acl_libdirstem3="$acl_libdirstem"
     acl_cv_libdirstems="$acl_libdirstem,$acl_libdirstem2,$acl_libdirstem3"
    ])
  dnl Decompose acl_cv_libdirstems into acl_libdirstem, acl_libdirstem2, and
  dnl acl_libdirstem3.
changequote(,)dnl
  acl_libdirstem=`echo "$acl_cv_libdirstems" | sed -e 's/,.*//'`
  acl_libdirstem2=`echo "$acl_cv_libdirstems" | sed -e 's/^[^,]*,//' -e 's/,.*//'`
  acl_libdirstem3=`echo "$acl_cv_libdirstems" | sed -e 's/^[^,]*,[^,]*,//' -e 's/,.*//'`
changequote([,])dnl
])
m4trace:m4/libgmp.m4:15: -1- AC_DEFUN([gl_LIBGMP], [
  AC_ARG_WITH([libgmp],
    [AS_HELP_STRING([--without-libgmp],
       [do not use the GNU Multiple Precision (GMP) library;
        this is the default on systems lacking libgmp.])])
  HAVE_LIBGMP=no
  LIBGMP=
  LTLIBGMP=
  AS_IF([test "$with_libgmp" != no],
    [AC_CHECK_HEADERS([gmp.h gmp/gmp.h], [break])
     dnl Prefer AC_LIB_HAVE_LINKFLAGS if the havelib module is also in use.
     AS_IF([test "$ac_cv_header_gmp_h" = yes ||
            test "$ac_cv_header_gmp_gmp_h" = yes],
       [m4_ifdef([gl_HAVE_MODULE_HAVELIB],
          [AC_LIB_HAVE_LINKFLAGS([gmp], [],
             [#if HAVE_GMP_H
              # include <gmp.h>
              #else
              # include <gmp/gmp.h>
              #endif],
             [static const mp_limb_t x[2] = { 0x73, 0x55 };
              mpz_t tmp;
              mpz_roinit_n (tmp, x, 2);
             ],
             [no])],
          [gl_saved_LIBS=$LIBS
           AC_SEARCH_LIBS([__gmpz_roinit_n], [gmp])
           LIBS=$gl_saved_LIBS
           case $ac_cv_search___gmpz_roinit_n in
             'none needed')
               HAVE_LIBGMP=yes;;
             -*)
               HAVE_LIBGMP=yes
               LIBGMP=$ac_cv_search___gmpz_roinit_n
               LTLIBGMP=$LIBGMP;;
           esac
           AC_SUBST([HAVE_LIBGMP])
           AC_SUBST([LIBGMP])
           AC_SUBST([LTLIBGMP])])])
     if test "$with_libgmp,$HAVE_LIBGMP" = yes,no; then
       AC_MSG_ERROR(
         [GMP not found, although --with-libgmp was specified.m4_ifdef(
            [AC_LIB_HAVE_LINKFLAGS],
            [ Try specifying --with-libgmp-prefix=DIR.])])
     fi])
  if test $HAVE_LIBGMP = yes && test "$ac_cv_header_gmp_h" = yes; then
    GL_GENERATE_GMP_H=false
  else
    GL_GENERATE_GMP_H=true
  fi
  gl_CONDITIONAL([GL_GENERATE_MINI_GMP_H],
    [test $HAVE_LIBGMP != yes])
  gl_CONDITIONAL([GL_GENERATE_GMP_GMP_H],
    [test $HAVE_LIBGMP = yes && test "$ac_cv_header_gmp_h" != yes])
])
m4trace:m4/libunistring-base.m4:22: -1- AC_DEFUN([gl_LIBUNISTRING_MODULE], [
  AC_REQUIRE([gl_LIBUNISTRING_LIB_PREPARE])
  dnl Use the variables HAVE_LIBUNISTRING, LIBUNISTRING_VERSION from
  dnl gl_LIBUNISTRING_CORE if that macro has been run.
  gl_CONDITIONAL(AS_TR_CPP([LIBUNISTRING_COMPILE_$2]),
    [gl_LIBUNISTRING_VERSION_CMP([$1])])
])
m4trace:m4/libunistring-base.m4:48: -1- AC_DEFUN([gl_LIBUNISTRING_LIBHEADER], [
  AC_REQUIRE([gl_LIBUNISTRING_LIB_PREPARE])
  dnl Use the variables HAVE_LIBUNISTRING, LIBUNISTRING_VERSION from
  dnl gl_LIBUNISTRING_CORE if that macro has been run.
  if gl_LIBUNISTRING_VERSION_CMP([$1]); then
    dnl It is OK to use a .h file in lib/ from within tests/, but not vice
    dnl versa.
    if test -z "$LIBUNISTRING_[]AS_TR_CPP([$2])"; then
      LIBUNISTRING_[]AS_TR_CPP([$2])="${gl_source_base_prefix}$2"
    fi
  else
    LIBUNISTRING_[]AS_TR_CPP([$2])=
  fi
  AC_SUBST([LIBUNISTRING_]AS_TR_CPP([$2]))
])
m4trace:m4/libunistring-base.m4:67: -1- AC_DEFUN([gl_LIBUNISTRING_LIB_PREPARE], [
  dnl Ensure that HAVE_LIBUNISTRING is fully determined at this point.
  m4_ifdef([gl_LIBUNISTRING], [AC_REQUIRE([gl_LIBUNISTRING])])

  AC_REQUIRE([AC_PROG_AWK])

dnl Sed expressions to extract the parts of a version number.
changequote(,)
gl_libunistring_sed_extract_major='/^[0-9]/{s/^\([0-9]*\).*/\1/p;q;}
i\
0
q
'
gl_libunistring_sed_extract_minor='/^[0-9][0-9]*[.][0-9]/{s/^[0-9]*[.]\([0-9]*\).*/\1/p;q;}
i\
0
q
'
gl_libunistring_sed_extract_subminor='/^[0-9][0-9]*[.][0-9][0-9]*[.][0-9]/{s/^[0-9]*[.][0-9]*[.]\([0-9]*\).*/\1/p;q;}
i\
0
q
'
changequote([,])

  if test "$HAVE_LIBUNISTRING" = yes; then
    LIBUNISTRING_VERSION_MAJOR=`echo "$LIBUNISTRING_VERSION" | sed -n -e "$gl_libunistring_sed_extract_major"`
    LIBUNISTRING_VERSION_MINOR=`echo "$LIBUNISTRING_VERSION" | sed -n -e "$gl_libunistring_sed_extract_minor"`
    LIBUNISTRING_VERSION_SUBMINOR=`echo "$LIBUNISTRING_VERSION" | sed -n -e "$gl_libunistring_sed_extract_subminor"`
  fi
])
m4trace:m4/libunistring-base.m4:103: -1- AC_DEFUN([gl_LIBUNISTRING_VERSION_CMP], [ { test "$HAVE_LIBUNISTRING" != yes \
    || {
         dnl AS_LITERAL_IF exists and works fine since autoconf-2.59 at least.
         AS_LITERAL_IF([$1],
           [dnl This is the optimized variant, that assumes the argument is a literal:
            m4_pushdef([requested_version_major],
              [gl_LIBUNISTRING_ARG_OR_ZERO(m4_bpatsubst([$1], [^\([0-9]*\).*], [\1]), [])])
            m4_pushdef([requested_version_minor],
              [gl_LIBUNISTRING_ARG_OR_ZERO(m4_bpatsubst([$1], [^[0-9]*[.]\([0-9]*\).*], [\1]), [$1])])
            m4_pushdef([requested_version_subminor],
              [gl_LIBUNISTRING_ARG_OR_ZERO(m4_bpatsubst([$1], [^[0-9]*[.][0-9]*[.]\([0-9]*\).*], [\1]), [$1])])
            test $LIBUNISTRING_VERSION_MAJOR -lt requested_version_major \
            || { test $LIBUNISTRING_VERSION_MAJOR -eq requested_version_major \
                 && { test $LIBUNISTRING_VERSION_MINOR -lt requested_version_minor \
                      || { test $LIBUNISTRING_VERSION_MINOR -eq requested_version_minor \
                           && test $LIBUNISTRING_VERSION_SUBMINOR -lt requested_version_subminor
                         }
                    }
               }
            m4_popdef([requested_version_subminor])
            m4_popdef([requested_version_minor])
            m4_popdef([requested_version_major])
           ],
           [dnl This is the unoptimized variant:
            requested_version_major=`echo '$1' | sed -n -e "$gl_libunistring_sed_extract_major"`
            requested_version_minor=`echo '$1' | sed -n -e "$gl_libunistring_sed_extract_minor"`
            requested_version_subminor=`echo '$1' | sed -n -e "$gl_libunistring_sed_extract_subminor"`
            test $LIBUNISTRING_VERSION_MAJOR -lt $requested_version_major \
            || { test $LIBUNISTRING_VERSION_MAJOR -eq $requested_version_major \
                 && { test $LIBUNISTRING_VERSION_MINOR -lt $requested_version_minor \
                      || { test $LIBUNISTRING_VERSION_MINOR -eq $requested_version_minor \
                           && test $LIBUNISTRING_VERSION_SUBMINOR -lt $requested_version_subminor
                         }
                    }
               }
           ])
       }
  }])
m4trace:m4/limits-h.m4:10: -1- AC_DEFUN_ONCE([gl_LIMITS_H], [
  gl_CHECK_NEXT_HEADERS([limits.h])

  AC_CACHE_CHECK([whether limits.h has WORD_BIT, BOOL_WIDTH etc.],
    [gl_cv_header_limits_width],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
             #define __STDC_WANT_IEC_60559_BFP_EXT__ 1
            #endif
            #include <limits.h>
            long long llm = LLONG_MAX;
            int wb = WORD_BIT;
            int ullw = ULLONG_WIDTH;
            int bw = BOOL_WIDTH;
          ]])],
       [gl_cv_header_limits_width=yes],
       [gl_cv_header_limits_width=no])])
  if test "$gl_cv_header_limits_width" = yes; then
    GL_GENERATE_LIMITS_H=false
  else
    GL_GENERATE_LIMITS_H=true
  fi
])
m4trace:m4/limits-h.m4:37: -1- AC_DEFUN([gl_REPLACE_LIMITS_H], [
  AC_REQUIRE([gl_LIMITS_H])
  GL_GENERATE_LIMITS_H=true
])
m4trace:m4/link-follow.m4:17: -1- AC_DEFUN([gl_FUNC_LINK_FOLLOWS_SYMLINK], [dnl
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([readlink])
  dnl Mingw lacks link, although gnulib provides a good replacement.
  dnl However, it also lacks symlink, so there's nothing to test in
  dnl the first place, and no reason to need to distinguish between
  dnl linkat variants.  So, we set LINK_FOLLOWS_SYMLINKS to 0.
  gl_link_follows_symlinks=0 # assume GNU behavior
  if test $ac_cv_func_readlink = yes; then
    dnl Solaris has an __xpg4 variable in libc, and it determines the
    dnl behaviour of link(): It dereferences a symlink if and only if
    dnl __xpg4 != 0.
    AC_CACHE_CHECK([for __xpg4], [gl_cv_have___xpg4],
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM(
            [[extern int __xpg4;]],
            [[return __xpg4;]])],
         [gl_cv_have___xpg4=yes],
         [gl_cv_have___xpg4=no])
      ])
    if test $gl_cv_have___xpg4 = yes; then
      gl_link_follows_symlinks=-1
    else
      AC_CACHE_CHECK([whether link(2) dereferences a symlink],
                     [gl_cv_func_link_follows_symlink],
        [
         # Create a regular file.
         echo > conftest.file
         AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#       include <sys/types.h>
#       include <sys/stat.h>
#       include <unistd.h>
#       include <stdlib.h>

#       define SAME_INODE(Stat_buf_1, Stat_buf_2) \
          ((Stat_buf_1).st_ino == (Stat_buf_2).st_ino \
           && (Stat_buf_1).st_dev == (Stat_buf_2).st_dev)

        int
        main ()
        {
          const char *file = "conftest.file";
          const char *sym = "conftest.sym";
          const char *hard = "conftest.hard";
          struct stat sb_file, sb_hard;

          /* Create a symlink to the regular file. */
          if (symlink (file, sym))
            return 2;

          /* Create a hard link to that symlink.  */
          if (link (sym, hard))
            return 3;

          if (lstat (hard, &sb_hard))
            return 4;
          if (lstat (file, &sb_file))
            return 5;

          /* If the dev/inode of hard and file are the same, then
             the link call followed the symlink.  */
          return SAME_INODE (sb_hard, sb_file) ? 1 : 0;
        }
           ]])],
           [gl_cv_func_link_follows_symlink=no], dnl GNU behavior
           [gl_cv_func_link_follows_symlink=yes], dnl Followed link/compile failed
           [dnl We're cross compiling.
            dnl The past results are "yes" on Mac OS X, FreeBSD, NetBSD,
            dnl OpenBSD, Minix, AIX, HP-UX, OSF/1, and "no" on Linux, Cygwin.
            case "$host_os" in
                                  # On glibc/Linux we know the result.
              linux*-gnu* | gnu*) gl_cv_func_link_follows_symlink="guessing no" ;;
                                  # On musl/Linux we know the result.
              linux*-musl*)       gl_cv_func_link_follows_symlink="guessing no" ;;
                                  # Otherwise, we don't know.
              *)                  gl_cv_func_link_follows_symlink=unknown ;;
            esac
           ])
         rm -f conftest.file conftest.sym conftest.hard
        ])
      case "$gl_cv_func_link_follows_symlink" in
        *yes) gl_link_follows_symlinks=1 ;;
        *no) ;; # already defaulted to 0
        *) gl_link_follows_symlinks=-2 ;;
      esac
    fi
  fi
  AC_DEFINE_UNQUOTED([LINK_FOLLOWS_SYMLINKS], [$gl_link_follows_symlinks],
    [Define to 1 if 'link(2)' dereferences symbolic links, 0 if it
     creates hard links to symlinks, -1 if it depends on the variable __xpg4,
     and -2 if unknown.])
])
m4trace:m4/link.m4:7: -1- AC_DEFUN([gl_FUNC_LINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([link])
  if test $ac_cv_func_link = no; then
    HAVE_LINK=0
  else
    AC_CACHE_CHECK([whether link obeys POSIX],
      [gl_cv_func_link_works],
      [touch conftest.a
       # Assume that if we have lstat, we can also check symlinks.
       if test $ac_cv_func_lstat = yes; then
         ln -s conftest.a conftest.lnk
       fi
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
             #include <stdio.h>
           ]],
           [[int result = 0;
             if (!link ("conftest.a", "conftest.b/"))
               result |= 1;
#if HAVE_LSTAT
             if (!link ("conftest.lnk/", "conftest.b"))
               result |= 2;
             if (rename ("conftest.a", "conftest.b"))
               result |= 4;
             if (!link ("conftest.b", "conftest.lnk"))
               result |= 8;
#endif
             return result;
           ]])],
         [gl_cv_func_link_works=yes], [gl_cv_func_link_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_link_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_link_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_link_works="$gl_cross_guess_normal" ;;
          esac
         ])
       rm -f conftest.a conftest.b conftest.lnk])
    case "$gl_cv_func_link_works" in
      *yes) ;;
      *)
        REPLACE_LINK=1
        ;;
    esac
  fi
])
m4trace:m4/linkat.m4:11: -1- AC_DEFUN([gl_FUNC_LINKAT], [
  AC_REQUIRE([gl_FUNC_OPENAT])
  AC_REQUIRE([gl_FUNC_LINK_FOLLOWS_SYMLINK])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([linkat symlink])
  if test $ac_cv_func_linkat = no; then
    HAVE_LINKAT=0
  else
    dnl OS X Yosemite has linkat() but it's not sufficient
    dnl to our needs since it doesn't support creating
    dnl hardlinks to symlinks.  Therefore check for that
    dnl capability before considering using the system version.
    AC_CACHE_CHECK([whether linkat() can link symlinks],
      [gl_cv_func_linkat_nofollow],
      [rm -rf conftest.l1 conftest.l2
       ln -s target conftest.l1
       AC_RUN_IFELSE([AC_LANG_PROGRAM(
                        [[#include <fcntl.h>
                          #include <unistd.h>
                        ]],
                        [[return linkat (AT_FDCWD, "conftest.l1", AT_FDCWD,
                                         "conftest.l2", 0);
                        ]])],
         [gl_cv_func_linkat_nofollow=yes],
         [gl_cv_func_linkat_nofollow=no],
         [case "$host_os" in
           darwin*) gl_cv_func_linkat_nofollow="guessing no" ;;
           *)       gl_cv_func_linkat_nofollow="guessing yes" ;;
          esac])

       rm -rf conftest.l1 conftest.l2])

    case $gl_cv_func_linkat_nofollow in
      *no) LINKAT_SYMLINK_NOTSUP=1 ;;
      *yes) LINKAT_SYMLINK_NOTSUP=0 ;;
    esac

    AC_CACHE_CHECK([whether linkat handles trailing slash correctly],
      [gl_cv_func_linkat_slash],
      [rm -rf conftest.a conftest.b conftest.c conftest.d conftest.e conftest.s
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <unistd.h>
              #include <fcntl.h>
              #include <errno.h>
              #include <stdio.h>
            ]GL_MDA_DEFINES],
            [[int result;
              int fd;
              /* Create a regular file.  */
              fd = open ("conftest.a", O_CREAT | O_EXCL | O_WRONLY, 0600);
              if (fd < 0)
                return 1;
              if (write (fd, "hello", 5) < 5)
                return 2;
              if (close (fd) < 0)
                return 3;
              /* Test whether hard links are supported on the current
                 device.  */
              if (linkat (AT_FDCWD, "conftest.a", AT_FDCWD, "conftest.b",
                          AT_SYMLINK_FOLLOW) < 0)
                return 0;
              result = 0;
              /* Test whether a trailing "/" is treated like "/.".  */
              if (linkat (AT_FDCWD, "conftest.a/", AT_FDCWD, "conftest.c",
                          AT_SYMLINK_FOLLOW) == 0)
                result |= 4;
              if (linkat (AT_FDCWD, "conftest.a", AT_FDCWD, "conftest.d/",
                          AT_SYMLINK_FOLLOW) == 0)
                result |= 8;

              /* On Mac OS X 10.13 a trailing "/" will cause the second path to be
                 dereferenced, and thus will succeed on a dangling symlink.  */
              if (symlink ("conftest.e", "conftest.s") == 0)
                {
                  if (linkat (AT_FDCWD, "conftest.a", AT_FDCWD, "conftest.s/",
                      AT_SYMLINK_FOLLOW) == 0)
                    result |= 16;
                }

              return result;
            ]])],
         [gl_cv_func_linkat_slash=yes],
         [gl_cv_func_linkat_slash=no],
         [
          case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_linkat_slash="guessing yes";;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_linkat_slash="guessing yes";;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_linkat_slash="$gl_cross_guess_normal";;
          esac
         ])
       rm -rf conftest.a conftest.b conftest.c conftest.d conftest.e conftest.s])
    case "$gl_cv_func_linkat_slash" in
      *yes) gl_linkat_slash_bug=0 ;;
      *)    gl_linkat_slash_bug=1 ;;
    esac

    case "$gl_cv_func_linkat_nofollow" in
      *yes) linkat_nofollow=yes ;;
      *) linkat_nofollow=no ;;
    esac

    if test "$linkat_nofollow" != yes \
       || test $gl_linkat_slash_bug = 1; then
      REPLACE_LINKAT=1
      AC_DEFINE_UNQUOTED([LINKAT_TRAILING_SLASH_BUG], [$gl_linkat_slash_bug],
        [Define to 1 if linkat fails to recognize a trailing slash.])
      AC_DEFINE_UNQUOTED([LINKAT_SYMLINK_NOTSUP], [$LINKAT_SYMLINK_NOTSUP],
        [Define to 1 if linkat can create hardlinks to symlinks])
    fi
  fi
])
m4trace:m4/localcharset.m4:7: -1- AC_DEFUN([gl_LOCALCHARSET], [
  dnl Prerequisites of lib/localcharset.c.
  AC_REQUIRE([AM_LANGINFO_CODESET])
])
m4trace:m4/locale-fr.m4:10: -1- AC_DEFUN([gt_LOCALE_FR], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a traditional french locale], [gt_cv_locale_fr], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main () {
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if defined __BEOS__ || defined __HAIKU__
  return 1;
#else
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the fr_FR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.
     On MirBSD 10, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "UTF-8".  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0
        || strcmp (cs, "UTF-8") == 0)
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check whether in the abbreviation of the second month, the second
     character (should be U+00E9: LATIN SMALL LETTER E WITH ACUTE) is only
     one byte long. This excludes the UTF-8 encoding.  */
  t.tm_year = 1975 - 1900; t.tm_mon = 2 - 1; t.tm_mday = 4;
  if (strftime (buf, sizeof (buf), "%b", &t) < 3 || buf[2] != 'v') return 1;
# if !defined __BIONIC__ /* Bionic libc's 'struct lconv' is just a dummy.  */
  /* Check whether the decimal separator is a comma.
     On NetBSD 3.0 in the fr_FR.ISO8859-1 locale, localeconv()->decimal_point
     are nl_langinfo(RADIXCHAR) are both ".".  */
  if (localeconv () ->decimal_point[0] != ',') return 1;
# endif
  return 0;
#endif
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Test for the native Windows locale name.
          if (LC_ALL=French_France.1252 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_fr=French_France.1252
          else
            # None found.
            gt_cv_locale_fr=none
          fi
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the usual locale name.
          if (LC_ALL=fr_FR LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_fr=fr_FR
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=fr_FR.ISO-8859-1 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_fr=fr_FR.ISO-8859-1
            else
              # Test for the AIX, OSF/1, FreeBSD, NetBSD, OpenBSD locale name.
              if (LC_ALL=fr_FR.ISO8859-1 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_fr=fr_FR.ISO8859-1
              else
                # Test for the HP-UX locale name.
                if (LC_ALL=fr_FR.iso88591 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                  gt_cv_locale_fr=fr_FR.iso88591
                else
                  # Test for the Solaris 7 locale name.
                  if (LC_ALL=fr LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                    gt_cv_locale_fr=fr
                  else
                    # None found.
                    gt_cv_locale_fr=none
                  fi
                fi
              fi
            fi
          fi
          ;;
      esac
    fi
    rm -fr conftest*
  ])
  LOCALE_FR=$gt_cv_locale_fr
  AC_SUBST([LOCALE_FR])
])
m4trace:m4/locale-fr.m4:140: -1- AC_DEFUN([gt_LOCALE_FR_UTF8], [
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a french Unicode locale], [gt_cv_locale_fr_utf8], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main () {
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if !(defined __BEOS__ || defined __HAIKU__)
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the fr_FR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0)
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check whether in the abbreviation of the second month, the second
     character (should be U+00E9: LATIN SMALL LETTER E WITH ACUTE) is
     two bytes long, with UTF-8 encoding.  */
  t.tm_year = 1975 - 1900; t.tm_mon = 2 - 1; t.tm_mday = 4;
  if (strftime (buf, sizeof (buf), "%b", &t) < 4
      || buf[1] != (char) 0xc3 || buf[2] != (char) 0xa9 || buf[3] != 'v')
    return 1;
#endif
#if !defined __BIONIC__ /* Bionic libc's 'struct lconv' is just a dummy.  */
  /* Check whether the decimal separator is a comma.
     On NetBSD 3.0 in the fr_FR.ISO8859-1 locale, localeconv()->decimal_point
     are nl_langinfo(RADIXCHAR) are both ".".  */
  if (localeconv () ->decimal_point[0] != ',') return 1;
#endif
  return 0;
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Test for the hypothetical native Windows locale name.
          if (LC_ALL=French_France.65001 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_fr_utf8=French_France.65001
          else
            # None found.
            gt_cv_locale_fr_utf8=none
          fi
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the usual locale name.
          if (LC_ALL=fr_FR LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_fr_utf8=fr_FR
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=fr_FR.UTF-8 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_fr_utf8=fr_FR.UTF-8
            else
              # Test for the Solaris 7 locale name.
              if (LC_ALL=fr.UTF-8 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_fr_utf8=fr.UTF-8
              else
                # None found.
                gt_cv_locale_fr_utf8=none
              fi
            fi
          fi
          ;;
      esac
    fi
    rm -fr conftest*
  ])
  LOCALE_FR_UTF8=$gt_cv_locale_fr_utf8
  AC_SUBST([LOCALE_FR_UTF8])
])
m4trace:m4/locale-ja.m4:10: -1- AC_DEFUN([gt_LOCALE_JA], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a traditional japanese locale], [gt_cv_locale_ja], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main ()
{
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if defined __BEOS__ || defined __HAIKU__
  return 1;
#else
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the fr_FR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.
     On MirBSD 10, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "UTF-8".  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0
        || strcmp (cs, "UTF-8") == 0)
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check whether MB_CUR_MAX is > 1.  This excludes the dysfunctional locales
     on Cygwin 1.5.x.  */
  if (MB_CUR_MAX == 1)
    return 1;
  /* Check whether in a month name, no byte in the range 0x80..0x9F occurs.
     This excludes the UTF-8 encoding (except on MirBSD).  */
  {
    const char *p;
    t.tm_year = 1975 - 1900; t.tm_mon = 2 - 1; t.tm_mday = 4;
    if (strftime (buf, sizeof (buf), "%B", &t) < 2) return 1;
    for (p = buf; *p != '\0'; p++)
      if ((unsigned char) *p >= 0x80 && (unsigned char) *p < 0xa0)
        return 1;
  }
  return 0;
#endif
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Note that on native Windows, the Japanese locale is
          # Japanese_Japan.932, and CP932 is very different from EUC-JP, so we
          # cannot use it here.
          gt_cv_locale_ja=none
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the AIX locale name.
          if (LC_ALL=ja_JP LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_ja=ja_JP
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=ja_JP.EUC-JP LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_ja=ja_JP.EUC-JP
            else
              # Test for the HP-UX, OSF/1, NetBSD locale name.
              if (LC_ALL=ja_JP.eucJP LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_ja=ja_JP.eucJP
              else
                # Test for the IRIX, FreeBSD locale name.
                if (LC_ALL=ja_JP.EUC LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                  gt_cv_locale_ja=ja_JP.EUC
                else
                  # Test for the Solaris 7 locale name.
                  if (LC_ALL=ja LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                    gt_cv_locale_ja=ja
                  else
                    # Special test for NetBSD 1.6.
                    if test -f /usr/share/locale/ja_JP.eucJP/LC_CTYPE; then
                      gt_cv_locale_ja=ja_JP.eucJP
                    else
                      # None found.
                      gt_cv_locale_ja=none
                    fi
                  fi
                fi
              fi
            fi
          fi
          ;;
      esac
    fi
    rm -fr conftest*
  ])
  LOCALE_JA=$gt_cv_locale_ja
  AC_SUBST([LOCALE_JA])
])
m4trace:m4/locale-tr.m4:10: -1- AC_DEFUN([gt_LOCALE_TR_UTF8], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a turkish Unicode locale], [gt_cv_locale_tr_utf8], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
#include <wctype.h>
struct tm t;
char buf[16];
int main () {
  /* On BeOS, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  But BeOS does not
     implement the Turkish upper-/lowercase mappings.  Therefore, let this
     program return 1 on BeOS.  */
  /* Check whether the given locale name is recognized by the system.  */
#if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
#else
  if (setlocale (LC_ALL, "") == NULL) return 1;
#endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the tr_TR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.  */
#if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0)
      return 1;
  }
#endif
#ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
#endif
  /* Check whether in the abbreviation of the eighth month, the second
     character (should be U+011F: LATIN SMALL LETTER G WITH BREVE) is
     two bytes long, with UTF-8 encoding.  */
  t.tm_year = 1992 - 1900; t.tm_mon = 8 - 1; t.tm_mday = 19;
  if (strftime (buf, sizeof (buf), "%b", &t) < 4
      || buf[1] != (char) 0xc4 || buf[2] != (char) 0x9f)
    return 1;
  /* Check whether the upper-/lowercase mappings are as expected for
     Turkish.  */
  if (towupper ('i') != 0x0130 || towlower (0x0130) != 'i'
      || towupper(0x0131) != 'I' || towlower ('I') != 0x0131)
    return 1;
  return 0;
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Test for the hypothetical native Windows locale name.
          if (LC_ALL=Turkish_Turkey.65001 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_tr_utf8=Turkish_Turkey.65001
          else
            # None found.
            gt_cv_locale_tr_utf8=none
          fi
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the usual locale name.
          if (LC_ALL=tr_TR LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_tr_utf8=tr_TR
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=tr_TR.UTF-8 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_tr_utf8=tr_TR.UTF-8
            else
              # Test for the Solaris 7 locale name.
              if (LC_ALL=tr.UTF-8 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_tr_utf8=tr.UTF-8
              else
                # None found.
                gt_cv_locale_tr_utf8=none
              fi
            fi
          fi
          ;;
      esac
    else
      gt_cv_locale_tr_utf8=none
    fi
    rm -fr conftest*
  ])
  LOCALE_TR_UTF8=$gt_cv_locale_tr_utf8
  AC_SUBST([LOCALE_TR_UTF8])
])
m4trace:m4/locale-zh.m4:10: -1- AC_DEFUN([gt_LOCALE_ZH_CN], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a transitional chinese locale], [gt_cv_locale_zh_CN], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main ()
{
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if defined __BEOS__ || defined __HAIKU__
  return 1;
#else
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the fr_FR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.
     On MirBSD 10, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "UTF-8".  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0
        || strcmp (cs, "UTF-8") == 0)
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check whether in a month name, no byte in the range 0x80..0x9F occurs.
     This excludes the UTF-8 encoding (except on MirBSD).  */
  {
    const char *p;
    t.tm_year = 1975 - 1900; t.tm_mon = 2 - 1; t.tm_mday = 4;
    if (strftime (buf, sizeof (buf), "%B", &t) < 2) return 1;
    for (p = buf; *p != '\0'; p++)
      if ((unsigned char) *p >= 0x80 && (unsigned char) *p < 0xa0)
        return 1;
  }
  /* Check whether a typical GB18030 multibyte sequence is recognized as a
     single wide character.  This excludes the GB2312 and GBK encodings.  */
  if (mblen ("\203\062\332\066", 5) != 4)
    return 1;
  return 0;
#endif
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Test for the hypothetical native Windows locale name.
          if (LC_ALL=Chinese_China.54936 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_zh_CN=Chinese_China.54936
          else
            # None found.
            gt_cv_locale_zh_CN=none
          fi
          ;;
        solaris2.8)
          # On Solaris 8, the locales zh_CN.GB18030, zh_CN.GBK, zh.GBK are
          # broken. One witness is the test case in gl_MBRTOWC_SANITYCHECK.
          # Another witness is that "LC_ALL=zh_CN.GB18030 bash -c true" dumps core.
          gt_cv_locale_zh_CN=none
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the locale name without encoding suffix.
          if (LC_ALL=zh_CN LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_zh_CN=zh_CN
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=zh_CN.GB18030 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_zh_CN=zh_CN.GB18030
            else
              # None found.
              gt_cv_locale_zh_CN=none
            fi
          fi
          ;;
      esac
    else
      # If there was a link error, due to mblen(), the system is so old that
      # it certainly doesn't have a chinese locale.
      gt_cv_locale_zh_CN=none
    fi
    rm -fr conftest*
  ])
  LOCALE_ZH_CN=$gt_cv_locale_zh_CN
  AC_SUBST([LOCALE_ZH_CN])
])
m4trace:m4/locale_h.m4:7: -1- AC_DEFUN_ONCE([gl_LOCALE_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])

  dnl Persuade glibc <locale.h> to define locale_t and the int_p_*, int_n_*
  dnl members of 'struct lconv'.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl If <stddef.h> is replaced, then <locale.h> must also be replaced.
  AC_REQUIRE([gl_STDDEF_H])

  AC_REQUIRE([gl_LOCALE_T])

  dnl Solaris 11.0 defines the int_p_*, int_n_* members of 'struct lconv'
  dnl only if _LCONV_C99 is defined.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    solaris*)
      AC_DEFINE([_LCONV_C99], [1], [Define to 1 on Solaris.])
      ;;
  esac

  AC_CACHE_CHECK([whether locale.h conforms to POSIX:2001],
    [gl_cv_header_locale_h_posix2001],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <locale.h>
            int x = LC_MESSAGES;
            int y = sizeof (((struct lconv *) 0)->decimal_point);]],
          [[]])],
       [gl_cv_header_locale_h_posix2001=yes],
       [gl_cv_header_locale_h_posix2001=no])])

  dnl Check whether 'struct lconv' is complete.
  dnl Bionic libc's 'struct lconv' is just a dummy.
  dnl On OpenBSD 4.9, HP-UX 11, IRIX 6.5, OSF/1 5.1, Solaris 9, Cygwin 1.5.x,
  dnl mingw, MSVC 9, it lacks the int_p_* and int_n_* members.
  AC_CACHE_CHECK([whether struct lconv is properly defined],
    [gl_cv_sys_struct_lconv_ok],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <locale.h>
            struct lconv l;
            int x = sizeof (l.decimal_point);
            int y = sizeof (l.int_p_cs_precedes);]],
          [[]])],
       [gl_cv_sys_struct_lconv_ok=yes],
       [gl_cv_sys_struct_lconv_ok=no])
    ])
  if test $gl_cv_sys_struct_lconv_ok = no; then
    dnl On native Windows with MSVC, merely define these member names as macros.
    dnl This avoids trouble in C++ mode.
    case "$host_os" in
      mingw*)
        AC_EGREP_CPP([Special], [
#ifdef _MSC_VER
 Special
#endif
          ],
          [],
          [REPLACE_STRUCT_LCONV=1])
        ;;
      *) REPLACE_STRUCT_LCONV=1 ;;
    esac
  fi

  dnl <locale.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_NEXT_HEADERS([locale.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <locale.h>
/* Some systems provide declarations in a non-standard header.  */
#if HAVE_XLOCALE_H
# include <xlocale.h>
#endif
    ]],
    [setlocale newlocale duplocale freelocale])
])
m4trace:m4/locale_h.m4:91: -1- AC_DEFUN([gl_LOCALE_T], [
  dnl Persuade glibc and Solaris <locale.h> to define locale_t.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl Check whether use of locale_t requires inclusion of <xlocale.h>,
  dnl e.g. on Mac OS X 10.5. If <locale.h> does not define locale_t by
  dnl itself, we assume that <xlocale.h> will do so.
  AC_CACHE_CHECK([whether locale.h defines locale_t],
    [gl_cv_header_locale_has_locale_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <locale.h>
            locale_t x;]],
          [[]])],
       [gl_cv_header_locale_has_locale_t=yes],
       [gl_cv_header_locale_has_locale_t=no])
    ])

  dnl Check for <xlocale.h>.
  AC_CHECK_HEADERS_ONCE([xlocale.h])
  if test $ac_cv_header_xlocale_h = yes; then
    HAVE_XLOCALE_H=1
    if test $gl_cv_header_locale_has_locale_t = yes; then
      gl_cv_header_locale_h_needs_xlocale_h=no
    else
      gl_cv_header_locale_h_needs_xlocale_h=yes
    fi
    HAVE_LOCALE_T=1
  else
    HAVE_XLOCALE_H=0
    gl_cv_header_locale_h_needs_xlocale_h=no
    if test $gl_cv_header_locale_has_locale_t = yes; then
      HAVE_LOCALE_T=1
    else
      HAVE_LOCALE_T=0
    fi
  fi
  AC_SUBST([HAVE_XLOCALE_H])
])
m4trace:m4/locale_h.m4:136: -1- AC_DEFUN([gl_LOCALE_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_LOCALE_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/locale_h.m4:148: -1- AC_DEFUN([gl_LOCALE_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_LOCALE_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALECONV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETLOCALE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETLOCALE_NULL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUPLOCALE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALENAME])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_LOCALE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])
])
m4trace:m4/locale_h.m4:161: -1- AC_DEFUN([gl_LOCALE_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_NEWLOCALE=1;       AC_SUBST([HAVE_NEWLOCALE])
  HAVE_DUPLOCALE=1;       AC_SUBST([HAVE_DUPLOCALE])
  HAVE_FREELOCALE=1;      AC_SUBST([HAVE_FREELOCALE])
  REPLACE_LOCALECONV=0;   AC_SUBST([REPLACE_LOCALECONV])
  REPLACE_SETLOCALE=0;    AC_SUBST([REPLACE_SETLOCALE])
  REPLACE_NEWLOCALE=0;    AC_SUBST([REPLACE_NEWLOCALE])
  REPLACE_DUPLOCALE=0;    AC_SUBST([REPLACE_DUPLOCALE])
  REPLACE_FREELOCALE=0;   AC_SUBST([REPLACE_FREELOCALE])
  REPLACE_STRUCT_LCONV=0; AC_SUBST([REPLACE_STRUCT_LCONV])
  LOCALENAME_ENHANCE_LOCALE_FUNCS=0; AC_SUBST([LOCALENAME_ENHANCE_LOCALE_FUNCS])
])
m4trace:m4/localeconv.m4:7: -1- AC_DEFUN([gl_FUNC_LOCALECONV], [
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])
  AC_REQUIRE([gl_LOCALE_H])

  if test $REPLACE_STRUCT_LCONV = 1; then
    REPLACE_LOCALECONV=1
  fi
])
m4trace:m4/localeconv.m4:18: -1- AC_DEFUN([gl_PREREQ_LOCALECONV], [
  AC_CHECK_MEMBERS([struct lconv.decimal_point], [], [],
    [[#include <locale.h>]])
])
m4trace:m4/localename.m4:7: -1- AC_DEFUN([gl_LOCALENAME], [
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])
  AC_REQUIRE([gl_LOCALE_T])
  AC_REQUIRE([gt_LC_MESSAGES])
  AC_REQUIRE([gt_INTL_THREAD_LOCALE_NAME])
  AC_REQUIRE([gt_INTL_MACOSX])
  AC_CHECK_HEADERS_ONCE([langinfo.h])
  if test $HAVE_LOCALE_T = 1; then
    AC_CHECK_FUNCS_ONCE([newlocale duplocale freelocale])
    gl_func_newlocale="$ac_cv_func_newlocale"
    gl_func_duplocale="$ac_cv_func_duplocale"
    gl_func_freelocale="$ac_cv_func_freelocale"
  else
    dnl In 2019, some versions of z/OS lack the locale_t type and have broken
    dnl newlocale, duplocale, freelocale functions.
    gl_func_newlocale=no
    gl_func_duplocale=no
    gl_func_freelocale=no
  fi
  if test $gl_func_newlocale != yes; then
    HAVE_NEWLOCALE=0
  fi
  if test $gl_func_duplocale != yes; then
    HAVE_DUPLOCALE=0
  fi
  if test $gl_func_freelocale != yes; then
    HAVE_FREELOCALE=0
  fi
  if test $gt_localename_enhances_locale_funcs = yes; then
    REPLACE_NEWLOCALE=1
    REPLACE_DUPLOCALE=1
    REPLACE_FREELOCALE=1
  fi
])
m4trace:m4/lock.m4:9: -1- AC_DEFUN([gl_LOCK], [
  AC_REQUIRE([gl_THREADLIB])
  if test "$gl_threads_api" = posix; then
    # OSF/1 4.0 and Mac OS X 10.1 lack the pthread_rwlock_t type and the
    # pthread_rwlock_* functions.
    has_rwlock=false
    AC_CHECK_TYPE([pthread_rwlock_t],
      [has_rwlock=true
       AC_DEFINE([HAVE_PTHREAD_RWLOCK], [1],
         [Define if the POSIX multithreading library has read/write locks.])],
      [],
      [#include <pthread.h>])
    if $has_rwlock; then
      gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER
    fi
    # glibc defines PTHREAD_MUTEX_RECURSIVE as enum, not as a macro.
    AC_COMPILE_IFELSE([
      AC_LANG_PROGRAM(
        [[#include <pthread.h>]],
        [[
#if __FreeBSD__ == 4
error "No, in FreeBSD 4.0 recursive mutexes actually don't work."
#elif (defined __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ \
       && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1070)
error "No, in Mac OS X < 10.7 recursive mutexes actually don't work."
#else
int x = (int)PTHREAD_MUTEX_RECURSIVE;
return !x;
#endif
        ]])],
      [AC_DEFINE([HAVE_PTHREAD_MUTEX_RECURSIVE], [1],
         [Define if the <pthread.h> defines PTHREAD_MUTEX_RECURSIVE.])])
  fi
  gl_PREREQ_LOCK
])
m4trace:m4/lock.m4:47: -1- AC_DEFUN([gl_PREREQ_LOCK], [:])
m4trace:m4/longlong.m4:17: -1- AC_DEFUN([AC_TYPE_LONG_LONG_INT], [
  AC_REQUIRE([AC_TYPE_UNSIGNED_LONG_LONG_INT])
  AC_CACHE_CHECK([for long long int], [ac_cv_type_long_long_int],
     [ac_cv_type_long_long_int=yes
      if test "x${ac_cv_prog_cc_c99-no}" = xno; then
        ac_cv_type_long_long_int=$ac_cv_type_unsigned_long_long_int
        if test $ac_cv_type_long_long_int = yes; then
          dnl Catch a bug in Tandem NonStop Kernel (OSS) cc -O circa 2004.
          dnl If cross compiling, assume the bug is not important, since
          dnl nobody cross compiles for this platform as far as we know.
          AC_RUN_IFELSE(
            [AC_LANG_PROGRAM(
               [[@%:@include <limits.h>
                 @%:@ifndef LLONG_MAX
                 @%:@ define HALF \
                          (1LL << (sizeof (long long int) * CHAR_BIT - 2))
                 @%:@ define LLONG_MAX (HALF - 1 + HALF)
                 @%:@endif]],
               [[long long int n = 1;
                 int i;
                 for (i = 0; ; i++)
                   {
                     long long int m = n << i;
                     if (m >> i != n)
                       return 1;
                     if (LLONG_MAX / 2 < m)
                       break;
                   }
                 return 0;]])],
            [],
            [ac_cv_type_long_long_int=no],
            [:])
        fi
      fi])
  if test $ac_cv_type_long_long_int = yes; then
    AC_DEFINE([HAVE_LONG_LONG_INT], [1],
      [Define to 1 if the system has the type 'long long int'.])
  fi
])
m4trace:m4/longlong.m4:67: -1- AC_DEFUN([AC_TYPE_UNSIGNED_LONG_LONG_INT], [
  AC_CACHE_CHECK([for unsigned long long int],
    [ac_cv_type_unsigned_long_long_int],
    [ac_cv_type_unsigned_long_long_int=yes
     if test "x${ac_cv_prog_cc_c99-no}" = xno; then
       AC_LINK_IFELSE(
         [_AC_TYPE_LONG_LONG_SNIPPET],
         [],
         [ac_cv_type_unsigned_long_long_int=no])
     fi])
  if test $ac_cv_type_unsigned_long_long_int = yes; then
    AC_DEFINE([HAVE_UNSIGNED_LONG_LONG_INT], [1],
      [Define to 1 if the system has the type 'unsigned long long int'.])
  fi
])
m4trace:m4/longlong.m4:89: -1- AC_DEFUN([_AC_TYPE_LONG_LONG_SNIPPET], [
  AC_LANG_PROGRAM(
    [[/* For now, do not test the preprocessor; as of 2007 there are too many
         implementations with broken preprocessors.  Perhaps this can
         be revisited in 2012.  In the meantime, code should not expect
         #if to work with literals wider than 32 bits.  */
      /* Test literals.  */
      long long int ll = 9223372036854775807ll;
      long long int nll = -9223372036854775807LL;
      unsigned long long int ull = 18446744073709551615ULL;
      /* Test constant expressions.   */
      typedef int a[((-9223372036854775807LL < 0 && 0 < 9223372036854775807ll)
                     ? 1 : -1)];
      typedef int b[(18446744073709551615ULL <= (unsigned long long int) -1
                     ? 1 : -1)];
      int i = 63;]],
    [[/* Test availability of runtime routines for shift and division.  */
      long long int llmax = 9223372036854775807ll;
      unsigned long long int ullmax = 18446744073709551615ull;
      return ((ll << 63) | (ll >> 63) | (ll < i) | (ll > i)
              | (llmax / ll) | (llmax % ll)
              | (ull << 63) | (ull >> 63) | (ull << i) | (ull >> i)
              | (ullmax / ull) | (ullmax % ull));]])
])
m4trace:m4/lseek.m4:7: -1- AC_DEFUN([gl_FUNC_LSEEK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AC_PROG_CC])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CACHE_CHECK([whether lseek detects pipes], [gl_cv_func_lseek_pipe],
    [case "$host_os" in
       mingw*)
         dnl Native Windows.
         dnl The result of lseek (fd, (off_t)0, SEEK_CUR) or
         dnl SetFilePointer(handle, 0, NULL, FILE_CURRENT)
         dnl for a pipe depends on the environment: In a Cygwin 1.5
         dnl environment it succeeds (wrong); in a Cygwin 1.7 environment
         dnl it fails with a wrong errno value.
         gl_cv_func_lseek_pipe=no
         ;;
       *)
         if test $cross_compiling = no; then
           AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h> /* for off_t */
#include <stdio.h> /* for SEEK_CUR */
#if HAVE_UNISTD_H
# include <unistd.h>
#else /* on Windows with MSVC */
# include <io.h>
#endif
]GL_MDA_DEFINES],
[[
  /* Exit with success only if stdin is seekable.  */
  return lseek (0, (off_t)0, SEEK_CUR) < 0;
]])],
             [if test -s conftest$ac_exeext \
                 && ./conftest$ac_exeext < conftest.$ac_ext \
                 && test 1 = "`echo hi \
                   | { ./conftest$ac_exeext; echo $?; cat >/dev/null; }`"; then
                gl_cv_func_lseek_pipe=yes
              else
                gl_cv_func_lseek_pipe=no
              fi
             ],
             [gl_cv_func_lseek_pipe=no])
         else
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE([[
#if defined __BEOS__
/* BeOS mistakenly return 0 when trying to seek on pipes.  */
  Choke me.
#endif]])],
             [gl_cv_func_lseek_pipe=yes], [gl_cv_func_lseek_pipe=no])
         fi
         ;;
     esac
    ])
  if test "$gl_cv_func_lseek_pipe" = no; then
    REPLACE_LSEEK=1
    AC_DEFINE([LSEEK_PIPE_BROKEN], [1],
      [Define to 1 if lseek does not detect pipes.])
  fi

  AC_REQUIRE([gl_SYS_TYPES_H])
  if test $WINDOWS_64_BIT_OFF_T = 1; then
    REPLACE_LSEEK=1
  fi

  dnl macOS SEEK_DATA is incompatible with other platforms.
  case $host_os in
    darwin*)
      REPLACE_LSEEK=1;;
  esac
])
m4trace:m4/lstat.m4:11: -1- AC_DEFUN([gl_FUNC_LSTAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  dnl If lstat does not exist, the replacement <sys/stat.h> does
  dnl "#define lstat stat", and lstat.c is a no-op.
  AC_CHECK_FUNCS_ONCE([lstat])
  if test $ac_cv_func_lstat = yes; then
    AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
    case $host_os,$gl_cv_func_lstat_dereferences_slashed_symlink in
      solaris* | *no)
        REPLACE_LSTAT=1
        ;;
    esac
  else
    HAVE_LSTAT=0
  fi
])
m4trace:m4/lstat.m4:31: -1- AC_DEFUN([gl_PREREQ_LSTAT], [:])
m4trace:m4/lstat.m4:33: -1- AC_DEFUN([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK], [
  dnl We don't use AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK any more, because it
  dnl is no longer maintained in Autoconf and because it invokes AC_LIBOBJ.
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether lstat correctly handles trailing slash],
    [gl_cv_func_lstat_dereferences_slashed_symlink],
    [rm -f conftest.sym conftest.file
     echo >conftest.file
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [AC_INCLUDES_DEFAULT],
          [[struct stat sbuf;
            if (symlink ("conftest.file", "conftest.sym") != 0)
              return 1;
            /* Linux will dereference the symlink and fail, as required by
               POSIX.  That is better in the sense that it means we will not
               have to compile and use the lstat wrapper.  */
            return lstat ("conftest.sym/", &sbuf) == 0;
          ]])],
       [gl_cv_func_lstat_dereferences_slashed_symlink=yes],
       [gl_cv_func_lstat_dereferences_slashed_symlink=no],
       [case "$host_os" in
          linux-* | linux)
            # Guess yes on Linux systems.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          *-gnu* | gnu*)
            # Guess yes on glibc systems.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          mingw*)
            # Guess no on native Windows.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing no" ;;
          *)
            # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_lstat_dereferences_slashed_symlink="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -f conftest.sym conftest.file
    ])
  case "$gl_cv_func_lstat_dereferences_slashed_symlink" in
    *yes)
      AC_DEFINE_UNQUOTED([LSTAT_FOLLOWS_SLASHED_SYMLINK], [1],
        [Define to 1 if 'lstat' dereferences a symlink specified
         with a trailing slash.])
      ;;
  esac
])
m4trace:m4/malloc.m4:9: -1- AC_DEFUN([_AC_FUNC_MALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CACHE_CHECK([whether malloc (0) returns nonnull],
    [ac_cv_func_malloc_0_nonnull],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[void *p = malloc (0);
            int result = !p;
            free (p);
            return result;]])
       ],
       [ac_cv_func_malloc_0_nonnull=yes],
       [ac_cv_func_malloc_0_nonnull=no],
       [case "$host_os" in
          # Guess yes on platforms where we know the result.
          *-gnu* | freebsd* | netbsd* | openbsd* | bitrig* \
          | gnu* | *-musl* | midnightbsd* \
          | hpux* | solaris* | cygwin* | mingw* | msys* )
            ac_cv_func_malloc_0_nonnull="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *) ac_cv_func_malloc_0_nonnull="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  AS_CASE([$ac_cv_func_malloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/malloc.m4:42: -1- AC_DEFUN([gl_FUNC_MALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  REPLACE_MALLOC_FOR_MALLOC_GNU="$REPLACE_MALLOC_FOR_MALLOC_POSIX"
  if test $REPLACE_MALLOC_FOR_MALLOC_GNU = 0; then
    _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC_FOR_MALLOC_GNU=1])
  fi
])
m4trace:m4/malloc.m4:56: -1- AC_DEFUN([gl_FUNC_MALLOC_PTRDIFF], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_PTRDIFF])
  test "$gl_cv_malloc_ptrdiff" = yes || REPLACE_MALLOC_FOR_MALLOC_POSIX=1
])
m4trace:m4/malloc.m4:66: -1- AC_DEFUN([gl_CHECK_MALLOC_PTRDIFF], [
  AC_CACHE_CHECK([whether malloc is ptrdiff_t safe],
    [gl_cv_malloc_ptrdiff],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdint.h>
          ]],
          [[/* 64-bit ptrdiff_t is so wide that no practical platform
               can exceed it.  */
            #define WIDE_PTRDIFF (PTRDIFF_MAX >> 31 >> 31 != 0)

            /* On rare machines where size_t fits in ptrdiff_t there
               is no problem.  */
            #define NARROW_SIZE (SIZE_MAX <= PTRDIFF_MAX)

            /* glibc 2.30 and later malloc refuses to exceed ptrdiff_t
               bounds even on 32-bit platforms.  We don't know which
               non-glibc systems are safe.  */
            #define KNOWN_SAFE (2 < __GLIBC__ + (30 <= __GLIBC_MINOR__))

            #if WIDE_PTRDIFF || NARROW_SIZE || KNOWN_SAFE
              return 0;
            #else
              #error "malloc might not be ptrdiff_t safe"
              syntax error
            #endif
          ]])],
       [gl_cv_malloc_ptrdiff=yes],
       [gl_cv_malloc_ptrdiff=no])
    ])
])
m4trace:m4/malloc.m4:104: -1- AC_DEFUN([gl_FUNC_MALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_PTRDIFF])
  AC_REQUIRE([gl_CHECK_MALLOC_POSIX])
  if test "$gl_cv_func_malloc_posix" = yes; then
    AC_DEFINE([HAVE_MALLOC_POSIX], [1],
      [Define if malloc, realloc, and calloc set errno on allocation failure.])
  else
    REPLACE_MALLOC_FOR_MALLOC_POSIX=1
  fi
])
m4trace:m4/malloc.m4:119: -1- AC_DEFUN([gl_CHECK_MALLOC_POSIX], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether malloc, realloc, calloc set errno on failure],
    [gl_cv_func_malloc_posix],
    [
      dnl It is too dangerous to try to allocate a large amount of memory:
      dnl some systems go to their knees when you do that. So assume that
      dnl all Unix implementations of the function set errno on failure,
      dnl except on those platforms where we have seen 'test-malloc-gnu',
      dnl 'test-realloc-gnu', 'test-calloc-gnu' fail.
      case "$host_os" in
        mingw*)
          gl_cv_func_malloc_posix=no ;;
        irix* | solaris*)
          dnl On IRIX 6.5, the three functions return NULL with errno unset
          dnl when the argument is larger than PTRDIFF_MAX.
          dnl On Solaris 11.3, the three functions return NULL with errno set
          dnl to EAGAIN, not ENOMEM, when the argument is larger than
          dnl PTRDIFF_MAX.
          dnl Here is a test program:
m4_divert_push([KILL])
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#define ptrdiff_t long
#ifndef PTRDIFF_MAX
# define PTRDIFF_MAX ((ptrdiff_t) ((1UL << (8 * sizeof (ptrdiff_t) - 1)) - 1))
#endif

int main ()
{
  void *p;

  fprintf (stderr, "PTRDIFF_MAX = %lu\n", (unsigned long) PTRDIFF_MAX);

  errno = 0;
  p = malloc ((unsigned long) PTRDIFF_MAX + 1);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  errno = 0;
  p = calloc (PTRDIFF_MAX / 2 + 1, 2);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  errno = 0;
  p = realloc (NULL, (unsigned long) PTRDIFF_MAX + 1);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  return 0;
}
m4_divert_pop([KILL])
          gl_cv_func_malloc_posix=no ;;
        *)
          gl_cv_func_malloc_posix=yes ;;
      esac
    ])
])
m4trace:m4/malloca.m4:8: -1- AC_DEFUN([gl_MALLOCA], [
  dnl Use the autoconf tests for alloca(), but not the AC_SUBSTed variables
  dnl @ALLOCA@ and @LTALLOCA@.
  dnl gl_FUNC_ALLOCA   dnl Already brought in by the module dependencies.
  AC_REQUIRE([gl_EEMALLOC])
])
m4trace:m4/manywarnings.m4:14: -1- AC_DEFUN([gl_MANYWARN_COMPLEMENT], [
  gl_warn_set=
  set x $2; shift
  for gl_warn_item
  do
    case " $3 " in
      *" $gl_warn_item "*)
        ;;
      *)
        gl_AS_VAR_APPEND([gl_warn_set], [" $gl_warn_item"])
        ;;
    esac
  done
  $1=$gl_warn_set
])
m4trace:m4/manywarnings.m4:38: -1- AC_DEFUN([gl_MANYWARN_ALL_GCC], [_AC_LANG_DISPATCH([$0], _AC_LANG, $@)])
m4trace:m4/manywarnings.m4:42: -1- AC_DEFUN([gl_MANYWARN_ALL_GCC(C)], [
  AC_LANG_PUSH([C])

  dnl First, check for some issues that only occur when combining multiple
  dnl gcc warning categories.
  AC_REQUIRE([AC_PROG_CC])
  if test -n "$GCC"; then

    dnl Check if -Wextra -Werror -Wno-missing-field-initializers is supported
    dnl with the current $CC $CFLAGS $CPPFLAGS.
    AC_CACHE_CHECK([whether -Wno-missing-field-initializers is supported],
      [gl_cv_cc_nomfi_supported],
      [gl_save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS -Wextra -Werror -Wno-missing-field-initializers"
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[]], [[]])],
         [gl_cv_cc_nomfi_supported=yes],
         [gl_cv_cc_nomfi_supported=no])
       CFLAGS="$gl_save_CFLAGS"
      ])

    if test "$gl_cv_cc_nomfi_supported" = yes; then
      dnl Now check whether -Wno-missing-field-initializers is needed
      dnl for the { 0, } construct.
      AC_CACHE_CHECK([whether -Wno-missing-field-initializers is needed],
        [gl_cv_cc_nomfi_needed],
        [gl_save_CFLAGS="$CFLAGS"
         CFLAGS="$CFLAGS -Wextra -Werror"
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[int f (void)
                {
                  typedef struct { int a; int b; } s_t;
                  s_t s1 = { 0, };
                  return s1.b;
                }
              ]],
              [[]])],
           [gl_cv_cc_nomfi_needed=no],
           [gl_cv_cc_nomfi_needed=yes])
         CFLAGS="$gl_save_CFLAGS"
        ])
    fi

    dnl Next, check if -Werror -Wuninitialized is useful with the
    dnl user's choice of $CFLAGS; some versions of gcc warn that it
    dnl has no effect if -O is not also used
    AC_CACHE_CHECK([whether -Wuninitialized is supported],
      [gl_cv_cc_uninitialized_supported],
      [gl_save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS -Werror -Wuninitialized"
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[]], [[]])],
         [gl_cv_cc_uninitialized_supported=yes],
         [gl_cv_cc_uninitialized_supported=no])
       CFLAGS="$gl_save_CFLAGS"
      ])

  fi

  # List all gcc warning categories.
  # To compare this list to your installed GCC's, run this Bash command:
  #
  # comm -3 \
  #  <((sed -n 's/^  *\(-[^ 0-9][^ ]*\).*/\1/p' manywarnings.m4; \
  #     awk '/^[^#]/ {print $1}' ../build-aux/gcc-warning.spec) | sort) \
  #  <(LC_ALL=C gcc --help=warnings | sed -n 's/^  \(-[^ ]*\) .*/\1/p' | sort)

  $1=
  for gl_manywarn_item in -fanalyzer -fno-common \
    -Wall \
    -Warith-conversion \
    -Wbad-function-cast \
    -Wcast-align=strict \
    -Wdate-time \
    -Wdisabled-optimization \
    -Wdouble-promotion \
    -Wduplicated-branches \
    -Wduplicated-cond \
    -Wextra \
    -Wformat-signedness \
    -Winit-self \
    -Winline \
    -Winvalid-pch \
    -Wlogical-op \
    -Wmissing-declarations \
    -Wmissing-include-dirs \
    -Wmissing-prototypes \
    -Wnested-externs \
    -Wnull-dereference \
    -Wold-style-definition \
    -Wopenmp-simd \
    -Woverlength-strings \
    -Wpacked \
    -Wpointer-arith \
    -Wshadow \
    -Wstack-protector \
    -Wstrict-overflow \
    -Wstrict-prototypes \
    -Wsuggest-attribute=cold \
    -Wsuggest-attribute=const \
    -Wsuggest-attribute=format \
    -Wsuggest-attribute=malloc \
    -Wsuggest-attribute=noreturn \
    -Wsuggest-attribute=pure \
    -Wsuggest-final-methods \
    -Wsuggest-final-types \
    -Wsync-nand \
    -Wsystem-headers \
    -Wtrampolines \
    -Wuninitialized \
    -Wunknown-pragmas \
    -Wunsafe-loop-optimizations \
    -Wunused-macros \
    -Wvariadic-macros \
    -Wvector-operation-performance \
    -Wvla \
    -Wwrite-strings \
    \
    ; do
    gl_AS_VAR_APPEND([$1], [" $gl_manywarn_item"])
  done

  # gcc --help=warnings outputs an unusual form for these options; list
  # them here so that the above 'comm' command doesn't report a false match.
  gl_AS_VAR_APPEND([$1], [' -Warray-bounds=2'])
  gl_AS_VAR_APPEND([$1], [' -Wattribute-alias=2'])
  gl_AS_VAR_APPEND([$1], [' -Wformat-overflow=2'])
  gl_AS_VAR_APPEND([$1], [' -Wformat=2'])
  gl_AS_VAR_APPEND([$1], [' -Wformat-truncation=2'])
  gl_AS_VAR_APPEND([$1], [' -Wimplicit-fallthrough=5'])
  gl_AS_VAR_APPEND([$1], [' -Wshift-overflow=2'])
  gl_AS_VAR_APPEND([$1], [' -Wunused-const-variable=2'])
  gl_AS_VAR_APPEND([$1], [' -Wvla-larger-than=4031'])

  # These are needed for older GCC versions.
  if test -n "$GCC"; then
    case `($CC --version) 2>/dev/null` in
      'gcc (GCC) '[[0-3]].* | \
      'gcc (GCC) '4.[[0-7]].*)
        gl_AS_VAR_APPEND([$1], [' -fdiagnostics-show-option'])
        gl_AS_VAR_APPEND([$1], [' -funit-at-a-time'])
          ;;
    esac
  fi

  # Disable specific options as needed.
  if test "$gl_cv_cc_nomfi_needed" = yes; then
    gl_AS_VAR_APPEND([$1], [' -Wno-missing-field-initializers'])
  fi

  if test "$gl_cv_cc_uninitialized_supported" = no; then
    gl_AS_VAR_APPEND([$1], [' -Wno-uninitialized'])
  fi

  # This warning have too many false alarms in GCC 11.2.1.
  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101713
  gl_AS_VAR_APPEND([$1], [' -Wno-analyzer-malloc-leak'])

  AC_LANG_POP([C])
])
m4trace:m4/manywarnings.m4:206: -1- AC_DEFUN([gl_MANYWARN_ALL_GCC(C++)], [
  gl_MANYWARN_ALL_GCC_CXX_IMPL([$1])
])
m4trace:m4/math_h.m4:7: -1- AC_DEFUN_ONCE([gl_MATH_H], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([math.h])

  AC_CACHE_CHECK([whether NAN macro works], [gl_cv_header_math_nan_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]],
      [[/* Solaris 10 has a broken definition of NAN.  Other platforms
        fail to provide NAN, or provide it only in C99 mode; this
        test only needs to fail when NAN is provided but wrong.  */
         float f = 1.0f;
#ifdef NAN
         f = NAN;
#endif
         return f == 0;]])],
      [gl_cv_header_math_nan_works=yes],
      [gl_cv_header_math_nan_works=no])])
  if test $gl_cv_header_math_nan_works = no; then
    REPLACE_NAN=1
  fi
  AC_CACHE_CHECK([whether HUGE_VAL works], [gl_cv_header_math_huge_val_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]],
      [[/* Solaris 10 has a broken definition of HUGE_VAL.  */
         double d = HUGE_VAL;
         return d == 0;]])],
      [gl_cv_header_math_huge_val_works=yes],
      [gl_cv_header_math_huge_val_works=no])])
  if test $gl_cv_header_math_huge_val_works = no; then
    REPLACE_HUGE_VAL=1
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <math.h>]],
    [acosf acosl asinf asinl atanf atanl
     cbrt cbrtf cbrtl ceilf ceill copysign copysignf copysignl cosf cosl coshf
     expf expl exp2 exp2f exp2l expm1 expm1f expm1l
     fabsf fabsl floorf floorl fma fmaf fmal
     fmod fmodf fmodl frexpf frexpl hypotf hypotl
     ilogb ilogbf ilogbl
     ldexpf ldexpl
     log logf logl log10 log10f log10l log1p log1pf log1pl log2 log2f log2l
     logb logbf logbl
     modf modff modfl powf
     remainder remainderf remainderl
     rint rintf rintl round roundf roundl sinf sinl sinhf sqrtf sqrtl
     tanf tanl tanhf trunc truncf truncl])
])
m4trace:m4/math_h.m4:60: -1- AC_DEFUN([gl_MATH_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_MATH_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/math_h.m4:72: -1- AC_DEFUN([gl_MATH_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_MATH_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATAN2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEIL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOOR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMA])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISFINITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1P])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POWF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDER])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNBIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCL])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J0], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J1], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_JN], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y0], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y1], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_YN], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_MATH_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
])
m4trace:m4/math_h.m4:182: -1- AC_DEFUN([gl_MATH_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_ACOSF=1;                     AC_SUBST([HAVE_ACOSF])
  HAVE_ACOSL=1;                     AC_SUBST([HAVE_ACOSL])
  HAVE_ASINF=1;                     AC_SUBST([HAVE_ASINF])
  HAVE_ASINL=1;                     AC_SUBST([HAVE_ASINL])
  HAVE_ATANF=1;                     AC_SUBST([HAVE_ATANF])
  HAVE_ATANL=1;                     AC_SUBST([HAVE_ATANL])
  HAVE_ATAN2F=1;                    AC_SUBST([HAVE_ATAN2F])
  HAVE_CBRT=1;                      AC_SUBST([HAVE_CBRT])
  HAVE_CBRTF=1;                     AC_SUBST([HAVE_CBRTF])
  HAVE_CBRTL=1;                     AC_SUBST([HAVE_CBRTL])
  HAVE_COPYSIGN=1;                  AC_SUBST([HAVE_COPYSIGN])
  HAVE_COPYSIGNL=1;                 AC_SUBST([HAVE_COPYSIGNL])
  HAVE_COSF=1;                      AC_SUBST([HAVE_COSF])
  HAVE_COSL=1;                      AC_SUBST([HAVE_COSL])
  HAVE_COSHF=1;                     AC_SUBST([HAVE_COSHF])
  HAVE_EXPF=1;                      AC_SUBST([HAVE_EXPF])
  HAVE_EXPL=1;                      AC_SUBST([HAVE_EXPL])
  HAVE_EXPM1=1;                     AC_SUBST([HAVE_EXPM1])
  HAVE_EXPM1F=1;                    AC_SUBST([HAVE_EXPM1F])
  HAVE_FABSF=1;                     AC_SUBST([HAVE_FABSF])
  HAVE_FABSL=1;                     AC_SUBST([HAVE_FABSL])
  HAVE_FMA=1;                       AC_SUBST([HAVE_FMA])
  HAVE_FMAF=1;                      AC_SUBST([HAVE_FMAF])
  HAVE_FMAL=1;                      AC_SUBST([HAVE_FMAL])
  HAVE_FMODF=1;                     AC_SUBST([HAVE_FMODF])
  HAVE_FMODL=1;                     AC_SUBST([HAVE_FMODL])
  HAVE_FREXPF=1;                    AC_SUBST([HAVE_FREXPF])
  HAVE_HYPOTF=1;                    AC_SUBST([HAVE_HYPOTF])
  HAVE_HYPOTL=1;                    AC_SUBST([HAVE_HYPOTL])
  HAVE_ILOGB=1;                     AC_SUBST([HAVE_ILOGB])
  HAVE_ILOGBF=1;                    AC_SUBST([HAVE_ILOGBF])
  HAVE_ILOGBL=1;                    AC_SUBST([HAVE_ILOGBL])
  HAVE_ISNANF=1;                    AC_SUBST([HAVE_ISNANF])
  HAVE_ISNAND=1;                    AC_SUBST([HAVE_ISNAND])
  HAVE_ISNANL=1;                    AC_SUBST([HAVE_ISNANL])
  HAVE_LDEXPF=1;                    AC_SUBST([HAVE_LDEXPF])
  HAVE_LOGF=1;                      AC_SUBST([HAVE_LOGF])
  HAVE_LOGL=1;                      AC_SUBST([HAVE_LOGL])
  HAVE_LOG10F=1;                    AC_SUBST([HAVE_LOG10F])
  HAVE_LOG10L=1;                    AC_SUBST([HAVE_LOG10L])
  HAVE_LOG1P=1;                     AC_SUBST([HAVE_LOG1P])
  HAVE_LOG1PF=1;                    AC_SUBST([HAVE_LOG1PF])
  HAVE_LOG1PL=1;                    AC_SUBST([HAVE_LOG1PL])
  HAVE_LOGBF=1;                     AC_SUBST([HAVE_LOGBF])
  HAVE_LOGBL=1;                     AC_SUBST([HAVE_LOGBL])
  HAVE_MODFF=1;                     AC_SUBST([HAVE_MODFF])
  HAVE_MODFL=1;                     AC_SUBST([HAVE_MODFL])
  HAVE_POWF=1;                      AC_SUBST([HAVE_POWF])
  HAVE_REMAINDER=1;                 AC_SUBST([HAVE_REMAINDER])
  HAVE_REMAINDERF=1;                AC_SUBST([HAVE_REMAINDERF])
  HAVE_RINT=1;                      AC_SUBST([HAVE_RINT])
  HAVE_RINTL=1;                     AC_SUBST([HAVE_RINTL])
  HAVE_SINF=1;                      AC_SUBST([HAVE_SINF])
  HAVE_SINL=1;                      AC_SUBST([HAVE_SINL])
  HAVE_SINHF=1;                     AC_SUBST([HAVE_SINHF])
  HAVE_SQRTF=1;                     AC_SUBST([HAVE_SQRTF])
  HAVE_SQRTL=1;                     AC_SUBST([HAVE_SQRTL])
  HAVE_TANF=1;                      AC_SUBST([HAVE_TANF])
  HAVE_TANL=1;                      AC_SUBST([HAVE_TANL])
  HAVE_TANHF=1;                     AC_SUBST([HAVE_TANHF])
  HAVE_DECL_ACOSL=1;                AC_SUBST([HAVE_DECL_ACOSL])
  HAVE_DECL_ASINL=1;                AC_SUBST([HAVE_DECL_ASINL])
  HAVE_DECL_ATANL=1;                AC_SUBST([HAVE_DECL_ATANL])
  HAVE_DECL_CBRTF=1;                AC_SUBST([HAVE_DECL_CBRTF])
  HAVE_DECL_CBRTL=1;                AC_SUBST([HAVE_DECL_CBRTL])
  HAVE_DECL_CEILF=1;                AC_SUBST([HAVE_DECL_CEILF])
  HAVE_DECL_CEILL=1;                AC_SUBST([HAVE_DECL_CEILL])
  HAVE_DECL_COPYSIGNF=1;            AC_SUBST([HAVE_DECL_COPYSIGNF])
  HAVE_DECL_COSL=1;                 AC_SUBST([HAVE_DECL_COSL])
  HAVE_DECL_EXPL=1;                 AC_SUBST([HAVE_DECL_EXPL])
  HAVE_DECL_EXP2=1;                 AC_SUBST([HAVE_DECL_EXP2])
  HAVE_DECL_EXP2F=1;                AC_SUBST([HAVE_DECL_EXP2F])
  HAVE_DECL_EXP2L=1;                AC_SUBST([HAVE_DECL_EXP2L])
  HAVE_DECL_EXPM1L=1;               AC_SUBST([HAVE_DECL_EXPM1L])
  HAVE_DECL_FLOORF=1;               AC_SUBST([HAVE_DECL_FLOORF])
  HAVE_DECL_FLOORL=1;               AC_SUBST([HAVE_DECL_FLOORL])
  HAVE_DECL_FREXPL=1;               AC_SUBST([HAVE_DECL_FREXPL])
  HAVE_DECL_LDEXPL=1;               AC_SUBST([HAVE_DECL_LDEXPL])
  HAVE_DECL_LOGL=1;                 AC_SUBST([HAVE_DECL_LOGL])
  HAVE_DECL_LOG10L=1;               AC_SUBST([HAVE_DECL_LOG10L])
  HAVE_DECL_LOG2=1;                 AC_SUBST([HAVE_DECL_LOG2])
  HAVE_DECL_LOG2F=1;                AC_SUBST([HAVE_DECL_LOG2F])
  HAVE_DECL_LOG2L=1;                AC_SUBST([HAVE_DECL_LOG2L])
  HAVE_DECL_LOGB=1;                 AC_SUBST([HAVE_DECL_LOGB])
  HAVE_DECL_REMAINDER=1;            AC_SUBST([HAVE_DECL_REMAINDER])
  HAVE_DECL_REMAINDERL=1;           AC_SUBST([HAVE_DECL_REMAINDERL])
  HAVE_DECL_RINTF=1;                AC_SUBST([HAVE_DECL_RINTF])
  HAVE_DECL_ROUND=1;                AC_SUBST([HAVE_DECL_ROUND])
  HAVE_DECL_ROUNDF=1;               AC_SUBST([HAVE_DECL_ROUNDF])
  HAVE_DECL_ROUNDL=1;               AC_SUBST([HAVE_DECL_ROUNDL])
  HAVE_DECL_SINL=1;                 AC_SUBST([HAVE_DECL_SINL])
  HAVE_DECL_SQRTL=1;                AC_SUBST([HAVE_DECL_SQRTL])
  HAVE_DECL_TANL=1;                 AC_SUBST([HAVE_DECL_TANL])
  HAVE_DECL_TRUNC=1;                AC_SUBST([HAVE_DECL_TRUNC])
  HAVE_DECL_TRUNCF=1;               AC_SUBST([HAVE_DECL_TRUNCF])
  HAVE_DECL_TRUNCL=1;               AC_SUBST([HAVE_DECL_TRUNCL])
  REPLACE_ACOSF=0;                  AC_SUBST([REPLACE_ACOSF])
  REPLACE_ASINF=0;                  AC_SUBST([REPLACE_ASINF])
  REPLACE_ATANF=0;                  AC_SUBST([REPLACE_ATANF])
  REPLACE_ATAN2F=0;                 AC_SUBST([REPLACE_ATAN2F])
  REPLACE_CBRTF=0;                  AC_SUBST([REPLACE_CBRTF])
  REPLACE_CBRTL=0;                  AC_SUBST([REPLACE_CBRTL])
  REPLACE_CEIL=0;                   AC_SUBST([REPLACE_CEIL])
  REPLACE_CEILF=0;                  AC_SUBST([REPLACE_CEILF])
  REPLACE_CEILL=0;                  AC_SUBST([REPLACE_CEILL])
  REPLACE_COSF=0;                   AC_SUBST([REPLACE_COSF])
  REPLACE_COSHF=0;                  AC_SUBST([REPLACE_COSHF])
  REPLACE_EXPF=0;                   AC_SUBST([REPLACE_EXPF])
  REPLACE_EXPL=0;                   AC_SUBST([REPLACE_EXPL])
  REPLACE_EXPM1=0;                  AC_SUBST([REPLACE_EXPM1])
  REPLACE_EXPM1F=0;                 AC_SUBST([REPLACE_EXPM1F])
  REPLACE_EXPM1L=0;                 AC_SUBST([REPLACE_EXPM1L])
  REPLACE_EXP2=0;                   AC_SUBST([REPLACE_EXP2])
  REPLACE_EXP2L=0;                  AC_SUBST([REPLACE_EXP2L])
  REPLACE_FABSL=0;                  AC_SUBST([REPLACE_FABSL])
  REPLACE_FLOOR=0;                  AC_SUBST([REPLACE_FLOOR])
  REPLACE_FLOORF=0;                 AC_SUBST([REPLACE_FLOORF])
  REPLACE_FLOORL=0;                 AC_SUBST([REPLACE_FLOORL])
  REPLACE_FMA=0;                    AC_SUBST([REPLACE_FMA])
  REPLACE_FMAF=0;                   AC_SUBST([REPLACE_FMAF])
  REPLACE_FMAL=0;                   AC_SUBST([REPLACE_FMAL])
  REPLACE_FMOD=0;                   AC_SUBST([REPLACE_FMOD])
  REPLACE_FMODF=0;                  AC_SUBST([REPLACE_FMODF])
  REPLACE_FMODL=0;                  AC_SUBST([REPLACE_FMODL])
  REPLACE_FREXPF=0;                 AC_SUBST([REPLACE_FREXPF])
  REPLACE_FREXP=0;                  AC_SUBST([REPLACE_FREXP])
  REPLACE_FREXPL=0;                 AC_SUBST([REPLACE_FREXPL])
  REPLACE_HUGE_VAL=0;               AC_SUBST([REPLACE_HUGE_VAL])
  REPLACE_HYPOT=0;                  AC_SUBST([REPLACE_HYPOT])
  REPLACE_HYPOTF=0;                 AC_SUBST([REPLACE_HYPOTF])
  REPLACE_HYPOTL=0;                 AC_SUBST([REPLACE_HYPOTL])
  REPLACE_ILOGB=0;                  AC_SUBST([REPLACE_ILOGB])
  REPLACE_ILOGBF=0;                 AC_SUBST([REPLACE_ILOGBF])
  REPLACE_ILOGBL=0;                 AC_SUBST([REPLACE_ILOGBL])
  REPLACE_ISFINITE=0;               AC_SUBST([REPLACE_ISFINITE])
  REPLACE_ISINF=0;                  AC_SUBST([REPLACE_ISINF])
  REPLACE_ISNAN=0;                  AC_SUBST([REPLACE_ISNAN])
  REPLACE_LDEXPL=0;                 AC_SUBST([REPLACE_LDEXPL])
  REPLACE_LOG=0;                    AC_SUBST([REPLACE_LOG])
  REPLACE_LOGF=0;                   AC_SUBST([REPLACE_LOGF])
  REPLACE_LOGL=0;                   AC_SUBST([REPLACE_LOGL])
  REPLACE_LOG10=0;                  AC_SUBST([REPLACE_LOG10])
  REPLACE_LOG10F=0;                 AC_SUBST([REPLACE_LOG10F])
  REPLACE_LOG10L=0;                 AC_SUBST([REPLACE_LOG10L])
  REPLACE_LOG1P=0;                  AC_SUBST([REPLACE_LOG1P])
  REPLACE_LOG1PF=0;                 AC_SUBST([REPLACE_LOG1PF])
  REPLACE_LOG1PL=0;                 AC_SUBST([REPLACE_LOG1PL])
  REPLACE_LOG2=0;                   AC_SUBST([REPLACE_LOG2])
  REPLACE_LOG2F=0;                  AC_SUBST([REPLACE_LOG2F])
  REPLACE_LOG2L=0;                  AC_SUBST([REPLACE_LOG2L])
  REPLACE_LOGB=0;                   AC_SUBST([REPLACE_LOGB])
  REPLACE_LOGBF=0;                  AC_SUBST([REPLACE_LOGBF])
  REPLACE_LOGBL=0;                  AC_SUBST([REPLACE_LOGBL])
  REPLACE_MODF=0;                   AC_SUBST([REPLACE_MODF])
  REPLACE_MODFF=0;                  AC_SUBST([REPLACE_MODFF])
  REPLACE_MODFL=0;                  AC_SUBST([REPLACE_MODFL])
  REPLACE_NAN=0;                    AC_SUBST([REPLACE_NAN])
  REPLACE_REMAINDER=0;              AC_SUBST([REPLACE_REMAINDER])
  REPLACE_REMAINDERF=0;             AC_SUBST([REPLACE_REMAINDERF])
  REPLACE_REMAINDERL=0;             AC_SUBST([REPLACE_REMAINDERL])
  REPLACE_RINTL=0;                  AC_SUBST([REPLACE_RINTL])
  REPLACE_ROUND=0;                  AC_SUBST([REPLACE_ROUND])
  REPLACE_ROUNDF=0;                 AC_SUBST([REPLACE_ROUNDF])
  REPLACE_ROUNDL=0;                 AC_SUBST([REPLACE_ROUNDL])
  REPLACE_SIGNBIT=0;                AC_SUBST([REPLACE_SIGNBIT])
  REPLACE_SIGNBIT_USING_BUILTINS=0; AC_SUBST([REPLACE_SIGNBIT_USING_BUILTINS])
  REPLACE_SINF=0;                   AC_SUBST([REPLACE_SINF])
  REPLACE_SINHF=0;                  AC_SUBST([REPLACE_SINHF])
  REPLACE_SQRTF=0;                  AC_SUBST([REPLACE_SQRTF])
  REPLACE_SQRTL=0;                  AC_SUBST([REPLACE_SQRTL])
  REPLACE_TANF=0;                   AC_SUBST([REPLACE_TANF])
  REPLACE_TANHF=0;                  AC_SUBST([REPLACE_TANHF])
  REPLACE_TRUNC=0;                  AC_SUBST([REPLACE_TRUNC])
  REPLACE_TRUNCF=0;                 AC_SUBST([REPLACE_TRUNCF])
  REPLACE_TRUNCL=0;                 AC_SUBST([REPLACE_TRUNCL])
])
m4trace:m4/math_h.m4:368: -1- AC_DEFUN([gl_LONG_DOUBLE_VS_DOUBLE], [
  AC_CACHE_CHECK([whether long double and double are the same],
    [gl_cv_long_double_equals_double],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <float.h>]],
          [[typedef int check[sizeof (long double) == sizeof (double)
                              && LDBL_MANT_DIG == DBL_MANT_DIG
                              && LDBL_MAX_EXP == DBL_MAX_EXP
                              && LDBL_MIN_EXP == DBL_MIN_EXP
                              ? 1 : -1];
          ]])],
       [gl_cv_long_double_equals_double=yes],
       [gl_cv_long_double_equals_double=no])
    ])
  if test $gl_cv_long_double_equals_double = yes; then
    AC_DEFINE([HAVE_SAME_LONG_DOUBLE_AS_DOUBLE], [1],
      [Define to 1 if 'long double' and 'double' have the same representation.])
    HAVE_SAME_LONG_DOUBLE_AS_DOUBLE=1
  else
    HAVE_SAME_LONG_DOUBLE_AS_DOUBLE=0
  fi
  AC_SUBST([HAVE_SAME_LONG_DOUBLE_AS_DOUBLE])
])
m4trace:m4/mbchar.m4:10: -1- AC_DEFUN([gl_MBCHAR], [
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
])
m4trace:m4/mbiter.m4:10: -1- AC_DEFUN([gl_MBITER], [
  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  :
])
m4trace:m4/mbrlen.m4:7: -1- AC_DEFUN([gl_FUNC_MBRLEN], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  AC_REQUIRE([gl_FUNC_MBRTOWC])
  AC_CHECK_FUNCS_ONCE([mbrlen])
  if test $ac_cv_func_mbrlen = no; then
    HAVE_MBRLEN=0
    AC_CHECK_DECLS([mbrlen],,, [[
      #include <wchar.h>
    ]])
    if test $ac_cv_have_decl_mbrlen = yes; then
      dnl On Minix 3.1.8, the system's <wchar.h> declares mbrlen() although
      dnl it does not have the function. Avoid a collision with gnulib's
      dnl replacement.
      REPLACE_MBRLEN=1
    fi
  else
    dnl Most bugs affecting the system's mbrtowc function also affect the
    dnl mbrlen function. So override mbrlen whenever mbrtowc is overridden.
    dnl We could also run the individual tests below; the results would be
    dnl the same.
    if test $REPLACE_MBRTOWC = 1; then
      REPLACE_MBRLEN=1
    fi
  fi
])
m4trace:m4/mbrlen.m4:40: -1- AC_DEFUN([gl_MBRLEN_INCOMPLETE_STATE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrlen handles incomplete characters],
    [gl_cv_func_mbrlen_incomplete_state],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                     # Guess no on AIX and OSF/1.
        aix* | osf*) gl_cv_func_mbrlen_incomplete_state="guessing no" ;;
                     # Guess yes otherwise.
        *)           gl_cv_func_mbrlen_incomplete_state="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_JA != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      const char input[] = "B\217\253\344\217\251\316er"; /* "Büßer" */
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrlen (input + 1, 1, &state) == (size_t)(-2))
        if (mbsinit (&state))
          return 1;
    }
  return 0;
}]])],
          [gl_cv_func_mbrlen_incomplete_state=yes],
          [gl_cv_func_mbrlen_incomplete_state=no],
          [])
      fi
    ])
])
m4trace:m4/mbrlen.m4:90: -1- AC_DEFUN([gl_MBRLEN_RETVAL], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrlen has a correct return value],
    [gl_cv_func_mbrlen_retval],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                          # Guess no on HP-UX and Solaris.
        hpux* | solaris*) gl_cv_func_mbrlen_retval="guessing no" ;;
                          # Guess yes otherwise.
        *)                gl_cv_func_mbrlen_retval="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR_UTF8 != none || test $LOCALE_JA != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;
  /* This fails on Solaris.  */
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      char input[] = "B\303\274\303\237er"; /* "Büßer" */
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrlen (input + 1, 1, &state) == (size_t)(-2))
        {
          input[1] = '\0';
          if (mbrlen (input + 2, 5, &state) != 1)
            result |= 1;
        }
    }
  /* This fails on HP-UX 11.11.  */
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      char input[] = "B\217\253\344\217\251\316er"; /* "Büßer" */
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrlen (input + 1, 1, &state) == (size_t)(-2))
        {
          input[1] = '\0';
          if (mbrlen (input + 2, 5, &state) != 2)
            result |= 2;
        }
    }
  return result;
}]])],
          [gl_cv_func_mbrlen_retval=yes],
          [gl_cv_func_mbrlen_retval=no],
          [])
      fi
    ])
])
m4trace:m4/mbrlen.m4:158: -1- AC_DEFUN([gl_MBRLEN_NUL_RETVAL], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_ZH_CN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrlen returns 0 when parsing a NUL character],
    [gl_cv_func_mbrlen_nul_retval],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                    # Guess no on Solaris 9.
        solaris2.9) gl_cv_func_mbrlen_nul_retval="guessing no" ;;
                    # Guess yes otherwise.
        *)          gl_cv_func_mbrlen_nul_retval="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_ZH_CN != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  /* This crashes on Solaris 9 inside __mbrtowc_dense_gb18030.  */
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrlen ("", 1, &state) != 0)
        return 1;
    }
  return 0;
}]])],
          [gl_cv_func_mbrlen_nul_retval=yes],
          [gl_cv_func_mbrlen_nul_retval=no],
          [])
      fi
    ])
])
m4trace:m4/mbrlen.m4:204: -1- AC_DEFUN([gl_MBRLEN_EMPTY_INPUT], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrlen works on empty input],
    [gl_cv_func_mbrlen_empty_input],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                              # Guess no on AIX and glibc systems.
        aix* | *-gnu* | gnu*) gl_cv_func_mbrlen_empty_input="guessing no" ;;
        *)                    gl_cv_func_mbrlen_empty_input="guessing yes" ;;
      esac
changequote([,])dnl
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
           #include <wchar.h>
           static mbstate_t mbs;
           int
           main (void)
           {
             return mbrlen ("", 0, &mbs) != (size_t) -2;
           }]])],
        [gl_cv_func_mbrlen_empty_input=yes],
        [gl_cv_func_mbrlen_empty_input=no],
        [:])
    ])
])
m4trace:m4/mbrlen.m4:236: -1- AC_DEFUN([gl_PREREQ_MBRLEN], [
  :
])
m4trace:m4/mbrtowc.m4:8: -1- AC_DEFUN([gl_FUNC_MBRTOWC], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([gl_PTHREADLIB])
  AC_CHECK_HEADERS_ONCE([threads.h])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  gl_MBSTATE_T_BROKEN

  AC_CHECK_FUNCS_ONCE([mbrtowc])
  if test $ac_cv_func_mbrtowc = no; then
    HAVE_MBRTOWC=0
    AC_CHECK_DECLS([mbrtowc],,, [[
      #include <wchar.h>
    ]])
    if test $ac_cv_have_decl_mbrtowc = yes; then
      dnl On Minix 3.1.8, the system's <wchar.h> declares mbrtowc() although
      dnl it does not have the function. Avoid a collision with gnulib's
      dnl replacement.
      REPLACE_MBRTOWC=1
    fi
  else
    if test $REPLACE_MBSTATE_T = 1; then
      REPLACE_MBRTOWC=1
    else
      gl_MBRTOWC_NULL_ARG1
      gl_MBRTOWC_NULL_ARG2
      gl_MBRTOWC_RETVAL
      gl_MBRTOWC_NUL_RETVAL
      gl_MBRTOWC_STORES_INCOMPLETE
      gl_MBRTOWC_EMPTY_INPUT
      gl_MBRTOWC_C_LOCALE
      case "$gl_cv_func_mbrtowc_null_arg1" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_NULL_ARG1_BUG], [1],
             [Define if the mbrtowc function has the NULL pwc argument bug.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_null_arg2" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_NULL_ARG2_BUG], [1],
             [Define if the mbrtowc function has the NULL string argument bug.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_retval" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_RETVAL_BUG], [1],
             [Define if the mbrtowc function returns a wrong return value.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_nul_retval" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_NUL_RETVAL_BUG], [1],
             [Define if the mbrtowc function does not return 0 for a NUL character.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_stores_incomplete" in
        *no) ;;
        *) AC_DEFINE([MBRTOWC_STORES_INCOMPLETE_BUG], [1],
             [Define if the mbrtowc function stores a wide character when reporting incomplete input.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_empty_input" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_EMPTY_INPUT_BUG], [1],
             [Define if the mbrtowc function does not return (size_t) -2
              for empty input.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_C_locale_sans_EILSEQ" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_IN_C_LOCALE_MAYBE_EILSEQ], [1],
             [Define if the mbrtowc function may signal encoding errors in the C locale.])
           REPLACE_MBRTOWC=1
           ;;
      esac
    fi
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    case "$host_os" in
      mingw*) LIB_MBRTOWC= ;;
      *)
        gl_WEAK_SYMBOLS
        case "$gl_cv_have_weak" in
          *yes) LIB_MBRTOWC= ;;
          *)    LIB_MBRTOWC="$LIBPTHREAD" ;;
        esac
        ;;
    esac
  else
    LIB_MBRTOWC=
  fi
  dnl LIB_MBRTOWC is expected to be '-pthread' or '-lpthread' on AIX
  dnl with gcc or xlc, and empty otherwise.
  AC_SUBST([LIB_MBRTOWC])
])
m4trace:m4/mbrtowc.m4:117: -1- AC_DEFUN([gl_MBSTATE_T_BROKEN], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  AC_CHECK_FUNCS_ONCE([mbsinit])
  AC_CHECK_FUNCS_ONCE([mbrtowc])
  dnl On native Windows, we know exactly how mbsinit() behaves and don't need
  dnl to override it, even if - like on MSVC - mbsinit() is only defined as
  dnl an inline function, not as a global function.
  if case "$host_os" in
       mingw*) true ;;
       *) test $ac_cv_func_mbsinit = yes ;;
     esac \
    && test $ac_cv_func_mbrtowc = yes; then
    gl_MBRTOWC_INCOMPLETE_STATE
    gl_MBRTOWC_SANITYCHECK
    REPLACE_MBSTATE_T=0
    case "$gl_cv_func_mbrtowc_incomplete_state" in
      *yes) ;;
      *) REPLACE_MBSTATE_T=1 ;;
    esac
    case "$gl_cv_func_mbrtowc_sanitycheck" in
      *yes) ;;
      *) REPLACE_MBSTATE_T=1 ;;
    esac
  else
    REPLACE_MBSTATE_T=1
  fi
])
m4trace:m4/mbrtowc.m4:153: -1- AC_DEFUN([gl_MBRTOWC_INCOMPLETE_STATE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc handles incomplete characters],
    [gl_cv_func_mbrtowc_incomplete_state],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                     # Guess no on AIX and OSF/1.
        aix* | osf*) gl_cv_func_mbrtowc_incomplete_state="guessing no" ;;
                     # Guess yes otherwise.
        *)           gl_cv_func_mbrtowc_incomplete_state="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_JA != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      const char input[] = "B\217\253\344\217\251\316er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 1, 1, &state) == (size_t)(-2))
        if (mbsinit (&state))
          return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_incomplete_state=yes],
          [gl_cv_func_mbrtowc_incomplete_state=no],
          [:])
      else
        if test $LOCALE_FR_UTF8 != none; then
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      const char input[] = "B\303\274\303\237er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 1, 1, &state) == (size_t)(-2))
        if (mbsinit (&state))
          return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_incomplete_state=yes],
          [gl_cv_func_mbrtowc_incomplete_state=no],
          [:])
        fi
      fi
    ])
])
m4trace:m4/mbrtowc.m4:229: -1- AC_DEFUN([gl_MBRTOWC_SANITYCHECK], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_ZH_CN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc works as well as mbtowc],
    [gl_cv_func_mbrtowc_sanitycheck],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                    # Guess no on Solaris 8.
        solaris2.8) gl_cv_func_mbrtowc_sanitycheck="guessing no" ;;
                    # Guess yes otherwise.
        *)          gl_cv_func_mbrtowc_sanitycheck="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_ZH_CN != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  /* This fails on Solaris 8:
     mbrtowc returns 2, and sets wc to 0x00F0.
     mbtowc returns 4 (correct) and sets wc to 0x5EDC.  */
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      char input[] = "B\250\271\201\060\211\070er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 3, 6, &state) != 4
          && mbtowc (&wc, input + 3, 6) == 4)
        return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_sanitycheck=yes],
          [gl_cv_func_mbrtowc_sanitycheck=no],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:282: -1- AC_DEFUN([gl_MBRTOWC_NULL_ARG1], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc handles a NULL pwc argument],
    [gl_cv_func_mbrtowc_null_arg1],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                  # Guess no on Solaris.
        solaris*) gl_cv_func_mbrtowc_null_arg1="guessing no" ;;
                  # Guess yes otherwise.
        *)        gl_cv_func_mbrtowc_null_arg1="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR_UTF8 != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;

  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      char input[] = "\303\237er";
      mbstate_t state;
      wchar_t wc;
      size_t ret;

      memset (&state, '\0', sizeof (mbstate_t));
      wc = (wchar_t) 0xBADFACE;
      ret = mbrtowc (&wc, input, 5, &state);
      if (ret != 2)
        result |= 1;
      if (!mbsinit (&state))
        result |= 2;

      memset (&state, '\0', sizeof (mbstate_t));
      ret = mbrtowc (NULL, input, 5, &state);
      if (ret != 2) /* Solaris 7 fails here: ret is -1.  */
        result |= 4;
      if (!mbsinit (&state))
        result |= 8;
    }
  return result;
}]])],
          [gl_cv_func_mbrtowc_null_arg1=yes],
          [gl_cv_func_mbrtowc_null_arg1=no],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:345: -1- AC_DEFUN([gl_MBRTOWC_NULL_ARG2], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc handles a NULL string argument],
    [gl_cv_func_mbrtowc_null_arg2],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
              # Guess no on OSF/1.
        osf*) gl_cv_func_mbrtowc_null_arg2="guessing no" ;;
              # Guess yes otherwise.
        *)    gl_cv_func_mbrtowc_null_arg2="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR_UTF8 != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      mbstate_t state;
      wchar_t wc;
      int ret;

      memset (&state, '\0', sizeof (mbstate_t));
      wc = (wchar_t) 0xBADFACE;
      mbrtowc (&wc, NULL, 5, &state);
      /* Check that wc was not modified.  */
      if (wc != (wchar_t) 0xBADFACE)
        return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_null_arg2=yes],
          [gl_cv_func_mbrtowc_null_arg2=no],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:398: -1- AC_DEFUN([gl_MBRTOWC_RETVAL], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether mbrtowc has a correct return value],
    [gl_cv_func_mbrtowc_retval],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                                   # Guess no on HP-UX, Solaris, native Windows.
        hpux* | solaris* | mingw*) gl_cv_func_mbrtowc_retval="guessing no" ;;
                                   # Guess yes otherwise.
        *)                         gl_cv_func_mbrtowc_retval="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR_UTF8 != none || test $LOCALE_JA != none \
         || { case "$host_os" in mingw*) true;; *) false;; esac; }; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;
  int found_some_locale = 0;
  /* This fails on Solaris.  */
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      char input[] = "B\303\274\303\237er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 1, 1, &state) == (size_t)(-2))
        {
          input[1] = '\0';
          if (mbrtowc (&wc, input + 2, 5, &state) != 1)
            result |= 1;
        }
      found_some_locale = 1;
    }
  /* This fails on HP-UX 11.11.  */
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      char input[] = "B\217\253\344\217\251\316er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 1, 1, &state) == (size_t)(-2))
        {
          input[1] = '\0';
          if (mbrtowc (&wc, input + 2, 5, &state) != 2)
            result |= 2;
        }
      found_some_locale = 1;
    }
  /* This fails on native Windows.  */
  if (setlocale (LC_ALL, "Japanese_Japan.932") != NULL)
    {
      char input[] = "<\223\372\226\173\214\352>"; /* "<日本語>" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 3, 1, &state) == (size_t)(-2))
        {
          input[3] = '\0';
          if (mbrtowc (&wc, input + 4, 4, &state) != 1)
            result |= 4;
        }
      found_some_locale = 1;
    }
  if (setlocale (LC_ALL, "Chinese_Taiwan.950") != NULL)
    {
      char input[] = "<\244\351\245\273\273\171>"; /* "<日本語>" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 3, 1, &state) == (size_t)(-2))
        {
          input[3] = '\0';
          if (mbrtowc (&wc, input + 4, 4, &state) != 1)
            result |= 8;
        }
      found_some_locale = 1;
    }
  if (setlocale (LC_ALL, "Chinese_China.936") != NULL)
    {
      char input[] = "<\310\325\261\276\325\132>"; /* "<日本語>" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 3, 1, &state) == (size_t)(-2))
        {
          input[3] = '\0';
          if (mbrtowc (&wc, input + 4, 4, &state) != 1)
            result |= 16;
        }
      found_some_locale = 1;
    }
  return (found_some_locale ? result : 77);
}]])],
          [gl_cv_func_mbrtowc_retval=yes],
          [if test $? != 77; then
             gl_cv_func_mbrtowc_retval=no
           fi
          ],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:521: -1- AC_DEFUN([gl_MBRTOWC_NUL_RETVAL], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_ZH_CN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc returns 0 when parsing a NUL character],
    [gl_cv_func_mbrtowc_nul_retval],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                       # Guess no on Solaris 8 and 9.
        solaris2.[89]) gl_cv_func_mbrtowc_nul_retval="guessing no" ;;
                       # Guess yes otherwise.
        *)             gl_cv_func_mbrtowc_nul_retval="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_ZH_CN != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  /* This fails on Solaris 8 and 9.  */
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "", 1, &state) != 0)
        return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_nul_retval=yes],
          [gl_cv_func_mbrtowc_nul_retval=no],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:569: -1- AC_DEFUN([gl_MBRTOWC_STORES_INCOMPLETE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc stores incomplete characters],
    [gl_cv_func_mbrtowc_stores_incomplete],
    [
     dnl Initial guess, used when cross-compiling or when no suitable locale
     dnl is present.
changequote(,)dnl
     case "$host_os" in
               # Guess yes on native Windows.
       mingw*) gl_cv_func_mbrtowc_stores_incomplete="guessing yes" ;;
       *)      gl_cv_func_mbrtowc_stores_incomplete="guessing no" ;;
     esac
changequote([,])dnl
     case "$host_os" in
       mingw*)
         AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;
  if (setlocale (LC_ALL, "French_France.65001") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\303", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        result |= 1;
    }
  if (setlocale (LC_ALL, "Japanese_Japan.932") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\226", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        result |= 2;
    }
  if (setlocale (LC_ALL, "Chinese_Taiwan.950") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\245", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        result |= 4;
    }
  if (setlocale (LC_ALL, "Chinese_China.936") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\261", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        result |= 8;
    }
  return result;
}]])],
           [gl_cv_func_mbrtowc_stores_incomplete=no],
           [gl_cv_func_mbrtowc_stores_incomplete=yes],
           [:])
         ;;
       *)
         AC_REQUIRE([gt_LOCALE_FR_UTF8])
         if test $LOCALE_FR_UTF8 != none; then
           AC_RUN_IFELSE(
             [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\303", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        return 1;
    }
  return 0;
}]])],
             [gl_cv_func_mbrtowc_stores_incomplete=no],
             [gl_cv_func_mbrtowc_stores_incomplete=yes],
             [:])
         fi
         ;;
     esac
    ])
])
m4trace:m4/mbrtowc.m4:674: -1- AC_DEFUN([gl_MBRTOWC_EMPTY_INPUT], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc works on empty input],
    [gl_cv_func_mbrtowc_empty_input],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                              # Guess no on AIX and glibc systems.
        aix* | *-gnu* | gnu*) gl_cv_func_mbrtowc_empty_input="guessing no" ;;
                              # Guess yes on native Windows.
        mingw*)               gl_cv_func_mbrtowc_empty_input="guessing yes" ;;
        *)                    gl_cv_func_mbrtowc_empty_input="guessing yes" ;;
      esac
changequote([,])dnl
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
           #include <wchar.h>
           static wchar_t wc;
           static mbstate_t mbs;
           int
           main (void)
           {
             return mbrtowc (&wc, "", 0, &mbs) != (size_t) -2;
           }]])],
        [gl_cv_func_mbrtowc_empty_input=yes],
        [gl_cv_func_mbrtowc_empty_input=no],
        [:])
    ])
])
m4trace:m4/mbrtowc.m4:713: -1- AC_DEFUN([gl_MBRTOWC_C_LOCALE], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether the C locale is free of encoding errors],
    [gl_cv_func_mbrtowc_C_locale_sans_EILSEQ],
    [
     dnl Initial guess, used when cross-compiling or when no suitable locale
     dnl is present.
     gl_cv_func_mbrtowc_C_locale_sans_EILSEQ="$gl_cross_guess_normal"

     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <limits.h>
            #include <locale.h>
            #include <wchar.h>
          ]], [[
            int i;
            char *locale = setlocale (LC_ALL, "C");
            if (! locale)
              return 2;
            for (i = CHAR_MIN; i <= CHAR_MAX; i++)
              {
                char c = i;
                wchar_t wc;
                mbstate_t mbs = { 0, };
                size_t ss = mbrtowc (&wc, &c, 1, &mbs);
                if (1 < ss)
                  return 3;
              }
            return 0;
          ]])],
      [gl_cv_func_mbrtowc_C_locale_sans_EILSEQ=yes],
      [gl_cv_func_mbrtowc_C_locale_sans_EILSEQ=no],
      [case "$host_os" in
                 # Guess yes on native Windows.
         mingw*) gl_cv_func_mbrtowc_C_locale_sans_EILSEQ="guessing yes" ;;
       esac
      ])
    ])
])
m4trace:m4/mbrtowc.m4:755: -1- AC_DEFUN([gl_PREREQ_MBRTOWC], [
  AC_REQUIRE([AC_C_INLINE])
  :
])
m4trace:m4/mbrtowc.m4:761: -1- AC_DEFUN([gl_PREREQ_MBTOWC_LOCK], [
  gl_VISIBILITY
])
m4trace:m4/mbrtowc.m4:771: -1- AC_DEFUN([AC_FUNC_MBRTOWC], [
  dnl Same as AC_FUNC_MBRTOWC in autoconf-2.60.
  AC_CACHE_CHECK([whether mbrtowc and mbstate_t are properly declared],
    [gl_cv_func_mbrtowc],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
            [[#include <wchar.h>]],
            [[wchar_t wc;
              char const s[] = "";
              size_t n = 1;
              mbstate_t state;
              return ! (sizeof state && (mbrtowc) (&wc, s, n, &state));]])],
       [gl_cv_func_mbrtowc=yes],
       [gl_cv_func_mbrtowc=no])])
  if test $gl_cv_func_mbrtowc = yes; then
    AC_DEFINE([HAVE_MBRTOWC], [1],
      [Define to 1 if mbrtowc and mbstate_t are properly declared.])
  fi
])
m4trace:m4/mbsinit.m4:7: -1- AC_DEFUN([gl_FUNC_MBSINIT], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  gl_MBSTATE_T_BROKEN

  AC_CHECK_FUNCS_ONCE([mbsinit])
  if test $ac_cv_func_mbsinit = no; then
    HAVE_MBSINIT=0
    AC_CHECK_DECLS([mbsinit],,, [[
      #include <wchar.h>
    ]])
    if test $ac_cv_have_decl_mbsinit = yes; then
      dnl On Minix 3.1.8, the system's <wchar.h> declares mbsinit() although
      dnl it does not have the function. Avoid a collision with gnulib's
      dnl replacement.
      REPLACE_MBSINIT=1
    fi
  else
    if test $REPLACE_MBSTATE_T = 1; then
      REPLACE_MBSINIT=1
    else
      dnl On mingw, mbsinit() always returns 1, which is inappropriate for
      dnl states produced by mbrtowc() for an incomplete multibyte character
      dnl in multibyte locales.
      case "$host_os" in
        mingw*) REPLACE_MBSINIT=1 ;;
      esac
    fi
  fi
])
m4trace:m4/mbsinit.m4:42: -1- AC_DEFUN([gl_PREREQ_MBSINIT], [
  :
])
m4trace:m4/mbslen.m4:7: -1- AC_DEFUN([gl_FUNC_MBSLEN], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([mbslen])
  if test $ac_cv_func_mbslen = yes; then
    HAVE_MBSLEN=1
  else
    HAVE_MBSLEN=0
  fi
])
m4trace:m4/mbsrtowcs.m4:7: -1- AC_DEFUN([gl_FUNC_MBSRTOWCS], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  gl_MBSTATE_T_BROKEN

  AC_CHECK_FUNCS_ONCE([mbsrtowcs])
  if test $ac_cv_func_mbsrtowcs = no; then
    HAVE_MBSRTOWCS=0
    AC_CHECK_DECLS([mbsrtowcs],,, [[
      #include <wchar.h>
    ]])
    if test $ac_cv_have_decl_mbsrtowcs = yes; then
      dnl On Minix 3.1.8, the system's <wchar.h> declares mbsrtowcs() although
      dnl it does not have the function. Avoid a collision with gnulib's
      dnl replacement.
      REPLACE_MBSRTOWCS=1
    fi
  else
    if test $REPLACE_MBSTATE_T = 1; then
      REPLACE_MBSRTOWCS=1
    else
      gl_MBSRTOWCS_WORKS
      case "$gl_cv_func_mbsrtowcs_works" in
        *yes) ;;
        *) REPLACE_MBSRTOWCS=1 ;;
      esac
    fi
  fi
])
m4trace:m4/mbsrtowcs.m4:42: -1- AC_DEFUN([gl_MBSRTOWCS_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([gt_LOCALE_ZH_CN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbsrtowcs works],
    [gl_cv_func_mbsrtowcs_works],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                                   # Guess no on HP-UX, Solaris, mingw.
        hpux* | solaris* | mingw*) gl_cv_func_mbsrtowcs_works="guessing no" ;;
                                   # Guess yes otherwise.
        *)                         gl_cv_func_mbsrtowcs_works="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR != none || test $LOCALE_FR_UTF8 != none || test $LOCALE_JA != none || test $LOCALE_ZH_CN != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;
  /* Test whether the function supports a NULL destination argument.
     This fails on native Windows.  */
  if (setlocale (LC_ALL, "$LOCALE_FR") != NULL)
    {
      const char input[] = "\337er";
      const char *src = input;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbsrtowcs (NULL, &src, 1, &state) != 3
          || src != input)
        result |= 1;
    }
  /* Test whether the function works when started with a conversion state
     in non-initial state.  This fails on HP-UX 11.11 and Solaris 10.  */
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      const char input[] = "B\303\274\303\237er";
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (NULL, input + 1, 1, &state) == (size_t)(-2))
        if (!mbsinit (&state))
          {
            const char *src = input + 2;
            if (mbsrtowcs (NULL, &src, 10, &state) != 4)
              result |= 2;
          }
    }
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      const char input[] = "<\306\374\313\334\270\354>";
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (NULL, input + 3, 1, &state) == (size_t)(-2))
        if (!mbsinit (&state))
          {
            const char *src = input + 4;
            if (mbsrtowcs (NULL, &src, 10, &state) != 3)
              result |= 4;
          }
    }
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      const char input[] = "B\250\271\201\060\211\070er";
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (NULL, input + 1, 1, &state) == (size_t)(-2))
        if (!mbsinit (&state))
          {
            const char *src = input + 2;
            if (mbsrtowcs (NULL, &src, 10, &state) != 4)
              result |= 8;
          }
    }
  return result;
}]])],
          [gl_cv_func_mbsrtowcs_works=yes],
          [gl_cv_func_mbsrtowcs_works=no],
          [:])
      fi
    ])
])
m4trace:m4/mbsrtowcs.m4:139: -1- AC_DEFUN([gl_PREREQ_MBSRTOWCS], [
  :
])
m4trace:m4/mbstate_t.m4:15: -1- AC_DEFUN([AC_TYPE_MBSTATE_T], [
   AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS]) dnl for HP-UX 11.11

   AC_CACHE_CHECK([for mbstate_t], [ac_cv_type_mbstate_t],
     [AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM(
           [AC_INCLUDES_DEFAULT[
             #include <wchar.h>]],
           [[mbstate_t x; return sizeof x;]])],
        [ac_cv_type_mbstate_t=yes],
        [ac_cv_type_mbstate_t=no])])
   if test $ac_cv_type_mbstate_t = yes; then
     AC_DEFINE([HAVE_MBSTATE_T], [1],
               [Define to 1 if <wchar.h> declares mbstate_t.])
   else
     AC_DEFINE([mbstate_t], [int],
               [Define to a type if <wchar.h> does not define.])
   fi
])
m4trace:m4/mbswidth.m4:10: -1- AC_DEFUN([gl_MBSWIDTH], [
  AC_CHECK_HEADERS_ONCE([wchar.h])
  AC_CHECK_FUNCS_ONCE([isascii mbsinit])

  dnl UnixWare 7.1.1 <wchar.h> has a declaration of a function mbswidth()
  dnl that clashes with ours.
  AC_CACHE_CHECK([whether mbswidth is declared in <wchar.h>],
    [ac_cv_have_decl_mbswidth],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
          ]],
          [[char *p = (char *) mbswidth;
            return !p;
          ]])],
       [ac_cv_have_decl_mbswidth=yes],
       [ac_cv_have_decl_mbswidth=no])])
  if test $ac_cv_have_decl_mbswidth = yes; then
    ac_val=1
  else
    ac_val=0
  fi
  AC_DEFINE_UNQUOTED([HAVE_DECL_MBSWIDTH_IN_WCHAR_H], [$ac_val],
    [Define to 1 if you have a declaration of mbswidth() in <wchar.h>, and to 0 otherwise.])

  AC_TYPE_MBSTATE_T
])
m4trace:m4/mbtowc.m4:7: -1- AC_DEFUN([gl_FUNC_MBTOWC], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  AC_CHECK_FUNCS([mbtowc])
  if test $ac_cv_func_mbtowc = no; then
    HAVE_MBTOWC=0
  else
    if false; then
      REPLACE_MBTOWC=1
    fi
  fi
])
m4trace:m4/mbtowc.m4:22: -1- AC_DEFUN([gl_PREREQ_MBTOWC], [
  :
])
m4trace:m4/md5.m4:7: -1- AC_DEFUN([gl_MD5], [
  dnl Prerequisites of lib/md5.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_MD5 and LIB_CRYPTO
  gl_CRYPTO_CHECK([MD5])
])
m4trace:m4/memcasecmp.m4:7: -1- AC_DEFUN([gl_MEMCASECMP], [
  :
])
m4trace:m4/memchr.m4:7: -1- AC_DEFUN_ONCE([gl_FUNC_MEMCHR], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Check for prerequisites for memory fence checks.
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  # Detect platform-specific bugs in some versions of glibc:
  # memchr should not dereference anything with length 0
  #   https://bugzilla.redhat.com/show_bug.cgi?id=499689
  # memchr should not dereference overestimated length after a match
  #   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=521737
  #   https://sourceware.org/bugzilla/show_bug.cgi?id=10162
  # memchr should cast the second argument to 'unsigned char'.
  #   This bug exists in Android 4.3.
  # Assume that memchr works on platforms that lack mprotect.
  AC_CACHE_CHECK([whether memchr works], [gl_cv_func_memchr_works],
    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <string.h>
#if HAVE_SYS_MMAN_H
# include <fcntl.h>
# include <unistd.h>
# include <sys/types.h>
# include <sys/mman.h>
# ifndef MAP_FILE
#  define MAP_FILE 0
# endif
#endif
]], [[
  int result = 0;
  char *fence = NULL;
#if HAVE_SYS_MMAN_H && HAVE_MPROTECT
# if HAVE_MAP_ANONYMOUS
  const int flags = MAP_ANONYMOUS | MAP_PRIVATE;
  const int fd = -1;
# else /* !HAVE_MAP_ANONYMOUS */
  const int flags = MAP_FILE | MAP_PRIVATE;
  int fd = open ("/dev/zero", O_RDONLY, 0666);
  if (fd >= 0)
# endif
    {
      int pagesize = getpagesize ();
      char *two_pages =
        (char *) mmap (NULL, 2 * pagesize, PROT_READ | PROT_WRITE,
                       flags, fd, 0);
      if (two_pages != (char *)(-1)
          && mprotect (two_pages + pagesize, pagesize, PROT_NONE) == 0)
        fence = two_pages + pagesize;
    }
#endif
  if (fence)
    {
      /* Test against bugs on glibc systems.  */
      if (memchr (fence, 0, 0))
        result |= 1;
      strcpy (fence - 9, "12345678");
      if (memchr (fence - 9, 0, 79) != fence - 1)
        result |= 2;
      if (memchr (fence - 1, 0, 3) != fence - 1)
        result |= 4;
      /* Test against bug on AIX 7.2.  */
      if (memchr (fence - 4, '6', 16) != fence - 4)
        result |= 8;
    }
  /* Test against bug on Android 4.3.  */
  {
    char input[3];
    input[0] = 'a';
    input[1] = 'b';
    input[2] = 'c';
    if (memchr (input, 0x789abc00 | 'b', 3) != input + 1)
      result |= 16;
  }
  return result;
]])],
       [gl_cv_func_memchr_works=yes],
       [gl_cv_func_memchr_works=no],
       [case "$host_os" in
                           # Guess no on Android.
          linux*-android*) gl_cv_func_memchr_works="guessing no" ;;
                           # Guess yes on native Windows.
          mingw*)          gl_cv_func_memchr_works="guessing yes" ;;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_memchr_works="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  case "$gl_cv_func_memchr_works" in
    *yes) ;;
    *) REPLACE_MEMCHR=1 ;;
  esac
])
m4trace:m4/memchr.m4:104: -1- AC_DEFUN([gl_PREREQ_MEMCHR], [
  AC_CHECK_HEADERS([bp-sym.h])
])
m4trace:m4/memcoll.m4:8: -1- AC_DEFUN([gl_MEMCOLL], [
  AC_REQUIRE([AC_C_RESTRICT])
  :
])
m4trace:m4/mempcpy.m4:8: -1- AC_DEFUN([gl_FUNC_MEMPCPY], [
  dnl Persuade glibc <string.h> to declare mempcpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The mempcpy() declaration in lib/string.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_FUNCS([mempcpy])
  if test $ac_cv_func_mempcpy = no; then
    HAVE_MEMPCPY=0
  fi
])
m4trace:m4/mempcpy.m4:24: -1- AC_DEFUN([gl_PREREQ_MEMPCPY], [
  :
])
m4trace:m4/memrchr.m4:8: -1- AC_DEFUN([gl_FUNC_MEMRCHR], [
  dnl Persuade glibc <string.h> to declare memrchr().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([memrchr])
  if test $ac_cv_have_decl_memrchr = no; then
    HAVE_DECL_MEMRCHR=0
  fi

  AC_CHECK_FUNCS([memrchr])
])
m4trace:m4/memrchr.m4:23: -1- AC_DEFUN([gl_PREREQ_MEMRCHR], [:])
m4trace:m4/mgetgroups.m4:7: -1- AC_DEFUN([gl_MGETGROUPS], [
  AC_CHECK_FUNCS_ONCE([getgrouplist])
])
m4trace:m4/minmax.m4:9: -1- AC_DEFUN([gl_MINMAX], [
  AC_REQUIRE([gl_PREREQ_MINMAX])
])
m4trace:m4/minmax.m4:15: -1- AC_DEFUN([gl_PREREQ_MINMAX], [
  gl_MINMAX_IN_HEADER([limits.h])
  gl_MINMAX_IN_HEADER([sys/param.h])
])
m4trace:m4/minmax.m4:25: -1- AC_DEFUN([gl_MINMAX_IN_HEADER], [
  m4_pushdef([header], AS_TR_SH([$1]))
  m4_pushdef([HEADER], AS_TR_CPP([$1]))
  AC_CACHE_CHECK([whether <$1> defines MIN and MAX],
    [gl_cv_minmax_in_]header,
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <$1>
            int x = MIN (42, 17);]],
          [[]])],
       [gl_cv_minmax_in_]header[=yes],
       [gl_cv_minmax_in_]header[=no])])
  if test $gl_cv_minmax_in_[]header = yes; then
    AC_DEFINE([HAVE_MINMAX_IN_]HEADER, 1,
      [Define to 1 if <$1> defines the MIN and MAX macros.])
  fi
  m4_popdef([HEADER])
  m4_popdef([header])
])
m4trace:m4/mkancesdirs.m4:7: -1- AC_DEFUN([gl_MKANCESDIRS], [
  :
])
m4trace:m4/mkdir-p.m4:7: -1- AC_DEFUN([gl_MKDIR_PARENTS], [
  dnl Prerequisites of lib/dirchownmod.c.
  AC_CHECK_FUNCS_ONCE([fchmod])
])
m4trace:m4/mkdir.m4:11: -1- AC_DEFUN([gl_FUNC_MKDIR], [dnl
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CACHE_CHECK([whether mkdir handles trailing slash],
    [gl_cv_func_mkdir_trailing_slash_works],
    [rm -rf conftest.dir
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM([[
          #include <sys/types.h>
          #include <sys/stat.h>
          ]GL_MDA_DEFINES],
          [[return mkdir ("conftest.dir/", 0700);]])],
       [gl_cv_func_mkdir_trailing_slash_works=yes],
       [gl_cv_func_mkdir_trailing_slash_works=no],
       [case "$host_os" in
                           # Guess yes on Linux systems.
          linux-* | linux) gl_cv_func_mkdir_trailing_slash_works="guessing yes" ;;
                           # Guess yes on glibc systems.
          *-gnu* | gnu*)   gl_cv_func_mkdir_trailing_slash_works="guessing yes" ;;
                           # Guess yes on MSVC, no on mingw.
          mingw*)          AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                             ],
                             [gl_cv_func_mkdir_trailing_slash_works="guessing yes"],
                             [gl_cv_func_mkdir_trailing_slash_works="guessing no"])
                           ;;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_mkdir_trailing_slash_works="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -rf conftest.dir
    ])
  case "$gl_cv_func_mkdir_trailing_slash_works" in
    *yes) ;;
    *)
      REPLACE_MKDIR=1
      ;;
  esac

  AC_CACHE_CHECK([whether mkdir handles trailing dot],
    [gl_cv_func_mkdir_trailing_dot_works],
    [rm -rf conftest.dir
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM([[
          #include <sys/types.h>
          #include <sys/stat.h>
          ]GL_MDA_DEFINES],
          [[return !mkdir ("conftest.dir/./", 0700);]])],
       [gl_cv_func_mkdir_trailing_dot_works=yes],
       [gl_cv_func_mkdir_trailing_dot_works=no],
       [case "$host_os" in
                         # Guess yes on glibc systems.
          *-gnu* | gnu*) gl_cv_func_mkdir_trailing_dot_works="guessing yes" ;;
                         # Guess yes on musl systems.
          *-musl*)       gl_cv_func_mkdir_trailing_dot_works="guessing yes" ;;
                         # Guess no on native Windows.
          mingw*)        gl_cv_func_mkdir_trailing_dot_works="guessing no" ;;
                         # If we don't know, obey --enable-cross-guesses.
          *)             gl_cv_func_mkdir_trailing_dot_works="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -rf conftest.dir
    ]
  )
  case "$gl_cv_func_mkdir_trailing_dot_works" in
    *yes) ;;
    *)
      REPLACE_MKDIR=1
      AC_DEFINE([FUNC_MKDIR_DOT_BUG], [1], [Define to 1 if mkdir mistakenly
        creates a directory given with a trailing dot component.])
      ;;
  esac
])
m4trace:m4/mkdirat.m4:9: -1- AC_DEFUN([gl_FUNC_MKDIRAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([mkdirat])
  if test $ac_cv_func_mkdirat != yes; then
    HAVE_MKDIRAT=0
  fi
])
m4trace:m4/mkdirat.m4:20: -1- AC_DEFUN([gl_PREREQ_MKDIRAT], [
  AC_REQUIRE([AC_TYPE_MODE_T])
])
m4trace:m4/mkfifo.m4:11: -1- AC_DEFUN([gl_FUNC_MKFIFO], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl We can't use AC_CHECK_FUNC here, because mkfifo() is defined as a
  dnl static inline function when compiling for Android 4.4 or older.
  AC_CACHE_CHECK([for mkfifo], [gl_cv_func_mkfifo],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/stat.h>]],
          [[return mkfifo("/",0);]])
       ],
       [gl_cv_func_mkfifo=yes],
       [gl_cv_func_mkfifo=no])
    ])
  if test $gl_cv_func_mkfifo = no; then
    HAVE_MKFIFO=0
  else
    AC_DEFINE([HAVE_MKFIFO], [1],
      [Define to 1 if you have a 'mkfifo' function.])
    dnl Check for Solaris 9 and FreeBSD bug with trailing slash.
    AC_CHECK_FUNCS_ONCE([lstat])
    AC_CACHE_CHECK([whether mkfifo rejects trailing slashes],
      [gl_cv_func_mkfifo_works],
      [# Assume that if we have lstat, we can also check symlinks.
       if test $ac_cv_func_lstat = yes; then
         ln -s conftest.tmp conftest.lnk
       fi
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <sys/stat.h>
           ]],
           [[int result = 0;
             if (!mkfifo ("conftest.tmp/", 0600))
               result |= 1;
#if HAVE_LSTAT
             if (!mkfifo ("conftest.lnk/", 0600))
               result |= 2;
#endif
             return result;
           ]])],
         [gl_cv_func_mkfifo_works=yes], [gl_cv_func_mkfifo_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_mkfifo_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_mkfifo_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_mkfifo_works="$gl_cross_guess_normal" ;;
          esac
         ])
       rm -f conftest.tmp conftest.lnk])
    case "$gl_cv_func_mkfifo_works" in
      *yes) ;;
      *)
        AC_DEFINE([MKFIFO_TRAILING_SLASH_BUG], [1], [Define to 1 if mkfifo
          does not reject trailing slash])
        REPLACE_MKFIFO=1
        ;;
    esac
  fi
])
m4trace:m4/mkfifoat.m4:11: -1- AC_DEFUN([gl_FUNC_MKFIFOAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc <sys/stat.h> to declare mkfifoat() and mknodat().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_FUNC_OPENAT])

  AC_CHECK_FUNCS_ONCE([mkfifoat mknodat])
  if test $ac_cv_func_mkfifoat = yes; then
    dnl Check for AIX 7.2 bug with trailing slash.
    AC_CACHE_CHECK([whether mkfifoat rejects trailing slashes],
      [gl_cv_func_mkfifoat_works],
      [rm -f conftest.tmp
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <fcntl.h>
              #include <sys/stat.h>
            ]],
            [[int result = 0;
              if (!mkfifoat (AT_FDCWD, "conftest.tmp/", 0600))
                result |= 1;
              return result;
            ]])
         ],
         [gl_cv_func_mkfifoat_works=yes],
         [gl_cv_func_mkfifoat_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_mkfifoat_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_mkfifoat_works="guessing yes" ;;
                             # Guess no on AIX systems.
            aix*)            gl_cv_func_mkfifoat_works="guessing no" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_mkfifoat_works="$gl_cross_guess_normal" ;;
          esac
         ])
       rm -f conftest.tmp
      ])
    case "$gl_cv_func_mkfifoat_works" in
      *yes) ;;
      *)
        REPLACE_MKFIFOAT=1
        dnl mknodat() has the same bug as mkfifoat().
        REPLACE_MKNODAT=1
        ;;
    esac
  else
    # No known system has mkfifoat but not mknodat
    HAVE_MKFIFOAT=0
    HAVE_MKNODAT=0
  fi
])
m4trace:m4/mknod.m4:11: -1- AC_DEFUN([gl_FUNC_MKNOD], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_FUNC_MKFIFO])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([mknod])
  if test $ac_cv_func_mknod = no; then
    HAVE_MKNOD=0
  else
    dnl Detect BSD bug, where mknod requires root privileges to create fifo.
    AC_CACHE_CHECK([whether mknod can create fifo without root privileges],
      [gl_cv_func_mknod_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <sys/stat.h>
             #include <unistd.h>

             /* Copied from root-uid.h.  FIXME: Just use root-uid.h.  */
             #ifdef __TANDEM
             # define ROOT_UID 65535
             #else
             # define ROOT_UID 0
             #endif
]], [[/* Indeterminate for super-user, assume no.  Why are you running
         configure as root, anyway?  */
      if (geteuid () == ROOT_UID) return 99;
      if (mknod ("conftest.fifo", S_IFIFO | 0600, 0)) return 2;]])],
         [gl_cv_func_mknod_works=yes],
         [if test $? = 99 && test x"$FORCE_UNSAFE_CONFIGURE" = x; then
            AC_MSG_FAILURE([you should not run configure as root ]dnl
[(set FORCE_UNSAFE_CONFIGURE=1 in environment to bypass this check)])
          fi
          gl_cv_func_mknod_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_mknod_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_mknod_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_mknod_works="$gl_cross_guess_normal" ;;
          esac
         ])
       rm -f conftest.fifo])
    case "$gl_cv_func_mknod_works" in
      *yes) ;;
      *)
        REPLACE_MKNOD=1
        AC_DEFINE([MKNOD_FIFO_BUG], [1], [Define to 1 if mknod cannot create
          a fifo without super-user privileges])
        ;;
    esac
    dnl Systems that mishandle trailing slash on mkfifo also goof on mknod.
    if test $REPLACE_MKFIFO = 1; then
      REPLACE_MKNOD=1
    fi
  fi
])
m4trace:m4/mkostemp.m4:7: -1- AC_DEFUN([gl_FUNC_MKOSTEMP], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  dnl Persuade glibc <stdlib.h> to declare mkostemp().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([mkostemp])
  if test $ac_cv_func_mkostemp != yes; then
    HAVE_MKOSTEMP=0
  fi
])
m4trace:m4/mkostemp.m4:21: -1- AC_DEFUN([gl_PREREQ_MKOSTEMP], [
])
m4trace:m4/mkstemp.m4:16: -1- AC_DEFUN([gl_FUNC_MKSTEMP], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_FUNCS_ONCE([mkstemp])
  if test $ac_cv_func_mkstemp = yes; then
    AC_CACHE_CHECK([for working mkstemp],
      [gl_cv_func_working_mkstemp],
      [
        mkdir conftest.mkstemp
        AC_RUN_IFELSE(
          [AC_LANG_PROGRAM(
            [AC_INCLUDES_DEFAULT
             GL_MDA_DEFINES],
            [[int result = 0;
              int i;
              off_t large = (off_t) 4294967295u;
              if (large < 0)
                large = 2147483647;
              umask (0);
              for (i = 0; i < 70; i++)
                {
                  char templ[] = "conftest.mkstemp/coXXXXXX";
                  int (*mkstemp_function) (char *) = mkstemp;
                  int fd = mkstemp_function (templ);
                  if (fd < 0)
                    result |= 1;
                  else
                    {
                      struct stat st;
                      if (lseek (fd, large, SEEK_SET) != large)
                        result |= 2;
                      if (fstat (fd, &st) < 0)
                        result |= 4;
                      else if (st.st_mode & 0077)
                        result |= 8;
                      if (close (fd))
                        result |= 16;
                    }
                }
              return result;]])],
          [gl_cv_func_working_mkstemp=yes],
          [gl_cv_func_working_mkstemp=no],
          [case "$host_os" in
                            # Guess yes on glibc systems.
             *-gnu* | gnu*) gl_cv_func_working_mkstemp="guessing yes" ;;
                            # Guess yes on musl systems.
             *-musl*)       gl_cv_func_working_mkstemp="guessing yes" ;;
                            # Guess no on native Windows.
             mingw*)        gl_cv_func_working_mkstemp="guessing no" ;;
                            # If we don't know, obey --enable-cross-guesses.
             *)             gl_cv_func_working_mkstemp="$gl_cross_guess_normal" ;;
           esac
          ])
        rm -rf conftest.mkstemp
      ])
    case "$gl_cv_func_working_mkstemp" in
      *yes) ;;
      *)
        REPLACE_MKSTEMP=1
        ;;
    esac
  else
    HAVE_MKSTEMP=0
  fi
])
m4trace:m4/mkstemp.m4:85: -1- AC_DEFUN([gl_PREREQ_MKSTEMP], [
])
m4trace:m4/mktime.m4:10: -1- AC_DEFUN([gl_TIME_T_IS_SIGNED], [
  AC_CACHE_CHECK([whether time_t is signed],
    [gl_cv_time_t_is_signed],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <time.h>
                          char time_t_signed[(time_t) -1 < 0 ? 1 : -1];]])],
       [gl_cv_time_t_is_signed=yes],
       [gl_cv_time_t_is_signed=no])])
  if test $gl_cv_time_t_is_signed = yes; then
    AC_DEFINE([TIME_T_IS_SIGNED], [1], [Define to 1 if time_t is signed.])
  fi
])
m4trace:m4/mktime.m4:25: -1- AC_DEFUN([gl_FUNC_MKTIME_WORKS], [
  AC_REQUIRE([gl_TIME_T_IS_SIGNED])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl We don't use AC_FUNC_MKTIME any more, because it is no longer maintained
  dnl in Autoconf and because it invokes AC_LIBOBJ.
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_DECLS_ONCE([alarm])
  AC_REQUIRE([gl_MULTIARCH])
  AC_CACHE_CHECK([for working mktime], [gl_cv_func_working_mktime],
    [if test $APPLE_UNIVERSAL_BUILD = 1; then
       # A universal build on Apple Mac OS X platforms.
       # The test result would be 'yes' in 32-bit mode and 'no' in 64-bit mode.
       # But we need a configuration result that is valid in both modes.
       gl_cv_func_working_mktime="guessing no"
     else
       AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
[[/* Test program from Paul Eggert and Tony Leneis.  */
#include <limits.h>
#include <stdlib.h>
#include <time.h>

#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

#if HAVE_DECL_ALARM
# include <signal.h>
#endif

]GL_MDA_DEFINES[

#ifndef TIME_T_IS_SIGNED
# define TIME_T_IS_SIGNED 0
#endif

static time_t time_t_max;
static time_t time_t_min;

/* Values we'll use to set the TZ environment variable.  */
static char *tz_strings[] = {
  (char *) 0, "TZ=GMT0", "TZ=JST-9",
  "TZ=EST+3EDT+2,M10.1.0/00:00:00,M2.3.0/00:00:00"
};
#define N_STRINGS (sizeof (tz_strings) / sizeof (tz_strings[0]))

/* Return 0 if mktime fails to convert a date in the spring-forward gap.
   Based on a problem report from Andreas Jaeger.  */
static int
spring_forward_gap ()
{
  /* glibc (up to about 1998-10-07) failed this test. */
  struct tm tm;

  /* Use the portable POSIX.1 specification "TZ=PST8PDT,M4.1.0,M10.5.0"
     instead of "TZ=America/Vancouver" in order to detect the bug even
     on systems that don't support the Olson extension, or don't have the
     full zoneinfo tables installed.  */
  if (putenv ("TZ=PST8PDT,M4.1.0,M10.5.0") != 0)
    return -1;

  tm.tm_year = 98;
  tm.tm_mon = 3;
  tm.tm_mday = 5;
  tm.tm_hour = 2;
  tm.tm_min = 0;
  tm.tm_sec = 0;
  tm.tm_isdst = -1;
  return mktime (&tm) != (time_t) -1;
}

static int
mktime_test1 (time_t now)
{
  struct tm *lt;
  return ! (lt = localtime (&now)) || mktime (lt) == now;
}

static int
mktime_test (time_t now)
{
  return (mktime_test1 (now)
          && mktime_test1 ((time_t) (time_t_max - now))
          && mktime_test1 ((time_t) (time_t_min + now)));
}

static int
irix_6_4_bug ()
{
  /* Based on code from Ariel Faigon.  */
  struct tm tm;
  tm.tm_year = 96;
  tm.tm_mon = 3;
  tm.tm_mday = 0;
  tm.tm_hour = 0;
  tm.tm_min = 0;
  tm.tm_sec = 0;
  tm.tm_isdst = -1;
  mktime (&tm);
  return tm.tm_mon == 2 && tm.tm_mday == 31;
}

static int
bigtime_test (int j)
{
  struct tm tm;
  time_t now;
  tm.tm_year = tm.tm_mon = tm.tm_mday = tm.tm_hour = tm.tm_min = tm.tm_sec = j;
  now = mktime (&tm);
  if (now != (time_t) -1)
    {
      struct tm *lt = localtime (&now);
      if (! (lt
             && lt->tm_year == tm.tm_year
             && lt->tm_mon == tm.tm_mon
             && lt->tm_mday == tm.tm_mday
             && lt->tm_hour == tm.tm_hour
             && lt->tm_min == tm.tm_min
             && lt->tm_sec == tm.tm_sec
             && lt->tm_yday == tm.tm_yday
             && lt->tm_wday == tm.tm_wday
             && ((lt->tm_isdst < 0 ? -1 : 0 < lt->tm_isdst)
                  == (tm.tm_isdst < 0 ? -1 : 0 < tm.tm_isdst))))
        return 0;
    }
  return 1;
}

static int
year_2050_test ()
{
  /* The correct answer for 2050-02-01 00:00:00 in Pacific time,
     ignoring leap seconds.  */
  unsigned long int answer = 2527315200UL;

  struct tm tm;
  time_t t;
  tm.tm_year = 2050 - 1900;
  tm.tm_mon = 2 - 1;
  tm.tm_mday = 1;
  tm.tm_hour = tm.tm_min = tm.tm_sec = 0;
  tm.tm_isdst = -1;

  /* Use the portable POSIX.1 specification "TZ=PST8PDT,M4.1.0,M10.5.0"
     instead of "TZ=America/Vancouver" in order to detect the bug even
     on systems that don't support the Olson extension, or don't have the
     full zoneinfo tables installed.  */
  if (putenv ("TZ=PST8PDT,M4.1.0,M10.5.0") != 0)
    return -1;

  t = mktime (&tm);

  /* Check that the result is either a failure, or close enough
     to the correct answer that we can assume the discrepancy is
     due to leap seconds.  */
  return (t == (time_t) -1
          || (0 < t && answer - 120 <= t && t <= answer + 120));
}

static int
indiana_test ()
{
  if (putenv ("TZ=America/Indiana/Indianapolis") != 0)
    return -1;
  struct tm tm;
  tm.tm_year = 1986 - 1900; tm.tm_mon = 4 - 1; tm.tm_mday = 28;
  tm.tm_hour = 16; tm.tm_min = 24; tm.tm_sec = 50; tm.tm_isdst = 0;
  time_t std = mktime (&tm);
  if (! (std == 515107490 || std == 515107503))
    return 1;

  /* This platform supports TZDB, either without or with leap seconds.
     Return true if GNU Bug#48085 is absent.  */
  tm.tm_isdst = 1;
  time_t dst = mktime (&tm);
  return std - dst == 60 * 60;
}

int
main ()
{
  int result = 0;
  time_t t, delta;
  int i, j;
  int time_t_signed_magnitude = (time_t) ~ (time_t) 0 < (time_t) -1;

#if HAVE_DECL_ALARM
  /* This test makes some buggy mktime implementations loop.
     Give up after 60 seconds; a mktime slower than that
     isn't worth using anyway.  */
  signal (SIGALRM, SIG_DFL);
  alarm (60);
#endif

  time_t_max = (! TIME_T_IS_SIGNED
                ? (time_t) -1
                : ((((time_t) 1 << (sizeof (time_t) * CHAR_BIT - 2)) - 1)
                   * 2 + 1));
  time_t_min = (! TIME_T_IS_SIGNED
                ? (time_t) 0
                : time_t_signed_magnitude
                ? ~ (time_t) 0
                : ~ time_t_max);

  delta = time_t_max / 997; /* a suitable prime number */
  for (i = 0; i < N_STRINGS; i++)
    {
      if (tz_strings[i])
        putenv (tz_strings[i]);

      for (t = 0; t <= time_t_max - delta && (result & 1) == 0; t += delta)
        if (! mktime_test (t))
          result |= 1;
      if ((result & 2) == 0
          && ! (mktime_test ((time_t) 1)
                && mktime_test ((time_t) (60 * 60))
                && mktime_test ((time_t) (60 * 60 * 24))))
        result |= 2;

      for (j = 1; (result & 4) == 0; j <<= 1)
        {
          if (! bigtime_test (j))
            result |= 4;
          if (INT_MAX / 2 < j)
            break;
        }
      if ((result & 8) == 0 && ! bigtime_test (INT_MAX))
        result |= 8;
    }
  if (! irix_6_4_bug ())
    result |= 16;
  if (! spring_forward_gap ())
    result |= 32;
  if (! year_2050_test () || ! indiana_test ())
    result |= 64;
  return result;
}]])],
         [gl_cv_func_working_mktime=yes],
         [gl_cv_func_working_mktime=no],
         [case "$host_os" in
                    # Guess no on native Windows.
            mingw*) gl_cv_func_working_mktime="guessing no" ;;
            *)      gl_cv_func_working_mktime="$gl_cross_guess_normal" ;;
          esac
         ])
     fi
    ])
])
m4trace:m4/mktime.m4:277: -1- AC_DEFUN([gl_FUNC_MKTIME], [
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_FUNC_MKTIME_WORKS])

  REPLACE_MKTIME=0
  if test "$gl_cv_func_working_mktime" != yes; then
    REPLACE_MKTIME=1
    AC_DEFINE([NEED_MKTIME_WORKING], [1],
      [Define if the compilation of mktime.c should define 'mktime'
       with the algorithmic workarounds.])
  fi
  case "$host_os" in
    mingw*)
      REPLACE_MKTIME=1
      AC_DEFINE([NEED_MKTIME_WINDOWS], [1],
        [Define if the compilation of mktime.c should define 'mktime'
         with the native Windows TZ workaround.])
      ;;
  esac
])
m4trace:m4/mktime.m4:301: -1- AC_DEFUN([gl_FUNC_MKTIME_INTERNAL], [
  AC_REQUIRE([gl_FUNC_MKTIME_WORKS])

  WANT_MKTIME_INTERNAL=0
  dnl BeOS has __mktime_internal in libc, but other platforms don't.
  AC_CHECK_FUNC([__mktime_internal],
    [AC_DEFINE([mktime_internal], [__mktime_internal],
       [Define to the real name of the mktime_internal function.])
    ],
    [dnl mktime works but it doesn't export __mktime_internal,
     dnl so we need to substitute our own mktime implementation.
     WANT_MKTIME_INTERNAL=1
     AC_DEFINE([NEED_MKTIME_INTERNAL], [1],
       [Define if the compilation of mktime.c should define 'mktime_internal'.])
    ])
])
m4trace:m4/mktime.m4:319: -1- AC_DEFUN([gl_PREREQ_MKTIME], [:])
m4trace:m4/mmap-anon.m4:16: -1- AC_DEFUN_ONCE([gl_FUNC_MMAP_ANON], [
  dnl Persuade glibc <sys/mman.h> to define MAP_ANONYMOUS.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  # Check for mmap(). Don't use AC_FUNC_MMAP, because it checks too much: it
  # fails on HP-UX 11, because MAP_FIXED mappings do not work. But this is
  # irrelevant for anonymous mappings.
  AC_CHECK_FUNC([mmap], [gl_have_mmap=yes], [gl_have_mmap=no])

  # Try to allow MAP_ANONYMOUS.
  gl_have_mmap_anonymous=no
  if test $gl_have_mmap = yes; then
    AC_MSG_CHECKING([for MAP_ANONYMOUS])
    AC_EGREP_CPP([I cannot identify this map], [
#include <sys/mman.h>
#ifdef MAP_ANONYMOUS
    I cannot identify this map
#endif
],
      [gl_have_mmap_anonymous=yes])
    if test $gl_have_mmap_anonymous != yes; then
      AC_EGREP_CPP([I cannot identify this map], [
#include <sys/mman.h>
#ifdef MAP_ANON
    I cannot identify this map
#endif
],
        [AC_DEFINE([MAP_ANONYMOUS], [MAP_ANON],
          [Define to a substitute value for mmap()'s MAP_ANONYMOUS flag.])
         gl_have_mmap_anonymous=yes])
    fi
    AC_MSG_RESULT([$gl_have_mmap_anonymous])
    if test $gl_have_mmap_anonymous = yes; then
      AC_DEFINE([HAVE_MAP_ANONYMOUS], [1],
        [Define to 1 if mmap()'s MAP_ANONYMOUS flag is available after including
         config.h and <sys/mman.h>.])
    fi
  fi
])
m4trace:m4/mode_t.m4:12: -1- AC_DEFUN([gl_PROMOTED_TYPE_MODE_T], [
  AC_REQUIRE([AC_TYPE_MODE_T])
  AC_CACHE_CHECK([for promoted mode_t type], [gl_cv_promoted_mode_t], [
    dnl Assume mode_t promotes to 'int' if and only if it is smaller than 'int',
    dnl and to itself otherwise. This assumption is not guaranteed by the ISO C
    dnl standard, but we don't know of any real-world counterexamples.
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>]],
      [[typedef int array[2 * (sizeof (mode_t) < sizeof (int)) - 1];]])],
      [gl_cv_promoted_mode_t='int'],
      [gl_cv_promoted_mode_t='mode_t'])
  ])
  AC_DEFINE_UNQUOTED([PROMOTED_MODE_T], [$gl_cv_promoted_mode_t],
    [Define to the type that is the result of default argument promotions of type mode_t.])
])
m4trace:m4/modechange.m4:8: -1- AC_DEFUN([gl_MODECHANGE], [
  :
])
m4trace:m4/mountlist.m4:11: -1- AC_DEFUN([gl_MOUNTLIST], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS([listmntent])
  AC_CHECK_HEADERS_ONCE([sys/param.h sys/statvfs.h])

  # We must include grp.h before ucred.h on OSF V4.0, since ucred.h uses
  # NGROUPS (as the array dimension for a struct member) without a definition.
  AC_CHECK_HEADERS([sys/ucred.h], [], [], [#include <grp.h>])

  AC_CHECK_HEADERS([sys/mount.h], [], [],
    [AC_INCLUDES_DEFAULT
     [#if HAVE_SYS_PARAM_H
       #include <sys/param.h>
      #endif
    ]])

  AC_CHECK_HEADERS([mntent.h sys/fs_types.h])
  getfsstat_includes="\
$ac_includes_default
#if HAVE_SYS_PARAM_H
# include <sys/param.h> /* needed by powerpc-apple-darwin1.3.7 */
#endif
#if HAVE_SYS_UCRED_H
# include <grp.h> /* needed for definition of NGROUPS */
# include <sys/ucred.h> /* needed by powerpc-apple-darwin1.3.7 */
#endif
#if HAVE_SYS_MOUNT_H
# include <sys/mount.h>
#endif
#if HAVE_SYS_FS_TYPES_H
# include <sys/fs_types.h> /* needed by powerpc-apple-darwin1.3.7 */
#endif
"
  AC_CHECK_MEMBERS([struct fsstat.f_fstypename],,,[$getfsstat_includes])

  # Determine how to get the list of mounted file systems.
  ac_list_mounted_fs=

  # If the getmntent function is available but not in the standard library,
  # make sure LIBS contains the appropriate -l option.
  AC_FUNC_GETMNTENT

  if test -z "$ac_list_mounted_fs"; then
    # AIX.
    AC_CACHE_CHECK([for mntctl function and struct vmount],
      [fu_cv_sys_mounted_vmount],
      [AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <fshelp.h>]])],
         [fu_cv_sys_mounted_vmount=yes],
         [fu_cv_sys_mounted_vmount=no])])
    if test $fu_cv_sys_mounted_vmount = yes; then
      ac_list_mounted_fs=found
      AC_DEFINE([MOUNTED_VMOUNT], [1],
        [Define if there is a function named mntctl that can be used to read
         the list of mounted file systems, and there is a system header file
         that declares 'struct vmount'.  (AIX)])
    fi
  fi

  if test $ac_cv_func_getmntent = yes; then

    # This system has the getmntent function.
    # Determine whether it's the one-argument variant or the two-argument one.

    if test -z "$ac_list_mounted_fs"; then
      # glibc, HP-UX, IRIX, Cygwin, Android, also (obsolete) 4.3BSD, SunOS.
      AC_CACHE_CHECK([for one-argument getmntent function],
        [fu_cv_sys_mounted_getmntent1],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
/* SunOS 4.1.x /usr/include/mntent.h needs this for FILE */
#include <stdio.h>

#include <mntent.h>
#if defined __ANDROID__        /* Android */
# undef MOUNTED
# define MOUNTED "/proc/mounts"
#elif !defined MOUNTED
# if defined _PATH_MOUNTED     /* GNU libc  */
#  define MOUNTED _PATH_MOUNTED
# endif
# if defined MNT_MNTTAB        /* HP-UX.  */
#  define MOUNTED MNT_MNTTAB
# endif
#endif
]],
              [[struct mntent *mnt = 0; char *table = MOUNTED;
                if (sizeof mnt && sizeof table) return 0;
              ]])],
           [fu_cv_sys_mounted_getmntent1=yes],
           [fu_cv_sys_mounted_getmntent1=no])
        ])
      if test $fu_cv_sys_mounted_getmntent1 = yes; then
        ac_list_mounted_fs=found
        AC_DEFINE([MOUNTED_GETMNTENT1], [1],
          [Define if there is a function named getmntent for reading the list
           of mounted file systems, and that function takes a single argument.
           (4.3BSD, SunOS, HP-UX, Irix)])
        AC_CHECK_FUNCS([setmntent endmntent hasmntopt])
      fi
    fi

    if test -z "$ac_list_mounted_fs"; then
      # Solaris >= 8.
      AC_CACHE_CHECK([for getextmntent function],
        [fu_cv_sys_mounted_getextmntent],
        [AC_EGREP_HEADER([getextmntent], [sys/mnttab.h],
           [fu_cv_sys_mounted_getextmntent=yes],
           [fu_cv_sys_mounted_getextmntent=no])])
      if test $fu_cv_sys_mounted_getextmntent = yes; then
        ac_list_mounted_fs=found
        AC_DEFINE([MOUNTED_GETEXTMNTENT], [1],
          [Define if there is a function named getextmntent for reading the list
           of mounted file systems.  (Solaris)])
      fi
    fi

    if test -z "$ac_list_mounted_fs"; then
      # Solaris < 8, also (obsolete) SVR4.
      # Solaris >= 8 has the two-argument getmntent but is already handled above.
      AC_CACHE_CHECK([for two-argument getmntent function],
        [fu_cv_sys_mounted_getmntent2],
        [AC_EGREP_HEADER([getmntent], [sys/mnttab.h],
           [fu_cv_sys_mounted_getmntent2=yes],
           [fu_cv_sys_mounted_getmntent2=no])
        ])
      if test $fu_cv_sys_mounted_getmntent2 = yes; then
        ac_list_mounted_fs=found
        AC_DEFINE([MOUNTED_GETMNTENT2], [1],
          [Define if there is a function named getmntent for reading the list of
           mounted file systems, and that function takes two arguments.  (SVR4)])
        AC_CHECK_FUNCS([hasmntopt])
      fi
    fi

  fi

  if test -z "$ac_list_mounted_fs"; then
    # OSF/1, also (obsolete) Apple Darwin 1.3.
    # powerpc-apple-darwin1.3.7 needs sys/param.h sys/ucred.h sys/fs_types.h

    AC_CACHE_CHECK([for getfsstat function],
      [fu_cv_sys_mounted_getfsstat],
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([[
#include <sys/types.h>
#if HAVE_STRUCT_FSSTAT_F_FSTYPENAME
# define FS_TYPE(Ent) ((Ent).f_fstypename)
#else
# define FS_TYPE(Ent) mnt_names[(Ent).f_type]
#endif
$getfsstat_includes
            ]],
            [[struct statfs *stats;
              int numsys = getfsstat ((struct statfs *)0, 0L, MNT_WAIT);
              char *t = FS_TYPE (*stats);
            ]])],
         [fu_cv_sys_mounted_getfsstat=yes],
         [fu_cv_sys_mounted_getfsstat=no])
      ])
    if test $fu_cv_sys_mounted_getfsstat = yes; then
      ac_list_mounted_fs=found
      AC_DEFINE([MOUNTED_GETFSSTAT], [1],
        [Define if there is a function named getfsstat for reading the
         list of mounted file systems.  (DEC Alpha running OSF/1)])
    fi
  fi

  if test -z "$ac_list_mounted_fs"; then
    # (obsolete) SVR3
    AC_CACHE_CHECK([for FIXME existence of three headers],
      [fu_cv_sys_mounted_fread_fstyp],
      [AC_PREPROC_IFELSE([AC_LANG_SOURCE([[
#include <sys/statfs.h>
#include <sys/fstyp.h>
#include <mnttab.h>
]])],
         [fu_cv_sys_mounted_fread_fstyp=yes],
         [fu_cv_sys_mounted_fread_fstyp=no])
      ])
    if test $fu_cv_sys_mounted_fread_fstyp = yes; then
      ac_list_mounted_fs=found
      AC_DEFINE([MOUNTED_FREAD_FSTYP], [1],
        [Define if (like SVR2) there is no specific function for reading the
         list of mounted file systems, and your system has these header files:
         <sys/fstyp.h> and <sys/statfs.h>.  (SVR3)])
    fi
  fi

  if test -z "$ac_list_mounted_fs"; then
    # Mac OS X, FreeBSD, NetBSD, OpenBSD, Minix, also (obsolete) 4.4BSD.
    # OSF/1 also has getmntinfo but is already handled above.
    # We cannot use AC_CHECK_FUNCS([getmntinfo]) here, because at the linker
    # level the function is sometimes called getmntinfo64 or getmntinfo$INODE64
    # on Mac OS X, __getmntinfo13 on NetBSD and Minix, _F64_getmntinfo on OSF/1.
    AC_CACHE_CHECK([for getmntinfo function],
      [fu_cv_sys_mounted_getmntinfo],
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([[
#if HAVE_SYS_PARAM_H
# include <sys/param.h>
#endif
#include <sys/types.h>
#if HAVE_SYS_MOUNT_H
# include <sys/mount.h>
#endif
#if HAVE_SYS_STATVFS_H
# include <sys/statvfs.h>
#endif
#include <stdlib.h>
            ]],
            [[int count = getmntinfo (NULL, MNT_WAIT);
            ]])],
         [fu_cv_sys_mounted_getmntinfo=yes],
         [fu_cv_sys_mounted_getmntinfo=no])
      ])
    if test $fu_cv_sys_mounted_getmntinfo = yes; then
      AC_CACHE_CHECK([whether getmntinfo returns statvfs structures],
        [fu_cv_sys_mounted_getmntinfo2],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
#if HAVE_SYS_PARAM_H
# include <sys/param.h>
#endif
#include <sys/types.h>
#if HAVE_SYS_MOUNT_H
# include <sys/mount.h>
#endif
#if HAVE_SYS_STATVFS_H
# include <sys/statvfs.h>
#endif
extern
#ifdef __cplusplus
"C"
#endif
int getmntinfo (struct statfs **, int);
              ]], [[]])],
           [fu_cv_sys_mounted_getmntinfo2=no],
           [fu_cv_sys_mounted_getmntinfo2=yes])
        ])
      if test $fu_cv_sys_mounted_getmntinfo2 = no; then
        # Mac OS X, FreeBSD, OpenBSD, also (obsolete) 4.4BSD.
        ac_list_mounted_fs=found
        AC_DEFINE([MOUNTED_GETMNTINFO], [1],
          [Define if there is a function named getmntinfo for reading the
           list of mounted file systems and it returns an array of
           'struct statfs'.  (4.4BSD, Darwin)])
      else
        # NetBSD, Minix.
        ac_list_mounted_fs=found
        AC_DEFINE([MOUNTED_GETMNTINFO2], [1],
          [Define if there is a function named getmntinfo for reading the
           list of mounted file systems and it returns an array of
           'struct statvfs'.  (NetBSD 3.0)])
      fi
    fi
  fi

  if test -z "$ac_list_mounted_fs"; then
    # Haiku, also (obsolete) BeOS.
    AC_CHECK_FUNCS([next_dev fs_stat_dev])
    AC_CHECK_HEADERS([fs_info.h])
    AC_CACHE_CHECK([for BEOS mounted file system support functions],
      [fu_cv_sys_mounted_fs_stat_dev],
      [if test $ac_cv_header_fs_info_h = yes \
          && test $ac_cv_func_next_dev = yes \
          && test $ac_cv_func_fs_stat_dev = yes; then
         fu_cv_sys_mounted_fs_stat_dev=yes
       else
         fu_cv_sys_mounted_fs_stat_dev=no
       fi
      ])
    if test $fu_cv_sys_mounted_fs_stat_dev = yes; then
      ac_list_mounted_fs=found
      AC_DEFINE([MOUNTED_FS_STAT_DEV], [1],
        [Define if there are functions named next_dev and fs_stat_dev for
         reading the list of mounted file systems.  (BeOS)])
    fi
  fi

  if test -z "$ac_list_mounted_fs"; then
    # Interix / BSD alike statvfs
    # the code is really interix specific, so make sure, we're on it.
    case "$host" in
      *-interix*)
        AC_CHECK_FUNCS([statvfs])
        if test $ac_cv_func_statvfs = yes; then
          ac_list_mounted_fs=found
          AC_DEFINE([MOUNTED_INTERIX_STATVFS], [1],
            [Define if we are on interix, and ought to use statvfs plus
             some special knowledge on where mounted file systems can be
             found. (Interix)])
        fi
        ;;
    esac
  fi

  if test -z "$ac_list_mounted_fs"; then
    AC_MSG_ERROR([could not determine how to read list of mounted file systems])
    # FIXME -- no need to abort building the whole package
    # Can't build mountlist.c or anything that needs its functions
  fi

  if test $ac_list_mounted_fs = found; then
    gl_cv_list_mounted_fs=yes
  else
    gl_cv_list_mounted_fs=no
  fi
])
m4trace:m4/mountlist.m4:322: -1- AC_DEFUN([gl_PREREQ_MOUNTLIST_EXTRA], [
  dnl Note gl_MOUNTLIST checks for mntent.h, not sys/mntent.h.
  AC_CHECK_HEADERS([sys/mntent.h])
  AC_HEADER_MAJOR()dnl for use of makedev ()
  gl_FSTYPENAME
])
m4trace:m4/mountlist.m4:332: -1- AC_DEFUN([AC_FUNC_GETMNTENT], [
  # getmntent is in the standard C library on most systems, but in -lgen on
  # Unixware.
  AC_SEARCH_LIBS([getmntent], [gen])
  AC_CHECK_FUNCS([getmntent])
])
m4trace:m4/mpsort.m4:9: -1- AC_DEFUN([gl_MPSORT], [
  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/msvc-inval.m4:7: -1- AC_DEFUN([gl_MSVC_INVAL], [
  AC_CHECK_FUNCS_ONCE([_set_invalid_parameter_handler])
  if test $ac_cv_func__set_invalid_parameter_handler = yes; then
    HAVE_MSVC_INVALID_PARAMETER_HANDLER=1
    AC_DEFINE([HAVE_MSVC_INVALID_PARAMETER_HANDLER], [1],
      [Define to 1 on MSVC platforms that have the "invalid parameter handler"
       concept.])
  else
    HAVE_MSVC_INVALID_PARAMETER_HANDLER=0
  fi
  AC_SUBST([HAVE_MSVC_INVALID_PARAMETER_HANDLER])
])
m4trace:m4/msvc-nothrow.m4:7: -1- AC_DEFUN([gl_MSVC_NOTHROW], [
  AC_REQUIRE([gl_MSVC_INVAL])
])
m4trace:m4/multiarch.m4:21: -1- AC_DEFUN_ONCE([gl_MULTIARCH], [
  dnl Code similar to autoconf-2.63 AC_C_BIGENDIAN.
  AC_CACHE_CHECK([whether the compiler produces multi-arch binaries],
    [gl_cv_c_multiarch],
    [gl_cv_c_multiarch=no
     AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE(
         [[#ifndef __APPLE_CC__
            not a universal capable compiler
           #endif
           typedef int dummy;
         ]])],
       [
        dnl Check for potential -arch flags.  It is not universal unless
        dnl there are at least two -arch flags with different values.
        arch=
        prev=
        for word in ${CC} ${CFLAGS} ${CPPFLAGS} ${LDFLAGS}; do
          if test -n "$prev"; then
            case $word in
              i?86 | x86_64 | ppc | ppc64 | arm | arm64)
                if test -z "$arch" || test "$arch" = "$word"; then
                  arch="$word"
                else
                  gl_cv_c_multiarch=yes
                fi
                ;;
            esac
            prev=
          else
            if test "x$word" = "x-arch"; then
              prev=arch
            fi
          fi
        done
       ])
    ])
  if test $gl_cv_c_multiarch = yes; then
    APPLE_UNIVERSAL_BUILD=1
  else
    APPLE_UNIVERSAL_BUILD=0
  fi
  AC_SUBST([APPLE_UNIVERSAL_BUILD])
])
m4trace:m4/musl.m4:12: -1- AC_DEFUN_ONCE([gl_MUSL_LIBC], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    *-musl*) AC_DEFINE([MUSL_LIBC], [1], [Define to 1 on musl libc.]) ;;
  esac
])
m4trace:m4/nanosleep.m4:14: -1- AC_DEFUN([gl_FUNC_NANOSLEEP], [
 AC_REQUIRE([gl_TIME_H_DEFAULTS])
 AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

 dnl Persuade glibc and Solaris <time.h> to declare nanosleep.
 AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

 AC_CHECK_DECLS_ONCE([alarm])

 nanosleep_save_libs=$LIBS

 # Solaris 2.5.1 needs -lposix4 to get the nanosleep function.
 # Solaris 7 prefers the library name -lrt to the obsolescent name -lposix4.
 LIB_NANOSLEEP=
 AC_SUBST([LIB_NANOSLEEP])
 AC_SEARCH_LIBS([nanosleep], [rt posix4],
                [test "$ac_cv_search_nanosleep" = "none required" ||
                 LIB_NANOSLEEP=$ac_cv_search_nanosleep])
 if test "x$ac_cv_search_nanosleep" != xno; then
   dnl The system has a nanosleep function.

   AC_REQUIRE([gl_MULTIARCH])
   if test $APPLE_UNIVERSAL_BUILD = 1; then
     # A universal build on Apple Mac OS X platforms.
     # The test result would be 'no (mishandles large arguments)' in 64-bit
     # mode but 'yes' in 32-bit mode. But we need a configuration result that
     # is valid in both modes.
     gl_cv_func_nanosleep='no (mishandles large arguments)'
   fi

   AC_CACHE_CHECK([for working nanosleep],
    [gl_cv_func_nanosleep],
    [
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
          #include <errno.h>
          #include <limits.h>
          #include <signal.h>
          #include <time.h>
          #include <unistd.h>
          #define TYPE_SIGNED(t) (! ((t) 0 < (t) -1))
          #define TYPE_MAXIMUM(t) \
            ((t) (! TYPE_SIGNED (t) \
                  ? (t) -1 \
                  : ((((t) 1 << (sizeof (t) * CHAR_BIT - 2)) - 1) * 2 + 1)))

          #if HAVE_DECL_ALARM
          static void
          check_for_SIGALRM (int sig)
          {
            if (sig != SIGALRM)
              _exit (1);
          }
          #endif

          int
          main ()
          {
            static struct timespec ts_sleep;
            static struct timespec ts_remaining;
            /* Test for major problems first.  */
            if (! nanosleep)
              return 2;
            ts_sleep.tv_sec = 0;
            ts_sleep.tv_nsec = 1;
            #if HAVE_DECL_ALARM
            {
              static struct sigaction act;
              act.sa_handler = check_for_SIGALRM;
              sigemptyset (&act.sa_mask);
              sigaction (SIGALRM, &act, NULL);
              alarm (1);
              if (nanosleep (&ts_sleep, NULL) != 0)
                return 3;
              /* Test for a minor problem: the handling of large arguments.  */
              ts_sleep.tv_sec = TYPE_MAXIMUM (time_t);
              ts_sleep.tv_nsec = 999999999;
              alarm (1);
              if (nanosleep (&ts_sleep, &ts_remaining) != -1)
                return 4;
              if (errno != EINTR)
                return 5;
              if (ts_remaining.tv_sec <= TYPE_MAXIMUM (time_t) - 10)
                return 6;
            }
            #else /* A simpler test for native Windows.  */
            if (nanosleep (&ts_sleep, &ts_remaining) < 0)
              return 3;
            #endif
            return 0;
          }]])],
       [gl_cv_func_nanosleep=yes],
       [case $? in dnl (
        4|5|6) gl_cv_func_nanosleep='no (mishandles large arguments)';; dnl (
        *)   gl_cv_func_nanosleep=no;;
        esac],
       [case "$host_os" in dnl ((
          linux*) # Guess it halfway works when the kernel is Linux.
            gl_cv_func_nanosleep='guessing no (mishandles large arguments)' ;;
          mingw*) # Guess no on native Windows.
            gl_cv_func_nanosleep='guessing no' ;;
          *)      # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_nanosleep="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
   case "$gl_cv_func_nanosleep" in
     *yes)
       REPLACE_NANOSLEEP=0
       ;;
     *)
       REPLACE_NANOSLEEP=1
       case "$gl_cv_func_nanosleep" in
         *"mishandles large arguments"*)
           AC_DEFINE([HAVE_BUG_BIG_NANOSLEEP], [1],
             [Define to 1 if nanosleep mishandles large arguments.])
           ;;
       esac
       ;;
   esac
 else
   HAVE_NANOSLEEP=0
 fi
 LIBS=$nanosleep_save_libs
])
m4trace:m4/netdb_h.m4:7: -1- AC_DEFUN_ONCE([gl_NETDB_H], [
  AC_REQUIRE([gl_NETDB_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([netdb.h])
  if test $ac_cv_header_netdb_h = yes; then
    HAVE_NETDB_H=1
  else
    HAVE_NETDB_H=0
  fi
  AC_SUBST([HAVE_NETDB_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <netdb.h>]],
    [getaddrinfo freeaddrinfo gai_strerror getnameinfo])
])
m4trace:m4/netdb_h.m4:28: -1- AC_DEFUN([gl_NETDB_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_NETDB_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/netdb_h.m4:40: -1- AC_DEFUN([gl_NETDB_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_NETDB_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETADDRINFO])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_NETDB_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_NETDB_H_DEFAULTS])
])
m4trace:m4/netdb_h.m4:49: -1- AC_DEFUN([gl_NETDB_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_STRUCT_ADDRINFO=1;   AC_SUBST([HAVE_STRUCT_ADDRINFO])
  HAVE_DECL_FREEADDRINFO=1; AC_SUBST([HAVE_DECL_FREEADDRINFO])
  HAVE_DECL_GAI_STRERROR=1; AC_SUBST([HAVE_DECL_GAI_STRERROR])
  HAVE_DECL_GETADDRINFO=1;  AC_SUBST([HAVE_DECL_GETADDRINFO])
  HAVE_DECL_GETNAMEINFO=1;  AC_SUBST([HAVE_DECL_GETNAMEINFO])
  REPLACE_GAI_STRERROR=0;   AC_SUBST([REPLACE_GAI_STRERROR])
  REPLACE_GETADDRINFO=0;    AC_SUBST([REPLACE_GETADDRINFO])
])
m4trace:m4/netinet_in_h.m4:7: -1- AC_DEFUN([gl_HEADER_NETINET_IN], [
  AC_CACHE_CHECK([whether <netinet/in.h> is self-contained],
    [gl_cv_header_netinet_in_h_selfcontained],
    [
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <netinet/in.h>]], [[]])],
        [gl_cv_header_netinet_in_h_selfcontained=yes],
        [gl_cv_header_netinet_in_h_selfcontained=no])
    ])
  if test $gl_cv_header_netinet_in_h_selfcontained = yes; then
    GL_GENERATE_NETINET_IN_H=false
  else
    GL_GENERATE_NETINET_IN_H=true
    AC_CHECK_HEADERS([netinet/in.h])
    gl_CHECK_NEXT_HEADERS([netinet/in.h])
    if test $ac_cv_header_netinet_in_h = yes; then
      HAVE_NETINET_IN_H=1
    else
      HAVE_NETINET_IN_H=0
    fi
    AC_SUBST([HAVE_NETINET_IN_H])
  fi
])
m4trace:m4/nl_langinfo.m4:7: -1- AC_DEFUN([gl_FUNC_NL_LANGINFO], [
  AC_REQUIRE([gl_LANGINFO_H_DEFAULTS])
  AC_REQUIRE([gl_LANGINFO_H])
  AC_CHECK_FUNCS_ONCE([nl_langinfo])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_FUNC_SETLOCALE_NULL])
  AC_REQUIRE([gl_PTHREADLIB])
  AC_CHECK_HEADERS_ONCE([threads.h])
  if test $ac_cv_func_nl_langinfo = yes; then
    # On Irix 6.5, YESEXPR is defined, but nl_langinfo(YESEXPR) is broken.
    AC_CACHE_CHECK([whether YESEXPR works],
      [gl_cv_func_nl_langinfo_yesexpr_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
]], [[return !*nl_langinfo(YESEXPR);
]])],
         [gl_cv_func_nl_langinfo_yesexpr_works=yes],
         [gl_cv_func_nl_langinfo_yesexpr_works=no],
         [
         case "$host_os" in
                   # Guess no on irix systems.
           irix*)  gl_cv_func_nl_langinfo_yesexpr_works="guessing no";;
                   # Guess yes elsewhere.
           *)      gl_cv_func_nl_langinfo_yesexpr_works="guessing yes";;
         esac
         ])
      ])
    case $gl_cv_func_nl_langinfo_yesexpr_works in
      *yes) FUNC_NL_LANGINFO_YESEXPR_WORKS=1 ;;
      *)    FUNC_NL_LANGINFO_YESEXPR_WORKS=0 ;;
    esac
    AC_DEFINE_UNQUOTED([FUNC_NL_LANGINFO_YESEXPR_WORKS],
      [$FUNC_NL_LANGINFO_YESEXPR_WORKS],
      [Define to 1 if nl_langinfo (YESEXPR) returns a non-empty string.])
    # On Solaris 10 and Solaris 11.3, nl_langinfo is not multithread-safe.
    case "$host_os" in
      solaris*) NL_LANGINFO_MTSAFE=0 ;;
      *)        NL_LANGINFO_MTSAFE=1 ;;
    esac
    AC_DEFINE_UNQUOTED([NL_LANGINFO_MTSAFE], [$NL_LANGINFO_MTSAFE],
      [Define to 1 if nl_langinfo is multithread-safe.])
    if test $HAVE_LANGINFO_CODESET = 1 \
       && test $HAVE_LANGINFO_T_FMT_AMPM = 1 \
       && test $HAVE_LANGINFO_ALTMON = 1 \
       && test $HAVE_LANGINFO_ERA = 1 \
       && test $FUNC_NL_LANGINFO_YESEXPR_WORKS = 1 \
       && test $NL_LANGINFO_MTSAFE = 1; then
      :
    else
      REPLACE_NL_LANGINFO=1
      AC_DEFINE([REPLACE_NL_LANGINFO], [1],
        [Define if nl_langinfo exists but is overridden by gnulib.])
    fi
  else
    HAVE_NL_LANGINFO=0
  fi
  if test $HAVE_NL_LANGINFO = 0 || test $HAVE_LANGINFO_CODESET = 0; then
    LIB_NL_LANGINFO="$LIB_SETLOCALE_NULL"
  else
    LIB_NL_LANGINFO=
  fi
  dnl LIB_NL_LANGINFO is expected to be empty everywhere.
  AC_SUBST([LIB_NL_LANGINFO])
])
m4trace:m4/nl_langinfo.m4:74: -1- AC_DEFUN([gl_PREREQ_NL_LANGINFO_LOCK], [
  gl_VISIBILITY
])
m4trace:m4/nls.m4:23: -1- AC_DEFUN([AM_NLS], [
  AC_MSG_CHECKING([whether NLS is requested])
  dnl Default is enabled NLS
  AC_ARG_ENABLE([nls],
    [  --disable-nls           do not use Native Language Support],
    USE_NLS=$enableval, USE_NLS=yes)
  AC_MSG_RESULT([$USE_NLS])
  AC_SUBST([USE_NLS])
])
m4trace:m4/nocrash.m4:18: -1- AC_DEFUN([GL_NOCRASH], [[
#include <stdlib.h>
#if defined __MACH__ && defined __APPLE__
/* Avoid a crash on Mac OS X.  */
#include <mach/mach.h>
#include <mach/mach_error.h>
#include <mach/thread_status.h>
#include <mach/exception.h>
#include <mach/task.h>
#include <pthread.h>
/* The exception port on which our thread listens.  */
static mach_port_t our_exception_port;
/* The main function of the thread listening for exceptions of type
   EXC_BAD_ACCESS.  */
static void *
mach_exception_thread (void *arg)
{
  /* Buffer for a message to be received.  */
  struct {
    mach_msg_header_t head;
    mach_msg_body_t msgh_body;
    char data[1024];
  } msg;
  mach_msg_return_t retval;
  /* Wait for a message on the exception port.  */
  retval = mach_msg (&msg.head, MACH_RCV_MSG | MACH_RCV_LARGE, 0, sizeof (msg),
                     our_exception_port, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);
  if (retval != MACH_MSG_SUCCESS)
    abort ();
  exit (1);
}
static void
nocrash_init (void)
{
  mach_port_t self = mach_task_self ();
  /* Allocate a port on which the thread shall listen for exceptions.  */
  if (mach_port_allocate (self, MACH_PORT_RIGHT_RECEIVE, &our_exception_port)
      == KERN_SUCCESS) {
    /* See https://web.mit.edu/darwin/src/modules/xnu/osfmk/man/mach_port_insert_right.html.  */
    if (mach_port_insert_right (self, our_exception_port, our_exception_port,
                                MACH_MSG_TYPE_MAKE_SEND)
        == KERN_SUCCESS) {
      /* The exceptions we want to catch.  Only EXC_BAD_ACCESS is interesting
         for us.  */
      exception_mask_t mask = EXC_MASK_BAD_ACCESS;
      /* Create the thread listening on the exception port.  */
      pthread_attr_t attr;
      pthread_t thread;
      if (pthread_attr_init (&attr) == 0
          && pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED) == 0
          && pthread_create (&thread, &attr, mach_exception_thread, NULL) == 0) {
        pthread_attr_destroy (&attr);
        /* Replace the exception port info for these exceptions with our own.
           Note that we replace the exception port for the entire task, not only
           for a particular thread.  This has the effect that when our exception
           port gets the message, the thread specific exception port has already
           been asked, and we don't need to bother about it.
           See https://web.mit.edu/darwin/src/modules/xnu/osfmk/man/task_set_exception_ports.html.  */
        task_set_exception_ports (self, mask, our_exception_port,
                                  EXCEPTION_DEFAULT, MACHINE_THREAD_STATE);
      }
    }
  }
}
#elif defined _WIN32 && ! defined __CYGWIN__
/* Avoid a crash on native Windows.  */
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <winerror.h>
static LONG WINAPI
exception_filter (EXCEPTION_POINTERS *ExceptionInfo)
{
  switch (ExceptionInfo->ExceptionRecord->ExceptionCode)
    {
    case EXCEPTION_ACCESS_VIOLATION:
    case EXCEPTION_IN_PAGE_ERROR:
    case EXCEPTION_STACK_OVERFLOW:
    case EXCEPTION_GUARD_PAGE:
    case EXCEPTION_PRIV_INSTRUCTION:
    case EXCEPTION_ILLEGAL_INSTRUCTION:
    case EXCEPTION_DATATYPE_MISALIGNMENT:
    case EXCEPTION_ARRAY_BOUNDS_EXCEEDED:
    case EXCEPTION_NONCONTINUABLE_EXCEPTION:
      exit (1);
    }
  return EXCEPTION_CONTINUE_SEARCH;
}
static void
nocrash_init (void)
{
  SetUnhandledExceptionFilter ((LPTOP_LEVEL_EXCEPTION_FILTER) exception_filter);
}
#else
/* Avoid a crash on POSIX systems.  */
#include <signal.h>
#include <unistd.h>
/* A POSIX signal handler.  */
static void
exception_handler (int sig)
{
  _exit (1);
}
static void
nocrash_init (void)
{
#ifdef SIGSEGV
  signal (SIGSEGV, exception_handler);
#endif
#ifdef SIGBUS
  signal (SIGBUS, exception_handler);
#endif
}
#endif
]])
m4trace:m4/nproc.m4:7: -1- AC_DEFUN([gl_NPROC], [
  gl_PREREQ_NPROC
])
m4trace:m4/nproc.m4:13: -1- AC_DEFUN([gl_PREREQ_NPROC], [
  dnl Persuade glibc <sched.h> to declare CPU_SETSIZE, CPU_ISSET etc.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_HEADERS([sys/pstat.h sys/sysmp.h sys/param.h],,,
    [AC_INCLUDES_DEFAULT])
  dnl <sys/sysctl.h> requires <sys/param.h> on OpenBSD 4.0.
  AC_CHECK_HEADERS([sys/sysctl.h],,,
    [AC_INCLUDES_DEFAULT
     #if HAVE_SYS_PARAM_H
     # include <sys/param.h>
     #endif
    ])

  AC_CHECK_FUNCS([sched_getaffinity sched_getaffinity_np \
                  pstat_getdynamic sysmp sysctl])

  dnl Test whether sched_getaffinity has the expected declaration.
  dnl glibc 2.3.[0-2]:
  dnl   int sched_getaffinity (pid_t, unsigned int, unsigned long int *);
  dnl glibc 2.3.3:
  dnl   int sched_getaffinity (pid_t, cpu_set_t *);
  dnl glibc >= 2.3.4:
  dnl   int sched_getaffinity (pid_t, size_t, cpu_set_t *);
  if test $ac_cv_func_sched_getaffinity = yes; then
    AC_CACHE_CHECK([for glibc compatible sched_getaffinity],
      [gl_cv_func_sched_getaffinity3],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <errno.h>
              #include <sched.h>]],
            [[sched_getaffinity (0, 0, (cpu_set_t *) 0);]])],
         [gl_cv_func_sched_getaffinity3=yes],
         [gl_cv_func_sched_getaffinity3=no])
      ])
    if test $gl_cv_func_sched_getaffinity3 = yes; then
      AC_DEFINE([HAVE_SCHED_GETAFFINITY_LIKE_GLIBC], [1],
        [Define to 1 if sched_getaffinity has a glibc compatible declaration.])
    fi
  fi
])
m4trace:m4/nstrftime.m4:11: -1- AC_DEFUN([gl_FUNC_GNU_STRFTIME], [
 AC_REQUIRE([AC_C_RESTRICT])

 # This defines (or not) HAVE_TZNAME and HAVE_STRUCT_TM_TM_ZONE.
 AC_REQUIRE([AC_STRUCT_TIMEZONE])

 AC_REQUIRE([gl_TM_GMTOFF])

 AC_DEFINE([my_strftime], [nstrftime],
   [Define to the name of the strftime replacement function.])
])
m4trace:m4/obstack.m4:11: -1- AC_DEFUN([gl_FUNC_OBSTACK], [
  AC_CACHE_CHECK([for obstacks that work with any size object],
    [gl_cv_func_obstack],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include "obstack.h"
            void *obstack_chunk_alloc (size_t n) { return 0; }
            void obstack_chunk_free (void *p) { }
            /* Check that an internal function returns size_t, not int.  */
            size_t _obstack_memory_used (struct obstack *);
           ]],
          [[struct obstack mem;
            obstack_init (&mem);
            obstack_free (&mem, 0);
          ]])],
       [gl_cv_func_obstack=yes],
       [gl_cv_func_obstack=no])])
  if test "$gl_cv_func_obstack" = yes; then
    AC_DEFINE([HAVE_OBSTACK], 1,
      [Define to 1 if the system has obstacks that work with any size object.])
  fi
])
m4trace:m4/off_t.m4:10: -1- AC_DEFUN([gl_TYPE_OFF_T], [
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_OFF_T=0
  ])
  AC_SUBST([WINDOWS_64_BIT_OFF_T])
])
m4trace:m4/open-cloexec.m4:8: -1- AC_DEFUN([gl_PREPROC_O_CLOEXEC], [
  AC_CACHE_CHECK([for O_CLOEXEC],
    [gl_cv_macro_O_CLOEXEC],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <fcntl.h>
                          #ifndef O_CLOEXEC
                            choke me;
                          #endif
                        ]],
                        [[return O_CLOEXEC;]])],
       [gl_cv_macro_O_CLOEXEC=yes],
       [gl_cv_macro_O_CLOEXEC=no])])
])
m4trace:m4/open-slash.m4:9: -1- AC_DEFUN([gl_OPEN_TRAILING_SLASH_BUG], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl open("foo/") should not create a file when the file name has a
  dnl trailing slash.  FreeBSD only has the problem on symlinks.
  AC_CHECK_FUNCS_ONCE([lstat])
  AC_CACHE_CHECK([whether open recognizes a trailing slash],
    [gl_cv_func_open_slash],
    [# Assume that if we have lstat, we can also check symlinks.
     if test $ac_cv_func_lstat = yes; then
       touch conftest.tmp
       ln -s conftest.tmp conftest.lnk
     fi
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#include <fcntl.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
]GL_MDA_DEFINES[
int main ()
{
  int result = 0;
#if HAVE_LSTAT
  if (open ("conftest.lnk/", O_RDONLY) != -1)
    result |= 1;
#endif
  if (open ("conftest.sl/", O_CREAT, 0600) >= 0)
    result |= 2;
  return result;
}]])],
       [gl_cv_func_open_slash=yes],
       [gl_cv_func_open_slash=no],
       [
changequote(,)dnl
        case "$host_os" in
          freebsd* | aix* | hpux* | solaris2.[0-9] | solaris2.[0-9].*)
            gl_cv_func_open_slash="guessing no" ;;
          *)
            gl_cv_func_open_slash="guessing yes" ;;
        esac
changequote([,])dnl
       ])
     rm -f conftest.sl conftest.tmp conftest.lnk
    ])
  case "$gl_cv_func_open_slash" in
    *no)
      AC_DEFINE([OPEN_TRAILING_SLASH_BUG], [1],
        [Define to 1 if open() fails to recognize a trailing slash.])
      ;;
  esac
])
m4trace:m4/open.m4:7: -1- AC_DEFUN([gl_FUNC_OPEN], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PREPROC_O_CLOEXEC])
  case "$host_os" in
    mingw* | pw*)
      REPLACE_OPEN=1
      ;;
    *)
      dnl open("foo/") should not create a file when the file name has a
      dnl trailing slash.  FreeBSD only has the problem on symlinks.
      AC_CHECK_FUNCS_ONCE([lstat])
      if test "$gl_cv_macro_O_CLOEXEC" != yes; then
        REPLACE_OPEN=1
      fi
      gl_OPEN_TRAILING_SLASH_BUG
      case "$gl_cv_func_open_slash" in
        *no)
          REPLACE_OPEN=1
          ;;
      esac
      ;;
  esac
  dnl Replace open() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    if test $REPLACE_OPEN = 0; then
      gl_TEST_FCHDIR
      if test $HAVE_FCHDIR = 0; then
        REPLACE_OPEN=1
      fi
    fi
  ])
  dnl Replace open() for supporting the gnulib-defined O_NONBLOCK flag.
  m4_ifdef([gl_NONBLOCKING_IO], [
    if test $REPLACE_OPEN = 0; then
      gl_NONBLOCKING_IO
      if test $gl_cv_have_open_O_NONBLOCK != yes; then
        REPLACE_OPEN=1
      fi
    fi
  ])
])
m4trace:m4/open.m4:52: -1- AC_DEFUN([gl_PREREQ_OPEN], [
  AC_REQUIRE([gl_PROMOTED_TYPE_MODE_T])
  :
])
m4trace:m4/openat.m4:11: -1- AC_DEFUN([gl_FUNC_OPENAT], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([openat])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_REQUIRE([gl_PREPROC_O_CLOEXEC])
  case $ac_cv_func_openat+$gl_cv_func_lstat_dereferences_slashed_symlink+$gl_cv_macro_O_CLOEXEC in
  yes+*yes+yes)
    ;;
  yes+*)
    # Solaris 10 lacks O_CLOEXEC.
    # Solaris 9 has *at functions, but uniformly mishandles trailing
    # slash in all of them.
    REPLACE_OPENAT=1
    ;;
  *)
    HAVE_OPENAT=0
    ;;
  esac
])
m4trace:m4/openat.m4:34: -1- AC_DEFUN([gl_PREREQ_OPENAT], [
  AC_REQUIRE([gl_PROMOTED_TYPE_MODE_T])
  :
])
m4trace:m4/opendir.m4:7: -1- AC_DEFUN([gl_FUNC_OPENDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_FUNCS([opendir])
  if test $ac_cv_func_opendir = no; then
    HAVE_OPENDIR=0
  fi
  dnl Replace opendir() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      if test $HAVE_OPENDIR = 1; then
        REPLACE_OPENDIR=1
      fi
    fi
  ])
  dnl Replace opendir() on OS/2 kLIBC to support dirfd() function replaced
  dnl by gnulib.
  case $host_os,$HAVE_OPENDIR in
    os2*,1)
      REPLACE_OPENDIR=1;;
  esac
])
m4trace:m4/parse-datetime.m4:13: -1- AC_DEFUN([gl_C_COMPOUND_LITERALS], [
  AC_CACHE_CHECK([for compound literals], [gl_cv_compound_literals],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[struct s { int i, j; };]],
          [[struct s t = (struct s) { 3, 4 };
            if (t.i != 0) return 0;]])
       ],
       [gl_cv_compound_literals=yes],
       [gl_cv_compound_literals=no])
    ])
  if test $gl_cv_compound_literals = yes; then
    AC_DEFINE([HAVE_COMPOUND_LITERALS], [1],
      [Define if you have compound literals.])
  fi
])
m4trace:m4/parse-datetime.m4:31: -1- AC_DEFUN([gl_PARSE_DATETIME], [
  dnl parse-datetime.c is generated from parse-datetime.y. It requires bison,
  dnl because parse-datetime.y uses bison specific features. It requires at
  dnl least bison-2.4 for %define api.pure.
  dnl bison is only needed for the maintainer (who touches parse-datetime.y).
  dnl But in order to avoid separate Makefiles or --enable-maintainer-mode,
  dnl we put the rule in general Makefile. Now, some people carelessly touch
  dnl the files or have a broken "make" program, hence the parse-datetime.c
  dnl rule will sometimes fire. To avoid an error, defines PARSE_DATETIME_BISON
  dnl to ":" if it is not present or too old.
  gl_PROG_BISON([PARSE_DATETIME_BISON], [2.4])

  dnl Prerequisites of lib/parse-datetime.h.
  AC_REQUIRE([gl_TIMESPEC])
  AC_REQUIRE([AC_C_RESTRICT])

  dnl Prerequisites of lib/parse-datetime.y.
  AC_REQUIRE([gl_BISON])
  AC_REQUIRE([gl_C_COMPOUND_LITERALS])
  AC_STRUCT_TIMEZONE
  AC_REQUIRE([gl_CLOCK_TIME])
  AC_REQUIRE([gl_TM_GMTOFF])
])
m4trace:m4/pathmax.m4:8: -1- AC_DEFUN([gl_PATHMAX], [
  dnl Prerequisites of lib/pathmax.h.
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/pathmax.m4:16: -1- AC_DEFUN([gl_PATHMAX_SNIPPET], [[
/* Arrange to define PATH_MAX, like "pathmax.h" does. */
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
#include <limits.h>
#if defined HAVE_SYS_PARAM_H && !defined PATH_MAX && !defined MAXPATHLEN
# include <sys/param.h>
#endif
#if !defined PATH_MAX && defined MAXPATHLEN
# define PATH_MAX MAXPATHLEN
#endif
#ifdef __hpux
# undef PATH_MAX
# define PATH_MAX 1024
#endif
#if defined _WIN32 && ! defined __CYGWIN__
# undef PATH_MAX
# define PATH_MAX 260
#endif
]])
m4trace:m4/pathmax.m4:39: -1- AC_DEFUN([gl_PATHMAX_SNIPPET_PREREQ], [
  AC_CHECK_HEADERS_ONCE([unistd.h sys/param.h])
])
m4trace:m4/perl.m4:13: -1- AC_DEFUN([gl_PERL], [
  dnl FIXME: don't hard-code 5.005
AC_CACHE_CHECK([for Perl 5.005 or newer],
 [gl_cv_prog_perl],
 [
  if test "${PERL+set}" = set; then
    # 'PERL' is set in the user's environment.
    candidate_perl_names="$PERL"
    perl_specified=yes
  else
    candidate_perl_names='perl perl5'
    perl_specified=no
  fi

  gl_cv_prog_perl=no
  for perl in $candidate_perl_names; do
    # Run test in a subshell; some versions of sh will print an error if
    # an executable is not found, even if stderr is redirected.
    if ( $perl -e 'require 5.005; use File::Compare; use warnings;' ) > /dev/null 2>&1; then
      gl_cv_prog_perl=$perl
      break
    fi
  done
 ])

if test "$gl_cv_prog_perl" != no; then
  PERL=$gl_cv_prog_perl
else
  PERL="$am_missing_run perl"
  AC_MSG_WARN([
WARNING: You don't seem to have perl5.005 or newer installed, or you lack
         a usable version of the Perl File::Compare module.  As a result,
         you may be unable to run a few tests or to regenerate certain
         files if you modify the sources from which they are derived.
] )
fi

AC_SUBST([PERL])

])
m4trace:m4/perror.m4:7: -1- AC_DEFUN([gl_FUNC_PERROR], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  AC_REQUIRE([gl_FUNC_STRERROR_R])
  AC_REQUIRE([gl_FUNC_STRERROR_0])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl We intentionally do not check for the broader REPLACE_STRERROR_R,
  dnl since on glibc systems, strerror_r is replaced only for signature
  dnl issues, and perror is just fine.  Rather, we only want to
  dnl replace perror if strerror_r was replaced for a content fix.
  if test "$GL_GENERATE_ERRNO_H:$REPLACE_STRERROR_0" != false:0; then
    dnl The system's perror() cannot know about the new errno values we add
    dnl to <errno.h>, or any fix for strerror(0). Replace it.
    REPLACE_PERROR=1
  fi
  case ${gl_cv_func_strerror_r_works-unset} in
    unset|*yes)
      AC_CACHE_CHECK([whether perror matches strerror],
        [gl_cv_func_perror_works],
        [AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <errno.h>
                #include <stdio.h>
                #include <stdlib.h>
                #include <string.h>
              ]],
              [[char *str = strerror (-1);
                if (!getenv("CONFTEST_OUTPUT")) return 0;
                if (!str) str = "";
                puts (str);
                errno = -1;
                perror ("");
                return 0;
              ]])],
           [if CONFTEST_OUTPUT=1 ./conftest$EXEEXT >conftest.txt1 2>conftest.txt2 \
               && cmp conftest.txt1 conftest.txt2 >/dev/null; then
              gl_cv_func_perror_works=yes
            else
              gl_cv_func_perror_works=no
            fi
            rm -rf conftest.txt1 conftest.txt2],
           [gl_cv_func_perror_works=no],
           [case "$host_os" in
                       # Guess yes on musl systems.
              *-musl*) gl_cv_func_perror_works="guessing yes" ;;
                       # Guess yes on native Windows.
              mingw*)  gl_cv_func_perror_works="guessing yes" ;;
                       # Otherwise obey --enable-cross-guesses.
              *)       gl_cv_func_perror_works="$gl_cross_guess_normal" ;;
            esac
           ])
        ])
      case "$gl_cv_func_perror_works" in
        *yes) ;;
        *) REPLACE_PERROR=1 ;;
      esac
      ;;
    *)
      dnl The system's perror() probably inherits the bugs in the
      dnl system's strerror_r(). Replace it.
      REPLACE_PERROR=1
      ;;
  esac
])
m4trace:m4/physmem.m4:10: -1- AC_DEFUN([gl_SYS__SYSTEM_CONFIGURATION], [AC_CACHE_CHECK([for external symbol _system_configuration],
                  [gl_cv_var__system_configuration],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM(
                      [[#include <sys/systemcfg.h>
                      ]],
                      [[double x = _system_configuration.physmem;
                        if (x > 0.0) return 0;]])],
      [gl_cv_var__system_configuration=yes],
      [gl_cv_var__system_configuration=no])])

    if test $gl_cv_var__system_configuration = yes; then
      AC_DEFINE([HAVE__SYSTEM_CONFIGURATION], [1],
                [Define to 1 if you have the external variable,
                _system_configuration with a member named physmem.])
    fi
  
])
m4trace:m4/physmem.m4:29: -1- AC_DEFUN([gl_PHYSMEM], [
  # Prerequisites of lib/physmem.c.
  AC_CHECK_HEADERS([sys/pstat.h sys/sysmp.h sys/sysinfo.h \
    machine/hal_sysinfo.h sys/table.h sys/param.h sys/systemcfg.h],,,
    [AC_INCLUDES_DEFAULT])
  dnl <sys/sysctl.h> requires <sys/param.h> on OpenBSD 4.0.
  AC_CHECK_HEADERS([sys/sysctl.h],,,
    [AC_INCLUDES_DEFAULT
     #if HAVE_SYS_PARAM_H
     # include <sys/param.h>
     #endif
    ])

  AC_CHECK_FUNCS([pstat_getstatic pstat_getdynamic sysmp getsysinfo sysctl table sysinfo])
  AC_CHECK_MEMBERS([struct sysinfo.mem_unit],,, [[#include <sys/sysinfo.h>]])
  AC_REQUIRE([gl_SYS__SYSTEM_CONFIGURATION])
])
m4trace:m4/pipe.m4:7: -1- AC_DEFUN([gl_FUNC_PIPE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  AC_CHECK_FUNCS_ONCE([pipe])
  if test $ac_cv_func_pipe != yes; then
    HAVE_PIPE=0
  fi
])
m4trace:m4/pipe2.m4:7: -1- AC_DEFUN([gl_FUNC_PIPE2], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare pipe2().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([pipe2])
  if test $ac_cv_func_pipe2 != yes; then
    HAVE_PIPE2=0
  fi
])
m4trace:m4/po.m4:23: -1- AC_DEFUN([AM_PO_SUBDIRS], [
  AC_REQUIRE([AC_PROG_MAKE_SET])dnl
  AC_REQUIRE([AC_PROG_INSTALL])dnl
  AC_REQUIRE([AC_PROG_MKDIR_P])dnl
  AC_REQUIRE([AC_PROG_SED])dnl
  AC_REQUIRE([AM_NLS])dnl

  dnl Release version of the gettext macros. This is used to ensure that
  dnl the gettext macros and po/Makefile.in.in are in sync.
  AC_SUBST([GETTEXT_MACRO_VERSION], [0.19])

  dnl Perform the following tests also if --disable-nls has been given,
  dnl because they are needed for "make dist" to work.

  dnl Search for GNU msgfmt in the PATH.
  dnl The first test excludes Solaris msgfmt and early GNU msgfmt versions.
  dnl The second test excludes FreeBSD msgfmt.
  AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,
    [$ac_dir/$ac_word --statistics /dev/null >&]AS_MESSAGE_LOG_FD[ 2>&1 &&
     (if $ac_dir/$ac_word --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi)],
    :)
  AC_PATH_PROG([GMSGFMT], [gmsgfmt], [$MSGFMT])

  dnl Test whether it is GNU msgfmt >= 0.15.
changequote(,)dnl
  case `$MSGFMT --version | sed 1q | sed -e 's,^[^0-9]*,,'` in
    '' | 0.[0-9] | 0.[0-9].* | 0.1[0-4] | 0.1[0-4].*) MSGFMT_015=: ;;
    *) MSGFMT_015=$MSGFMT ;;
  esac
changequote([,])dnl
  AC_SUBST([MSGFMT_015])
changequote(,)dnl
  case `$GMSGFMT --version | sed 1q | sed -e 's,^[^0-9]*,,'` in
    '' | 0.[0-9] | 0.[0-9].* | 0.1[0-4] | 0.1[0-4].*) GMSGFMT_015=: ;;
    *) GMSGFMT_015=$GMSGFMT ;;
  esac
changequote([,])dnl
  AC_SUBST([GMSGFMT_015])

  dnl Search for GNU xgettext 0.12 or newer in the PATH.
  dnl The first test excludes Solaris xgettext and early GNU xgettext versions.
  dnl The second test excludes FreeBSD xgettext.
  AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,
    [$ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >&]AS_MESSAGE_LOG_FD[ 2>&1 &&
     (if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi)],
    :)
  dnl Remove leftover from FreeBSD xgettext call.
  rm -f messages.po

  dnl Test whether it is GNU xgettext >= 0.15.
changequote(,)dnl
  case `$XGETTEXT --version | sed 1q | sed -e 's,^[^0-9]*,,'` in
    '' | 0.[0-9] | 0.[0-9].* | 0.1[0-4] | 0.1[0-4].*) XGETTEXT_015=: ;;
    *) XGETTEXT_015=$XGETTEXT ;;
  esac
changequote([,])dnl
  AC_SUBST([XGETTEXT_015])

  dnl Search for GNU msgmerge 0.11 or newer in the PATH.
  AM_PATH_PROG_WITH_TEST(MSGMERGE, msgmerge,
    [$ac_dir/$ac_word --update -q /dev/null /dev/null >&]AS_MESSAGE_LOG_FD[ 2>&1], :)

  dnl Installation directories.
  dnl Autoconf >= 2.60 defines localedir. For older versions of autoconf, we
  dnl have to define it here, so that it can be used in po/Makefile.
  test -n "$localedir" || localedir='${datadir}/locale'
  AC_SUBST([localedir])

  dnl Support for AM_XGETTEXT_OPTION.
  test -n "${XGETTEXT_EXTRA_OPTIONS+set}" || XGETTEXT_EXTRA_OPTIONS=
  AC_SUBST([XGETTEXT_EXTRA_OPTIONS])

  AC_CONFIG_COMMANDS([po-directories], [[
    for ac_file in $CONFIG_FILES; do
      # Support "outfile[:infile[:infile...]]"
      case "$ac_file" in
        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
      esac
      # PO directories have a Makefile.in generated from Makefile.in.in.
      case "$ac_file" in */Makefile.in)
        # Adjust a relative srcdir.
        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
        # In autoconf-2.13 it is called $ac_given_srcdir.
        # In autoconf-2.50 it is called $srcdir.
        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
        case "$ac_given_srcdir" in
          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
          /*) top_srcdir="$ac_given_srcdir" ;;
          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
        esac
        # Treat a directory as a PO directory if and only if it has a
        # POTFILES.in file. This allows packages to have multiple PO
        # directories under different names or in different locations.
        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
          rm -f "$ac_dir/POTFILES"
          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
          gt_tab=`printf '\t'`
          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ ${gt_tab}]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
          POMAKEFILEDEPS="POTFILES.in"
          # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
          # on $ac_dir but don't depend on user-specified configuration
          # parameters.
          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
            # The LINGUAS file contains the set of available languages.
            if test -n "$OBSOLETE_ALL_LINGUAS"; then
              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
            fi
            ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
            # Hide the ALL_LINGUAS assignment from automake < 1.5.
            eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
          else
            # The set of available languages was given in configure.in.
            # Hide the ALL_LINGUAS assignment from automake < 1.5.
            eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
          fi
          # Compute POFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
          # Compute UPDATEPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
          # Compute DUMMYPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
          # Compute GMOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
          case "$ac_given_srcdir" in
            .) srcdirpre= ;;
            *) srcdirpre='$(srcdir)/' ;;
          esac
          POFILES=
          UPDATEPOFILES=
          DUMMYPOFILES=
          GMOFILES=
          for lang in $ALL_LINGUAS; do
            POFILES="$POFILES $srcdirpre$lang.po"
            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
          done
          # CATALOGS depends on both $ac_dir and the user's LINGUAS
          # environment variable.
          INST_LINGUAS=
          if test -n "$ALL_LINGUAS"; then
            for presentlang in $ALL_LINGUAS; do
              useit=no
              if test "%UNSET%" != "$LINGUAS"; then
                desiredlanguages="$LINGUAS"
              else
                desiredlanguages="$ALL_LINGUAS"
              fi
              for desiredlang in $desiredlanguages; do
                # Use the presentlang catalog if desiredlang is
                #   a. equal to presentlang, or
                #   b. a variant of presentlang (because in this case,
                #      presentlang can be used as a fallback for messages
                #      which are not translated in the desiredlang catalog).
                case "$desiredlang" in
                  "$presentlang"*) useit=yes;;
                esac
              done
              if test $useit = yes; then
                INST_LINGUAS="$INST_LINGUAS $presentlang"
              fi
            done
          fi
          CATALOGS=
          if test -n "$INST_LINGUAS"; then
            for lang in $INST_LINGUAS; do
              CATALOGS="$CATALOGS $lang.gmo"
            done
          fi
          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
            if test -f "$f"; then
              case "$f" in
                *.orig | *.bak | *~) ;;
                *) cat "$f" >> "$ac_dir/Makefile" ;;
              esac
            fi
          done
        fi
        ;;
      esac
    done]],
   [# Capture the value of obsolete ALL_LINGUAS because we need it to compute
    # POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES, CATALOGS. But hide it
    # from automake < 1.5.
    eval 'OBSOLETE_ALL_LINGUAS''="$ALL_LINGUAS"'
    # Capture the value of LINGUAS because we need it to compute CATALOGS.
    LINGUAS="${LINGUAS-%UNSET%}"
   ])
])
m4trace:m4/po.m4:220: -1- AC_DEFUN([AM_POSTPROCESS_PO_MAKEFILE], [
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

changequote(,)dnl
  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT
$*
EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  tab=`printf '\t'`
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^['"${tab}"' ]*VARIABLE['"${tab}"' ]*=/{
  # Seen the first line of the variable definition.
  s/^['"${tab}"' ]*VARIABLE['"${tab}"' ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'
changequote([,])dnl

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS_=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Hide the ALL_LINGUAS assignment from automake < 1.5.
  eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(top_srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(top_srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(top_srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang"*) useit=yes;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  tab=`printf '\t'`
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
${tab}@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
${tab}\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
${tab}@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
${tab}\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
])
m4trace:m4/po.m4:443: -1- AC_DEFUN([AM_XGETTEXT_OPTION_INIT], [
  XGETTEXT_EXTRA_OPTIONS=
])
m4trace:m4/po.m4:449: -1- AC_DEFUN([AM_XGETTEXT_OPTION], [
  AC_REQUIRE([AM_XGETTEXT_OPTION_INIT])
  XGETTEXT_EXTRA_OPTIONS="$XGETTEXT_EXTRA_OPTIONS $1"
])
m4trace:m4/posix-shell.m4:15: -1- AC_DEFUN([gl_POSIX_SHELL], [
  AC_CACHE_CHECK([for a shell that conforms to POSIX], [gl_cv_posix_shell],
    [gl_test_posix_shell_script='
       func_return () {
         (exit [$]1)
       }
       func_success () {
         func_return 0
       }
       func_failure () {
         func_return 1
       }
       func_ret_success () {
         return 0
       }
       func_ret_failure () {
         return 1
       }
       subshell_umask_sanity () {
         (umask 22; (umask 0); test $(umask) -eq 22)
       }
       test "[$](echo foo)" = foo &&
       func_success &&
       ! func_failure &&
       func_ret_success &&
       ! func_ret_failure &&
       (set x && func_ret_success y && test x = "[$]1") &&
       subshell_umask_sanity
     '
     for gl_cv_posix_shell in \
         "$CONFIG_SHELL" "$SHELL" /bin/sh /bin/bash /bin/ksh /bin/sh5 no; do
       case $gl_cv_posix_shell in
         /*)
           "$gl_cv_posix_shell" -c "$gl_test_posix_shell_script" 2>/dev/null \
             && break;;
       esac
     done])

  if test "$gl_cv_posix_shell" != no; then
    POSIX_SHELL=$gl_cv_posix_shell
    PREFERABLY_POSIX_SHELL=$POSIX_SHELL
  else
    POSIX_SHELL=
    PREFERABLY_POSIX_SHELL=/bin/sh
  fi
  AC_SUBST([POSIX_SHELL])
  AC_SUBST([PREFERABLY_POSIX_SHELL])
])
m4trace:m4/posix_memalign.m4:7: -1- AC_DEFUN([gl_FUNC_POSIX_MEMALIGN], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc <stdlib.h> to declare posix_memalign().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([posix_memalign])
  if test $ac_cv_func_posix_memalign = yes; then
    dnl On OpenBSD 6.1, posix_memalign (&p, 32, 2406) returns a pointer
    dnl that is not a multiple of 32.
    AC_CACHE_CHECK([whether posix_memalign works for large alignments],
      [gl_cv_func_posix_memalign_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <stdlib.h>
            ]],
            [[void *p;
              if (posix_memalign (&p, 32, 2406) == 0)
                if (((unsigned long)p % 32) != 0)
                  return 1;
              return 0;
            ]])
         ],
         [gl_cv_func_posix_memalign_works=yes],
         [gl_cv_func_posix_memalign_works=no],
         [case "$host_os" in
                      # Guess no on OpenBSD.
            openbsd*) gl_cv_func_posix_memalign_works="guessing no" ;;
                      # If we don't know, obey --enable-cross-guesses.
            *)        gl_cv_func_posix_memalign_works="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
    case "$gl_cv_func_posix_memalign_works" in
      *yes) ;;
      *) REPLACE_POSIX_MEMALIGN=1 ;;
    esac
  else
    dnl The system does not have posix_memalign.
    HAVE_POSIX_MEMALIGN=0
  fi
])
m4trace:m4/posixtm.m4:8: -1- AC_DEFUN([gl_POSIXTM], [
  dnl No prerequisites of lib/posixtm.c.
  :
])
m4trace:m4/posixver.m4:7: -1- AC_DEFUN([gl_POSIXVER], [
  AC_REQUIRE([gl_DEFAULT_POSIX2_VERSION])
])
m4trace:m4/posixver.m4:18: -1- AC_DEFUN([gl_DEFAULT_POSIX2_VERSION], [
  AC_MSG_CHECKING([for desired default level of POSIX conformance])
  gl_default_posix2_version=none-specified
  if test -n "$ac_cv_env_DEFAULT_POSIX2_VERSION_set"; then
    gl_default_posix2_version=$ac_cv_env_DEFAULT_POSIX2_VERSION_value
    AC_DEFINE_UNQUOTED([DEFAULT_POSIX2_VERSION],
      $gl_default_posix2_version,
      [Define the default level of POSIX conformance. The value is of
       the form YYYYMM, specifying the year and month the standard was
       adopted. If not defined here, it defaults to the value of
       _POSIX2_VERSION in <unistd.h>. Define to 199209 to default to
       POSIX 1003.2-1992, which makes standard programs like 'head',
       'tail', and 'sort' accept obsolete options like '+10' and
       '-10'. Define to 200112 to default to POSIX 1003.1-2001, which
       makes these standard programs treat leading-'+' operands as
       file names and require modern usages like '-n 10' instead of
       '-10'. Whether defined here or not, the default can be
       overridden at run time via the _POSIX2_VERSION environment
       variable.])
  fi
  AC_MSG_RESULT([$gl_default_posix2_version])
  AC_ARG_VAR(
    [DEFAULT_POSIX2_VERSION],
    [POSIX version to default to; see 'config.hin'.])
])
m4trace:m4/prereq.m4:4: -1- m4_pattern_forbid([^gl_[ABCDEFGHIJKLMNOPQRSTUVXYZ]])
m4trace:m4/prereq.m4:28: -1- AC_DEFUN([gl_PREREQ], [
  # gnulib settings.
  AC_REQUIRE([gl_FUNC_NONREENTRANT_EUIDACCESS])

  # We don't use c-stack.c.
  # AC_REQUIRE([gl_C_STACK])

  # Invoke macros of modules that may migrate into gnulib.
  # There's no need to list gnulib modules here, since gnulib-tool
  # handles that; see ../bootstrap.conf.
  AC_REQUIRE([gl_FUNC_XATTR])
])
m4trace:m4/printf-frexp.m4:9: -1- AC_DEFUN([gl_FUNC_PRINTF_FREXP], [
  AC_REQUIRE([gl_CHECK_FREXP_NO_LIBM])
  if test $gl_cv_func_frexp_no_libm = yes; then
    gl_FUNC_FREXP_WORKS
    case "$gl_cv_func_frexp_works" in
      *yes)
        AC_DEFINE([HAVE_FREXP_IN_LIBC], [1],
          [Define if the frexp function is available in libc.])
        ;;
    esac
  fi

  AC_CACHE_CHECK([whether ldexp can be used without linking with libm],
    [gl_cv_func_ldexp_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             double x;
             int y;]],
           [[return ldexp (x, y) < 1;]])],
        [gl_cv_func_ldexp_no_libm=yes],
        [gl_cv_func_ldexp_no_libm=no])
    ])
  if test $gl_cv_func_ldexp_no_libm = yes; then
    AC_DEFINE([HAVE_LDEXP_IN_LIBC], [1],
      [Define if the ldexp function is available in libc.])
  fi
])
m4trace:m4/printf-frexpl.m4:9: -1- AC_DEFUN([gl_FUNC_PRINTF_FREXPL], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])

  dnl Subset of gl_FUNC_FREXPL_NO_LIBM.
  gl_CHECK_FREXPL_NO_LIBM
  if test $gl_cv_func_frexpl_no_libm = yes; then
    gl_FUNC_FREXPL_WORKS
    case "$gl_cv_func_frexpl_works" in
      *yes) gl_func_frexpl_no_libm=yes ;;
      *)    gl_func_frexpl_no_libm=no; REPLACE_FREXPL=1 ;;
    esac
  else
    gl_func_frexpl_no_libm=no
    dnl Set REPLACE_FREXPL here because the system may have frexpl in libm.
    REPLACE_FREXPL=1
  fi
  if test $gl_func_frexpl_no_libm = yes; then
    AC_DEFINE([HAVE_FREXPL_IN_LIBC], [1],
      [Define if the frexpl function is available in libc.])
    dnl Also check whether it's declared.
    dnl Mac OS X 10.3 has frexpl() in libc but doesn't declare it in <math.h>.
    AC_CHECK_DECL([frexpl], , [HAVE_DECL_FREXPL=0], [[#include <math.h>]])
  fi

  gl_CHECK_LDEXPL_NO_LIBM
  if test $gl_cv_func_ldexpl_no_libm = yes; then
    gl_FUNC_LDEXPL_WORKS
    case "$gl_cv_func_ldexpl_works" in
      *yes)
        AC_DEFINE([HAVE_LDEXPL_IN_LIBC], [1],
          [Define if the ldexpl function is available in libc.])
        dnl Also check whether it's declared.
        dnl Mac OS X 10.3 has ldexpl() in libc but doesn't declare it in <math.h>.
        AC_CHECK_DECL([ldexpl], , [HAVE_DECL_LDEXPL=0], [[#include <math.h>]])
        ;;
    esac
  fi
])
m4trace:m4/printf.m4:11: -1- AC_DEFUN([gl_PRINTF_SIZES_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports size specifiers as in C99],
    [gl_cv_func_printf_sizes_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#if HAVE_STDINT_H_WITH_UINTMAX
# include <stdint.h>
#endif
#if HAVE_INTTYPES_H_WITH_UINTMAX
# include <inttypes.h>
#endif
static char buf[100];
int main ()
{
  int result = 0;
#if HAVE_STDINT_H_WITH_UINTMAX || HAVE_INTTYPES_H_WITH_UINTMAX
  buf[0] = '\0';
  if (sprintf (buf, "%ju %d", (uintmax_t) 12345671, 33, 44, 55) < 0
      || strcmp (buf, "12345671 33") != 0)
    result |= 1;
#else
  result |= 1;
#endif
  buf[0] = '\0';
  if (sprintf (buf, "%zu %d", (size_t) 12345672, 33, 44, 55) < 0
      || strcmp (buf, "12345672 33") != 0)
    result |= 2;
  buf[0] = '\0';
  if (sprintf (buf, "%tu %d", (ptrdiff_t) 12345673, 33, 44, 55) < 0
      || strcmp (buf, "12345673 33") != 0)
    result |= 4;
  buf[0] = '\0';
  if (sprintf (buf, "%Lg %d", (long double) 1.5, 33, 44, 55) < 0
      || strcmp (buf, "1.5 33") != 0)
    result |= 8;
  return result;
}]])],
        [gl_cv_func_printf_sizes_c99=yes],
        [gl_cv_func_printf_sizes_c99=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_printf_sizes_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_sizes_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_sizes_c99="guessing no";;
           darwin*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_printf_sizes_c99="guessing no";;
           openbsd*)             gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_sizes_c99="guessing yes";;
           solaris*)             gl_cv_func_printf_sizes_c99="guessing no";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_printf_sizes_c99="guessing no";;
           netbsd*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_printf_sizes_c99="guessing yes";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_sizes_c99="guessing yes"],
                                   [gl_cv_func_printf_sizes_c99="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_sizes_c99="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:108: -1- AC_DEFUN([gl_PRINTF_LONG_DOUBLE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports 'long double' arguments],
    [gl_cv_func_printf_long_double],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[10000];
int main ()
{
  int result = 0;
  buf[0] = '\0';
  if (sprintf (buf, "%Lf %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.750000 33") != 0)
    result |= 1;
  buf[0] = '\0';
  if (sprintf (buf, "%Le %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.750000e+00 33") != 0)
    result |= 2;
  buf[0] = '\0';
  if (sprintf (buf, "%Lg %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.75 33") != 0)
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_long_double=yes],
        [gl_cv_func_printf_long_double=no],
        [case "$host_os" in
                            # Guess no on BeOS.
           beos*)           gl_cv_func_printf_long_double="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_long_double="guessing yes";;
                            # Guess yes on MSVC, no on mingw.
           mingw*)          AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                              ],
                              [gl_cv_func_printf_long_double="guessing yes"],
                              [gl_cv_func_printf_long_double="guessing no"])
                            ;;
           *)               gl_cv_func_printf_long_double="guessing yes";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:164: -1- AC_DEFUN([gl_PRINTF_INFINITE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports infinite 'double' arguments],
    [gl_cv_func_printf_infinite],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static int
strisnan (const char *string, size_t start_index, size_t end_index)
{
  if (start_index < end_index)
    {
      if (string[start_index] == '-')
        start_index++;
      if (start_index + 3 <= end_index
          && memcmp (string + start_index, "nan", 3) == 0)
        {
          start_index += 3;
          if (start_index == end_index
              || (string[start_index] == '(' && string[end_index - 1] == ')'))
            return 1;
        }
    }
  return 0;
}
static int
have_minus_zero ()
{
  static double plus_zero = 0.0;
  double minus_zero = - plus_zero;
  return memcmp (&plus_zero, &minus_zero, sizeof (double)) != 0;
}
static char buf[10000];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%f", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%f", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%f", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 2;
  if (sprintf (buf, "%e", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 4;
  if (sprintf (buf, "%e", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 4;
  if (sprintf (buf, "%e", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 8;
  if (sprintf (buf, "%g", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 16;
  if (sprintf (buf, "%g", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 16;
  if (sprintf (buf, "%g", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 32;
  /* This test fails on HP-UX 10.20.  */
  if (have_minus_zero ())
    if (sprintf (buf, "%g", - zero) < 0
        || strcmp (buf, "-0") != 0)
    result |= 64;
  return result;
}]])],
        [gl_cv_func_printf_infinite=yes],
        [gl_cv_func_printf_infinite=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on FreeBSD >= 6.
           freebsd[1-5].*)       gl_cv_func_printf_infinite="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_infinite="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_infinite="guessing no";;
           darwin*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on HP-UX >= 11.
           hpux[7-9]* | hpux10*) gl_cv_func_printf_infinite="guessing no";;
           hpux*)                gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_printf_infinite="guessing no";;
           netbsd*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)       gl_cv_func_printf_infinite="guessing no";;
           openbsd*)             gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_infinite="guessing no";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_infinite="guessing yes"],
                                   [gl_cv_func_printf_infinite="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_infinite="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:290: -1- AC_DEFUN([gl_PRINTF_INFINITE_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_BIGENDIAN])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl The user can set or unset the variable gl_printf_safe to indicate
  dnl that he wishes a safe handling of non-IEEE-754 'long double' values.
  if test -n "$gl_printf_safe"; then
    AC_DEFINE([CHECK_PRINTF_SAFE], [1],
      [Define if you wish *printf() functions that have a safe handling of
       non-IEEE-754 'long double' values.])
  fi
  case "$gl_cv_func_printf_long_double" in
    *yes)
      AC_CACHE_CHECK([whether printf supports infinite 'long double' arguments],
        [gl_cv_func_printf_infinite_long_double],
        [
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
]GL_NOCRASH[
#include <float.h>
#include <stdio.h>
#include <string.h>
static int
strisnan (const char *string, size_t start_index, size_t end_index)
{
  if (start_index < end_index)
    {
      if (string[start_index] == '-')
        start_index++;
      if (start_index + 3 <= end_index
          && memcmp (string + start_index, "nan", 3) == 0)
        {
          start_index += 3;
          if (start_index == end_index
              || (string[start_index] == '(' && string[end_index - 1] == ')'))
            return 1;
        }
    }
  return 0;
}
static char buf[10000];
static long double zeroL = 0.0L;
int main ()
{
  int result = 0;
  nocrash_init();
  if (sprintf (buf, "%Lf", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lf", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lf", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
  if (sprintf (buf, "%Le", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Le", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Le", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
  if (sprintf (buf, "%Lg", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lg", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lg", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
#if CHECK_PRINTF_SAFE && ((defined __ia64 && LDBL_MANT_DIG == 64) || (defined __x86_64__ || defined __amd64__) || (defined __i386 || defined __i386__ || defined _I386 || defined _M_IX86 || defined _X86_)) && !HAVE_SAME_LONG_DOUBLE_AS_DOUBLE
/* Representation of an 80-bit 'long double' as an initializer for a sequence
   of 'unsigned int' words.  */
# ifdef WORDS_BIGENDIAN
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { ((unsigned int) (exponent) << 16) | ((unsigned int) (manthi) >> 16), \
       ((unsigned int) (manthi) << 16) | ((unsigned int) (mantlo) >> 16),   \
       (unsigned int) (mantlo) << 16                                        \
     }
# else
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { mantlo, manthi, exponent }
# endif
  { /* Quiet NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0xC3333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Le", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Lg", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
  }
  {
    /* Signalling NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x83333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Le", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Lg", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
  }
  { /* Pseudo-NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x40000001, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 4;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 4;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 4;
  }
  { /* Pseudo-Infinity.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x00000000, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 8;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 8;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 8;
  }
  { /* Pseudo-Zero.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x4004, 0x00000000, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 16;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 16;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 16;
  }
  { /* Unnormalized number.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x4000, 0x63333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 32;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 32;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 32;
  }
  { /* Pseudo-Denormal.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x0000, 0x83333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 64;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 64;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 64;
  }
#endif
  return result;
}]])],
            [gl_cv_func_printf_infinite_long_double=yes],
            [gl_cv_func_printf_infinite_long_double=no],
            [case "$host_cpu" in
                                     # Guess no on ia64, x86_64, i386.
               ia64 | x86_64 | i*86) gl_cv_func_printf_infinite_long_double="guessing no";;
               *)
                 case "$host_os" in
changequote(,)dnl
                                         # Guess yes on glibc systems.
                   *-gnu* | gnu*)        gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on musl systems.
                   *-musl*)              gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on FreeBSD >= 6.
                   freebsd[1-5].*)       gl_cv_func_printf_infinite_long_double="guessing no";;
                   freebsd* | kfreebsd*) gl_cv_func_printf_infinite_long_double="guessing yes";;
                   midnightbsd*)         gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on HP-UX >= 11.
                   hpux[7-9]* | hpux10*) gl_cv_func_printf_infinite_long_double="guessing no";;
                   hpux*)                gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on OpenBSD >= 6.0.
                   openbsd[1-5].*)       gl_cv_func_printf_infinite_long_double="guessing no";;
                   openbsd*)             gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess no on Android.
                   linux*-android*)      gl_cv_func_printf_infinite_long_double="guessing no";;
changequote([,])dnl
                                         # Guess yes on MSVC, no on mingw.
                   mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                           ],
                                           [gl_cv_func_printf_infinite_long_double="guessing yes"],
                                           [gl_cv_func_printf_infinite_long_double="guessing no"])
                                         ;;
                                         # If we don't know, obey --enable-cross-guesses.
                   *)                    gl_cv_func_printf_infinite_long_double="$gl_cross_guess_normal";;
                 esac
                 ;;
             esac
            ])
        ])
      ;;
    *)
      gl_cv_func_printf_infinite_long_double="irrelevant"
      ;;
  esac
])
m4trace:m4/printf.m4:512: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_A], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'a' and 'A' directives],
    [gl_cv_func_printf_directive_a],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%a %d", 3.1416015625, 33, 44, 55) < 0
      || (strcmp (buf, "0x1.922p+1 33") != 0
          && strcmp (buf, "0x3.244p+0 33") != 0
          && strcmp (buf, "0x6.488p-1 33") != 0
          && strcmp (buf, "0xc.91p-2 33") != 0))
    result |= 1;
  if (sprintf (buf, "%A %d", -3.1416015625, 33, 44, 55) < 0
      || (strcmp (buf, "-0X1.922P+1 33") != 0
          && strcmp (buf, "-0X3.244P+0 33") != 0
          && strcmp (buf, "-0X6.488P-1 33") != 0
          && strcmp (buf, "-0XC.91P-2 33") != 0))
    result |= 2;
  /* This catches a FreeBSD 13.0 bug: it doesn't round.  */
  if (sprintf (buf, "%.2a %d", 1.51, 33, 44, 55) < 0
      || (strcmp (buf, "0x1.83p+0 33") != 0
          && strcmp (buf, "0x3.05p-1 33") != 0
          && strcmp (buf, "0x6.0ap-2 33") != 0
          && strcmp (buf, "0xc.14p-3 33") != 0))
    result |= 4;
  /* This catches a Mac OS X 10.12.4 (Darwin 16.5) bug: it doesn't round.  */
  if (sprintf (buf, "%.0a %d", 1.51, 33, 44, 55) < 0
      || (strcmp (buf, "0x2p+0 33") != 0
          && strcmp (buf, "0x3p-1 33") != 0
          && strcmp (buf, "0x6p-2 33") != 0
          && strcmp (buf, "0xcp-3 33") != 0))
    result |= 4;
  /* This catches a FreeBSD 6.1 bug.  See
     <https://lists.gnu.org/r/bug-gnulib/2007-04/msg00107.html> */
  if (sprintf (buf, "%010a %d", 1.0 / zero, 33, 44, 55) < 0
      || buf[0] == '0')
    result |= 8;
  /* This catches a Mac OS X 10.3.9 (Darwin 7.9) bug.  */
  if (sprintf (buf, "%.1a", 1.999) < 0
      || (strcmp (buf, "0x1.0p+1") != 0
          && strcmp (buf, "0x2.0p+0") != 0
          && strcmp (buf, "0x4.0p-1") != 0
          && strcmp (buf, "0x8.0p-2") != 0))
    result |= 16;
  /* This catches the same Mac OS X 10.3.9 (Darwin 7.9) bug and also a
     glibc 2.4 bug <https://sourceware.org/bugzilla/show_bug.cgi?id=2908>.  */
  if (sprintf (buf, "%.1La", 1.999L) < 0
      || (strcmp (buf, "0x1.0p+1") != 0
          && strcmp (buf, "0x2.0p+0") != 0
          && strcmp (buf, "0x4.0p-1") != 0
          && strcmp (buf, "0x8.0p-2") != 0))
    result |= 32;
  return result;
}]])],
        [gl_cv_func_printf_directive_a=yes],
        [gl_cv_func_printf_directive_a=no],
        [
         case "$host_os" in
                                 # Guess yes on glibc >= 2.5 systems.
           *-gnu* | gnu*)
             AC_EGREP_CPP([BZ2908], [
               #include <features.h>
               #ifdef __GNU_LIBRARY__
                #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ >= 5) || (__GLIBC__ > 2)) && !defined __UCLIBC__
                 BZ2908
                #endif
               #endif
               ],
               [gl_cv_func_printf_directive_a="guessing yes"],
               [gl_cv_func_printf_directive_a="guessing no"])
             ;;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_directive_a="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_directive_a="guessing no";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_printf_directive_a="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_directive_a="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:610: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_F], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'F' directive],
    [gl_cv_func_printf_directive_f],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%F %d", 1234567.0, 33, 44, 55) < 0
      || strcmp (buf, "1234567.000000 33") != 0)
    result |= 1;
  if (sprintf (buf, "%F", 1.0 / zero) < 0
      || (strcmp (buf, "INF") != 0 && strcmp (buf, "INFINITY") != 0))
    result |= 2;
  /* This catches a Cygwin 1.5.x bug.  */
  if (sprintf (buf, "%.F", 1234.0) < 0
      || strcmp (buf, "1234") != 0)
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_directive_f=yes],
        [gl_cv_func_printf_directive_f=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on FreeBSD >= 6.
           freebsd[1-5].*)       gl_cv_func_printf_directive_f="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_directive_f="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_directive_f="guessing no";;
           darwin*)              gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)       gl_cv_func_printf_directive_f="guessing no";;
           openbsd*)             gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_directive_f="guessing yes";;
           solaris*)             gl_cv_func_printf_directive_f="guessing no";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_directive_f="guessing no";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_directive_f="guessing yes"],
                                   [gl_cv_func_printf_directive_f="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_directive_f="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:683: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_N], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'n' directive],
    [gl_cv_func_printf_directive_n],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifdef _MSC_VER
#include <inttypes.h>
/* See page about "Parameter Validation" on msdn.microsoft.com.
   <https://docs.microsoft.com/en-us/cpp/c-runtime-library/parameter-validation>
   <https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/set-invalid-parameter-handler-set-thread-local-invalid-parameter-handler>  */
static void cdecl
invalid_parameter_handler (const wchar_t *expression,
                           const wchar_t *function,
                           const wchar_t *file, unsigned int line,
                           uintptr_t dummy)
{
  exit (1);
}
#endif
static char fmtstring[10];
static char buf[100];
int main ()
{
  int count = -1;
#ifdef _MSC_VER
  _set_invalid_parameter_handler (invalid_parameter_handler);
#endif
  /* Copy the format string.  Some systems (glibc with _FORTIFY_SOURCE=2)
     support %n in format strings in read-only memory but not in writable
     memory.  */
  strcpy (fmtstring, "%d %n");
  if (sprintf (buf, fmtstring, 123, &count, 33, 44, 55) < 0
      || strcmp (buf, "123 ") != 0
      || count != 4)
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_directive_n=yes],
        [gl_cv_func_printf_directive_n=no],
        [case "$host_os" in
                            # Guess no on glibc when _FORTIFY_SOURCE >= 2.
           *-gnu* | gnu*)   AC_COMPILE_IFELSE(
                              [AC_LANG_SOURCE(
                                 [[#if _FORTIFY_SOURCE >= 2
                                    error fail
                                   #endif
                                 ]])],
                              [gl_cv_func_printf_directive_n="guessing yes"],
                              [gl_cv_func_printf_directive_n="guessing no"])
                            ;;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_directive_n="guessing no";;
                            # Guess no on native Windows.
           mingw*)          gl_cv_func_printf_directive_n="guessing no";;
           *)               gl_cv_func_printf_directive_n="guessing yes";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:757: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_LS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'ls' directive],
    [gl_cv_func_printf_directive_ls],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <wchar.h>
#include <string.h>
int main ()
{
  int result = 0;
  char buf[100];
  /* Test whether %ls works at all.
     This test fails on OpenBSD 4.0, IRIX 6.5, Solaris 2.6, Haiku, but not on
     Cygwin 1.5.  */
  {
    static const wchar_t wstring[] = { 'a', 'b', 'c', 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%ls", wstring) < 0
        || strcmp (buf, "abc") != 0)
      result |= 1;
  }
  /* This test fails on IRIX 6.5, Solaris 2.6, Cygwin 1.5, Haiku (with an
     assertion failure inside libc), but not on OpenBSD 4.0.  */
  {
    static const wchar_t wstring[] = { 'a', 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%ls", wstring) < 0
        || strcmp (buf, "a") != 0)
      result |= 2;
  }
  /* Test whether precisions in %ls are supported as specified in ISO C 99
     section 7.19.6.1:
       "If a precision is specified, no more than that many bytes are written
        (including shift sequences, if any), and the array shall contain a
        null wide character if, to equal the multibyte character sequence
        length given by the precision, the function would need to access a
        wide character one past the end of the array."
     This test fails on Solaris 10.  */
  {
    static const wchar_t wstring[] = { 'a', 'b', (wchar_t) 0xfdfdfdfd, 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%.2ls", wstring) < 0
        || strcmp (buf, "ab") != 0)
      result |= 8;
  }
  return result;
}]])],
        [gl_cv_func_printf_directive_ls=yes],
        [gl_cv_func_printf_directive_ls=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)  gl_cv_func_printf_directive_ls="guessing no";;
           openbsd*)        gl_cv_func_printf_directive_ls="guessing yes";;
           irix*)           gl_cv_func_printf_directive_ls="guessing no";;
           solaris*)        gl_cv_func_printf_directive_ls="guessing no";;
           cygwin*)         gl_cv_func_printf_directive_ls="guessing no";;
           beos* | haiku*)  gl_cv_func_printf_directive_ls="guessing no";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_directive_ls="guessing no";;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_printf_directive_ls="guessing yes";;
           *)               gl_cv_func_printf_directive_ls="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:836: -1- AC_DEFUN([gl_PRINTF_POSITIONS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports POSIX/XSI format strings with positions],
    [gl_cv_func_printf_positions],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
/* The string "%2$d %1$d", with dollar characters protected from the shell's
   dollar expansion (possibly an autoconf bug).  */
static char format[] = { '%', '2', '$', 'd', ' ', '%', '1', '$', 'd', '\0' };
static char buf[100];
int main ()
{
  sprintf (buf, format, 33, 55);
  return (strcmp (buf, "55 33") != 0);
}]])],
        [gl_cv_func_printf_positions=yes],
        [gl_cv_func_printf_positions=no],
        [
changequote(,)dnl
         case "$host_os" in
           netbsd[1-3]* | netbsdelf[1-3]* | netbsdaout[1-3]* | netbsdcoff[1-3]*)
                            gl_cv_func_printf_positions="guessing no";;
           beos*)           gl_cv_func_printf_positions="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_positions="guessing yes";;
                            # Guess no on native Windows.
           mingw* | pw*)    gl_cv_func_printf_positions="guessing no";;
           *)               gl_cv_func_printf_positions="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:879: -1- AC_DEFUN([gl_PRINTF_FLAG_GROUPING], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the grouping flag],
    [gl_cv_func_printf_flag_grouping],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
int main ()
{
  if (sprintf (buf, "%'d %d", 1234567, 99) < 0
      || buf[strlen (buf) - 1] != '9')
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_grouping=yes],
        [gl_cv_func_printf_flag_grouping=no],
        [
changequote(,)dnl
         case "$host_os" in
           cygwin*)         gl_cv_func_printf_flag_grouping="guessing no";;
           netbsd*)         gl_cv_func_printf_flag_grouping="guessing no";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_flag_grouping="guessing no";;
                            # Guess no on native Windows.
           mingw* | pw*)    gl_cv_func_printf_flag_grouping="guessing no";;
           *)               gl_cv_func_printf_flag_grouping="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:921: -1- AC_DEFUN([gl_PRINTF_FLAG_LEFTADJUST], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the left-adjust flag correctly],
    [gl_cv_func_printf_flag_leftadjust],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
int main ()
{
  /* Check that a '-' flag is not annihilated by a negative width.  */
  if (sprintf (buf, "a%-*sc", -3, "b") < 0
      || strcmp (buf, "ab  c") != 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_leftadjust=yes],
        [gl_cv_func_printf_flag_leftadjust=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on HP-UX 11.
           hpux11*)         gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess no on HP-UX 10 and older.
           hpux*)           gl_cv_func_printf_flag_leftadjust="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess yes otherwise.
           *)               gl_cv_func_printf_flag_leftadjust="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:967: -1- AC_DEFUN([gl_PRINTF_FLAG_ZERO], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the zero flag correctly],
    [gl_cv_func_printf_flag_zero],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  if (sprintf (buf, "%010f", 1.0 / zero, 33, 44, 55) < 0
      || (strcmp (buf, "       inf") != 0
          && strcmp (buf, "  infinity") != 0))
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_zero=yes],
        [gl_cv_func_printf_flag_zero=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on glibc systems.
           *-gnu* | gnu*)   gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess yes on musl systems.
           *-musl*)         gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess yes on BeOS.
           beos*)           gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_flag_zero="guessing no";;
                            # Guess no on native Windows.
           mingw*)          gl_cv_func_printf_flag_zero="guessing no";;
                            # If we don't know, obey --enable-cross-guesses.
           *)               gl_cv_func_printf_flag_zero="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1020: -1- AC_DEFUN([gl_PRINTF_PRECISION], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports large precisions],
    [gl_cv_func_printf_precision],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[5000];
int main ()
{
  int result = 0;
#ifdef __BEOS__
  /* On BeOS, this would crash and show a dialog box.  Avoid the crash.  */
  return 1;
#endif
  if (sprintf (buf, "%.4000d %d", 1, 33, 44) < 4000 + 3)
    result |= 1;
  if (sprintf (buf, "%.4000f %d", 1.0, 33, 44) < 4000 + 5)
    result |= 2;
  if (sprintf (buf, "%.511f %d", 1.0, 33, 44) < 511 + 5
      || buf[0] != '1')
    result |= 4;
  if (sprintf (buf, "%.999f %d", 1.0, 33, 44) < 999 + 5
      || buf[0] != '1')
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_precision=yes],
        [gl_cv_func_printf_precision=no],
        [
changequote(,)dnl
         case "$host_os" in
           # Guess no only on Solaris, native Windows, and BeOS systems.
           solaris*)        gl_cv_func_printf_precision="guessing no" ;;
           mingw* | pw*)    gl_cv_func_printf_precision="guessing no" ;;
           beos*)           gl_cv_func_printf_precision="guessing no" ;;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_precision="guessing yes" ;;
           *)               gl_cv_func_printf_precision="guessing yes" ;;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1073: -1- AC_DEFUN([gl_PRINTF_ENOMEM], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_MULTIARCH])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf survives out-of-memory conditions],
    [gl_cv_func_printf_enomem],
    [
      gl_cv_func_printf_enomem="guessing no"
      if test "$cross_compiling" = no; then
        if test $APPLE_UNIVERSAL_BUILD = 0; then
          AC_LANG_CONFTEST([AC_LANG_SOURCE([[
]GL_NOCRASH[
#include <stdio.h>
#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <errno.h>
int main()
{
  struct rlimit limit;
  int ret;
  nocrash_init ();
  /* Some printf implementations allocate temporary space with malloc.  */
  /* On BSD systems, malloc() is limited by RLIMIT_DATA.  */
#ifdef RLIMIT_DATA
  if (getrlimit (RLIMIT_DATA, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_DATA, &limit) < 0)
    return 77;
#endif
  /* On Linux systems, malloc() is limited by RLIMIT_AS.  */
#ifdef RLIMIT_AS
  if (getrlimit (RLIMIT_AS, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_AS, &limit) < 0)
    return 77;
#endif
  /* Some printf implementations allocate temporary space on the stack.  */
#ifdef RLIMIT_STACK
  if (getrlimit (RLIMIT_STACK, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_STACK, &limit) < 0)
    return 77;
#endif
  ret = printf ("%.5000000f", 1.0);
  return !(ret == 5000002 || (ret < 0 && errno == ENOMEM));
}
          ]])])
          if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
            (./conftest 2>&AS_MESSAGE_LOG_FD
             result=$?
             _AS_ECHO_LOG([\$? = $result])
             if test $result != 0 && test $result != 77; then result=1; fi
             exit $result
            ) >/dev/null 2>/dev/null
            case $? in
              0) gl_cv_func_printf_enomem="yes" ;;
              77) gl_cv_func_printf_enomem="guessing no" ;;
              *) gl_cv_func_printf_enomem="no" ;;
            esac
          else
            gl_cv_func_printf_enomem="guessing no"
          fi
          rm -fr conftest*
        else
          dnl A universal build on Apple Mac OS X platforms.
          dnl The result would be 'no' in 32-bit mode and 'yes' in 64-bit mode.
          dnl But we need a configuration result that is valid in both modes.
          gl_cv_func_printf_enomem="guessing no"
        fi
      fi
      if test "$gl_cv_func_printf_enomem" = "guessing no"; then
changequote(,)dnl
        case "$host_os" in
                           # Guess yes on glibc systems.
          *-gnu* | gnu*)   gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on Solaris.
          solaris*)        gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on AIX.
          aix*)            gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on HP-UX/hppa.
          hpux*)           case "$host_cpu" in
                             hppa*) gl_cv_func_printf_enomem="guessing yes";;
                             *)     gl_cv_func_printf_enomem="guessing no";;
                           esac
                           ;;
                           # Guess yes on IRIX.
          irix*)           gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on OSF/1.
          osf*)            gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on BeOS.
          beos*)           gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on Haiku.
          haiku*)          gl_cv_func_printf_enomem="guessing yes";;
                           # Guess no on Android.
          linux*-android*) gl_cv_func_printf_enomem="guessing no";;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_printf_enomem="$gl_cross_guess_normal";;
        esac
changequote([,])dnl
      fi
    ])
])
m4trace:m4/printf.m4:1190: -1- AC_DEFUN([gl_SNPRINTF_PRESENCE], [
  AC_CHECK_FUNCS_ONCE([snprintf])
])
m4trace:m4/printf.m4:1199: -1- AC_DEFUN_ONCE([gl_SNPRINTF_TRUNCATION_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf truncates the result as in C99],
    [gl_cv_func_snprintf_truncation_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char buf[100];
int main ()
{
  strcpy (buf, "ABCDEF");
  my_snprintf (buf, 3, "%d %d", 4567, 89);
  if (memcmp (buf, "45\0DEF", 6) != 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_snprintf_truncation_c99=yes],
        [gl_cv_func_snprintf_truncation_c99=no],
        [
changequote(,)dnl
         case "$host_os" in
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_truncation_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_truncation_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_truncation_c99="guessing no";;
           darwin*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           openbsd*)             gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           solaris*)             gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_truncation_c99="guessing no";;
           aix*)                 gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on HP-UX >= 11.
           hpux[7-9]* | hpux10*) gl_cv_func_snprintf_truncation_c99="guessing no";;
           hpux*)                gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on OSF/1 >= 5.
           osf[3-4]*)            gl_cv_func_snprintf_truncation_c99="guessing no";;
           osf*)                 gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           netbsd*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_snprintf_truncation_c99="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_truncation_c99="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1302: -1- AC_DEFUN_ONCE([gl_SNPRINTF_RETVAL_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf returns a byte count as in C99],
    [gl_cv_func_snprintf_retval_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char buf[100];
int main ()
{
  strcpy (buf, "ABCDEF");
  if (my_snprintf (buf, 3, "%d %d", 4567, 89) != 7)
    return 1;
  if (my_snprintf (buf, 0, "%d %d", 4567, 89) != 7)
    return 2;
  if (my_snprintf (NULL, 0, "%d %d", 4567, 89) != 7)
    return 3;
  return 0;
}]])],
        [gl_cv_func_snprintf_retval_c99=yes],
        [gl_cv_func_snprintf_retval_c99=no],
        [case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_retval_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_retval_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_retval_c99="guessing no";;
           darwin*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_snprintf_retval_c99="guessing no";;
           openbsd*)             gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_sizes_c99="guessing yes";;
           solaris*)             gl_cv_func_printf_sizes_c99="guessing no";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_retval_c99="guessing no";;
           aix*)                 gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_retval_c99="guessing no";;
           netbsd*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_snprintf_retval_c99="guessing yes";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_snprintf_retval_c99="guessing yes"],
                                   [gl_cv_func_snprintf_retval_c99="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_retval_c99="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1394: -1- AC_DEFUN([gl_SNPRINTF_DIRECTIVE_N], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf fully supports the 'n' directive],
    [gl_cv_func_snprintf_directive_n],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char fmtstring[10];
static char buf[100];
int main ()
{
  int count = -1;
  /* Copy the format string.  Some systems (glibc with _FORTIFY_SOURCE=2)
     support %n in format strings in read-only memory but not in writable
     memory.  */
  strcpy (fmtstring, "%d %n");
  my_snprintf (buf, 4, fmtstring, 12345, &count, 33, 44, 55);
  if (count != 6)
    return 1;
  return 0;
}]])],
        [gl_cv_func_snprintf_directive_n=yes],
        [gl_cv_func_snprintf_directive_n=no],
        [
         case "$host_os" in
                                 # Guess no on glibc when _FORTIFY_SOURCE >= 2.
           *-gnu* | gnu*)        AC_COMPILE_IFELSE(
                                   [AC_LANG_SOURCE(
                                      [[#if _FORTIFY_SOURCE >= 2
                                         error fail
                                        #endif
                                      ]])],
                                   [gl_cv_func_snprintf_directive_n="guessing yes"],
                                   [gl_cv_func_snprintf_directive_n="guessing no"])
                                 ;;
changequote(,)dnl
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_directive_n="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_directive_n="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_directive_n="guessing no";;
           darwin*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_snprintf_directive_n="guessing no";;
           solaris*)             gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_directive_n="guessing no";;
           aix*)                 gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on OSF/1 >= 5.
           osf[3-4]*)            gl_cv_func_snprintf_directive_n="guessing no";;
           osf*)                 gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_directive_n="guessing no";;
           netbsd*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_snprintf_directive_n="guessing no";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_snprintf_directive_n="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_directive_n="$gl_cross_guess_normal";;
changequote([,])dnl
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1493: -1- AC_DEFUN([gl_SNPRINTF_SIZE1], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf respects a size of 1],
    [gl_cv_func_snprintf_size1],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
int main()
{
  static char buf[8] = { 'D', 'E', 'A', 'D', 'B', 'E', 'E', 'F' };
  my_snprintf (buf, 1, "%d", 12345);
  return buf[1] != 'E';
}]])],
        [gl_cv_func_snprintf_size1=yes],
        [gl_cv_func_snprintf_size1=no],
        [case "$host_os" in
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_snprintf_size1="guessing yes" ;;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_snprintf_size1="guessing yes" ;;
           *)               gl_cv_func_snprintf_size1="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1573: -1- AC_DEFUN([gl_VSNPRINTF_ZEROSIZE_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether vsnprintf respects a zero size as in C99],
    [gl_cv_func_vsnprintf_zerosize_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdarg.h>
#include <stdio.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
int main()
{
  static char buf[8] = { 'D', 'E', 'A', 'D', 'B', 'E', 'E', 'F' };
  my_snprintf (buf, 0, "%d", 12345);
  return buf[0] != 'D';
}]])],
        [gl_cv_func_vsnprintf_zerosize_c99=yes],
        [gl_cv_func_vsnprintf_zerosize_c99=no],
        [
changequote(,)dnl
         case "$host_os" in
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           darwin*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Cygwin.
           cygwin*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           solaris*)             gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           aix*)                 gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           netbsd*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on native Windows.
           mingw* | pw*)         gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_vsnprintf_zerosize_c99="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/priv-set.m4:11: -1- AC_DEFUN([gl_PRIV_SET], [
  AC_CHECK_FUNCS([getppriv])
  AC_CHECK_HEADERS_ONCE([priv.h])
])
m4trace:m4/progtest.m4:25: -1- AC_DEFUN([AM_PATH_PROG_WITH_TEST], [
# Prepare PATH_SEPARATOR.
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
  # contains only /bin. Note that ksh looks also at the FPATH variable,
  # so we have to set that as well for the test.
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
           || PATH_SEPARATOR=';'
       }
fi

# Find out how to test for executable files. Don't use a zero-byte file,
# as systems may use methods other than mode bits to determine executability.
cat >conf$$.file <<_ASEOF
#! /bin/sh
exit 0
_ASEOF
chmod +x conf$$.file
if test -x conf$$.file >/dev/null 2>&1; then
  ac_executable_p="test -x"
else
  ac_executable_p="test -f"
fi
rm -f conf$$.file

# Extract the first word of "$2", so it can be a program name with args.
set dummy $2; ac_word=[$]2
AC_MSG_CHECKING([for $ac_word])
AC_CACHE_VAL([ac_cv_path_$1],
[case "[$]$1" in
  [[\\/]]* | ?:[[\\/]]*)
    ac_cv_path_$1="[$]$1" # Let the user override the test with a path.
    ;;
  *)
    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
    for ac_dir in ifelse([$5], , $PATH, [$5]); do
      IFS="$ac_save_IFS"
      test -z "$ac_dir" && ac_dir=.
      for ac_exec_ext in '' $ac_executable_extensions; do
        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
          echo "$as_me: trying $ac_dir/$ac_word..." >&AS_MESSAGE_LOG_FD
          if [$3]; then
            ac_cv_path_$1="$ac_dir/$ac_word$ac_exec_ext"
            break 2
          fi
        fi
      done
    done
    IFS="$ac_save_IFS"
dnl If no 4th arg is given, leave the cache variable unset,
dnl so AC_PATH_PROGS will keep looking.
ifelse([$4], , , [  test -z "[$]ac_cv_path_$1" && ac_cv_path_$1="$4"
])dnl
    ;;
esac])dnl
$1="$ac_cv_path_$1"
if test ifelse([$4], , [-n "[$]$1"], ["[$]$1" != "$4"]); then
  AC_MSG_RESULT([$][$1])
else
  AC_MSG_RESULT([no])
fi
AC_SUBST([$1])dnl
])
m4trace:m4/pselect.m4:7: -1- AC_DEFUN([gl_FUNC_PSELECT], [
  AC_REQUIRE([gl_SYS_SELECT_H])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([pselect])

  if test $ac_cv_func_pselect = yes; then
    AC_CACHE_CHECK([whether signature of pselect conforms to POSIX],
      [gl_cv_sig_pselect],
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM(
              [[#include <sys/select.h>
                ]],
              [[int (*p) (int, fd_set *, fd_set *, fd_set *restrict,
                          struct timespec const *restrict,
                          sigset_t const *restrict) = pselect;
                return !p;]])],
         [gl_cv_sig_pselect=yes],
         [gl_cv_sig_pselect=no])])

    dnl On FreeBSD 8.2, pselect() doesn't always reject bad fds.
    AC_CACHE_CHECK([whether pselect detects invalid fds],
      [gl_cv_func_pselect_detects_ebadf],
      [
        AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/time.h>
#if HAVE_SYS_SELECT_H
# include <sys/select.h>
#endif
#include <unistd.h>
#include <errno.h>
]GL_MDA_DEFINES],
[[
  fd_set set;
  dup2(0, 16);
  FD_ZERO(&set);
  FD_SET(16, &set);
  close(16);
  struct timespec timeout;
  timeout.tv_sec = 0;
  timeout.tv_nsec = 5000;
  return pselect (17, &set, NULL, NULL, &timeout, NULL) != -1 || errno != EBADF;
]])], [gl_cv_func_pselect_detects_ebadf=yes],
      [gl_cv_func_pselect_detects_ebadf=no],
          [
           case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_pselect_detects_ebadf="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_pselect_detects_ebadf="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_pselect_detects_ebadf="$gl_cross_guess_normal" ;;
           esac
          ])
      ])
    case $gl_cv_func_pselect_detects_ebadf in
      *yes) ;;
      *) REPLACE_PSELECT=1 ;;
    esac
  fi

  if test $ac_cv_func_pselect = no || test $gl_cv_sig_pselect = no; then
    REPLACE_PSELECT=1
  fi
])
m4trace:m4/pthread-cond.m4:7: -1- AC_DEFUN([gl_PTHREAD_COND], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_COND_INIT=1
    REPLACE_PTHREAD_CONDATTR_INIT=1
    REPLACE_PTHREAD_CONDATTR_DESTROY=1
    REPLACE_PTHREAD_COND_WAIT=1
    REPLACE_PTHREAD_COND_TIMEDWAIT=1
    REPLACE_PTHREAD_COND_SIGNAL=1
    REPLACE_PTHREAD_COND_BROADCAST=1
    REPLACE_PTHREAD_COND_DESTROY=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_COND_INIT=0
      HAVE_PTHREAD_CONDATTR_INIT=0
      HAVE_PTHREAD_CONDATTR_DESTROY=0
      HAVE_PTHREAD_COND_WAIT=0
      HAVE_PTHREAD_COND_TIMEDWAIT=0
      HAVE_PTHREAD_COND_SIGNAL=0
      HAVE_PTHREAD_COND_BROADCAST=0
      HAVE_PTHREAD_COND_DESTROY=0
    fi
  fi
])
m4trace:m4/pthread-mutex.m4:7: -1- AC_DEFUN([gl_PTHREAD_MUTEX], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_MUTEX_INIT=1
    REPLACE_PTHREAD_MUTEXATTR_INIT=1
    REPLACE_PTHREAD_MUTEXATTR_GETTYPE=1
    REPLACE_PTHREAD_MUTEXATTR_SETTYPE=1
    REPLACE_PTHREAD_MUTEXATTR_GETROBUST=1
    REPLACE_PTHREAD_MUTEXATTR_SETROBUST=1
    REPLACE_PTHREAD_MUTEXATTR_DESTROY=1
    REPLACE_PTHREAD_MUTEX_LOCK=1
    REPLACE_PTHREAD_MUTEX_TRYLOCK=1
    REPLACE_PTHREAD_MUTEX_TIMEDLOCK=1
    REPLACE_PTHREAD_MUTEX_UNLOCK=1
    REPLACE_PTHREAD_MUTEX_DESTROY=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_MUTEX_INIT=0
      HAVE_PTHREAD_MUTEXATTR_INIT=0
      HAVE_PTHREAD_MUTEXATTR_GETTYPE=0
      HAVE_PTHREAD_MUTEXATTR_SETTYPE=0
      HAVE_PTHREAD_MUTEXATTR_GETROBUST=0
      HAVE_PTHREAD_MUTEXATTR_SETROBUST=0
      HAVE_PTHREAD_MUTEXATTR_DESTROY=0
      HAVE_PTHREAD_MUTEX_LOCK=0
      HAVE_PTHREAD_MUTEX_TRYLOCK=0
      dnl HAVE_PTHREAD_MUTEX_TIMEDLOCK is set in pthread_mutex_timedlock.m4.
      HAVE_PTHREAD_MUTEX_UNLOCK=0
      HAVE_PTHREAD_MUTEX_DESTROY=0
    else
      AC_CACHE_CHECK([for pthread_mutexattr_getrobust],
        [gl_cv_func_pthread_mutexattr_getrobust],
        [saved_LIBS="$LIBS"
         LIBS="$LIBS $LIBPMULTITHREAD"
         AC_LINK_IFELSE(
           [AC_LANG_SOURCE(
              [[extern
                #ifdef __cplusplus
                "C"
                #endif
                int pthread_mutexattr_getrobust (void);
                int main ()
                {
                  return pthread_mutexattr_getrobust ();
                }
              ]])],
           [gl_cv_func_pthread_mutexattr_getrobust=yes],
           [gl_cv_func_pthread_mutexattr_getrobust=no])
         LIBS="$saved_LIBS"
        ])
      if test $gl_cv_func_pthread_mutexattr_getrobust = no; then
        HAVE_PTHREAD_MUTEXATTR_GETROBUST=0
        HAVE_PTHREAD_MUTEXATTR_SETROBUST=0
        AC_DEFINE([PTHREAD_MUTEXATTR_ROBUST_UNIMPLEMENTED], [1],
          [Define if the 'robust' attribute of pthread_mutex* doesn't exist.])
      fi
    fi
  fi
])
m4trace:m4/pthread-thread.m4:7: -1- AC_DEFUN([gl_PTHREAD_THREAD], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_CREATE=1
    REPLACE_PTHREAD_ATTR_INIT=1
    REPLACE_PTHREAD_ATTR_GETDETACHSTATE=1
    REPLACE_PTHREAD_ATTR_SETDETACHSTATE=1
    REPLACE_PTHREAD_ATTR_DESTROY=1
    REPLACE_PTHREAD_SELF=1
    REPLACE_PTHREAD_EQUAL=1
    REPLACE_PTHREAD_DETACH=1
    REPLACE_PTHREAD_JOIN=1
    REPLACE_PTHREAD_EXIT=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_CREATE=0
      HAVE_PTHREAD_ATTR_INIT=0
      HAVE_PTHREAD_ATTR_GETDETACHSTATE=0
      HAVE_PTHREAD_ATTR_SETDETACHSTATE=0
      HAVE_PTHREAD_ATTR_DESTROY=0
      HAVE_PTHREAD_SELF=0
      HAVE_PTHREAD_EQUAL=0
      HAVE_PTHREAD_DETACH=0
      HAVE_PTHREAD_JOIN=0
      HAVE_PTHREAD_EXIT=0
    else
      dnl On HP-UX 11.11, pthread_create() and pthread_attr_init() are only
      dnl defined as inline functions.
      AC_CACHE_CHECK([whether pthread_create exists as a global function],
        [gl_cv_func_pthread_create],
        [saved_LIBS="$LIBS"
         LIBS="$LIBS $LIBPMULTITHREAD"
         AC_LINK_IFELSE(
           [AC_LANG_SOURCE(
              [[extern
                #ifdef __cplusplus
                "C"
                #endif
                int pthread_create (void);
                int main ()
                {
                  return pthread_create ();
                }
              ]])],
           [gl_cv_func_pthread_create=yes],
           [gl_cv_func_pthread_create=no])
         LIBS="$saved_LIBS"
        ])
      if test $gl_cv_func_pthread_create = no; then
        REPLACE_PTHREAD_CREATE=1
        REPLACE_PTHREAD_ATTR_INIT=1
        AC_DEFINE([PTHREAD_CREATE_IS_INLINE], [1],
          [Define if pthread_create is an inline function.])
      fi
    fi
  fi
])
m4trace:m4/pthread_h.m4:7: -1- AC_DEFUN_ONCE([gl_PTHREAD_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_PTHREAD_H_DEFAULTS])

  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PTHREADLIB])

  gl_CHECK_NEXT_HEADERS([pthread.h])
  if test $ac_cv_header_pthread_h = yes; then
    HAVE_PTHREAD_H=1
    dnl On mingw, if --enable-threads=windows or gl_AVOID_WINPTHREAD is used,
    dnl ignore the <pthread.h> from the mingw-w64 winpthreads library.
    m4_ifdef([gl_][THREADLIB], [
      AC_REQUIRE([gl_][THREADLIB])
      if { case "$host_os" in mingw*) true;; *) false;; esac; } \
         && test $gl_threads_api = windows; then
        HAVE_PTHREAD_H=0
      fi
    ])
  else
    HAVE_PTHREAD_H=0
  fi
  AC_SUBST([HAVE_PTHREAD_H])

  AC_CHECK_TYPES([pthread_t, pthread_spinlock_t], [], [],
    [AC_INCLUDES_DEFAULT[
     #if HAVE_PTHREAD_H
      #include <pthread.h>
     #endif]])
  if test $ac_cv_type_pthread_t != yes; then
    HAVE_PTHREAD_T=0
  fi
  if test $ac_cv_type_pthread_spinlock_t != yes; then
    HAVE_PTHREAD_SPINLOCK_T=0
  fi

  dnl Constants may be defined as C preprocessor macros or as enum items.

  AC_CACHE_CHECK([for PTHREAD_CREATE_DETACHED],
    [gl_cv_const_PTHREAD_CREATE_DETACHED],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_CREATE_DETACHED;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_CREATE_DETACHED=yes],
       [gl_cv_const_PTHREAD_CREATE_DETACHED=no])
    ])
  if test $gl_cv_const_PTHREAD_CREATE_DETACHED != yes; then
    HAVE_PTHREAD_CREATE_DETACHED=0
  fi

  AC_CACHE_CHECK([for PTHREAD_MUTEX_RECURSIVE],
    [gl_cv_const_PTHREAD_MUTEX_RECURSIVE],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_MUTEX_RECURSIVE;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_MUTEX_RECURSIVE=yes],
       [gl_cv_const_PTHREAD_MUTEX_RECURSIVE=no])
    ])
  if test $gl_cv_const_PTHREAD_MUTEX_RECURSIVE != yes; then
    HAVE_PTHREAD_MUTEX_RECURSIVE=0
  fi

  AC_CACHE_CHECK([for PTHREAD_MUTEX_ROBUST],
    [gl_cv_const_PTHREAD_MUTEX_ROBUST],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_MUTEX_ROBUST;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_MUTEX_ROBUST=yes],
       [gl_cv_const_PTHREAD_MUTEX_ROBUST=no])
    ])
  if test $gl_cv_const_PTHREAD_MUTEX_ROBUST != yes; then
    HAVE_PTHREAD_MUTEX_ROBUST=0
  fi

  AC_CACHE_CHECK([for PTHREAD_PROCESS_SHARED],
    [gl_cv_const_PTHREAD_PROCESS_SHARED],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_PROCESS_SHARED;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_PROCESS_SHARED=yes],
       [gl_cv_const_PTHREAD_PROCESS_SHARED=no])
    ])
  if test $gl_cv_const_PTHREAD_PROCESS_SHARED != yes; then
    HAVE_PTHREAD_PROCESS_SHARED=0
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <pthread.h>
    ]], [
    pthread_create pthread_attr_init pthread_attr_getdetachstate
    pthread_attr_setdetachstate pthread_attr_destroy pthread_self pthread_equal
    pthread_detach pthread_join pthread_exit
    pthread_once
    pthread_mutex_init pthread_mutexattr_init pthread_mutexattr_gettype
    pthread_mutexattr_settype pthread_mutexattr_getrobust
    pthread_mutexattr_setrobust pthread_mutexattr_destroy pthread_mutex_lock
    pthread_mutex_trylock pthread_mutex_timedlock pthread_mutex_unlock
    pthread_mutex_destroy
    pthread_rwlock_init pthread_rwlockattr_init pthread_rwlockattr_destroy
    pthread_rwlock_rdlock pthread_rwlock_wrlock pthread_rwlock_tryrdlock
    pthread_rwlock_trywrlock pthread_rwlock_timedrdlock
    pthread_rwlock_timedwrlock pthread_rwlock_unlock pthread_rwlock_destroy
    pthread_cond_init pthread_condattr_init pthread_condattr_destroy
    pthread_cond_wait pthread_cond_timedwait pthread_cond_signal
    pthread_cond_broadcast pthread_cond_destroy
    pthread_key_create pthread_setspecific pthread_getspecific
    pthread_key_delete
    pthread_spin_init pthread_spin_lock pthread_spin_trylock pthread_spin_unlock
    pthread_spin_destroy])

  AC_REQUIRE([AC_C_RESTRICT])

  dnl For backward compatibility with gnulib versions <= 2019-07.
  LIB_PTHREAD="$LIBPMULTITHREAD"
  AC_SUBST([LIB_PTHREAD])
])
m4trace:m4/pthread_h.m4:144: -1- AC_DEFUN([gl_PTHREAD_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_PTHREAD_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/pthread_h.m4:156: -1- AC_DEFUN([gl_PTHREAD_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_PTHREAD_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_THREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_ONCE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_RWLOCK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_COND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_TSS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SPIN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX_TIMEDLOCK])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_PTHREAD_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_PTHREAD_H_DEFAULTS])
])
m4trace:m4/pthread_h.m4:172: -1- AC_DEFUN([gl_PTHREAD_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_PTHREAD_T=1;                      AC_SUBST([HAVE_PTHREAD_T])
  HAVE_PTHREAD_SPINLOCK_T=1;             AC_SUBST([HAVE_PTHREAD_SPINLOCK_T])
  HAVE_PTHREAD_CREATE_DETACHED=1;        AC_SUBST([HAVE_PTHREAD_CREATE_DETACHED])
  HAVE_PTHREAD_MUTEX_RECURSIVE=1;        AC_SUBST([HAVE_PTHREAD_MUTEX_RECURSIVE])
  HAVE_PTHREAD_MUTEX_ROBUST=1;           AC_SUBST([HAVE_PTHREAD_MUTEX_ROBUST])
  HAVE_PTHREAD_PROCESS_SHARED=1;         AC_SUBST([HAVE_PTHREAD_PROCESS_SHARED])
  HAVE_PTHREAD_CREATE=1;                 AC_SUBST([HAVE_PTHREAD_CREATE])
  HAVE_PTHREAD_ATTR_INIT=1;              AC_SUBST([HAVE_PTHREAD_ATTR_INIT])
  HAVE_PTHREAD_ATTR_GETDETACHSTATE=1;    AC_SUBST([HAVE_PTHREAD_ATTR_GETDETACHSTATE])
  HAVE_PTHREAD_ATTR_SETDETACHSTATE=1;    AC_SUBST([HAVE_PTHREAD_ATTR_SETDETACHSTATE])
  HAVE_PTHREAD_ATTR_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_ATTR_DESTROY])
  HAVE_PTHREAD_SELF=1;                   AC_SUBST([HAVE_PTHREAD_SELF])
  HAVE_PTHREAD_EQUAL=1;                  AC_SUBST([HAVE_PTHREAD_EQUAL])
  HAVE_PTHREAD_DETACH=1;                 AC_SUBST([HAVE_PTHREAD_DETACH])
  HAVE_PTHREAD_JOIN=1;                   AC_SUBST([HAVE_PTHREAD_JOIN])
  HAVE_PTHREAD_EXIT=1;                   AC_SUBST([HAVE_PTHREAD_EXIT])
  HAVE_PTHREAD_ONCE=1;                   AC_SUBST([HAVE_PTHREAD_ONCE])
  HAVE_PTHREAD_MUTEX_INIT=1;             AC_SUBST([HAVE_PTHREAD_MUTEX_INIT])
  HAVE_PTHREAD_MUTEXATTR_INIT=1;         AC_SUBST([HAVE_PTHREAD_MUTEXATTR_INIT])
  HAVE_PTHREAD_MUTEXATTR_GETTYPE=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_GETTYPE])
  HAVE_PTHREAD_MUTEXATTR_SETTYPE=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_SETTYPE])
  HAVE_PTHREAD_MUTEXATTR_GETROBUST=1;    AC_SUBST([HAVE_PTHREAD_MUTEXATTR_GETROBUST])
  HAVE_PTHREAD_MUTEXATTR_SETROBUST=1;    AC_SUBST([HAVE_PTHREAD_MUTEXATTR_SETROBUST])
  HAVE_PTHREAD_MUTEXATTR_DESTROY=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_DESTROY])
  HAVE_PTHREAD_MUTEX_LOCK=1;             AC_SUBST([HAVE_PTHREAD_MUTEX_LOCK])
  HAVE_PTHREAD_MUTEX_TRYLOCK=1;          AC_SUBST([HAVE_PTHREAD_MUTEX_TRYLOCK])
  HAVE_PTHREAD_MUTEX_TIMEDLOCK=1;        AC_SUBST([HAVE_PTHREAD_MUTEX_TIMEDLOCK])
  HAVE_PTHREAD_MUTEX_UNLOCK=1;           AC_SUBST([HAVE_PTHREAD_MUTEX_UNLOCK])
  HAVE_PTHREAD_MUTEX_DESTROY=1;          AC_SUBST([HAVE_PTHREAD_MUTEX_DESTROY])
  HAVE_PTHREAD_RWLOCK_INIT=1;            AC_SUBST([HAVE_PTHREAD_RWLOCK_INIT])
  HAVE_PTHREAD_RWLOCKATTR_INIT=1;        AC_SUBST([HAVE_PTHREAD_RWLOCKATTR_INIT])
  HAVE_PTHREAD_RWLOCKATTR_DESTROY=1;     AC_SUBST([HAVE_PTHREAD_RWLOCKATTR_DESTROY])
  HAVE_PTHREAD_RWLOCK_RDLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_RDLOCK])
  HAVE_PTHREAD_RWLOCK_WRLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_WRLOCK])
  HAVE_PTHREAD_RWLOCK_TRYRDLOCK=1;       AC_SUBST([HAVE_PTHREAD_RWLOCK_TRYRDLOCK])
  HAVE_PTHREAD_RWLOCK_TRYWRLOCK=1;       AC_SUBST([HAVE_PTHREAD_RWLOCK_TRYWRLOCK])
  HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK=1;     AC_SUBST([HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK])
  HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK=1;     AC_SUBST([HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK])
  HAVE_PTHREAD_RWLOCK_UNLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_UNLOCK])
  HAVE_PTHREAD_RWLOCK_DESTROY=1;         AC_SUBST([HAVE_PTHREAD_RWLOCK_DESTROY])
  HAVE_PTHREAD_COND_INIT=1;              AC_SUBST([HAVE_PTHREAD_COND_INIT])
  HAVE_PTHREAD_CONDATTR_INIT=1;          AC_SUBST([HAVE_PTHREAD_CONDATTR_INIT])
  HAVE_PTHREAD_CONDATTR_DESTROY=1;       AC_SUBST([HAVE_PTHREAD_CONDATTR_DESTROY])
  HAVE_PTHREAD_COND_WAIT=1;              AC_SUBST([HAVE_PTHREAD_COND_WAIT])
  HAVE_PTHREAD_COND_TIMEDWAIT=1;         AC_SUBST([HAVE_PTHREAD_COND_TIMEDWAIT])
  HAVE_PTHREAD_COND_SIGNAL=1;            AC_SUBST([HAVE_PTHREAD_COND_SIGNAL])
  HAVE_PTHREAD_COND_BROADCAST=1;         AC_SUBST([HAVE_PTHREAD_COND_BROADCAST])
  HAVE_PTHREAD_COND_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_COND_DESTROY])
  HAVE_PTHREAD_KEY_CREATE=1;             AC_SUBST([HAVE_PTHREAD_KEY_CREATE])
  HAVE_PTHREAD_SETSPECIFIC=1;            AC_SUBST([HAVE_PTHREAD_SETSPECIFIC])
  HAVE_PTHREAD_GETSPECIFIC=1;            AC_SUBST([HAVE_PTHREAD_GETSPECIFIC])
  HAVE_PTHREAD_KEY_DELETE=1;             AC_SUBST([HAVE_PTHREAD_KEY_DELETE])
  HAVE_PTHREAD_SPIN_INIT=1;              AC_SUBST([HAVE_PTHREAD_SPIN_INIT])
  HAVE_PTHREAD_SPIN_LOCK=1;              AC_SUBST([HAVE_PTHREAD_SPIN_LOCK])
  HAVE_PTHREAD_SPIN_TRYLOCK=1;           AC_SUBST([HAVE_PTHREAD_SPIN_TRYLOCK])
  HAVE_PTHREAD_SPIN_UNLOCK=1;            AC_SUBST([HAVE_PTHREAD_SPIN_UNLOCK])
  HAVE_PTHREAD_SPIN_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_SPIN_DESTROY])
  REPLACE_PTHREAD_CREATE=0;              AC_SUBST([REPLACE_PTHREAD_CREATE])
  REPLACE_PTHREAD_ATTR_INIT=0;           AC_SUBST([REPLACE_PTHREAD_ATTR_INIT])
  REPLACE_PTHREAD_ATTR_GETDETACHSTATE=0; AC_SUBST([REPLACE_PTHREAD_ATTR_GETDETACHSTATE])
  REPLACE_PTHREAD_ATTR_SETDETACHSTATE=0; AC_SUBST([REPLACE_PTHREAD_ATTR_SETDETACHSTATE])
  REPLACE_PTHREAD_ATTR_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_ATTR_DESTROY])
  REPLACE_PTHREAD_SELF=0;                AC_SUBST([REPLACE_PTHREAD_SELF])
  REPLACE_PTHREAD_EQUAL=0;               AC_SUBST([REPLACE_PTHREAD_EQUAL])
  REPLACE_PTHREAD_DETACH=0;              AC_SUBST([REPLACE_PTHREAD_DETACH])
  REPLACE_PTHREAD_JOIN=0;                AC_SUBST([REPLACE_PTHREAD_JOIN])
  REPLACE_PTHREAD_EXIT=0;                AC_SUBST([REPLACE_PTHREAD_EXIT])
  REPLACE_PTHREAD_ONCE=0;                AC_SUBST([REPLACE_PTHREAD_ONCE])
  REPLACE_PTHREAD_MUTEX_INIT=0;          AC_SUBST([REPLACE_PTHREAD_MUTEX_INIT])
  REPLACE_PTHREAD_MUTEXATTR_INIT=0;      AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_INIT])
  REPLACE_PTHREAD_MUTEXATTR_GETTYPE=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_GETTYPE])
  REPLACE_PTHREAD_MUTEXATTR_SETTYPE=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_SETTYPE])
  REPLACE_PTHREAD_MUTEXATTR_GETROBUST=0; AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_GETROBUST])
  REPLACE_PTHREAD_MUTEXATTR_SETROBUST=0; AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_SETROBUST])
  REPLACE_PTHREAD_MUTEXATTR_DESTROY=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_DESTROY])
  REPLACE_PTHREAD_MUTEX_LOCK=0;          AC_SUBST([REPLACE_PTHREAD_MUTEX_LOCK])
  REPLACE_PTHREAD_MUTEX_TRYLOCK=0;       AC_SUBST([REPLACE_PTHREAD_MUTEX_TRYLOCK])
  REPLACE_PTHREAD_MUTEX_TIMEDLOCK=0;     AC_SUBST([REPLACE_PTHREAD_MUTEX_TIMEDLOCK])
  REPLACE_PTHREAD_MUTEX_UNLOCK=0;        AC_SUBST([REPLACE_PTHREAD_MUTEX_UNLOCK])
  REPLACE_PTHREAD_MUTEX_DESTROY=0;       AC_SUBST([REPLACE_PTHREAD_MUTEX_DESTROY])
  REPLACE_PTHREAD_RWLOCK_INIT=0;         AC_SUBST([REPLACE_PTHREAD_RWLOCK_INIT])
  REPLACE_PTHREAD_RWLOCKATTR_INIT=0;     AC_SUBST([REPLACE_PTHREAD_RWLOCKATTR_INIT])
  REPLACE_PTHREAD_RWLOCKATTR_DESTROY=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCKATTR_DESTROY])
  REPLACE_PTHREAD_RWLOCK_RDLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_RDLOCK])
  REPLACE_PTHREAD_RWLOCK_WRLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_WRLOCK])
  REPLACE_PTHREAD_RWLOCK_TRYRDLOCK=0;    AC_SUBST([REPLACE_PTHREAD_RWLOCK_TRYRDLOCK])
  REPLACE_PTHREAD_RWLOCK_TRYWRLOCK=0;    AC_SUBST([REPLACE_PTHREAD_RWLOCK_TRYWRLOCK])
  REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK])
  REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK])
  REPLACE_PTHREAD_RWLOCK_UNLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_UNLOCK])
  REPLACE_PTHREAD_RWLOCK_DESTROY=0;      AC_SUBST([REPLACE_PTHREAD_RWLOCK_DESTROY])
  REPLACE_PTHREAD_COND_INIT=0;           AC_SUBST([REPLACE_PTHREAD_COND_INIT])
  REPLACE_PTHREAD_CONDATTR_INIT=0;       AC_SUBST([REPLACE_PTHREAD_CONDATTR_INIT])
  REPLACE_PTHREAD_CONDATTR_DESTROY=0;    AC_SUBST([REPLACE_PTHREAD_CONDATTR_DESTROY])
  REPLACE_PTHREAD_COND_WAIT=0;           AC_SUBST([REPLACE_PTHREAD_COND_WAIT])
  REPLACE_PTHREAD_COND_TIMEDWAIT=0;      AC_SUBST([REPLACE_PTHREAD_COND_TIMEDWAIT])
  REPLACE_PTHREAD_COND_SIGNAL=0;         AC_SUBST([REPLACE_PTHREAD_COND_SIGNAL])
  REPLACE_PTHREAD_COND_BROADCAST=0;      AC_SUBST([REPLACE_PTHREAD_COND_BROADCAST])
  REPLACE_PTHREAD_COND_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_COND_DESTROY])
  REPLACE_PTHREAD_KEY_CREATE=0;          AC_SUBST([REPLACE_PTHREAD_KEY_CREATE])
  REPLACE_PTHREAD_SETSPECIFIC=0;         AC_SUBST([REPLACE_PTHREAD_SETSPECIFIC])
  REPLACE_PTHREAD_GETSPECIFIC=0;         AC_SUBST([REPLACE_PTHREAD_GETSPECIFIC])
  REPLACE_PTHREAD_KEY_DELETE=0;          AC_SUBST([REPLACE_PTHREAD_KEY_DELETE])
  REPLACE_PTHREAD_SPIN_INIT=0;           AC_SUBST([REPLACE_PTHREAD_SPIN_INIT])
  REPLACE_PTHREAD_SPIN_LOCK=0;           AC_SUBST([REPLACE_PTHREAD_SPIN_LOCK])
  REPLACE_PTHREAD_SPIN_TRYLOCK=0;        AC_SUBST([REPLACE_PTHREAD_SPIN_TRYLOCK])
  REPLACE_PTHREAD_SPIN_UNLOCK=0;         AC_SUBST([REPLACE_PTHREAD_SPIN_UNLOCK])
  REPLACE_PTHREAD_SPIN_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_SPIN_DESTROY])
])
m4trace:m4/pthread_mutex_timedlock.m4:7: -1- AC_DEFUN([gl_FUNC_PTHREAD_MUTEX_TIMEDLOCK], [
  AC_REQUIRE([gl_PTHREAD_H_DEFAULTS])

  AC_CHECK_DECL([pthread_mutex_timedlock], , [HAVE_PTHREAD_MUTEX_TIMEDLOCK=0],
    [[#include <pthread.h>]])
])
m4trace:m4/pthread_rwlock_rdlock.m4:35: -1- AC_DEFUN([gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER], [
  AC_REQUIRE([gl_THREADLIB_EARLY])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether pthread_rwlock_rdlock prefers a writer to a reader],
    [gl_cv_pthread_rwlock_rdlock_prefer_writer],
    [save_LIBS="$LIBS"
     LIBS="$LIBS $LIBMULTITHREAD"
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#include <errno.h>
#include <pthread.h>
#include <stdlib.h>
#include <unistd.h>

#define SUCCEED() exit (0)
#define FAILURE() exit (1)
#define UNEXPECTED(n) (exit (10 + (n)))

/* The main thread creates the waiting writer and the requesting reader threads
   in the default way; this guarantees that they have the same priority.
   We can reuse the main thread as first reader thread.  */

static pthread_rwlock_t lock;
static pthread_t reader1;
static pthread_t writer;
static pthread_t reader2;
static pthread_t timer;
/* Used to pass control from writer to reader2 and from reader2 to timer,
   as in a relay race.
   Passing control from one running thread to another running thread
   is most likely faster than to create the second thread.  */
static pthread_mutex_t baton;

static void *
timer_func (void *ignored)
{
  /* Step 13 (can be before or after step 12):
     The timer thread takes the baton, then waits a moment to make sure
     it can tell whether the second reader thread is blocked at step 12.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (13);
  usleep (100000);
  /* By the time we get here, it's clear that the second reader thread is
     blocked at step 12.  This is the desired behaviour.  */
  SUCCEED ();
}

static void *
reader2_func (void *ignored)
{
  int err;

  /* Step 8 (can be before or after step 7):
     The second reader thread takes the baton, then waits a moment to make sure
     the writer thread has reached step 7.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (8);
  usleep (100000);
  /* Step 9: The second reader thread requests the lock.  */
  err = pthread_rwlock_tryrdlock (&lock);
  if (err == 0)
    FAILURE ();
  else if (err != EBUSY)
    UNEXPECTED (9);
  /* Step 10: Launch a timer, to test whether the next call blocks.  */
  if (pthread_create (&timer, NULL, timer_func, NULL))
    UNEXPECTED (10);
  /* Step 11: Release the baton.  */
  if (pthread_mutex_unlock (&baton))
    UNEXPECTED (11);
  /* Step 12: The second reader thread requests the lock.  */
  err = pthread_rwlock_rdlock (&lock);
  if (err == 0)
    FAILURE ();
  else
    UNEXPECTED (12);
}

static void *
writer_func (void *ignored)
{
  /* Step 4: Take the baton, so that the second reader thread does not go ahead
     too early.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (4);
  /* Step 5: Create the second reader thread.  */
  if (pthread_create (&reader2, NULL, reader2_func, NULL))
    UNEXPECTED (5);
  /* Step 6: Release the baton.  */
  if (pthread_mutex_unlock (&baton))
    UNEXPECTED (6);
  /* Step 7: The writer thread requests the lock.  */
  if (pthread_rwlock_wrlock (&lock))
    UNEXPECTED (7);
  return NULL;
}

int
main ()
{
  reader1 = pthread_self ();

  /* Step 1: The main thread initializes the lock and the baton.  */
  if (pthread_rwlock_init (&lock, NULL))
    UNEXPECTED (1);
  if (pthread_mutex_init (&baton, NULL))
    UNEXPECTED (1);
  /* Step 2: The main thread acquires the lock as a reader.  */
  if (pthread_rwlock_rdlock (&lock))
    UNEXPECTED (2);
  /* Step 3: Create the writer thread.  */
  if (pthread_create (&writer, NULL, writer_func, NULL))
    UNEXPECTED (3);
  /* Job done.  Go to sleep.  */
  for (;;)
    {
      sleep (1);
    }
}
]])],
       [gl_cv_pthread_rwlock_rdlock_prefer_writer=yes],
       [gl_cv_pthread_rwlock_rdlock_prefer_writer=no],
       [case "$host_os" in
                         # Guess no on glibc systems.
          *-gnu* | gnu*) gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                         # Guess no on musl systems.
          *-musl*)       gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                         # Guess no on bionic systems.
          *-android*)    gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                         # Guess yes on native Windows with the mingw-w64 winpthreads library.
                         # Guess no on native Windows with the gnulib windows-rwlock module.
          mingw*)        if test "$gl_use_threads" = yes || test "$gl_use_threads" = posix; then
                           gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing yes"
                         else
                           gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no"
                         fi
                         ;;
                         # If we don't know, obey --enable-cross-guesses.
          *)             gl_cv_pthread_rwlock_rdlock_prefer_writer="$gl_cross_guess_normal" ;;
         esac
       ])
     LIBS="$save_LIBS"
    ])
  case "$gl_cv_pthread_rwlock_rdlock_prefer_writer" in
    *yes)
      AC_DEFINE([HAVE_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER], [1],
        [Define if the 'pthread_rwlock_rdlock' function prefers a writer to a reader.])
      ;;
  esac
])
m4trace:m4/pthread_sigmask.m4:7: -1- AC_DEFUN([gl_FUNC_PTHREAD_SIGMASK], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])

  AC_CHECK_FUNCS_ONCE([pthread_sigmask])

  dnl On MinGW pthread_sigmask is just a macro which always returns 0.
  dnl It does not exist as a real function, which is required by POSIX.
  AC_CACHE_CHECK([whether pthread_sigmask is a macro],
    [gl_cv_func_pthread_sigmask_macro],
    [AC_EGREP_CPP([headers_define_pthread_sigmask], [
#include <pthread.h>
#include <signal.h>
#ifdef pthread_sigmask
 headers_define_pthread_sigmask
#endif],
       [gl_cv_func_pthread_sigmask_macro=yes],
       [gl_cv_func_pthread_sigmask_macro=no])
    ])

  LIB_PTHREAD_SIGMASK=

  if test $gl_cv_func_pthread_sigmask_macro = yes; then
    dnl pthread_sigmask is a dummy macro.
    HAVE_PTHREAD_SIGMASK=0
    dnl Make sure to '#undef pthread_sigmask' before defining it.
    REPLACE_PTHREAD_SIGMASK=1
  else
    dnl Test whether the gnulib module 'threadlib' is in use.
    dnl Some packages like Emacs use --avoid=threadlib.
    dnl Write the symbol in such a way that it does not cause 'aclocal' to pick
    dnl the threadlib.m4 file that is installed in $PREFIX/share/aclocal/.
    m4_ifdef([gl_][THREADLIB], [
      AC_REQUIRE([gl_][THREADLIB])

      if test "$gl_threads_api" = posix; then
        if test $ac_cv_func_pthread_sigmask = yes; then
          dnl pthread_sigmask is available without -lpthread.
          :
        else
          if test -n "$LIBMULTITHREAD"; then
            AC_CACHE_CHECK([for pthread_sigmask in $LIBMULTITHREAD],
              [gl_cv_func_pthread_sigmask_in_LIBMULTITHREAD],
              [gl_save_LIBS="$LIBS"
               LIBS="$LIBS $LIBMULTITHREAD"
               AC_LINK_IFELSE(
                 [AC_LANG_PROGRAM(
                    [[#include <pthread.h>
                      #include <signal.h>
                    ]],
                    [[return pthread_sigmask (0, (sigset_t *) 0, (sigset_t *) 0);]])
                 ],
                 [gl_cv_func_pthread_sigmask_in_LIBMULTITHREAD=yes],
                 [gl_cv_func_pthread_sigmask_in_LIBMULTITHREAD=no])
               LIBS="$gl_save_LIBS"
              ])
            if test $gl_cv_func_pthread_sigmask_in_LIBMULTITHREAD = yes; then
              dnl pthread_sigmask is available with -pthread or -lpthread.
              LIB_PTHREAD_SIGMASK="$LIBMULTITHREAD"
            else
              dnl pthread_sigmask is not available at all.
              HAVE_PTHREAD_SIGMASK=0
            fi
          else
            dnl pthread_sigmask is not available at all.
            HAVE_PTHREAD_SIGMASK=0
          fi
        fi
      else
        dnl pthread_sigmask may exist but does not interoperate with the chosen
        dnl multithreading facility.
        if test $ac_cv_func_pthread_sigmask = yes; then
          REPLACE_PTHREAD_SIGMASK=1
        else
          HAVE_PTHREAD_SIGMASK=0
        fi
      fi
    ], [
      dnl The module 'threadlib' is not in use, due to --avoid=threadlib being
      dnl specified.
      dnl The package either has prepared CPPFLAGS and LIBS for use of
      dnl POSIX:2008 threads, or wants to build single-threaded programs.
      if test $ac_cv_func_pthread_sigmask = yes; then
        dnl pthread_sigmask exists and does not require extra libraries.
        dnl Assume that it is declared.
        :
      else
        dnl pthread_sigmask either does not exist or needs extra libraries.
        HAVE_PTHREAD_SIGMASK=0
        dnl Define the symbol rpl_pthread_sigmask, not pthread_sigmask,
        dnl so as to not accidentally override the system's pthread_sigmask
        dnl symbol from libpthread. This is necessary on IRIX 6.5.
        REPLACE_PTHREAD_SIGMASK=1
      fi
    ])
  fi

  AC_SUBST([LIB_PTHREAD_SIGMASK])
  dnl We don't need a variable LTLIB_PTHREAD_SIGMASK, because when
  dnl "$gl_threads_api" = posix, $LTLIBMULTITHREAD and $LIBMULTITHREAD are the
  dnl same.

  dnl Now test for some bugs in the system function.
  if test $HAVE_PTHREAD_SIGMASK = 1; then
    AC_REQUIRE([AC_PROG_CC])
    AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

    dnl On FreeBSD 13.0, MidnightBSD 1.1, HP-UX 11.31, Solaris 9, in programs
    dnl that are not linked with -lpthread, the pthread_sigmask() function
    dnl always returns 0 and has no effect.
    if test -z "$LIB_PTHREAD_SIGMASK"; then
      case " $LIBS " in
        *' -pthread '*) ;;
        *' -lpthread '*) ;;
        *)
          AC_CACHE_CHECK([whether pthread_sigmask works without -lpthread],
            [gl_cv_func_pthread_sigmask_in_libc_works],
            [
              AC_RUN_IFELSE(
                [AC_LANG_SOURCE([[
                   #include <pthread.h>
                   #include <signal.h>
                   #include <stddef.h>
                   int main ()
                   {
                     sigset_t set;
                     sigemptyset (&set);
                     return pthread_sigmask (1729, &set, NULL) != 0;
                   }]])],
                [gl_cv_func_pthread_sigmask_in_libc_works=no],
                [gl_cv_func_pthread_sigmask_in_libc_works=yes],
                [
                 changequote(,)dnl
                 case "$host_os" in
                   freebsd* | midnightbsd* | hpux* | solaris | solaris2.[2-9]*)
                     gl_cv_func_pthread_sigmask_in_libc_works="guessing no";;
                   *)
                     gl_cv_func_pthread_sigmask_in_libc_works="guessing yes";;
                 esac
                 changequote([,])dnl
                ])
            ])
          case "$gl_cv_func_pthread_sigmask_in_libc_works" in
            *no)
              REPLACE_PTHREAD_SIGMASK=1
              AC_DEFINE([PTHREAD_SIGMASK_INEFFECTIVE], [1],
                [Define to 1 if pthread_sigmask may return 0 and have no effect.])
              ;;
          esac;;
      esac
    fi

    dnl On Cygwin 1.7.5, the pthread_sigmask() has a wrong return value
    dnl convention: Upon failure, it returns -1 and sets errno.
    AC_CACHE_CHECK([whether pthread_sigmask returns error numbers],
      [gl_cv_func_pthread_sigmask_return_works],
      [
        gl_save_LIBS="$LIBS"
        LIBS="$LIBS $LIB_PTHREAD_SIGMASK"
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <pthread.h>
#include <signal.h>
#include <stddef.h>
int main ()
{
  sigset_t set;
  sigemptyset (&set);
  if (pthread_sigmask (1729, &set, NULL) == -1)
    return 1;
  return 0;
}]])],
          [gl_cv_func_pthread_sigmask_return_works=yes],
          [gl_cv_func_pthread_sigmask_return_works=no],
          [case "$host_os" in
             cygwin*)
               gl_cv_func_pthread_sigmask_return_works="guessing no";;
             *)
               gl_cv_func_pthread_sigmask_return_works="guessing yes";;
           esac
          ])
        LIBS="$gl_save_LIBS"
      ])
    case "$gl_cv_func_pthread_sigmask_return_works" in
      *no)
        REPLACE_PTHREAD_SIGMASK=1
        AC_DEFINE([PTHREAD_SIGMASK_FAILS_WITH_ERRNO], [1],
          [Define to 1 if pthread_sigmask(), when it fails, returns -1 and sets errno.])
        ;;
    esac

    dnl On IRIX 6.5, in a single-threaded program, pending signals are not
    dnl immediately delivered when they are unblocked through pthread_sigmask,
    dnl only a little while later.
    AC_CACHE_CHECK([whether pthread_sigmask unblocks signals correctly],
      [gl_cv_func_pthread_sigmask_unblock_works],
      [
        case "$host_os" in
          irix*)
            gl_cv_func_pthread_sigmask_unblock_works="guessing no";;
          *)
            gl_cv_func_pthread_sigmask_unblock_works="guessing yes";;
        esac
        m4_ifdef([gl_][THREADLIB],
          [dnl Link against $LIBMULTITHREAD, not only $LIB_PTHREAD_SIGMASK.
           dnl Otherwise we get a false positive on those platforms where
           dnl $gl_cv_func_pthread_sigmask_in_libc_works is "no".
           gl_save_LIBS=$LIBS
           LIBS="$LIBS $LIBMULTITHREAD"])
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <pthread.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
]GL_MDA_DEFINES[
static volatile int sigint_occurred;
static void
sigint_handler (int sig)
{
  sigint_occurred++;
}
int main ()
{
  sigset_t set;
  int pid = getpid ();
  char command[80];
  signal (SIGINT, sigint_handler);
  sigemptyset (&set);
  sigaddset (&set, SIGINT);
  if (!(pthread_sigmask (SIG_BLOCK, &set, NULL) == 0))
    return 1;
  sprintf (command, "sh -c 'sleep 1; kill -%d %d' &", SIGINT, pid);
  if (!(system (command) == 0))
    return 2;
  sleep (2);
  if (!(sigint_occurred == 0))
    return 3;
  if (!(pthread_sigmask (SIG_UNBLOCK, &set, NULL) == 0))
    return 4;
  if (!(sigint_occurred == 1)) /* This fails on IRIX.  */
    return 5;
  return 0;
}]])],
          [:],
          [gl_cv_func_pthread_sigmask_unblock_works=no],
          [:])
        m4_ifdef([gl_][THREADLIB], [LIBS=$gl_save_LIBS])
      ])
    case "$gl_cv_func_pthread_sigmask_unblock_works" in
      *no)
        REPLACE_PTHREAD_SIGMASK=1
        AC_DEFINE([PTHREAD_SIGMASK_UNBLOCK_BUG], [1],
          [Define to 1 if pthread_sigmask() unblocks signals incorrectly.])
        ;;
    esac
  fi
])
m4trace:m4/pthread_sigmask.m4:268: -1- AC_DEFUN([gl_PREREQ_PTHREAD_SIGMASK], [
  if test $HAVE_PTHREAD_SIGMASK = 1; then
    AC_DEFINE([HAVE_PTHREAD_SIGMASK], [1],
      [Define to 1 if the pthread_sigmask function can be used (despite bugs).])
  fi
])
m4trace:m4/putenv.m4:12: -1- AC_DEFUN([gl_FUNC_PUTENV], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([for putenv compatible with GNU and SVID],
    [gl_cv_func_svid_putenv],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [AC_INCLUDES_DEFAULT
           GL_MDA_DEFINES],
          [[
            /* Put it in env.  */
            if (putenv ("CONFTEST_putenv=val"))
              return 1;

            /* Try to remove it.  */
            if (putenv ("CONFTEST_putenv"))
              return 2;

            /* Make sure it was deleted.  */
            if (getenv ("CONFTEST_putenv") != 0)
              return 3;

            return 0;
          ]])],
       [gl_cv_func_svid_putenv=yes],
       [gl_cv_func_svid_putenv=no],
       [dnl When crosscompiling, assume putenv is broken.
        case "$host_os" in
                         # Guess yes on glibc systems.
          *-gnu* | gnu*) gl_cv_func_svid_putenv="guessing yes" ;;
                         # Guess yes on musl systems.
          *-musl*)       gl_cv_func_svid_putenv="guessing yes" ;;
                         # Guess no on native Windows.
          mingw*)        gl_cv_func_svid_putenv="guessing no" ;;
                         # If we don't know, obey --enable-cross-guesses.
          *)             gl_cv_func_svid_putenv="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  case "$gl_cv_func_svid_putenv" in
    *yes) ;;
    *)
      REPLACE_PUTENV=1
      ;;
  esac
])
m4trace:m4/putenv.m4:61: -1- AC_DEFUN([gl_PREREQ_PUTENV], [
  AC_CHECK_DECLS([_putenv])
])
m4trace:m4/quote.m4:8: -1- AC_DEFUN([gl_QUOTE], [
  dnl Prerequisites of lib/quote.c.
  dnl (none)
  :
])
m4trace:m4/quotearg.m4:7: -1- AC_DEFUN([gl_QUOTEARG], [
  AC_REQUIRE([AC_C_RESTRICT])
  :
])
m4trace:m4/raise.m4:7: -1- AC_DEFUN([gl_FUNC_RAISE], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS([raise])
  if test $ac_cv_func_raise = no; then
    HAVE_RAISE=0
  else
    m4_ifdef([gl_MSVC_INVAL], [
      AC_REQUIRE([gl_MSVC_INVAL])
      if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
        REPLACE_RAISE=1
      fi
    ])
    m4_ifdef([gl_SIGNALBLOCKING], [
      gl_SIGNALBLOCKING
      if test $HAVE_POSIX_SIGNALBLOCKING = 0; then
        m4_ifdef([gl_SIGNAL_SIGPIPE], [
          gl_SIGNAL_SIGPIPE
          if test $gl_cv_header_signal_h_SIGPIPE != yes; then
            REPLACE_RAISE=1
          fi
        ], [:])
      fi
    ])
  fi
])
m4trace:m4/raise.m4:36: -1- AC_DEFUN([gl_PREREQ_RAISE], [:])
m4trace:m4/rawmemchr.m4:7: -1- AC_DEFUN([gl_FUNC_RAWMEMCHR], [
  dnl Persuade glibc <string.h> to declare rawmemchr().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_FUNCS([rawmemchr])
  if test $ac_cv_func_rawmemchr = no; then
    HAVE_RAWMEMCHR=0
  fi
])
m4trace:m4/rawmemchr.m4:20: -1- AC_DEFUN([gl_PREREQ_RAWMEMCHR], [:])
m4trace:m4/read-file.m4:8: -1- AC_DEFUN([gl_PREREQ_READ_FILE], [:])
m4trace:m4/read.m4:7: -1- AC_DEFUN([gl_FUNC_READ], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_READ=1
    fi
  ])
  dnl This ifdef is just an optimization, to avoid performing a configure
  dnl check whose result is not used. It does not make the test of
  dnl GNULIB_UNISTD_H_NONBLOCKING or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_READ=1
    fi
  ])
])
m4trace:m4/read.m4:28: -1- AC_DEFUN([gl_PREREQ_READ], [:])
m4trace:m4/readdir.m4:7: -1- AC_DEFUN([gl_FUNC_READDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  AC_CHECK_FUNCS([readdir])
  if test $ac_cv_func_readdir = no; then
    HAVE_READDIR=0
  fi
])
m4trace:m4/readlink.m4:7: -1- AC_DEFUN([gl_FUNC_READLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([readlink])
  if test $ac_cv_func_readlink = no; then
    HAVE_READLINK=0
  else
    AC_CACHE_CHECK([whether readlink signature is correct],
      [gl_cv_decl_readlink_works],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
      /* Cause compilation failure if original declaration has wrong type.  */
      ssize_t readlink (const char *, char *, size_t);]])],
         [gl_cv_decl_readlink_works=yes], [gl_cv_decl_readlink_works=no])])
    dnl Solaris 9 ignores trailing slash.
    dnl FreeBSD 7.2 dereferences only one level of links with trailing slash.
    AC_CACHE_CHECK([whether readlink handles trailing slash correctly],
      [gl_cv_func_readlink_trailing_slash],
      [# We have readlink, so assume ln -s works.
       ln -s conftest.no-such conftest.link
       ln -s conftest.link conftest.lnk2
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
]], [[char buf[20];
      return readlink ("conftest.lnk2/", buf, sizeof buf) != -1;]])],
         [gl_cv_func_readlink_trailing_slash=yes],
         [gl_cv_func_readlink_trailing_slash=no],
         [case "$host_os" in
            # Guess yes on Linux or glibc systems.
            linux-* | linux | *-gnu* | gnu*)
              gl_cv_func_readlink_trailing_slash="guessing yes" ;;
            # Guess no on AIX or HP-UX.
            aix* | hpux*)
              gl_cv_func_readlink_trailing_slash="guessing no" ;;
            # If we don't know, obey --enable-cross-guesses.
            *)
              gl_cv_func_readlink_trailing_slash="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.link conftest.lnk2])
    case "$gl_cv_func_readlink_trailing_slash" in
      *yes)
        if test "$gl_cv_decl_readlink_works" != yes; then
          REPLACE_READLINK=1
        fi
        ;;
      *)
        AC_DEFINE([READLINK_TRAILING_SLASH_BUG], [1], [Define to 1 if readlink
          fails to recognize a trailing slash.])
        REPLACE_READLINK=1
        ;;
    esac

    AC_CACHE_CHECK([whether readlink truncates results correctly],
      [gl_cv_func_readlink_truncate],
      [# We have readlink, so assume ln -s works.
       ln -s ab conftest.link
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
]], [[char c;
      return readlink ("conftest.link", &c, 1) != 1;]])],
         [gl_cv_func_readlink_truncate=yes],
         [gl_cv_func_readlink_truncate=no],
         [case "$host_os" in
            # Guess yes on Linux or glibc systems.
            linux-* | linux | *-gnu* | gnu*)
              gl_cv_func_readlink_truncate="guessing yes" ;;
            # Guess no on AIX or HP-UX.
            aix* | hpux*)
              gl_cv_func_readlink_truncate="guessing no" ;;
            # If we don't know, obey --enable-cross-guesses.
            *)
              gl_cv_func_readlink_truncate="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.link conftest.lnk2])
    case $gl_cv_func_readlink_truncate in
      *yes)
        if test "$gl_cv_decl_readlink_works" != yes; then
          REPLACE_READLINK=1
        fi
        ;;
      *)
        AC_DEFINE([READLINK_TRUNCATE_BUG], [1], [Define to 1 if readlink
          sets errno instead of truncating a too-long link.])
        REPLACE_READLINK=1
        ;;
    esac
  fi
])
m4trace:m4/readlink.m4:104: -1- AC_DEFUN([gl_FUNC_READLINK_SEPARATE], [
  AC_CHECK_FUNCS_ONCE([readlink])
  gl_PREREQ_READLINK
])
m4trace:m4/readlink.m4:111: -1- AC_DEFUN([gl_PREREQ_READLINK], [
  :
])
m4trace:m4/readlinkat.m4:11: -1- AC_DEFUN([gl_FUNC_READLINKAT], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([readlinkat])
  AC_REQUIRE([gl_FUNC_READLINK])
  if test $ac_cv_func_readlinkat = no; then
    HAVE_READLINKAT=0
  else
    AC_CACHE_CHECK([whether readlinkat signature is correct],
      [gl_cv_decl_readlinkat_works],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
             /* Check whether original declaration has correct type.  */
             ssize_t readlinkat (int, char const *, char *, size_t);]])],
         [gl_cv_decl_readlinkat_works=yes],
         [gl_cv_decl_readlinkat_works=no])])
    # Assume readlinkat has the same bugs as readlink,
    # as is the case on OS X 10.10 with trailing slashes.
    case $gl_cv_decl_readlinkat_works,$gl_cv_func_readlink_trailing_slash,$gl_cv_func_readlink_truncate in
      *yes,*yes,*yes)
        ;;
      *)
        REPLACE_READLINKAT=1
        ;;
    esac
  fi
])
m4trace:m4/readtokens.m4:9: -1- AC_DEFUN([gl_READTOKENS], [
  :
])
m4trace:m4/readutmp.m4:7: -1- AC_DEFUN([gl_READUTMP], [
  dnl Persuade utmpx.h to declare utmpxname
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_HEADERS_ONCE([utmp.h utmpx.h])
  if test $ac_cv_header_utmp_h = yes || test $ac_cv_header_utmpx_h = yes; then
    dnl Prerequisites of lib/readutmp.h and lib/readutmp.c.
    AC_CHECK_FUNCS_ONCE([utmpname utmpxname])
    AC_CHECK_DECLS([getutent],,,[[
/* <sys/types.h> is a prerequisite of <utmp.h> on FreeBSD 8.0, OpenBSD 4.6.  */
#include <sys/types.h>
#ifdef HAVE_UTMP_H
# include <utmp.h>
#endif
]])
    utmp_includes="\
AC_INCLUDES_DEFAULT
#ifdef HAVE_UTMPX_H
# include <utmpx.h>
#endif
#ifdef HAVE_UTMP_H
# if defined _THREAD_SAFE && defined UTMP_DATA_INIT
   /* When including both utmp.h and utmpx.h on AIX 4.3, with _THREAD_SAFE
      defined, work around the duplicate struct utmp_data declaration.  */
#  define utmp_data gl_aix_4_3_workaround_utmp_data
# endif
# include <utmp.h>
#endif
"
    AC_CHECK_MEMBERS([struct utmpx.ut_user],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_user],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmpx.ut_name],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_name],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmpx.ut_type],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_type],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmpx.ut_pid],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_pid],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmpx.ut_id],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_id],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmpx.ut_exit],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_exit],,,[$utmp_includes])

    AC_CHECK_MEMBERS([struct utmpx.ut_exit.ut_exit],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_exit.ut_exit],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmpx.ut_exit.e_exit],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_exit.e_exit],,,[$utmp_includes])

    AC_CHECK_MEMBERS([struct utmpx.ut_exit.ut_termination],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_exit.ut_termination],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmpx.ut_exit.e_termination],,,[$utmp_includes])
    AC_CHECK_MEMBERS([struct utmp.ut_exit.e_termination],,,[$utmp_includes])
  fi
])
m4trace:m4/realloc.m4:9: -1- AC_DEFUN([_AC_FUNC_REALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CACHE_CHECK([whether realloc (0, 0) returns nonnull],
    [ac_cv_func_realloc_0_nonnull],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[void *p = realloc (0, 0);
            int result = !p;
            free (p);
            return result;]])
       ],
       [ac_cv_func_realloc_0_nonnull=yes],
       [ac_cv_func_realloc_0_nonnull=no],
       [case "$host_os" in
          # Guess yes on platforms where we know the result.
          *-gnu* | freebsd* | netbsd* | openbsd* | bitrig* \
          | gnu* | *-musl* | midnightbsd* \
          | hpux* | solaris* | cygwin* | mingw* | msys* )
            ac_cv_func_realloc_0_nonnull="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *) ac_cv_func_realloc_0_nonnull="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  AS_CASE([$ac_cv_func_realloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/realloc.m4:42: -1- AC_DEFUN([gl_FUNC_REALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_REALLOC_POSIX])
  if test $REPLACE_REALLOC_FOR_REALLOC_GNU = 0; then
    _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC_FOR_REALLOC_GNU=1])
  fi
])
m4trace:m4/realloc.m4:56: -1- AC_DEFUN([gl_FUNC_REALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
    REPLACE_REALLOC_FOR_REALLOC_POSIX=1
  fi
])
m4trace:m4/reallocarray.m4:7: -1- AC_DEFUN([gl_FUNC_REALLOCARRAY], [
  dnl Persuade glibc <stdlib.h> to declare reallocarray.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_PTRDIFF])
  AC_CHECK_FUNCS([reallocarray])
  if test "$ac_cv_func_reallocarray" = no; then
    HAVE_REALLOCARRAY=0
  elif test "$gl_cv_malloc_ptrdiff" = no; then
    REPLACE_REALLOCARRAY=1
  fi
])
m4trace:m4/reallocarray.m4:23: -1- AC_DEFUN([gl_PREREQ_REALLOCARRAY], [:])
m4trace:m4/regex.m4:14: -1- AC_DEFUN([gl_REGEX], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_ARG_WITH([included-regex],
    [AS_HELP_STRING([--without-included-regex],
                    [don't compile regex; this is the default on systems
                     with recent-enough versions of the GNU C Library
                     (use with caution on other systems).])])

  case $with_included_regex in #(
  yes|no) ac_use_included_regex=$with_included_regex
        ;;
  '')
    # If the system regex support is good enough that it passes the
    # following run test, then default to *not* using the included regex.c.
    # If cross compiling, assume the test would fail and use the included
    # regex.c.
    AC_CHECK_DECLS_ONCE([alarm])
    AC_CHECK_HEADERS_ONCE([malloc.h])
    AC_CACHE_CHECK([for working re_compile_pattern],
                   [gl_cv_func_re_compile_pattern_working],
      [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM(
          [[#include <regex.h>

            #include <locale.h>
            #include <limits.h>
            #include <string.h>

            #if defined M_CHECK_ACTION || HAVE_DECL_ALARM
            # include <signal.h>
            # include <unistd.h>
            #endif

            #if HAVE_MALLOC_H
            # include <malloc.h>
            #endif

            #ifdef M_CHECK_ACTION
            /* Exit with distinguishable exit code.  */
            static void sigabrt_no_core (int sig) { raise (SIGTERM); }
            #endif
          ]],
          [[int result = 0;
            static struct re_pattern_buffer regex;
            unsigned char folded_chars[UCHAR_MAX + 1];
            int i;
            const char *s;
            struct re_registers regs;

            /* Some builds of glibc go into an infinite loop on this
               test.  Use alarm to force death, and mallopt to avoid
               malloc recursion in diagnosing the corrupted heap. */
#if HAVE_DECL_ALARM
            signal (SIGALRM, SIG_DFL);
            alarm (2);
#endif
#ifdef M_CHECK_ACTION
            signal (SIGABRT, sigabrt_no_core);
            mallopt (M_CHECK_ACTION, 2);
#endif

            if (setlocale (LC_ALL, "en_US.UTF-8"))
              {
                {
                  /* https://sourceware.org/ml/libc-hacker/2006-09/msg00008.html
                     This test needs valgrind to catch the bug on Debian
                     GNU/Linux 3.1 x86, but it might catch the bug better
                     on other platforms and it shouldn't hurt to try the
                     test here.  */
                  static char const pat[] = "insert into";
                  static char const data[] =
                    "\xFF\0\x12\xA2\xAA\xC4\xB1,K\x12\xC4\xB1*\xACK";
                  re_set_syntax (RE_SYNTAX_GREP | RE_HAT_LISTS_NOT_NEWLINE
                                 | RE_ICASE);
                  memset (&regex, 0, sizeof regex);
                  s = re_compile_pattern (pat, sizeof pat - 1, &regex);
                  if (s)
                    result |= 1;
                  else
                    {
                      if (re_search (&regex, data, sizeof data - 1,
                                     0, sizeof data - 1, &regs)
                          != -1)
                        result |= 1;
                      regfree (&regex);
                    }
                }

                {
                  /* This test is from glibc bug 15078.
                     The test case is from Andreas Schwab in
                     <https://sourceware.org/ml/libc-alpha/2013-01/msg00967.html>.
                     */
                  static char const pat[] = "[^x]x";
                  static char const data[] =
                    /* <U1000><U103B><U103D><U1014><U103A><U102F><U1015><U103A> */
                    "\xe1\x80\x80"
                    "\xe1\x80\xbb"
                    "\xe1\x80\xbd"
                    "\xe1\x80\x94"
                    "\xe1\x80\xba"
                    "\xe1\x80\xaf"
                    "\xe1\x80\x95"
                    "\xe1\x80\xba"
                    "x";
                  re_set_syntax (0);
                  memset (&regex, 0, sizeof regex);
                  s = re_compile_pattern (pat, sizeof pat - 1, &regex);
                  if (s)
                    result |= 1;
                  else
                    {
                      i = re_search (&regex, data, sizeof data - 1,
                                     0, sizeof data - 1, 0);
                      if (i != 0 && i != 21)
                        result |= 1;
                      regfree (&regex);
                    }
                }

                if (! setlocale (LC_ALL, "C"))
                  return 1;
              }

            /* This test is from glibc bug 3957, reported by Andrew Mackey.  */
            re_set_syntax (RE_SYNTAX_EGREP | RE_HAT_LISTS_NOT_NEWLINE);
            memset (&regex, 0, sizeof regex);
            s = re_compile_pattern ("a[^x]b", 6, &regex);
            if (s)
              result |= 2;
            else
              {
                /* This should fail, but succeeds for glibc-2.5.  */
                if (re_search (&regex, "a\nb", 3, 0, 3, &regs) != -1)
                  result |= 2;
                regfree (&regex);
              }

            /* This regular expression is from Spencer ere test number 75
               in grep-2.3.  */
            re_set_syntax (RE_SYNTAX_POSIX_EGREP);
            memset (&regex, 0, sizeof regex);
            for (i = 0; i <= UCHAR_MAX; i++)
              folded_chars[i] = i;
            regex.translate = folded_chars;
            s = re_compile_pattern ("a[[:@:>@:]]b\n", 11, &regex);
            /* This should fail with _Invalid character class name_ error.  */
            if (!s)
              {
                result |= 4;
                regfree (&regex);
              }

            /* Ensure that [b-a] is diagnosed as invalid, when
               using RE_NO_EMPTY_RANGES. */
            re_set_syntax (RE_SYNTAX_POSIX_EGREP | RE_NO_EMPTY_RANGES);
            memset (&regex, 0, sizeof regex);
            s = re_compile_pattern ("a[b-a]", 6, &regex);
            if (s == 0)
              {
                result |= 8;
                regfree (&regex);
              }

            /* This should succeed, but does not for glibc-2.1.3.  */
            memset (&regex, 0, sizeof regex);
            s = re_compile_pattern ("{1", 2, &regex);
            if (s)
              result |= 8;
            else
              regfree (&regex);

            /* The following example is derived from a problem report
               against gawk from Jorge Stolfi <stolfi@ic.unicamp.br>.  */
            memset (&regex, 0, sizeof regex);
            s = re_compile_pattern ("[an\371]*n", 7, &regex);
            if (s)
              result |= 8;
            else
              {
                /* This should match, but does not for glibc-2.2.1.  */
                if (re_match (&regex, "an", 2, 0, &regs) != 2)
                  result |= 8;
                else
                  {
                    free (regs.start);
                    free (regs.end);
                  }
                regfree (&regex);
              }

            memset (&regex, 0, sizeof regex);
            s = re_compile_pattern ("x", 1, &regex);
            if (s)
              result |= 8;
            else
              {
                /* glibc-2.2.93 does not work with a negative RANGE argument.  */
                if (re_search (&regex, "wxy", 3, 2, -2, &regs) != 1)
                  result |= 8;
                else
                  {
                    free (regs.start);
                    free (regs.end);
                  }
                regfree (&regex);
              }

            /* The version of regex.c in older versions of gnulib
               ignored RE_ICASE.  Detect that problem too.  */
            re_set_syntax (RE_SYNTAX_EMACS | RE_ICASE);
            memset (&regex, 0, sizeof regex);
            s = re_compile_pattern ("x", 1, &regex);
            if (s)
              result |= 16;
            else
              {
                if (re_search (&regex, "WXY", 3, 0, 3, &regs) < 0)
                  result |= 16;
                else
                  {
                    free (regs.start);
                    free (regs.end);
                  }
                regfree (&regex);
              }

            /* Catch a bug reported by Vin Shelton in
               https://lists.gnu.org/r/bug-coreutils/2007-06/msg00089.html
               */
            re_set_syntax (RE_SYNTAX_POSIX_BASIC
                           & ~RE_CONTEXT_INVALID_DUP
                           & ~RE_NO_EMPTY_RANGES);
            memset (&regex, 0, sizeof regex);
            s = re_compile_pattern ("[[:alnum:]_-]\\\\+\$", 16, &regex);
            if (s)
              result |= 32;
            else
              regfree (&regex);

            /* REG_STARTEND was added to glibc on 2004-01-15.
               Reject older versions.  */
            if (! REG_STARTEND)
              result |= 64;

            /* Matching with the compiled form of this regexp would provoke
               an assertion failure prior to glibc-2.28:
                 regexec.c:1375: pop_fail_stack: Assertion 'num >= 0' failed
               With glibc-2.28, compilation fails and reports the invalid
               back reference.  */
            re_set_syntax (RE_SYNTAX_POSIX_EGREP);
            memset (&regex, 0, sizeof regex);
            s = re_compile_pattern ("0|()0|\\\\1|0", 10, &regex);
            if (!s)
              {
                memset (&regs, 0, sizeof regs);
                i = re_search (&regex, "x", 1, 0, 1, &regs);
                if (i != -1)
                  result |= 64;
                if (0 <= i)
                  {
                    free (regs.start);
                    free (regs.end);
                  }
                regfree (&regex);
              }
            else
              {
                if (strcmp (s, "Invalid back reference"))
                  result |= 64;
              }

            /* glibc bug 11053.  */
            re_set_syntax (RE_SYNTAX_POSIX_BASIC);
            memset (&regex, 0, sizeof regex);
            static char const pat_sub2[] = "\\\\(a*\\\\)*a*\\\\1";
            s = re_compile_pattern (pat_sub2, sizeof pat_sub2 - 1, &regex);
            if (s)
              result |= 64;
            else
              {
                memset (&regs, 0, sizeof regs);
                static char const data[] = "a";
                int datalen = sizeof data - 1;
                i = re_search (&regex, data, datalen, 0, datalen, &regs);
                if (i != 0)
                  result |= 64;
                else if (regs.num_regs < 2)
                  result |= 64;
                else if (! (regs.start[0] == 0 && regs.end[0] == 1))
                  result |= 64;
                else if (! (regs.start[1] == 0 && regs.end[1] == 0))
                  result |= 64;
                regfree (&regex);
                free (regs.start);
                free (regs.end);
              }

#if 0
            /* It would be nice to reject hosts whose regoff_t values are too
               narrow (including glibc on hosts with 64-bit ptrdiff_t and
               32-bit int), but we should wait until glibc implements this
               feature.  Otherwise, support for equivalence classes and
               multibyte collation symbols would always be broken except
               when compiling --without-included-regex.   */
            if (sizeof (regoff_t) < sizeof (ptrdiff_t)
                || sizeof (regoff_t) < sizeof (ssize_t))
              result |= 64;
#endif

            return result;
          ]])],
        [gl_cv_func_re_compile_pattern_working=yes],
        [gl_cv_func_re_compile_pattern_working=no],
        [case "$host_os" in
                   # Guess no on native Windows.
           mingw*) gl_cv_func_re_compile_pattern_working="guessing no" ;;
                   # Otherwise obey --enable-cross-guesses.
           *)      gl_cv_func_re_compile_pattern_working="$gl_cross_guess_normal" ;;
         esac
        ])
      ])
    case "$gl_cv_func_re_compile_pattern_working" in #(
      *yes) ac_use_included_regex=no;; #(
      *no) ac_use_included_regex=yes;;
    esac
    ;;
  *) AC_MSG_ERROR([Invalid value for --with-included-regex: $with_included_regex])
    ;;
  esac

  if test $ac_use_included_regex = yes; then
    AC_DEFINE([_REGEX_INCLUDE_LIMITS_H], [1],
      [Define if you want <regex.h> to include <limits.h>, so that it
       consistently overrides <limits.h>'s RE_DUP_MAX.])
    AC_DEFINE([_REGEX_LARGE_OFFSETS], [1],
      [Define if you want regoff_t to be at least as wide POSIX requires.])
    AC_DEFINE([re_syntax_options], [rpl_re_syntax_options],
      [Define to rpl_re_syntax_options if the replacement should be used.])
    AC_DEFINE([re_set_syntax], [rpl_re_set_syntax],
      [Define to rpl_re_set_syntax if the replacement should be used.])
    AC_DEFINE([re_compile_pattern], [rpl_re_compile_pattern],
      [Define to rpl_re_compile_pattern if the replacement should be used.])
    AC_DEFINE([re_compile_fastmap], [rpl_re_compile_fastmap],
      [Define to rpl_re_compile_fastmap if the replacement should be used.])
    AC_DEFINE([re_search], [rpl_re_search],
      [Define to rpl_re_search if the replacement should be used.])
    AC_DEFINE([re_search_2], [rpl_re_search_2],
      [Define to rpl_re_search_2 if the replacement should be used.])
    AC_DEFINE([re_match], [rpl_re_match],
      [Define to rpl_re_match if the replacement should be used.])
    AC_DEFINE([re_match_2], [rpl_re_match_2],
      [Define to rpl_re_match_2 if the replacement should be used.])
    AC_DEFINE([re_set_registers], [rpl_re_set_registers],
      [Define to rpl_re_set_registers if the replacement should be used.])
    AC_DEFINE([re_comp], [rpl_re_comp],
      [Define to rpl_re_comp if the replacement should be used.])
    AC_DEFINE([re_exec], [rpl_re_exec],
      [Define to rpl_re_exec if the replacement should be used.])
    AC_DEFINE([regcomp], [rpl_regcomp],
      [Define to rpl_regcomp if the replacement should be used.])
    AC_DEFINE([regexec], [rpl_regexec],
      [Define to rpl_regexec if the replacement should be used.])
    AC_DEFINE([regerror], [rpl_regerror],
      [Define to rpl_regerror if the replacement should be used.])
    AC_DEFINE([regfree], [rpl_regfree],
      [Define to rpl_regfree if the replacement should be used.])
  fi
])
m4trace:m4/regex.m4:386: -1- AC_DEFUN([gl_PREREQ_REGEX], [
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([AC_C_INLINE])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  AC_REQUIRE([gl_EEMALLOC])
  AC_CHECK_HEADERS([libintl.h])
  AC_CHECK_FUNCS_ONCE([isblank iswctype])
  AC_CHECK_DECLS([isblank], [], [], [[#include <ctype.h>]])
])
m4trace:m4/remove.m4:7: -1- AC_DEFUN([gl_FUNC_REMOVE], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_RMDIR])
  AC_REQUIRE([gl_FUNC_UNLINK])
  if { case "$gl_cv_func_rmdir_works:$gl_cv_func_unlink_honors_slashes" in
         *yes:*yes) false;;
         *) true;;
       esac
     }; then
    dnl If either underlying syscall is broken, then remove likely has
    dnl the same bug; blindly use our replacement.
    REPLACE_REMOVE=1
  else
    dnl C89 requires remove(), but only POSIX requires it to handle
    dnl directories.  On mingw, directories fails with EPERM.
    AC_CACHE_CHECK([whether remove handles directories],
      [gl_cv_func_remove_dir_works],
      [mkdir conftest.dir
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <stdio.h>
]], [[return remove ("conftest.dir");]])],
         [gl_cv_func_remove_dir_works=yes], [gl_cv_func_remove_dir_works=no],
         [case $host_os in
            mingw*) gl_cv_func_remove_dir_works="guessing no";;
            *) gl_cv_func_remove_dir_works="guessing yes";;
          esac])
       rm -rf conftest.dir])
    case $gl_cv_func_remove_dir_works in
      *no*) REPLACE_REMOVE=1;;
    esac
  fi
])
m4trace:m4/rename.m4:16: -1- AC_DEFUN([gl_FUNC_RENAME], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([lstat])

  dnl Solaris 11.3, AIX 7.1 mistakenly allow rename("file","name/").
  dnl NetBSD 1.6 mistakenly forbids rename("dir","name/").
  dnl FreeBSD 7.2 mistakenly allows rename("file","link-to-file/").
  dnl The Solaris bug can be worked around without stripping
  dnl trailing slash, while the NetBSD bug requires stripping;
  dnl the two conditions can be distinguished by whether hard
  dnl links are also broken.
  AC_CACHE_CHECK([whether rename honors trailing slash on destination],
    [gl_cv_func_rename_slash_dst_works],
    [rm -rf conftest.f conftest.f1 conftest.f2 conftest.d1 conftest.d2 conftest.lnk
    touch conftest.f && touch conftest.f1 && mkdir conftest.d1 ||
      AC_MSG_ERROR([cannot create temporary files])
    # Assume that if we have lstat, we can also check symlinks.
    if test $ac_cv_func_lstat = yes; then
      ln -s conftest.f conftest.lnk
    fi
    AC_RUN_IFELSE(
      [AC_LANG_PROGRAM([[
#        include <stdio.h>
#        include <stdlib.h>
         ]],
         [[int result = 0;
           if (rename ("conftest.f1", "conftest.f2/") == 0)
             result |= 1;
           if (rename ("conftest.d1", "conftest.d2/") != 0)
             result |= 2;
#if HAVE_LSTAT
           if (rename ("conftest.f", "conftest.lnk/") == 0)
             result |= 4;
#endif
           return result;
         ]])],
      [gl_cv_func_rename_slash_dst_works=yes],
      [gl_cv_func_rename_slash_dst_works=no],
      dnl When crosscompiling, assume rename is broken.
      [case "$host_os" in
                          # Guess yes on Linux systems.
         linux-* | linux) gl_cv_func_rename_slash_dst_works="guessing yes" ;;
                          # Guess yes on glibc systems.
         *-gnu*)          gl_cv_func_rename_slash_dst_works="guessing yes" ;;
                          # Guess no on native Windows.
         mingw*)          gl_cv_func_rename_slash_dst_works="guessing no" ;;
                          # If we don't know, obey --enable-cross-guesses.
         *)               gl_cv_func_rename_slash_dst_works="$gl_cross_guess_normal" ;;
       esac
      ])
    rm -rf conftest.f conftest.f1 conftest.f2 conftest.d1 conftest.d2 conftest.lnk
  ])
  case "$gl_cv_func_rename_slash_dst_works" in
    *yes) ;;
    *)
      REPLACE_RENAME=1
      AC_DEFINE([RENAME_TRAILING_SLASH_DEST_BUG], [1],
        [Define if rename does not correctly handle slashes on the destination
         argument, such as on Solaris 11 or NetBSD 1.6.])
      ;;
  esac

  dnl SunOS 4.1.1_U1 mistakenly forbids rename("dir/","name").
  dnl Solaris 9 mistakenly allows rename("file/","name").
  dnl FreeBSD 7.2 mistakenly allows rename("link-to-file/","name").
  dnl These bugs require stripping trailing slash to avoid corrupting
  dnl symlinks with a trailing slash.
  AC_CACHE_CHECK([whether rename honors trailing slash on source],
    [gl_cv_func_rename_slash_src_works],
    [rm -rf conftest.f conftest.f1 conftest.d1 conftest.d2 conftest.d3 conftest.lnk
    touch conftest.f && touch conftest.f1 && mkdir conftest.d1 ||
      AC_MSG_ERROR([cannot create temporary files])
    # Assume that if we have lstat, we can also check symlinks.
    if test $ac_cv_func_lstat = yes; then
      ln -s conftest.f conftest.lnk
    fi
    AC_RUN_IFELSE(
      [AC_LANG_PROGRAM([[
#        include <stdio.h>
#        include <stdlib.h>
         ]],
         [[int result = 0;
           if (rename ("conftest.f1/", "conftest.d3") == 0)
             result |= 1;
           if (rename ("conftest.d1/", "conftest.d2") != 0)
             result |= 2;
#if HAVE_LSTAT
           if (rename ("conftest.lnk/", "conftest.f") == 0)
             result |= 4;
#endif
           return result;
         ]])],
      [gl_cv_func_rename_slash_src_works=yes],
      [gl_cv_func_rename_slash_src_works=no],
      dnl When crosscompiling, assume rename is broken.
      [case "$host_os" in
                          # Guess yes on Linux systems.
         linux-* | linux) gl_cv_func_rename_slash_src_works="guessing yes" ;;
                          # Guess yes on glibc systems.
         *-gnu*)          gl_cv_func_rename_slash_src_works="guessing yes" ;;
                          # Guess yes on native Windows.
         mingw*)          gl_cv_func_rename_slash_src_works="guessing yes" ;;
                          # If we don't know, obey --enable-cross-guesses.
         *)               gl_cv_func_rename_slash_src_works="$gl_cross_guess_normal" ;;
       esac
      ])
    rm -rf conftest.f conftest.f1 conftest.d1 conftest.d2 conftest.d3 conftest.lnk
  ])
  case "$gl_cv_func_rename_slash_src_works" in
    *yes) ;;
    *)
      REPLACE_RENAME=1
      AC_DEFINE([RENAME_TRAILING_SLASH_SOURCE_BUG], [1],
        [Define if rename does not correctly handle slashes on the source
         argument, such as on Solaris 9 or cygwin 1.5.])
      ;;
  esac

  dnl NetBSD 1.6 and cygwin 1.5.x mistakenly reduce hard link count
  dnl on rename("h1","h2").
  dnl This bug requires stat'ting targets prior to attempting rename.
  AC_CHECK_FUNCS_ONCE([link])
  AC_CACHE_CHECK([whether rename manages hard links correctly],
    [gl_cv_func_rename_link_works],
    [if test $ac_cv_func_link = yes; then
       if test $cross_compiling != yes; then
         rm -rf conftest.f conftest.f1 conftest.f2
         if touch conftest.f conftest.f2 && ln conftest.f conftest.f1 &&
             set x `ls -i conftest.f conftest.f1` && test "$2" = "$4"; then
           AC_RUN_IFELSE(
             [AC_LANG_PROGRAM([[
#               include <errno.h>
#               include <stdio.h>
#               include <stdlib.h>
#               include <unistd.h>
                ]GL_MDA_DEFINES],
                [[int result = 0;
                  if (rename ("conftest.f", "conftest.f1"))
                    result |= 1;
                  if (unlink ("conftest.f1"))
                    result |= 2;

                  /* Allow either the POSIX-required behavior, where the
                     previous rename kept conftest.f, or the (better) NetBSD
                     behavior, where it removed conftest.f.  */
                  if (rename ("conftest.f", "conftest.f") != 0
                      && errno != ENOENT)
                    result |= 4;

                  if (rename ("conftest.f1", "conftest.f1") == 0)
                    result |= 8;
                  if (rename ("conftest.f2", "conftest.f2") != 0)
                    result |= 16;
                  return result;
                ]])],
             [gl_cv_func_rename_link_works=yes],
             [gl_cv_func_rename_link_works=no],
             [dnl We don't get here.
              :
             ])
         else
           gl_cv_func_rename_link_works="guessing no"
         fi
         rm -rf conftest.f conftest.f1 conftest.f2
       else
         dnl When crosscompiling, assume rename is broken.
         case "$host_os" in
                            # Guess yes on Linux systems.
           linux-* | linux) gl_cv_func_rename_link_works="guessing yes" ;;
                            # Guess yes on glibc systems.
           *-gnu*)          gl_cv_func_rename_link_works="guessing yes" ;;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_rename_link_works="guessing yes" ;;
                            # If we don't know, obey --enable-cross-guesses.
           *)               gl_cv_func_rename_link_works="$gl_cross_guess_normal" ;;
         esac
       fi
     else
       gl_cv_func_rename_link_works=yes
     fi
    ])
  case "$gl_cv_func_rename_link_works" in
    *yes) ;;
    *)
      REPLACE_RENAME=1
      AC_DEFINE([RENAME_HARD_LINK_BUG], [1],
        [Define if rename fails to leave hard links alone, as on NetBSD 1.6
         or Cygwin 1.5.])
      ;;
  esac

  dnl Cygwin 1.5.x mistakenly allows rename("dir","file").
  dnl mingw mistakenly forbids rename("dir1","dir2").
  dnl These bugs require stripping trailing slash to avoid corrupting
  dnl symlinks with a trailing slash.
  AC_CACHE_CHECK([whether rename manages existing destinations correctly],
    [gl_cv_func_rename_dest_works],
    [rm -rf conftest.f conftest.d1 conftest.d2
    touch conftest.f && mkdir conftest.d1 conftest.d2 ||
      AC_MSG_ERROR([cannot create temporary files])
    AC_RUN_IFELSE(
      [AC_LANG_PROGRAM([[
#        include <stdio.h>
#        include <stdlib.h>
         ]],
         [[int result = 0;
           if (rename ("conftest.d1", "conftest.d2") != 0)
             result |= 1;
           if (rename ("conftest.d2", "conftest.f") == 0)
             result |= 2;
           return result;
         ]])],
      [gl_cv_func_rename_dest_works=yes],
      [gl_cv_func_rename_dest_works=no],
      dnl When crosscompiling, assume rename is broken.
      [case "$host_os" in
                          # Guess yes on Linux systems.
         linux-* | linux) gl_cv_func_rename_dest_works="guessing yes" ;;
                          # Guess yes on glibc systems.
         *-gnu*)          gl_cv_func_rename_dest_works="guessing yes" ;;
                          # Guess no on native Windows.
         mingw*)          gl_cv_func_rename_dest_works="guessing no" ;;
                          # If we don't know, obey --enable-cross-guesses.
         *)               gl_cv_func_rename_dest_works="$gl_cross_guess_normal" ;;
       esac
      ])
    rm -rf conftest.f conftest.d1 conftest.d2
  ])
  case "$gl_cv_func_rename_dest_works" in
    *yes) ;;
    *)
      REPLACE_RENAME=1
      AC_DEFINE([RENAME_DEST_EXISTS_BUG], [1],
        [Define if rename does not work when the destination file exists,
         as on Cygwin 1.5 or Windows.])
      ;;
  esac
])
m4trace:m4/renameat.m4:11: -1- AC_DEFUN([gl_FUNC_RENAMEAT], [
  AC_REQUIRE([gl_FUNC_OPENAT])
  AC_REQUIRE([gl_FUNC_RENAME])
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS([linux/fs.h])
  AC_CHECK_FUNCS_ONCE([renameat renameat2])
  if test $ac_cv_func_renameat = no; then
    HAVE_RENAMEAT=0
  elif test $REPLACE_RENAME = 1; then
    dnl Solaris 9 and 10 have the same bugs in renameat as in rename.
    REPLACE_RENAMEAT=1
  fi
])
m4trace:m4/rewinddir.m4:7: -1- AC_DEFUN([gl_FUNC_REWINDDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  AC_CHECK_FUNCS([rewinddir])
  if test $ac_cv_func_rewinddir = no; then
    HAVE_REWINDDIR=0
  fi
])
m4trace:m4/rmdir.m4:7: -1- AC_DEFUN([gl_FUNC_RMDIR], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl Detect cygwin 1.5.x bug.
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CACHE_CHECK([whether rmdir works], [gl_cv_func_rmdir_works],
    [mkdir conftest.dir
     touch conftest.file
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
         [[#include <stdio.h>
           #include <errno.h>
           #if HAVE_UNISTD_H
           # include <unistd.h>
           #else /* on Windows with MSVC */
           # include <direct.h>
           #endif
         ]GL_MDA_DEFINES],
         [[int result = 0;
           if (!rmdir ("conftest.file/"))
             result |= 1;
           else if (errno != ENOTDIR)
             result |= 2;
           if (!rmdir ("conftest.dir/./"))
             result |= 4;
           return result;
         ]])],
       [gl_cv_func_rmdir_works=yes], [gl_cv_func_rmdir_works=no],
       [case "$host_os" in
                           # Guess yes on Linux systems.
          linux-* | linux) gl_cv_func_rmdir_works="guessing yes" ;;
                           # Guess yes on glibc systems.
          *-gnu* | gnu*)   gl_cv_func_rmdir_works="guessing yes" ;;
                           # Guess no on native Windows.
          mingw*)          gl_cv_func_rmdir_works="guessing no" ;;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_rmdir_works="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -rf conftest.dir conftest.file])
  case "$gl_cv_func_rmdir_works" in
    *yes) ;;
    *)
      REPLACE_RMDIR=1
      ;;
  esac
])
m4trace:m4/rpmatch.m4:7: -1- AC_DEFUN([gl_FUNC_RPMATCH], [
  dnl Persuade glibc <stdlib.h> to declare rpmatch().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_CHECK_FUNCS([rpmatch])
  if test $ac_cv_func_rpmatch = no; then
    HAVE_RPMATCH=0
  fi
])
m4trace:m4/rpmatch.m4:20: -1- AC_DEFUN([gl_PREREQ_RPMATCH], [
  AC_CACHE_CHECK([for nl_langinfo and YESEXPR], [gl_cv_langinfo_yesexpr],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <langinfo.h>]],
       [[char* cs = nl_langinfo(YESEXPR); return !cs;]])],
       [gl_cv_langinfo_yesexpr=yes],
       [gl_cv_langinfo_yesexpr=no])
    ])
  if test $gl_cv_langinfo_yesexpr = yes; then
    AC_DEFINE([HAVE_LANGINFO_YESEXPR], [1],
      [Define if you have <langinfo.h> and nl_langinfo(YESEXPR).])
  fi
])
m4trace:m4/safe-read.m4:9: -1- AC_DEFUN([gl_PREREQ_SAFE_READ], [
  AC_REQUIRE([gt_TYPE_SSIZE_T])
])
m4trace:m4/safe-write.m4:8: -1- AC_DEFUN([gl_PREREQ_SAFE_WRITE], [
  gl_PREREQ_SAFE_READ
])
m4trace:m4/same.m4:9: -1- AC_DEFUN([gl_SAME], [
  AC_REQUIRE([AC_SYS_LONG_FILE_NAMES])
  AC_CHECK_FUNCS_ONCE([fpathconf])
])
m4trace:m4/save-cwd.m4:8: -1- AC_DEFUN([gl_SAVE_CWD], [
  AC_CHECK_FUNCS_ONCE([fchdir])
])
m4trace:m4/savedir.m4:8: -1- AC_DEFUN([gl_SAVEDIR], [
  :
])
m4trace:m4/savewd.m4:8: -1- AC_DEFUN([gl_SAVEWD], [:])
m4trace:m4/sched_h.m4:9: -1- AC_DEFUN_ONCE([gl_SCHED_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_SCHED_H_DEFAULTS])

  AC_REQUIRE([AC_CANONICAL_HOST])

  AC_CHECK_HEADERS_ONCE([sys/cdefs.h])
  AC_CHECK_HEADERS([sched.h], [], [],
    [[#if HAVE_SYS_CDEFS_H
       #include <sys/cdefs.h>
      #endif
    ]])
  gl_NEXT_HEADERS([sched.h])

  if test "$ac_cv_header_sched_h" = yes; then
    HAVE_SCHED_H=1
  else
    HAVE_SCHED_H=0
  fi
  AC_SUBST([HAVE_SCHED_H])

  if test "$HAVE_SCHED_H" = 1; then
    AC_CHECK_TYPE([struct sched_param],
      [HAVE_STRUCT_SCHED_PARAM=1], [HAVE_STRUCT_SCHED_PARAM=0],
      [[#if HAVE_SYS_CDEFS_H
         #include <sys/cdefs.h>
        #endif
        #include <sched.h>
      ]])
  else
    HAVE_STRUCT_SCHED_PARAM=0
    case "$host_os" in
      os2*)
        dnl On OS/2 kLIBC, struct sched_param is in spawn.h.
        AC_CHECK_TYPE([struct sched_param],
          [HAVE_STRUCT_SCHED_PARAM=1], [],
          [#include <spawn.h>])
        ;;
      vms)
        dnl On OpenVMS 7.2 or newer, struct sched_param is in pthread.h.
        AC_CHECK_TYPE([struct sched_param],
          [HAVE_STRUCT_SCHED_PARAM=1], [],
          [#include <pthread.h>])
        ;;
    esac
  fi
  AC_SUBST([HAVE_STRUCT_SCHED_PARAM])

  if test "$ac_cv_header_sys_cdefs_h" = yes; then
    HAVE_SYS_CDEFS_H=1
  else
    HAVE_SYS_CDEFS_H=0
  fi
  AC_SUBST([HAVE_SYS_CDEFS_H])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <sched.h>
    ]], [sched_yield])
])
m4trace:m4/sched_h.m4:80: -1- AC_DEFUN([gl_SCHED_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SCHED_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sched_h.m4:92: -1- AC_DEFUN([gl_SCHED_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SCHED_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCHED_YIELD])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SCHED_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SCHED_H_DEFAULTS])
])
m4trace:m4/sched_h.m4:101: -1- AC_DEFUN([gl_SCHED_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_SCHED_YIELD=1;    AC_SUBST([HAVE_SCHED_YIELD])
  REPLACE_SCHED_YIELD=0; AC_SUBST([REPLACE_SCHED_YIELD])
])
m4trace:m4/sched_yield.m4:7: -1- AC_DEFUN([gl_FUNC_SCHED_YIELD], [
  AC_REQUIRE([gl_SCHED_H_DEFAULTS])
  AC_REQUIRE([gl_PTHREADLIB])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_SCHED_YIELD=1
  else
    AC_CHECK_DECL([sched_yield], , [HAVE_SCHED_YIELD=0],
      [[#include <sched.h>]])
  fi
])
m4trace:m4/secure_getenv.m4:7: -1- AC_DEFUN([gl_FUNC_SECURE_GETENV], [
  dnl Persuade glibc <stdlib.h> to declare secure_getenv().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([secure_getenv])
  if test $ac_cv_func_secure_getenv = no; then
    HAVE_SECURE_GETENV=0
  fi
])
m4trace:m4/secure_getenv.m4:20: -1- AC_DEFUN([gl_PREREQ_SECURE_GETENV], [
  AC_CHECK_FUNCS([__secure_getenv])
  if test $ac_cv_func___secure_getenv = no; then
    AC_CHECK_FUNCS([issetugid])
  fi
  AC_CHECK_FUNCS_ONCE([getuid geteuid getgid getegid])
])
m4trace:m4/select.m4:7: -1- AC_DEFUN([gl_FUNC_SELECT], [
  AC_REQUIRE([gl_SYS_SELECT_H])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SOCKETS])
  if test "$ac_cv_header_winsock2_h" = yes; then
    REPLACE_SELECT=1
  else
    dnl On Interix 3.5, select(0, NULL, NULL, NULL, timeout) fails with error
    dnl EFAULT.
    AC_CHECK_HEADERS_ONCE([sys/select.h])
    AC_CACHE_CHECK([whether select supports a 0 argument],
      [gl_cv_func_select_supports0],
      [
        AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#include <sys/time.h>
#if HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
int main ()
{
  struct timeval timeout;
  timeout.tv_sec = 0;
  timeout.tv_usec = 5;
  return select (0, (fd_set *)0, (fd_set *)0, (fd_set *)0, &timeout) < 0;
}]])], [gl_cv_func_select_supports0=yes], [gl_cv_func_select_supports0=no],
          [
changequote(,)dnl
           case "$host_os" in
                       # Guess no on Interix.
             interix*) gl_cv_func_select_supports0="guessing no";;
                       # Guess yes otherwise.
             *)        gl_cv_func_select_supports0="guessing yes";;
           esac
changequote([,])dnl
          ])
      ])
    case "$gl_cv_func_select_supports0" in
      *yes) ;;
      *) REPLACE_SELECT=1 ;;
    esac

    dnl On FreeBSD 8.2, select() doesn't always reject bad fds.
    AC_CACHE_CHECK([whether select detects invalid fds],
      [gl_cv_func_select_detects_ebadf],
      [
        AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/time.h>
#if HAVE_SYS_SELECT_H
# include <sys/select.h>
#endif
#include <unistd.h>
#include <errno.h>
]GL_MDA_DEFINES],
[[
  fd_set set;
  dup2(0, 16);
  FD_ZERO(&set);
  FD_SET(16, &set);
  close(16);
  struct timeval timeout;
  timeout.tv_sec = 0;
  timeout.tv_usec = 5;
  return select (17, &set, NULL, NULL, &timeout) != -1 || errno != EBADF;
]])], [gl_cv_func_select_detects_ebadf=yes],
      [gl_cv_func_select_detects_ebadf=no],
          [
           case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_select_detects_ebadf="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_select_detects_ebadf="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_select_detects_ebadf="$gl_cross_guess_normal" ;;
           esac
          ])
      ])
    case $gl_cv_func_select_detects_ebadf in
      *yes) ;;
      *) REPLACE_SELECT=1 ;;
    esac
  fi

  dnl Determine the needed libraries.
  LIB_SELECT="$LIBSOCKET"
  if test $REPLACE_SELECT = 1; then
    case "$host_os" in
      mingw*)
        dnl On the MSVC platform, the function MsgWaitForMultipleObjects
        dnl (used in lib/select.c) requires linking with -luser32. On mingw,
        dnl it is implicit.
        AC_LINK_IFELSE(
          [AC_LANG_SOURCE([[
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
int
main ()
{
  MsgWaitForMultipleObjects (0, NULL, 0, 0, 0);
  return 0;
}]])],
          [],
          [LIB_SELECT="$LIB_SELECT -luser32"])
        ;;
    esac
  fi
  AC_SUBST([LIB_SELECT])
])
m4trace:m4/selinux-context-h.m4:10: -1- AC_DEFUN([gl_HEADERS_SELINUX_CONTEXT_H], [
  AC_REQUIRE([gl_LIBSELINUX])
  if test "$with_selinux" != no; then
    AC_CHECK_HEADERS([selinux/context.h],
                     [GL_GENERATE_SELINUX_CONTEXT_H=false],
                     [GL_GENERATE_SELINUX_CONTEXT_H=true])
  else
    GL_GENERATE_SELINUX_CONTEXT_H=true
  fi
])
m4trace:m4/selinux-label-h.m4:9: -1- AC_DEFUN([gl_HEADERS_SELINUX_LABEL_H], [
  AC_REQUIRE([gl_LIBSELINUX])
  GL_GENERATE_SELINUX_LABEL_H=true
  if test "$with_selinux" != no; then
    AC_CHECK_HEADERS([selinux/label.h],
                     [GL_GENERATE_SELINUX_LABEL_H=false])
  fi
])
m4trace:m4/selinux-selinux-h.m4:12: -1- AC_DEFUN([gl_HEADERS_SELINUX_SELINUX_H], [
  AC_REQUIRE([gl_LIBSELINUX])
  if test "$with_selinux" != no; then
    AC_CHECK_HEADERS([selinux/selinux.h])

    if test "$ac_cv_header_selinux_selinux_h" = yes; then
      # We do have <selinux/selinux.h>, so do compile getfilecon.c
      # and arrange to use its wrappers.
      gl_CHECK_NEXT_HEADERS([selinux/selinux.h])
      AC_DEFINE([getfilecon], [rpl_getfilecon],
                [Always use our getfilecon wrapper.])
      AC_DEFINE([lgetfilecon], [rpl_lgetfilecon],
                [Always use our lgetfilecon wrapper.])
      AC_DEFINE([fgetfilecon], [rpl_fgetfilecon],
                [Always use our fgetfilecon wrapper.])
    fi

    case "$ac_cv_search_setfilecon:$ac_cv_header_selinux_selinux_h" in
      no:*) # already warned
        ;;
      *:no)
        AC_MSG_WARN([libselinux was found but selinux/selinux.h is missing.])
        AC_MSG_WARN([AC_PACKAGE_NAME will be compiled without SELinux support.])
    esac
  else
    # Do as if <selinux/selinux.h> does not exist, even if
    # AC_CHECK_HEADERS_ONCE has already determined that it exists.
    AC_DEFINE([HAVE_SELINUX_SELINUX_H], [0])
  fi
])
m4trace:m4/selinux-selinux-h.m4:44: -1- AC_DEFUN([gl_LIBSELINUX], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AC_CANONICAL_BUILD])

  AC_ARG_WITH([selinux],
    AS_HELP_STRING([--without-selinux], [do not use SELinux, even on systems with SELinux]),
    [], [with_selinux=maybe])

  LIB_SELINUX=
  if test "$with_selinux" != no; then
    gl_save_LIBS=$LIBS
    AC_SEARCH_LIBS([setfilecon], [selinux],
                   [test "$ac_cv_search_setfilecon" = "none required" ||
                    LIB_SELINUX=$ac_cv_search_setfilecon])
    LIBS=$gl_save_LIBS
  fi
  AC_SUBST([LIB_SELINUX])

  # Warn if SELinux is found but libselinux is absent;
  if test "$ac_cv_search_setfilecon" = no; then
    if test "$host" = "$build" && test -d /selinux; then
      AC_MSG_WARN([This system supports SELinux but libselinux is missing.])
      AC_MSG_WARN([AC_PACKAGE_NAME will be compiled without SELinux support.])
    fi
    with_selinux=no
  fi
])
m4trace:m4/semaphore.m4:10: -1- AC_DEFUN([gl_SEMAPHORE], [
  AC_REQUIRE([gl_THREADLIB])
  dnl sem_post is
  dnl   - in libc on macOS, FreeBSD, AIX, IRIX, Solaris 11, Haiku, Cygwin,
  dnl   - in libpthread on glibc systems, OpenBSD,
  dnl   - in libpthread or librt on NetBSD,
  dnl   - in librt on HP-UX 11, OSF/1, Solaris 10.
  dnl On the platforms where -lpthread is needed, it is contained in
  dnl $LIBMULTITHREAD. Therefore, the only library we need to test for is -lrt.
  AC_CACHE_CHECK([for library needed for semaphore functions],
    [gl_cv_semaphore_lib],
    [save_LIBS="$LIBS"
     LIBS="$LIBS $LIBMULTITHREAD"
     AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <semaphore.h>]],
          [[sem_post ((sem_t *)0);]])],
       [gl_cv_semaphore_lib=none],
       [LIBS="$LIBS -lrt"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <semaphore.h>]],
             [[sem_post ((sem_t *)0);]])],
          [gl_cv_semaphore_lib='-lrt'],
          [gl_cv_semaphore_lib=none])
       ])
     LIBS="$save_LIBS"
    ])
  if test "x$gl_cv_semaphore_lib" = xnone; then
    LIB_SEMAPHORE=
  else
    LIB_SEMAPHORE="$gl_cv_semaphore_lib"
  fi
  AC_SUBST([LIB_SEMAPHORE])
])
m4trace:m4/servent.m4:7: -1- AC_DEFUN([gl_SERVENT], [
  dnl Where are getservent(), setservent(), endservent(), getservbyname(),
  dnl getservbyport() defined?
  dnl Where are getprotoent(), setprotoent(), endprotoent(), getprotobyname(),
  dnl getprotobynumber() defined?
  dnl - On Solaris < 11.4, they are in libsocket. Ignore libxnet.
  dnl - On Haiku, they are in libnetwork.
  dnl - On BeOS, they are in libnet.
  dnl - On native Windows, they are in ws2_32.dll.
  dnl - Otherwise they are in libc.
  AC_REQUIRE([gl_SYS_SOCKET_H])dnl for HAVE_SYS_SOCKET_H, HAVE_WINSOCK2_H
  SERVENT_LIB=
  gl_saved_libs="$LIBS"
  AC_SEARCH_LIBS([getservbyname], [socket network net],
    [if test "$ac_cv_search_getservbyname" != "none required"; then
       SERVENT_LIB="$ac_cv_search_getservbyname"
     fi])
  LIBS="$gl_saved_libs"
  if test -z "$SERVENT_LIB"; then
    AC_CHECK_FUNCS([getservbyname], , [
      AC_CACHE_CHECK([for getservbyname in winsock2.h and -lws2_32],
        [gl_cv_w32_getservbyname],
        [gl_cv_w32_getservbyname=no
         gl_save_LIBS="$LIBS"
         LIBS="$LIBS -lws2_32"
         AC_LINK_IFELSE(
           [AC_LANG_PROGRAM(
              [[
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
#include <stddef.h>
              ]],
              [[getservbyname(NULL,NULL);]])],
           [gl_cv_w32_getservbyname=yes])
         LIBS="$gl_save_LIBS"
        ])
      if test "$gl_cv_w32_getservbyname" = "yes"; then
        SERVENT_LIB="-lws2_32"
      fi
    ])
  fi
  AC_SUBST([SERVENT_LIB])
])
m4trace:m4/setenv.m4:7: -1- AC_DEFUN([gl_FUNC_SETENV], [
  AC_REQUIRE([gl_FUNC_SETENV_SEPARATE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  if test $ac_cv_func_setenv = no; then
    HAVE_SETENV=0
  else
    AC_CACHE_CHECK([whether setenv validates arguments],
      [gl_cv_func_setenv_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
       #include <stdlib.h>
       #include <errno.h>
       #include <string.h>
      ]], [[
       int result = 0;
       {
         if (setenv ("", "", 0) != -1)
           result |= 1;
         else if (errno != EINVAL)
           result |= 2;
       }
       {
         if (setenv ("a", "=", 1) != 0)
           result |= 4;
         else if (strcmp (getenv ("a"), "=") != 0)
           result |= 8;
       }
       return result;
      ]])],
      [gl_cv_func_setenv_works=yes], [gl_cv_func_setenv_works=no],
      [case "$host_os" in
                        # Guess yes on glibc systems.
         *-gnu* | gnu*) gl_cv_func_setenv_works="guessing yes" ;;
                        # Guess yes on musl systems.
         *-musl*)       gl_cv_func_setenv_works="guessing yes" ;;
                        # If we don't know, obey --enable-cross-guesses.
         *)             gl_cv_func_setenv_works="$gl_cross_guess_normal" ;;
       esac
      ])])
    case "$gl_cv_func_setenv_works" in
      *yes) ;;
      *)
        REPLACE_SETENV=1
        ;;
    esac
  fi
])
m4trace:m4/setenv.m4:57: -1- AC_DEFUN([gl_FUNC_SETENV_SEPARATE], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([setenv])
  if test $ac_cv_have_decl_setenv = no; then
    HAVE_DECL_SETENV=0
  fi
  AC_CHECK_FUNCS_ONCE([setenv])
  gl_PREREQ_SETENV
])
m4trace:m4/setenv.m4:68: -1- AC_DEFUN([gl_FUNC_UNSETENV], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([unsetenv])
  if test $ac_cv_have_decl_unsetenv = no; then
    HAVE_DECL_UNSETENV=0
  fi
  AC_CHECK_FUNCS([unsetenv])
  if test $ac_cv_func_unsetenv = no; then
    HAVE_UNSETENV=0
  else
    HAVE_UNSETENV=1
    dnl Some BSDs return void, failing to do error checking.
    AC_CACHE_CHECK([for unsetenv() return type], [gt_cv_func_unsetenv_ret],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[
#undef _BSD
#define _BSD 1 /* unhide unsetenv declaration in OSF/1 5.1 <stdlib.h> */
#include <stdlib.h>
extern
#ifdef __cplusplus
"C"
#endif
int unsetenv (const char *name);
            ]],
            [[]])],
         [gt_cv_func_unsetenv_ret='int'],
         [gt_cv_func_unsetenv_ret='void'])])
    if test $gt_cv_func_unsetenv_ret = 'void'; then
      AC_DEFINE([VOID_UNSETENV], [1], [Define to 1 if unsetenv returns void
       instead of int.])
      REPLACE_UNSETENV=1
    fi

    dnl Solaris 10 unsetenv does not remove all copies of a name.
    dnl Haiku alpha 2 unsetenv gets confused by assignment to environ.
    dnl OpenBSD 4.7 unsetenv("") does not fail.
    AC_CACHE_CHECK([whether unsetenv obeys POSIX],
      [gl_cv_func_unsetenv_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM([[
            #include <stdlib.h>
            #include <errno.h>
            extern char **environ;
           ]GL_MDA_DEFINES],
           [[
            char entry1[] = "a=1";
            char entry2[] = "b=2";
            char *env[] = { entry1, entry2, NULL };
            if (putenv ((char *) "a=1")) return 1;
            if (putenv (entry2)) return 2;
            entry2[0] = 'a';
            unsetenv ("a");
            if (getenv ("a")) return 3;
            if (!unsetenv ("") || errno != EINVAL) return 4;
            entry2[0] = 'b';
            environ = env;
            if (!getenv ("a")) return 5;
            entry2[0] = 'a';
            unsetenv ("a");
            if (getenv ("a")) return 6;
           ]])],
         [gl_cv_func_unsetenv_works=yes],
         [gl_cv_func_unsetenv_works=no],
         [case "$host_os" in
                    # Guess yes on glibc systems.
            *-gnu*) gl_cv_func_unsetenv_works="guessing yes" ;;
                    # If we don't know, obey --enable-cross-guesses.
            *)      gl_cv_func_unsetenv_works="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
    case "$gl_cv_func_unsetenv_works" in
      *yes) ;;
      *)
        REPLACE_UNSETENV=1
        ;;
    esac
  fi
])
m4trace:m4/setenv.m4:152: -1- AC_DEFUN([gl_PREREQ_SETENV], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  AC_REQUIRE([gl_ENVIRON])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_HEADERS([search.h])
  AC_CHECK_FUNCS([tsearch])
])
m4trace:m4/setenv.m4:162: -1- AC_DEFUN([gl_PREREQ_UNSETENV], [
  AC_REQUIRE([gl_ENVIRON])
  AC_CHECK_HEADERS_ONCE([unistd.h])
])
m4trace:m4/setlocale.m4:7: -1- AC_DEFUN([gl_FUNC_SETLOCALE], [
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_SETLOCALE_NULL])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl Test whether we need to improve on the general working of setlocale.
  NEED_SETLOCALE_IMPROVED=0
  case "$host_os" in
    dnl On native Windows systems, setlocale(category,NULL) does not look at
    dnl the environment variables LC_ALL, category, and LANG.
    mingw*) NEED_SETLOCALE_IMPROVED=1 ;;
    dnl On Cygwin 1.5.x, setlocale always succeeds but setlocale(LC_CTYPE,NULL)
    dnl is then still "C".
    cygwin*)
      case `uname -r` in
        1.5.*) NEED_SETLOCALE_IMPROVED=1 ;;
      esac
      ;;
    dnl On Android 4.3, setlocale(category,"C") always fails.
    *)
      AC_CACHE_CHECK([whether setlocale supports the C locale],
        [gl_cv_func_setlocale_works],
        [AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <locale.h>
int main ()
{
  return setlocale (LC_ALL, "C") == NULL;
}]])],
           [gl_cv_func_setlocale_works=yes],
           [gl_cv_func_setlocale_works=no],
           [case "$host_os" in
                               # Guess no on Android.
              linux*-android*) gl_cv_func_setlocale_works="guessing no";;
                               # Guess yes otherwise.
              *)               gl_cv_func_setlocale_works="guessing yes";;
            esac
           ])
        ])
      case "$gl_cv_func_setlocale_works" in
        *yes) ;;
        *) NEED_SETLOCALE_IMPROVED=1 ;;
      esac
      ;;
  esac
  AC_DEFINE_UNQUOTED([NEED_SETLOCALE_IMPROVED], [$NEED_SETLOCALE_IMPROVED],
    [Define to 1 to enable general improvements of setlocale.])

  dnl Test whether we need a multithread-safe setlocale(category,NULL).
  NEED_SETLOCALE_MTSAFE=0
  if test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0; then
    NEED_SETLOCALE_MTSAFE=1
  fi
  AC_DEFINE_UNQUOTED([NEED_SETLOCALE_MTSAFE], [$NEED_SETLOCALE_MTSAFE],
    [Define to 1 to enable a multithread-safety fix of setlocale.])

  if test $NEED_SETLOCALE_IMPROVED = 1 || test $NEED_SETLOCALE_MTSAFE = 1; then
    REPLACE_SETLOCALE=1
  fi

  if test $NEED_SETLOCALE_MTSAFE = 1; then
    LIB_SETLOCALE="$LIB_SETLOCALE_NULL"
  else
    LIB_SETLOCALE=
  fi
  dnl LIB_SETLOCALE is expected to be '-pthread' or '-lpthread' on AIX with gcc
  dnl or xlc, and empty otherwise.
  AC_SUBST([LIB_SETLOCALE])
])
m4trace:m4/setlocale.m4:79: -1- AC_DEFUN([gl_PREREQ_SETLOCALE], [
  dnl No need to check for CFLocaleCopyPreferredLanguages and
  dnl CFPreferencesCopyAppValue because lib/setlocale.c is not used on Mac OS X.
  dnl (The Mac OS X specific code is only used in libintl.)
  :
])
m4trace:m4/setlocale_null.m4:7: -1- AC_DEFUN([gl_FUNC_SETLOCALE_NULL], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PTHREADLIB])
  AC_CHECK_HEADERS_ONCE([threads.h])

  AC_CACHE_CHECK([whether setlocale (LC_ALL, NULL) is multithread-safe],
    [gl_cv_func_setlocale_null_all_mtsafe],
    [case "$host_os" in
       # Guess no on musl libc, macOS, FreeBSD, NetBSD, OpenBSD, AIX, Haiku, Cygwin.
       *-musl* | darwin* | freebsd* | midnightbsd* | netbsd* | openbsd* | aix* | haiku* | cygwin*)
         gl_cv_func_setlocale_null_all_mtsafe=no ;;
       # Guess yes on glibc, HP-UX, IRIX, Solaris, native Windows.
       *-gnu* | gnu* | hpux* | irix* | solaris* | mingw*)
         gl_cv_func_setlocale_null_all_mtsafe=yes ;;
       # If we don't know, obey --enable-cross-guesses.
       *)
         gl_cv_func_setlocale_null_all_mtsafe="$gl_cross_guess_normal" ;;
     esac
    ])
  dnl On platforms without multithreading, there is no issue.
  case "$host_os" in
    mingw*) ;;
    *)
      if test $gl_pthread_api = no && test $ac_cv_header_threads_h = no; then
        gl_cv_func_setlocale_null_all_mtsafe="trivially yes"
      fi
      ;;
  esac
  case "$gl_cv_func_setlocale_null_all_mtsafe" in
    *yes) SETLOCALE_NULL_ALL_MTSAFE=1 ;;
    *)    SETLOCALE_NULL_ALL_MTSAFE=0 ;;
  esac
  AC_DEFINE_UNQUOTED([SETLOCALE_NULL_ALL_MTSAFE], [$SETLOCALE_NULL_ALL_MTSAFE],
    [Define to 1 if setlocale (LC_ALL, NULL) is multithread-safe.])

  dnl This is about a single category (not LC_ALL).
  AC_CACHE_CHECK([whether setlocale (category, NULL) is multithread-safe],
    [gl_cv_func_setlocale_null_one_mtsafe],
    [case "$host_os" in
       # Guess no on OpenBSD, AIX.
       openbsd* | aix*)
         gl_cv_func_setlocale_null_one_mtsafe=no ;;
       # Guess yes on glibc, musl libc, macOS, FreeBSD, NetBSD, HP-UX, IRIX, Solaris, Haiku, Cygwin, native Windows.
       *-gnu* | gnu* | *-musl* | darwin* | freebsd* | midnightbsd* | netbsd* | hpux* | irix* | solaris* | haiku* | cygwin* | mingw*)
         gl_cv_func_setlocale_null_one_mtsafe=yes ;;
       # If we don't know, obey --enable-cross-guesses.
       *)
         gl_cv_func_setlocale_null_one_mtsafe="$gl_cross_guess_normal" ;;
     esac
    ])
  dnl On platforms without multithreading, there is no issue.
  case "$host_os" in
    mingw*) ;;
    *)
      if test $gl_pthread_api = no && test $ac_cv_header_threads_h = no; then
        gl_cv_func_setlocale_null_one_mtsafe="trivially yes"
      fi
      ;;
  esac
  case "$gl_cv_func_setlocale_null_one_mtsafe" in
    *yes) SETLOCALE_NULL_ONE_MTSAFE=1 ;;
    *)    SETLOCALE_NULL_ONE_MTSAFE=0 ;;
  esac
  AC_DEFINE_UNQUOTED([SETLOCALE_NULL_ONE_MTSAFE], [$SETLOCALE_NULL_ONE_MTSAFE],
    [Define to 1 if setlocale (category, NULL) is multithread-safe.])

  dnl Determine link dependencies of lib/setlocale_null.c and lib/setlocale-lock.c.
  if test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0; then
    case "$host_os" in
      mingw*) LIB_SETLOCALE_NULL= ;;
      *)
        gl_WEAK_SYMBOLS
        case "$gl_cv_have_weak" in
          *yes) LIB_SETLOCALE_NULL= ;;
          *)    LIB_SETLOCALE_NULL="$LIBPTHREAD" ;;
        esac
        ;;
    esac
  else
    LIB_SETLOCALE_NULL=
  fi
  dnl LIB_SETLOCALE_NULL is expected to be '-pthread' or '-lpthread' on AIX
  dnl with gcc or xlc, and empty otherwise.
  AC_SUBST([LIB_SETLOCALE_NULL])
])
m4trace:m4/setlocale_null.m4:95: -1- AC_DEFUN([gl_PREREQ_SETLOCALE_LOCK], [
  gl_VISIBILITY
])
m4trace:m4/settime.m4:7: -1- AC_DEFUN([gl_SETTIME], [
  dnl Prerequisites of lib/settime.c.
  AC_REQUIRE([gl_CLOCK_TIME])
  AC_REQUIRE([gl_TIMESPEC])
  AC_CHECK_FUNCS_ONCE([settimeofday stime])
])
m4trace:m4/sha1.m4:7: -1- AC_DEFUN([gl_SHA1], [
  dnl Prerequisites of lib/sha1.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA1 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA1])
])
m4trace:m4/sha256.m4:7: -1- AC_DEFUN([gl_SHA256], [
  dnl Prerequisites of lib/sha256.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA256 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA256])
])
m4trace:m4/sha512.m4:7: -1- AC_DEFUN([gl_SHA512], [
  dnl Prerequisites of lib/sha512.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA512 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA512])
])
m4trace:m4/sig2str.m4:7: -1- AC_DEFUN([gl_FUNC_SIG2STR], [
  AC_CHECK_FUNCS([sig2str])
])
m4trace:m4/sig2str.m4:13: -1- AC_DEFUN([gl_PREREQ_SIG2STR], [
  :
])
m4trace:m4/sigaction.m4:8: -1- AC_DEFUN([gl_SIGACTION], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([sigaction])
  if test $ac_cv_func_sigaction = yes; then
    AC_CHECK_MEMBERS([struct sigaction.sa_sigaction], , ,
                     [[#include <signal.h>]])
    if test $ac_cv_member_struct_sigaction_sa_sigaction = no; then
      HAVE_STRUCT_SIGACTION_SA_SIGACTION=0
    fi
  else
    HAVE_SIGACTION=0
  fi
])
m4trace:m4/sigaction.m4:24: -1- AC_DEFUN([gl_PREREQ_SIGACTION], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_TYPE_UID_T])
  AC_REQUIRE([gl_PREREQ_SIG_HANDLER_H])
  AC_CHECK_FUNCS_ONCE([sigaltstack siginterrupt])
  AC_CHECK_TYPES([siginfo_t], [], [], [[
#include <signal.h>
  ]])
  if test $ac_cv_type_siginfo_t = no; then
    HAVE_SIGINFO_T=0
  fi
])
m4trace:m4/sigaction.m4:40: -1- AC_DEFUN([gl_PREREQ_SIG_HANDLER_H], [:])
m4trace:m4/signal_h.m4:7: -1- AC_DEFUN_ONCE([gl_SIGNAL_H], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  gl_NEXT_HEADERS([signal.h])

# AIX declares sig_atomic_t to already include volatile, and C89 compilers
# then choke on 'volatile sig_atomic_t'.  C99 requires that it compile.
  AC_CHECK_TYPE([volatile sig_atomic_t], [],
    [HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=0], [[
#include <signal.h>
    ]])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  AC_REQUIRE([AC_TYPE_UID_T])

  dnl Persuade glibc <signal.h> to define sighandler_t.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_TYPE([sighandler_t], [], [HAVE_SIGHANDLER_T=0], [[
#include <signal.h>
    ]])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <signal.h>
    ]], [pthread_sigmask sigaction
    sigaddset sigdelset sigemptyset sigfillset sigismember
    sigpending sigprocmask])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/signal_h.m4:41: -1- AC_DEFUN([gl_CHECK_TYPE_SIGSET_T], [
  AC_CHECK_TYPES([sigset_t],
    [gl_cv_type_sigset_t=yes], [gl_cv_type_sigset_t=no],
    [[
      #include <signal.h>
      /* Mingw defines sigset_t not in <signal.h>, but in <sys/types.h>.  */
      #include <sys/types.h>
    ]])
  if test $gl_cv_type_sigset_t != yes; then
    HAVE_SIGSET_T=0
  fi
])
m4trace:m4/signal_h.m4:59: -1- AC_DEFUN([gl_SIGNAL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SIGNAL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/signal_h.m4:71: -1- AC_DEFUN([gl_SIGNAL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SIGNAL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SIGMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAISE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNAL_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGPROCMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGACTION])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SIGNAL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
])
m4trace:m4/signal_h.m4:84: -1- AC_DEFUN([gl_SIGNAL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_POSIX_SIGNALBLOCKING=1; AC_SUBST([HAVE_POSIX_SIGNALBLOCKING])
  HAVE_PTHREAD_SIGMASK=1;      AC_SUBST([HAVE_PTHREAD_SIGMASK])
  HAVE_RAISE=1;                AC_SUBST([HAVE_RAISE])
  HAVE_SIGSET_T=1;             AC_SUBST([HAVE_SIGSET_T])
  HAVE_SIGINFO_T=1;            AC_SUBST([HAVE_SIGINFO_T])
  HAVE_SIGACTION=1;            AC_SUBST([HAVE_SIGACTION])
  HAVE_STRUCT_SIGACTION_SA_SIGACTION=1;
                               AC_SUBST([HAVE_STRUCT_SIGACTION_SA_SIGACTION])
  HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=1;
                               AC_SUBST([HAVE_TYPE_VOLATILE_SIG_ATOMIC_T])
  HAVE_SIGHANDLER_T=1;         AC_SUBST([HAVE_SIGHANDLER_T])
  REPLACE_PTHREAD_SIGMASK=0;   AC_SUBST([REPLACE_PTHREAD_SIGMASK])
  REPLACE_RAISE=0;             AC_SUBST([REPLACE_RAISE])
])
m4trace:m4/signalblocking.m4:12: -1- AC_DEFUN([gl_SIGNALBLOCKING], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  HAVE_POSIX_SIGNALBLOCKING=0
  if test "$gl_cv_type_sigset_t" = yes; then
    AC_CHECK_FUNC([sigprocmask], [HAVE_POSIX_SIGNALBLOCKING=1])
  fi
])
m4trace:m4/signalblocking.m4:23: -1- AC_DEFUN([gl_PREREQ_SIGPROCMASK], [:])
m4trace:m4/signbit.m4:7: -1- AC_DEFUN([gl_SIGNBIT], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([for signbit macro], [gl_cv_func_signbit],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <math.h>
/* If signbit is defined as a function, don't use it, since calling it for
   'float' or 'long double' arguments would involve conversions.
   If signbit is not declared at all but exists as a library function, don't
   use it, since the prototype may not match.
   If signbit is not declared at all but exists as a compiler built-in, don't
   use it, since it's preferable to use __builtin_signbit* (no warnings,
   no conversions).  */
#ifndef signbit
# error "signbit should be a macro"
#endif
#include <string.h>
]gl_SIGNBIT_TEST_PROGRAM
])],
        [gl_cv_func_signbit=yes],
        [gl_cv_func_signbit=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_signbit="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_signbit="guessing yes" ;;
                          # Guess yes on native Windows.
           mingw*)        gl_cv_func_signbit="guessing yes" ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_signbit="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
  dnl GCC >= 4.0 and clang provide three built-ins for signbit.
  dnl They can be used without warnings, also in C++, regardless of <math.h>.
  dnl But they may expand to calls to functions, which may or may not be in
  dnl libc.
  AC_CACHE_CHECK([for signbit compiler built-ins],
    [gl_cv_func_signbit_builtins],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#if (__GNUC__ >= 4) || (__clang_major__ >= 4)
# define signbit(x) \
   (sizeof (x) == sizeof (long double) ? __builtin_signbitl (x) : \
    sizeof (x) == sizeof (double) ? __builtin_signbit (x) : \
    __builtin_signbitf (x))
#else
# error "signbit should be three compiler built-ins"
#endif
#include <string.h>
]gl_SIGNBIT_TEST_PROGRAM
])],
        [gl_cv_func_signbit_builtins=yes],
        [gl_cv_func_signbit_builtins=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_signbit_builtins="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_signbit_builtins="guessing yes" ;;
                          # Guess yes on mingw, no on MSVC.
           mingw*)        if test -n "$GCC"; then
                            gl_cv_func_signbit_builtins="guessing yes"
                          else
                            gl_cv_func_signbit_builtins="guessing no"
                          fi
                          ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_signbit_builtins="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
  dnl Use the compiler built-ins whenever possible, because they are more
  dnl efficient than the system library functions (if they exist).
  case "$gl_cv_func_signbit_builtins" in
    *yes)
      REPLACE_SIGNBIT_USING_BUILTINS=1
      ;;
    *)
      case "$gl_cv_func_signbit" in
        *yes) ;;
        *)
          dnl REPLACE_SIGNBIT=1 makes sure the signbit[fdl] functions get built.
          REPLACE_SIGNBIT=1
          ;;
      esac
      ;;
  esac
  dnl On Solaris 10, with CC in C++ mode, signbit is not available although
  dnl is with cc in C mode. This cannot be worked around by defining
  dnl _XOPEN_SOURCE=600, because the latter does not work in C++ mode on
  dnl Solaris 11.0. Therefore use the replacement functions on Solaris.
  case "$host_os" in
    solaris*)
      REPLACE_SIGNBIT=1
      ;;
  esac
  if test $REPLACE_SIGNBIT = 1; then
    gl_FLOAT_SIGN_LOCATION
    gl_DOUBLE_SIGN_LOCATION
    gl_LONG_DOUBLE_SIGN_LOCATION
    if test "$gl_cv_cc_float_signbit" = unknown; then
      dnl Test whether copysignf() is declared.
      AC_CHECK_DECLS([copysignf], , , [[#include <math.h>]])
      if test "$ac_cv_have_decl_copysignf" = yes; then
        dnl Test whether copysignf() can be used without libm.
        AC_CACHE_CHECK([whether copysignf can be used without linking with libm],
          [gl_cv_func_copysignf_no_libm],
          [
            AC_LINK_IFELSE(
              [AC_LANG_PROGRAM(
                 [[#include <math.h>
                   float x, y;]],
                 [[return copysignf (x, y) < 0;]])],
              [gl_cv_func_copysignf_no_libm=yes],
              [gl_cv_func_copysignf_no_libm=no])
          ])
        if test $gl_cv_func_copysignf_no_libm = yes; then
          AC_DEFINE([HAVE_COPYSIGNF_IN_LIBC], [1],
            [Define if the copysignf function is declared in <math.h> and available in libc.])
        fi
      fi
    fi
    if test "$gl_cv_cc_double_signbit" = unknown; then
      dnl Test whether copysign() is declared.
      AC_CHECK_DECLS([copysign], , , [[#include <math.h>]])
      if test "$ac_cv_have_decl_copysign" = yes; then
        dnl Test whether copysign() can be used without libm.
        AC_CACHE_CHECK([whether copysign can be used without linking with libm],
          [gl_cv_func_copysign_no_libm],
          [
            AC_LINK_IFELSE(
              [AC_LANG_PROGRAM(
                 [[#include <math.h>
                   double x, y;]],
                 [[return copysign (x, y) < 0;]])],
              [gl_cv_func_copysign_no_libm=yes],
              [gl_cv_func_copysign_no_libm=no])
          ])
        if test $gl_cv_func_copysign_no_libm = yes; then
          AC_DEFINE([HAVE_COPYSIGN_IN_LIBC], [1],
            [Define if the copysign function is declared in <math.h> and available in libc.])
        fi
      fi
    fi
    if test "$gl_cv_cc_long_double_signbit" = unknown; then
      dnl Test whether copysignl() is declared.
      AC_CHECK_DECLS([copysignl], , , [[#include <math.h>]])
      if test "$ac_cv_have_decl_copysignl" = yes; then
        dnl Test whether copysignl() can be used without libm.
        AC_CACHE_CHECK([whether copysignl can be used without linking with libm],
          [gl_cv_func_copysignl_no_libm],
          [
            AC_LINK_IFELSE(
              [AC_LANG_PROGRAM(
                 [[#include <math.h>
                   long double x, y;]],
                 [[return copysignl (x, y) < 0;]])],
              [gl_cv_func_copysignl_no_libm=yes],
              [gl_cv_func_copysignl_no_libm=no])
          ])
        if test $gl_cv_func_copysignl_no_libm = yes; then
          AC_DEFINE([HAVE_COPYSIGNL_IN_LIBC], [1],
            [Define if the copysignl function is declared in <math.h> and available in libc.])
        fi
      fi
    fi
  fi
])
m4trace:m4/signbit.m4:180: -1- AC_DEFUN([gl_SIGNBIT_TEST_PROGRAM], [[
/* Global variables.
   Needed because GCC 4 constant-folds __builtin_signbitl (literal)
   but cannot constant-fold            __builtin_signbitl (variable).  */
float vf;
double vd;
long double vl;
int main ()
{
/* HP cc on HP-UX 10.20 has a bug with the constant expression -0.0.
   So we use -p0f and -p0d instead.  */
float p0f = 0.0f;
float m0f = -p0f;
double p0d = 0.0;
double m0d = -p0d;
/* On HP-UX 10.20, negating 0.0L does not yield -0.0L.
   So we use another constant expression instead.
   But that expression does not work on other platforms, such as when
   cross-compiling to PowerPC on Mac OS X 10.5.  */
long double p0l = 0.0L;
#if defined __hpux || defined __sgi
long double m0l = -LDBL_MIN * LDBL_MIN;
#else
long double m0l = -p0l;
#endif
  int result = 0;
  if (signbit (vf)) /* link check */
    vf++;
  {
    float plus_inf = 1.0f / p0f;
    float minus_inf = -1.0f / p0f;
    if (!(!signbit (255.0f)
          && signbit (-255.0f)
          && !signbit (p0f)
          && (memcmp (&m0f, &p0f, sizeof (float)) == 0 || signbit (m0f))
          && !signbit (plus_inf)
          && signbit (minus_inf)))
      result |= 1;
  }
  if (signbit (vd)) /* link check */
    vd++;
  {
    double plus_inf = 1.0 / p0d;
    double minus_inf = -1.0 / p0d;
    if (!(!signbit (255.0)
          && signbit (-255.0)
          && !signbit (p0d)
          && (memcmp (&m0d, &p0d, sizeof (double)) == 0 || signbit (m0d))
          && !signbit (plus_inf)
          && signbit (minus_inf)))
      result |= 2;
  }
  if (signbit (vl)) /* link check */
    vl++;
  {
    long double plus_inf = 1.0L / p0l;
    long double minus_inf = -1.0L / p0l;
    if (signbit (255.0L))
      result |= 4;
    if (!signbit (-255.0L))
      result |= 4;
    if (signbit (p0l))
      result |= 8;
    if (!(memcmp (&m0l, &p0l, sizeof (long double)) == 0 || signbit (m0l)))
      result |= 16;
    if (signbit (plus_inf))
      result |= 32;
    if (!signbit (minus_inf))
      result |= 64;
  }
  return result;
}
]])
m4trace:m4/signbit.m4:254: -1- AC_DEFUN([gl_FLOAT_SIGN_LOCATION], [
  gl_FLOATTYPE_SIGN_LOCATION([float], [gl_cv_cc_float_signbit], [f], [FLT])
])
m4trace:m4/signbit.m4:259: -1- AC_DEFUN([gl_DOUBLE_SIGN_LOCATION], [
  gl_FLOATTYPE_SIGN_LOCATION([double], [gl_cv_cc_double_signbit], [], [DBL])
])
m4trace:m4/signbit.m4:264: -1- AC_DEFUN([gl_LONG_DOUBLE_SIGN_LOCATION], [
  gl_FLOATTYPE_SIGN_LOCATION([long double], [gl_cv_cc_long_double_signbit], [L], [LDBL])
])
m4trace:m4/signbit.m4:269: -1- AC_DEFUN([gl_FLOATTYPE_SIGN_LOCATION], [
  AC_CACHE_CHECK([where to find the sign bit in a '$1'],
    [$2],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stddef.h>
#include <stdio.h>
#define NWORDS \
  ((sizeof ($1) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { $1 value; unsigned int word[NWORDS]; }
        memory_float;
static memory_float plus = { 1.0$3 };
static memory_float minus = { -1.0$3 };
int main ()
{
  size_t j, k, i;
  unsigned int m;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  /* Find the different bit.  */
  k = 0; m = 0;
  for (j = 0; j < NWORDS; j++)
    {
      unsigned int x = plus.word[j] ^ minus.word[j];
      if ((x & (x - 1)) || (x && m))
        {
          /* More than one bit difference.  */
          fprintf (fp, "unknown");
          fclose (fp);
          return 2;
        }
      if (x)
        {
          k = j;
          m = x;
        }
    }
  if (m == 0)
    {
      /* No difference.  */
      fprintf (fp, "unknown");
      fclose (fp);
      return 3;
    }
  /* Now m = plus.word[k] ^ ~minus.word[k].  */
  if (plus.word[k] & ~minus.word[k])
    {
      /* Oh? The sign bit is set in the positive and cleared in the negative
         numbers?  */
      fprintf (fp, "unknown");
      fclose (fp);
      return 4;
    }
  for (i = 0; ; i++)
    if ((m >> i) & 1)
      break;
  fprintf (fp, "word %d bit %d", (int) k, (int) i);
  if (fclose (fp) != 0)
    return 5;
  return 0;
}
        ]])],
        [$2=`cat conftest.out`],
        [$2="unknown"],
        [
          dnl When cross-compiling, we don't know. It depends on the
          dnl ABI and compiler version. There are too many cases.
          $2="unknown"
        ])
      rm -f conftest.out
    ])
  case "$$2" in
    word*bit*)
      word=`echo "$$2" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$$2" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([$4][_SIGNBIT_WORD], [$word],
        [Define as the word index where to find the sign of '$1'.])
      AC_DEFINE_UNQUOTED([$4][_SIGNBIT_BIT], [$bit],
        [Define as the bit index in the word where to find the sign of '$1'.])
      ;;
  esac
])
m4trace:m4/signbit.m4:357: -1- AC_DEFUN([gl_FLOAT_SIGNBIT_CODE], [
  gl_FLOATTYPE_SIGNBIT_CODE([float], [f], [f])
])
m4trace:m4/signbit.m4:364: -1- AC_DEFUN([gl_DOUBLE_SIGNBIT_CODE], [
  gl_FLOATTYPE_SIGNBIT_CODE([double], [d], [])
])
m4trace:m4/signbit.m4:371: -1- AC_DEFUN([gl_LONG_DOUBLE_SIGNBIT_CODE], [
  gl_FLOATTYPE_SIGNBIT_CODE([long double], [l], [L])
])
m4trace:m4/signbit.m4:376: -1- AC_DEFUN([gl_FLOATTYPE_SIGNBIT_CODE], [[
static int
signbit$2 ($1 value)
{
  typedef union { $1 f; unsigned char b[sizeof ($1)]; } float_union;
  static float_union plus_one = { 1.0$3 };   /* unused bits are zero here */
  static float_union minus_one = { -1.0$3 }; /* unused bits are zero here */
  /* Compute the sign bit mask as the XOR of plus_one and minus_one.  */
  float_union u;
  unsigned int i;
  u.f = value;
  for (i = 0; i < sizeof ($1); i++)
    if (u.b[i] & (plus_one.b[i] ^ minus_one.b[i]))
      return 1;
  return 0;
}
]])
m4trace:m4/size_max.m4:11: -1- AC_DEFUN([gl_SIZE_MAX], [
  AC_CHECK_HEADERS([stdint.h])
  dnl First test whether the system already has SIZE_MAX.
  AC_CACHE_CHECK([for SIZE_MAX], [gl_cv_size_max], [
    gl_cv_size_max=no
    AC_EGREP_CPP([Found it], [
#include <limits.h>
#if HAVE_STDINT_H
#include <stdint.h>
#endif
#ifdef SIZE_MAX
Found it
#endif
], [gl_cv_size_max=yes])
    if test $gl_cv_size_max != yes; then
      dnl Define it ourselves. Here we assume that the type 'size_t' is not wider
      dnl than the type 'unsigned long'. Try hard to find a definition that can
      dnl be used in a preprocessor #if, i.e. doesn't contain a cast.
      AC_COMPUTE_INT([size_t_bits_minus_1], [sizeof (size_t) * CHAR_BIT - 1],
        [#include <stddef.h>
#include <limits.h>], [size_t_bits_minus_1=])
      AC_COMPUTE_INT([fits_in_uint], [sizeof (size_t) <= sizeof (unsigned int)],
        [#include <stddef.h>], [fits_in_uint=])
      if test -n "$size_t_bits_minus_1" && test -n "$fits_in_uint"; then
        if test $fits_in_uint = 1; then
          dnl Even though SIZE_MAX fits in an unsigned int, it must be of type
          dnl 'unsigned long' if the type 'size_t' is the same as 'unsigned long'.
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM(
               [[#include <stddef.h>
                 extern size_t foo;
                 extern unsigned long foo;
               ]],
               [[]])],
            [fits_in_uint=0])
        fi
        dnl We cannot use 'expr' to simplify this expression, because 'expr'
        dnl works only with 'long' integers in the host environment, while we
        dnl might be cross-compiling from a 32-bit platform to a 64-bit platform.
        if test $fits_in_uint = 1; then
          gl_cv_size_max="(((1U << $size_t_bits_minus_1) - 1) * 2 + 1)"
        else
          gl_cv_size_max="(((1UL << $size_t_bits_minus_1) - 1) * 2 + 1)"
        fi
      else
        dnl Shouldn't happen, but who knows...
        gl_cv_size_max='((size_t)~(size_t)0)'
      fi
    fi
  ])
  if test "$gl_cv_size_max" != yes; then
    AC_DEFINE_UNQUOTED([SIZE_MAX], [$gl_cv_size_max],
      [Define as the maximum value of type 'size_t', if the system doesn't define it.])
  fi
  dnl Don't redefine SIZE_MAX in config.h if config.h is re-included after
  dnl <stdint.h>. Remember that the #undef in AH_VERBATIM gets replaced with
  dnl #define by AC_DEFINE_UNQUOTED.
  AH_VERBATIM([SIZE_MAX],
[/* Define as the maximum value of type 'size_t', if the system doesn't define
   it. */
#ifndef SIZE_MAX
# undef SIZE_MAX
#endif])
])
m4trace:m4/sleep.m4:7: -1- AC_DEFUN([gl_FUNC_SLEEP], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl We expect to see the declaration of sleep() in a header file.
  dnl Older versions of mingw have a sleep() function that is an alias to
  dnl _sleep() in MSVCRT. It has a different signature than POSIX sleep():
  dnl it takes the number of milliseconds as argument and returns void.
  dnl mingw does not declare this function.
  AC_CHECK_DECLS([sleep], , , [[#include <unistd.h>]])
  AC_CHECK_FUNCS_ONCE([sleep])
  if test $ac_cv_have_decl_sleep != yes; then
    HAVE_SLEEP=0
  else
    dnl Cygwin 1.5.x has a bug where sleep can't exceed 49.7 days.
    AC_CACHE_CHECK([for working sleep], [gl_cv_func_sleep_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <errno.h>
#include <unistd.h>
#include <signal.h>
static void
handle_alarm (int sig)
{
  if (sig != SIGALRM)
    _exit (2);
}
]], [[
    /* Failure to compile this test due to missing alarm is okay,
       since all such platforms (mingw) also lack sleep.  */
    unsigned int pentecost = 50 * 24 * 60 * 60; /* 50 days.  */
    unsigned int remaining;
    signal (SIGALRM, handle_alarm);
    alarm (1);
    remaining = sleep (pentecost);
    if (remaining > pentecost)
      return 3;
    if (remaining <= pentecost - 10)
      return 4;
    return 0;
    ]])],
      [gl_cv_func_sleep_works=yes], [gl_cv_func_sleep_works=no],
      [case "$host_os" in
                        # Guess yes on glibc systems.
         *-gnu* | gnu*) gl_cv_func_sleep_works="guessing yes" ;;
                        # Guess yes on musl systems.
         *-musl*)       gl_cv_func_sleep_works="guessing yes" ;;
                        # Guess no on native Windows.
         mingw*)        gl_cv_func_sleep_works="guessing no" ;;
                        # If we don't know, obey --enable-cross-guesses.
         *)             gl_cv_func_sleep_works="$gl_cross_guess_normal" ;;
       esac
      ])])
    case "$gl_cv_func_sleep_works" in
      *yes) ;;
      *)
        REPLACE_SLEEP=1
        ;;
    esac
  fi
])
m4trace:m4/sm3.m4:7: -1- AC_DEFUN([gl_SM3], [
  dnl Prerequisites of lib/sm3.h.
  AC_REQUIRE([AC_C_RESTRICT])

  dnl Prerequisites of lib/sm3.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Currently openssl still doesn't support sm3.
  m4_divert_once([DEFAULTS], [LIB_CRYPTO=])
  AC_SUBST([LIB_CRYPTO])
])
m4trace:m4/snprintf.m4:11: -1- AC_DEFUN([gl_FUNC_SNPRINTF], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  gl_cv_func_snprintf_usable=no
  AC_CHECK_FUNCS([snprintf])
  if test $ac_cv_func_snprintf = yes; then
    gl_SNPRINTF_SIZE1
    case "$gl_cv_func_snprintf_size1" in
      *yes)
        gl_SNPRINTF_RETVAL_C99
        case "$gl_cv_func_snprintf_retval_c99" in
          *yes)
            gl_PRINTF_POSITIONS
            case "$gl_cv_func_printf_positions" in
              *yes)
                gl_cv_func_snprintf_usable=yes
                ;;
            esac
            ;;
        esac
        ;;
    esac
  fi
  if test $gl_cv_func_snprintf_usable = no; then
    gl_REPLACE_SNPRINTF
  fi
  AC_CHECK_DECLS_ONCE([snprintf])
  if test $ac_cv_have_decl_snprintf = no; then
    HAVE_DECL_SNPRINTF=0
  fi
])
m4trace:m4/snprintf.m4:43: -1- AC_DEFUN([gl_REPLACE_SNPRINTF], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_LIBOBJ([snprintf])
  if test $ac_cv_func_snprintf = yes; then
    REPLACE_SNPRINTF=1
  else
    AC_CHECK_DECLS_ONCE([snprintf])
    if test $ac_cv_have_decl_snprintf = yes; then
      dnl If the function is declared but does not appear to exist, it may be
      dnl defined as an inline function. In order to avoid a conflict, we have
      dnl to define rpl_snprintf, not snprintf.
      REPLACE_SNPRINTF=1
    fi
  fi
  gl_PREREQ_SNPRINTF
])
m4trace:m4/snprintf.m4:62: -1- AC_DEFUN([gl_PREREQ_SNPRINTF], [:])
m4trace:m4/socketlib.m4:11: -1- AC_DEFUN([gl_SOCKETLIB], [
  gl_PREREQ_SYS_H_WINSOCK2 dnl for HAVE_WINSOCK2_H
  LIBSOCKET=
  if test $HAVE_WINSOCK2_H = 1; then
    dnl Native Windows API (not Cygwin).
    dnl If the function WSAStartup exists (declared in <winsock2.h> and
    dnl defined through -lws2_32), we need to call it.
    AC_CACHE_CHECK([for WSAStartup],
      [gl_cv_func_wsastartup], [
       gl_save_LIBS="$LIBS"
       LIBS="$LIBS -lws2_32"
       AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([[
#ifdef HAVE_WINSOCK2_H
# include <winsock2.h>
#endif]], [[
            WORD wVersionRequested = MAKEWORD(1, 1);
            WSADATA wsaData;
            int err = WSAStartup(wVersionRequested, &wsaData);
            WSACleanup ();
            ]])
         ],
         [gl_cv_func_wsastartup=yes],
         [gl_cv_func_wsastartup=no])
       LIBS="$gl_save_LIBS"
      ])
    if test "$gl_cv_func_wsastartup" = "yes"; then
      AC_DEFINE([WINDOWS_SOCKETS], [1], [Define if WSAStartup is needed.])
      LIBSOCKET='-lws2_32'
    fi
  else
    dnl Unix API.
    dnl Solaris has most socket functions in libsocket.
    dnl Haiku has most socket functions in libnetwork.
    dnl BeOS has most socket functions in libnet.
    dnl On HP-UX, do NOT link with libxnet, because in 64-bit mode this would
    dnl break code (e.g. in libraries) that invokes accept(), getpeername(),
    dnl getsockname(), getsockopt(), or recvfrom() with a 32-bit addrlen. See
    dnl "man xopen_networking" for details.
    AC_CACHE_CHECK([for library containing setsockopt], [gl_cv_lib_socket], [
      gl_cv_lib_socket=
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
        [],
        [gl_save_LIBS="$LIBS"
         LIBS="$gl_save_LIBS -lsocket"
         AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
           [gl_cv_lib_socket="-lsocket"])
         if test -z "$gl_cv_lib_socket"; then
           LIBS="$gl_save_LIBS -lnetwork"
           AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
             [gl_cv_lib_socket="-lnetwork"])
           if test -z "$gl_cv_lib_socket"; then
             LIBS="$gl_save_LIBS -lnet"
             AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
               [gl_cv_lib_socket="-lnet"])
           fi
         fi
         LIBS="$gl_save_LIBS"
        ])
      if test -z "$gl_cv_lib_socket"; then
        gl_cv_lib_socket="none needed"
      fi
    ])
    if test "$gl_cv_lib_socket" != "none needed"; then
      LIBSOCKET="$gl_cv_lib_socket"
    fi
  fi
  AC_SUBST([LIBSOCKET])
])
m4trace:m4/sockets.m4:7: -1- AC_DEFUN([gl_SOCKETS], [
  AC_REQUIRE([AC_C_INLINE])
  AC_REQUIRE([gl_SOCKETLIB])
  gl_PREREQ_SOCKETS
])
m4trace:m4/sockets.m4:15: -1- AC_DEFUN([gl_PREREQ_SOCKETS], [
  :
])
m4trace:m4/socklen.m4:15: -1- AC_DEFUN([gl_TYPE_SOCKLEN_T], [AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])dnl
   AC_CHECK_TYPE([socklen_t], ,
     [AC_CACHE_CHECK([for socklen_t equivalent],
        [gl_cv_socklen_t_equiv],
        [# Systems have either "struct sockaddr *" or
         # "void *" as the second argument to getpeername
         gl_cv_socklen_t_equiv=
         for arg2 in "struct sockaddr" void; do
           for t in int size_t "unsigned int" "long int" "unsigned long int"; do
             AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
                 [[#include <sys/types.h>
                   #include <sys/socket.h>

                   int getpeername (int, $arg2 *, $t *);]],
                 [[$t len;
                  getpeername (0, 0, &len);]])],
               [gl_cv_socklen_t_equiv="$t"])
             test "$gl_cv_socklen_t_equiv" != "" && break
           done
           test "$gl_cv_socklen_t_equiv" != "" && break
         done
         if test "$gl_cv_socklen_t_equiv" = ""; then
           AC_MSG_ERROR([Cannot find a type to use in place of socklen_t])
         fi
        ])
      AC_DEFINE_UNQUOTED([socklen_t], [$gl_cv_socklen_t_equiv],
        [type to use in place of socklen_t if not defined])],
     [gl_SOCKET_HEADERS])])
m4trace:m4/socklen.m4:51: -1- AC_DEFUN([gl_SOCKET_HEADERS], [
/* <sys/types.h> is not needed according to POSIX, but the
   <sys/socket.h> in i386-unknown-freebsd4.10 and
   powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#elif HAVE_WS2TCPIP_H
# include <ws2tcpip.h>
#endif
])
m4trace:m4/socklen.m4:67: -1- AC_DEFUN([gl_CHECK_SOCKET_HEADERS], [AC_CHECK_HEADERS_ONCE([sys/socket.h])
   if test $ac_cv_header_sys_socket_h = no; then
     dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
     dnl the check for those headers unconditional; yet cygwin reports
     dnl that the headers are present but cannot be compiled (since on
     dnl cygwin, all socket information should come from sys/socket.h).
     AC_CHECK_HEADERS([ws2tcpip.h])
   fi
  ])
m4trace:m4/sockpfaf.m4:14: -1- AC_DEFUN([gl_SOCKET_FAMILIES], [
  AC_REQUIRE([gl_SYS_SOCKET_H])
  AC_CHECK_HEADERS_ONCE([netinet/in.h])

  AC_CACHE_CHECK([for IPv4 sockets],
    [gl_cv_socket_ipv4],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif]],
[[int x = AF_INET; struct in_addr y; struct sockaddr_in z;
 if (&x && &y && &z) return 0;]])],
       gl_cv_socket_ipv4=yes, gl_cv_socket_ipv4=no)])
  if test $gl_cv_socket_ipv4 = yes; then
    AC_DEFINE([HAVE_IPV4], [1], [Define to 1 if <sys/socket.h> defines AF_INET.])
  fi

  AC_CACHE_CHECK([for IPv6 sockets],
    [gl_cv_socket_ipv6],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif]],
[[int x = AF_INET6; struct in6_addr y; struct sockaddr_in6 z;
 if (&x && &y && &z) return 0;]])],
       gl_cv_socket_ipv6=yes, gl_cv_socket_ipv6=no)])
  if test $gl_cv_socket_ipv6 = yes; then
    AC_DEFINE([HAVE_IPV6], [1], [Define to 1 if <sys/socket.h> defines AF_INET6.])
  fi
])
m4trace:m4/sockpfaf.m4:61: -1- AC_DEFUN([gl_SOCKET_FAMILY_UNIX], [
  AC_REQUIRE([gl_SYS_SOCKET_H])
  AC_CHECK_HEADERS_ONCE([sys/un.h])

  AC_CACHE_CHECK([for UNIX domain sockets],
    [gl_cv_socket_unix],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_SYS_UN_H
#include <sys/un.h>
#endif
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif]],
[[int x = AF_UNIX; struct sockaddr_un y;
 if (&x && &y) return 0;]])],
       gl_cv_socket_unix=yes, gl_cv_socket_unix=no)])
  if test $gl_cv_socket_unix = yes; then
    AC_DEFINE([HAVE_UNIXSOCKET], [1], [Define to 1 if <sys/socket.h> defines AF_UNIX.])
  fi
])
m4trace:m4/ssize_t.m4:10: -1- AC_DEFUN([gt_TYPE_SSIZE_T], [
  AC_CACHE_CHECK([for ssize_t], [gt_cv_ssize_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>]],
          [[int x = sizeof (ssize_t *) + sizeof (ssize_t);
            return !x;]])],
       [gt_cv_ssize_t=yes], [gt_cv_ssize_t=no])])
  if test $gt_cv_ssize_t = no; then
    AC_DEFINE([ssize_t], [int],
              [Define as a signed type of the same size as size_t.])
  fi
])
m4trace:m4/stat-prog.m4:21: -1- AC_DEFUN([cu_PREREQ_STAT_PROG], [
  AC_REQUIRE([gl_FSUSAGE])
  AC_REQUIRE([gl_FSTYPENAME])
  AC_CHECK_HEADERS_ONCE([OS.h netinet/in.h sys/param.h sys/vfs.h])

  dnl Check for vfs.h first, since this avoids a warning with nfs_client.h
  dnl on Solaris 8.
  test $ac_cv_header_sys_param_h = yes &&
  test $ac_cv_header_sys_mount_h = yes &&
  AC_CHECK_HEADERS([nfs/vfs.h],
    [AC_CHECK_HEADERS([nfs/nfs_client.h])])

  statvfs_includes="\
AC_INCLUDES_DEFAULT
#include <sys/statvfs.h>
"
  statfs_includes="\
AC_INCLUDES_DEFAULT
#if HAVE_SYS_VFS_H
# include <sys/vfs.h>
#elif HAVE_SYS_MOUNT_H && HAVE_SYS_PARAM_H
# include <sys/param.h>
# include <sys/mount.h>
# if HAVE_NETINET_IN_H && HAVE_NFS_NFS_CLNT_H && HAVE_NFS_VFS_H
#  include <netinet/in.h>
#  include <nfs/nfs_clnt.h>
#  include <nfs/vfs.h>
# endif
#elif HAVE_OS_H
# include <fs_info.h>
#endif
"
  dnl Keep this long conditional in sync with the USE_STATVFS conditional
  dnl in ../src/stat.c.
  if case "$fu_cv_sys_stat_statvfs$fu_cv_sys_stat_statvfs64" in
       *yes*) ;; *) false;; esac &&
     { AC_CHECK_MEMBERS([struct statvfs.f_basetype],,, [$statvfs_includes])
       test $ac_cv_member_struct_statvfs_f_basetype = yes ||
       { AC_CHECK_MEMBERS([struct statvfs.f_fstypename],,, [$statvfs_includes])
         test $ac_cv_member_struct_statvfs_f_fstypename = yes ||
         { test $ac_cv_member_struct_statfs_f_fstypename != yes &&
           { AC_CHECK_MEMBERS([struct statvfs.f_type],,, [$statvfs_includes])
             test $ac_cv_member_struct_statvfs_f_type = yes; }; }; }; }
  then
    AC_CHECK_MEMBERS([struct statvfs.f_namemax],,, [$statvfs_includes])
    AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM(
         [$statvfs_includes],
         [static statvfs s;
          return (s.s_fsid ^ 0) == 0;])],
      [AC_DEFINE([STRUCT_STATVFS_F_FSID_IS_INTEGER], [1],
         [Define to 1 if the f_fsid member of struct statvfs is an integer.])])
  else
    AC_CHECK_MEMBERS([struct statfs.f_namelen, struct statfs.f_namemax,
                      struct statfs.f_type, struct statfs.f_frsize],,,
                     [$statfs_includes])
    if test $ac_cv_header_OS_h != yes; then
      AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM(
           [$statfs_includes],
           [static statfs s;
            return (s.s_fsid ^ 0) == 0;])],
        [AC_DEFINE([STRUCT_STATFS_F_FSID_IS_INTEGER], [1],
           [Define to 1 if the f_fsid member of struct statfs is an integer.])])
    fi
  fi
])
m4trace:m4/stat-size.m4:9: -1- AC_DEFUN([gl_STAT_SIZE], [
  # Don't call AC_STRUCT_ST_BLOCKS because it causes bugs.  Details at
  # https://lists.gnu.org/r/bug-gnulib/2011-06/msg00051.html
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/stat-time.m4:20: -1- AC_DEFUN([gl_STAT_TIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])

  AC_CHECK_MEMBERS([struct stat.st_atim.tv_nsec],
    [AC_CACHE_CHECK([whether struct stat.st_atim is of type struct timespec],
       [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec],
       [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
          [[
            #include <sys/types.h>
            #include <sys/stat.h>
            #if HAVE_SYS_TIME_H
            # include <sys/time.h>
            #endif
            #include <time.h>
            struct timespec ts;
            struct stat st;
          ]],
          [[
            st.st_atim = ts;
          ]])],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=yes],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=no])])
     if test $ac_cv_typeof_struct_stat_st_atim_is_struct_timespec = yes; then
       AC_DEFINE([TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC], [1],
         [Define to 1 if the type of the st_atim member of a struct stat is
          struct timespec.])
     fi],
    [AC_CHECK_MEMBERS([struct stat.st_atimespec.tv_nsec], [],
       [AC_CHECK_MEMBERS([struct stat.st_atimensec], [],
          [AC_CHECK_MEMBERS([struct stat.st_atim.st__tim.tv_nsec], [], [],
             [#include <sys/types.h>
              #include <sys/stat.h>])],
          [#include <sys/types.h>
           #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat-time.m4:70: -1- AC_DEFUN([gl_STAT_BIRTHTIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CHECK_MEMBERS([struct stat.st_birthtimespec.tv_nsec], [],
    [AC_CHECK_MEMBERS([struct stat.st_birthtimensec], [],
      [AC_CHECK_MEMBERS([struct stat.st_birthtim.tv_nsec], [], [],
         [#include <sys/types.h>
          #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat.m4:9: -1- AC_DEFUN([gl_FUNC_STAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([lstat])
  case "$host_os" in
    mingw*)
      dnl On this platform, the original stat() returns st_atime, st_mtime,
      dnl st_ctime values that are affected by the time zone.
      REPLACE_STAT=1
      ;;
    *)
      dnl AIX 7.1, Solaris 9, mingw64 mistakenly succeed on stat("file/").
      dnl (For mingw, this is due to a broken stat() override in libmingwex.a.)
      dnl FreeBSD 7.2 mistakenly succeeds on stat("link-to-file/").
      AC_CACHE_CHECK([whether stat handles trailing slashes on files],
        [gl_cv_func_stat_file_slash],
        [touch conftest.tmp
         # Assume that if we have lstat, we can also check symlinks.
         if test $ac_cv_func_lstat = yes; then
           ln -s conftest.tmp conftest.lnk
         fi
         AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
             [[#include <sys/stat.h>
]], [[int result = 0;
               struct stat st;
               if (!stat ("conftest.tmp/", &st))
                 result |= 1;
#if HAVE_LSTAT
               if (!stat ("conftest.lnk/", &st))
                 result |= 2;
#endif
               return result;
             ]])],
           [gl_cv_func_stat_file_slash=yes], [gl_cv_func_stat_file_slash=no],
           [case "$host_os" in
                               # Guess yes on Linux systems.
              linux-* | linux) gl_cv_func_stat_file_slash="guessing yes" ;;
                               # Guess yes on glibc systems.
              *-gnu* | gnu*)   gl_cv_func_stat_file_slash="guessing yes" ;;
                               # If we don't know, obey --enable-cross-guesses.
              *)               gl_cv_func_stat_file_slash="$gl_cross_guess_normal" ;;
            esac
           ])
         rm -f conftest.tmp conftest.lnk])
      case $gl_cv_func_stat_file_slash in
        *no)
          REPLACE_STAT=1
          AC_DEFINE([REPLACE_FUNC_STAT_FILE], [1], [Define to 1 if stat needs
            help when passed a file name with a trailing slash]);;
      esac
      case $host_os in
        dnl Solaris stat can return a negative tv_nsec.
        solaris*)
          REPLACE_FSTAT=1 ;;
      esac
      ;;
  esac
])
m4trace:m4/stat.m4:71: -1- AC_DEFUN([gl_PREREQ_STAT], [
  AC_REQUIRE([gl_SYS_STAT_H])
  AC_REQUIRE([gl_PREREQ_STAT_W32])
  :
])
m4trace:m4/stat.m4:78: -1- AC_DEFUN([gl_PREREQ_STAT_W32], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_CHECK_HEADERS([sdkddkver.h])
      ;;
  esac
])
m4trace:m4/stdalign.m4:10: -1- AC_DEFUN([gl_STDALIGN_H], [
  AC_CACHE_CHECK([for working stdalign.h],
    [gl_cv_header_working_stdalign_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdint.h>
            #include <stdalign.h>
            #include <stddef.h>

            /* Test that alignof yields a result consistent with offsetof.
               This catches GCC bug 52023
               <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=52023>.  */
            #ifdef __cplusplus
               template <class t> struct alignof_helper { char a; t b; };
            # define ao(type) offsetof (alignof_helper<type>, b)
            #else
            # define ao(type) offsetof (struct { char a; type b; }, b)
            #endif
            char test_double[ao (double) % _Alignof (double) == 0 ? 1 : -1];
            char test_long[ao (long int) % _Alignof (long int) == 0 ? 1 : -1];
            char test_alignof[alignof (double) == _Alignof (double) ? 1 : -1];

            /* Test _Alignas only on platforms where gnulib can help.  */
            #if \
                ((defined __cplusplus && 201103 <= __cplusplus) \
                 || (__TINYC__ && defined __attribute__) \
                 || (defined __APPLE__ && defined __MACH__ \
                     ? 4 < __GNUC__ + (1 <= __GNUC_MINOR__) \
                     : __GNUC__) \
                 || (__ia64 && (61200 <= __HP_cc || 61200 <= __HP_aCC)) \
                 || __ICC || 0x590 <= __SUNPRO_C || 0x0600 <= __xlC__ \
                 || 1300 <= _MSC_VER)
              struct alignas_test { char c; char alignas (8) alignas_8; };
              char test_alignas[offsetof (struct alignas_test, alignas_8) == 8
                                ? 1 : -1];
            #endif
          ]])],
       [gl_cv_header_working_stdalign_h=yes],
       [gl_cv_header_working_stdalign_h=no])])

  if test $gl_cv_header_working_stdalign_h = yes; then
    GL_GENERATE_STDALIGN_H=false
  else
    GL_GENERATE_STDALIGN_H=true
  fi
])
m4trace:m4/stdarg.m4:10: -1- AC_DEFUN([gl_STDARG_H], [
  GL_GENERATE_STDARG_H=false
  NEXT_STDARG_H='<stdarg.h>'
  AC_CACHE_CHECK([for va_copy],
    [gl_cv_func_va_copy],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdarg.h>]],
          [[
#ifndef va_copy
void (*func) (va_list, va_list) = va_copy;
#endif
          ]])],
       [gl_cv_func_va_copy=yes],
       [gl_cv_func_va_copy=no])
    ])
  if test $gl_cv_func_va_copy = no; then
    dnl Provide a substitute.
    dnl Usually a simple definition in <config.h> is enough. Not so on AIX 5
    dnl with some versions of the /usr/vac/bin/cc compiler. It has an <stdarg.h>
    dnl which does '#undef va_copy', leading to a missing va_copy symbol. For
    dnl this platform, we use an <stdarg.h> substitute. But we cannot use this
    dnl approach on other platforms, because <stdarg.h> often defines only
    dnl preprocessor macros and gl_ABSOLUTE_HEADER, gl_CHECK_NEXT_HEADERS do
    dnl not work in this situation.
    AC_EGREP_CPP([vaccine],
      [#if defined _AIX && !defined __GNUC__
        AIX vaccine
       #endif
      ], [gl_aixcc=yes], [gl_aixcc=no])
    if test $gl_aixcc = yes; then
      dnl Provide a substitute <stdarg.h> file.
      GL_GENERATE_STDARG_H=true
      gl_NEXT_HEADERS([stdarg.h])
      dnl Fallback for the case when <stdarg.h> contains only macro definitions.
      if test "$gl_cv_next_stdarg_h" = '""'; then
        gl_cv_next_stdarg_h='"///usr/include/stdarg.h"'
        NEXT_STDARG_H="$gl_cv_next_stdarg_h"
      fi
    else
      dnl Provide a substitute in <config.h>, either __va_copy or as a simple
      dnl assignment.
      gl_CACHE_VAL_SILENT([gl_cv_func___va_copy], [
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <stdarg.h>]],
             [[
#ifndef __va_copy
error, bail out
#endif
             ]])],
          [gl_cv_func___va_copy=yes],
          [gl_cv_func___va_copy=no])])
      if test $gl_cv_func___va_copy = yes; then
        AC_DEFINE([va_copy], [__va_copy],
          [Define as a macro for copying va_list variables.])
      else
        AH_VERBATIM([gl_VA_COPY], [/* A replacement for va_copy, if needed.  */
#define gl_va_copy(a,b) ((a) = (b))])
        AC_DEFINE([va_copy], [gl_va_copy],
          [Define as a macro for copying va_list variables.])
      fi
    fi
  fi
  AC_SUBST([NEXT_STDARG_H])
])
m4trace:m4/stdbool.m4:12: -1- AC_DEFUN([gl_STDBOOL_H], [
  AC_REQUIRE([AC_CHECK_HEADER_STDBOOL])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl On some platforms, <stdbool.h> does not exist or does not conform to C99.
  dnl On Solaris 10 with CC=cc CXX=CC, <stdbool.h> exists but is not usable
  dnl in C++ mode (and no <cstdbool> exists). In this case, we use our
  dnl replacement, also in C mode (for binary compatibility between C and C++).
  if test "$ac_cv_header_stdbool_h" = yes; then
    case "$host_os" in
      solaris*)
        if test -z "$GCC"; then
          GL_GENERATE_STDBOOL_H=true
        else
          GL_GENERATE_STDBOOL_H=false
        fi
        ;;
      *)
        GL_GENERATE_STDBOOL_H=false
        ;;
    esac
  else
    GL_GENERATE_STDBOOL_H=true
  fi

  if test "$ac_cv_type__Bool" = yes; then
    HAVE__BOOL=1
  else
    HAVE__BOOL=0
  fi
  AC_SUBST([HAVE__BOOL])
])
m4trace:m4/stdbool.m4:48: -1- AC_DEFUN([AC_CHECK_HEADER_STDBOOL], [AC_CACHE_CHECK([for stdbool.h that conforms to C99],
     [ac_cv_header_stdbool_h],
     [AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM(
           [[
             #include <stdbool.h>

             #ifdef __cplusplus
              typedef bool Bool;
             #else
              typedef _Bool Bool;
              #ifndef bool
               "error: bool is not defined"
              #endif
              #ifndef false
               "error: false is not defined"
              #endif
              #if false
               "error: false is not 0"
              #endif
              #ifndef true
               "error: true is not defined"
              #endif
              #if true != 1
               "error: true is not 1"
              #endif
             #endif

             #ifndef __bool_true_false_are_defined
              "error: __bool_true_false_are_defined is not defined"
             #endif

             struct s { Bool s: 1; Bool t; bool u: 1; bool v; } s;

             char a[true == 1 ? 1 : -1];
             char b[false == 0 ? 1 : -1];
             char c[__bool_true_false_are_defined == 1 ? 1 : -1];
             char d[(bool) 0.5 == true ? 1 : -1];
             /* See body of main program for 'e'.  */
             char f[(Bool) 0.0 == false ? 1 : -1];
             char g[true];
             char h[sizeof (Bool)];
             char i[sizeof s.t];
             enum { j = false, k = true, l = false * true, m = true * 256 };
             /* The following fails for
                HP aC++/ANSI C B3910B A.05.55 [Dec 04 2003]. */
             Bool n[m];
             char o[sizeof n == m * sizeof n[0] ? 1 : -1];
             char p[-1 - (Bool) 0 < 0 && -1 - (bool) 0 < 0 ? 1 : -1];
             /* Catch a bug in an HP-UX C compiler.  See
                https://gcc.gnu.org/ml/gcc-patches/2003-12/msg02303.html
                https://lists.gnu.org/r/bug-coreutils/2005-11/msg00161.html
              */
             Bool q = true;
             Bool *pq = &q;
             bool *qq = &q;
           ]],
           [[
             bool e = &s;
             *pq |= q; *pq |= ! q;
             *qq |= q; *qq |= ! q;
             /* Refer to every declared value, to avoid compiler optimizations.  */
             return (!a + !b + !c + !d + !e + !f + !g + !h + !i + !!j + !k + !!l
                     + !m + !n + !o + !p + !q + !pq + !qq);
           ]])],
        [ac_cv_header_stdbool_h=yes],
        [ac_cv_header_stdbool_h=no])])
   AC_CHECK_TYPES([_Bool])
])
m4trace:m4/stddef_h.m4:9: -1- AC_DEFUN_ONCE([gl_STDDEF_H], [
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
  AC_REQUIRE([gt_TYPE_WCHAR_T])

  dnl Persuade OpenBSD <stddef.h> to declare max_align_t.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  GL_GENERATE_STDDEF_H=false

  dnl Test whether the type max_align_t exists and whether its alignment
  dnl "is as great as is supported by the implementation in all contexts".
  AC_CACHE_CHECK([for good max_align_t],
    [gl_cv_type_max_align_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stddef.h>
            unsigned int s = sizeof (max_align_t);
            #if defined __GNUC__ || defined __clang__ || defined __IBM__ALIGNOF__
            int check1[2 * (__alignof__ (double) <= __alignof__ (max_align_t)) - 1];
            int check2[2 * (__alignof__ (long double) <= __alignof__ (max_align_t)) - 1];
            #endif
            typedef struct { char a; max_align_t b; } max_helper;
            typedef struct { char a; long b; } long_helper;
            typedef struct { char a; double b; } double_helper;
            typedef struct { char a; long double b; } long_double_helper;
            int check3[2 * (offsetof (long_helper, b) <= offsetof (max_helper, b)) - 1];
            int check4[2 * (offsetof (double_helper, b) <= offsetof (max_helper, b)) - 1];
            int check5[2 * (offsetof (long_double_helper, b) <= offsetof (max_helper, b)) - 1];
          ]])],
       [gl_cv_type_max_align_t=yes],
       [gl_cv_type_max_align_t=no])
    ])
  if test $gl_cv_type_max_align_t = no; then
    HAVE_MAX_ALIGN_T=0
    GL_GENERATE_STDDEF_H=true
  fi

  if test $gt_cv_c_wchar_t = no; then
    HAVE_WCHAR_T=0
    GL_GENERATE_STDDEF_H=true
  fi

  AC_CACHE_CHECK([whether NULL can be used in arbitrary expressions],
    [gl_cv_decl_null_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stddef.h>
      int test[2 * (sizeof NULL == sizeof (void *)) -1];
]])],
      [gl_cv_decl_null_works=yes],
      [gl_cv_decl_null_works=no])])
  if test $gl_cv_decl_null_works = no; then
    REPLACE_NULL=1
    GL_GENERATE_STDDEF_H=true
  fi

  if $GL_GENERATE_STDDEF_H; then
    gl_NEXT_HEADERS([stddef.h])
  fi
])
m4trace:m4/stddef_h.m4:73: -1- AC_DEFUN([gl_STDDEF_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/stddef_h.m4:83: -1- AC_DEFUN([gl_STDDEF_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDDEF_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDDEF_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
])
m4trace:m4/stddef_h.m4:91: -1- AC_DEFUN([gl_STDDEF_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  REPLACE_NULL=0;                AC_SUBST([REPLACE_NULL])
  HAVE_MAX_ALIGN_T=1;            AC_SUBST([HAVE_MAX_ALIGN_T])
  HAVE_WCHAR_T=1;                AC_SUBST([HAVE_WCHAR_T])
])
m4trace:m4/stdint.m4:12: -1- AC_DEFUN_ONCE([gl_STDINT_H], [
  AC_PREREQ([2.59])dnl
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_REQUIRE([gl_LIMITS_H])
  AC_REQUIRE([gt_TYPE_WINT_T])

  dnl For backward compatibility. Some packages may still be testing these
  dnl macros.
  AC_DEFINE([HAVE_LONG_LONG_INT], [1],
    [Define to 1 if the system has the type 'long long int'.])
  AC_DEFINE([HAVE_UNSIGNED_LONG_LONG_INT], [1],
    [Define to 1 if the system has the type 'unsigned long long int'.])

  dnl Check for <wchar.h>, in the same way as gl_WCHAR_H does.
  AC_CHECK_HEADERS_ONCE([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  dnl Check for <inttypes.h>.
  AC_CHECK_HEADERS_ONCE([inttypes.h])
  if test $ac_cv_header_inttypes_h = yes; then
    HAVE_INTTYPES_H=1
  else
    HAVE_INTTYPES_H=0
  fi
  AC_SUBST([HAVE_INTTYPES_H])

  dnl Check for <sys/types.h>.
  AC_CHECK_HEADERS_ONCE([sys/types.h])
  if test $ac_cv_header_sys_types_h = yes; then
    HAVE_SYS_TYPES_H=1
  else
    HAVE_SYS_TYPES_H=0
  fi
  AC_SUBST([HAVE_SYS_TYPES_H])

  gl_CHECK_NEXT_HEADERS([stdint.h])
  if test $ac_cv_header_stdint_h = yes; then
    HAVE_STDINT_H=1
  else
    HAVE_STDINT_H=0
  fi
  AC_SUBST([HAVE_STDINT_H])

  dnl Now see whether we need a substitute <stdint.h>.
  if test $ac_cv_header_stdint_h = yes; then
    AC_CACHE_CHECK([whether stdint.h conforms to C99],
      [gl_cv_header_working_stdint_h],
      [gl_cv_header_working_stdint_h=no
       AC_COMPILE_IFELSE([
         AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#define __STDC_CONSTANT_MACROS 1
#define __STDC_LIMIT_MACROS 1
#include <stdint.h>
/* Dragonfly defines WCHAR_MIN, WCHAR_MAX only in <wchar.h>.  */
#if !(defined WCHAR_MIN && defined WCHAR_MAX)
#error "WCHAR_MIN, WCHAR_MAX not defined in <stdint.h>"
#endif
]
gl_STDINT_INCLUDES
[
#ifdef INT8_MAX
int8_t a1 = INT8_MAX;
int8_t a1min = INT8_MIN;
#endif
#ifdef INT16_MAX
int16_t a2 = INT16_MAX;
int16_t a2min = INT16_MIN;
#endif
#ifdef INT32_MAX
int32_t a3 = INT32_MAX;
int32_t a3min = INT32_MIN;
#endif
#ifdef INT64_MAX
int64_t a4 = INT64_MAX;
int64_t a4min = INT64_MIN;
#endif
#ifdef UINT8_MAX
uint8_t b1 = UINT8_MAX;
#else
typedef int b1[(unsigned char) -1 != 255 ? 1 : -1];
#endif
#ifdef UINT16_MAX
uint16_t b2 = UINT16_MAX;
#endif
#ifdef UINT32_MAX
uint32_t b3 = UINT32_MAX;
#endif
#ifdef UINT64_MAX
uint64_t b4 = UINT64_MAX;
#endif
int_least8_t c1 = INT8_C (0x7f);
int_least8_t c1max = INT_LEAST8_MAX;
int_least8_t c1min = INT_LEAST8_MIN;
int_least16_t c2 = INT16_C (0x7fff);
int_least16_t c2max = INT_LEAST16_MAX;
int_least16_t c2min = INT_LEAST16_MIN;
int_least32_t c3 = INT32_C (0x7fffffff);
int_least32_t c3max = INT_LEAST32_MAX;
int_least32_t c3min = INT_LEAST32_MIN;
int_least64_t c4 = INT64_C (0x7fffffffffffffff);
int_least64_t c4max = INT_LEAST64_MAX;
int_least64_t c4min = INT_LEAST64_MIN;
uint_least8_t d1 = UINT8_C (0xff);
uint_least8_t d1max = UINT_LEAST8_MAX;
uint_least16_t d2 = UINT16_C (0xffff);
uint_least16_t d2max = UINT_LEAST16_MAX;
uint_least32_t d3 = UINT32_C (0xffffffff);
uint_least32_t d3max = UINT_LEAST32_MAX;
uint_least64_t d4 = UINT64_C (0xffffffffffffffff);
uint_least64_t d4max = UINT_LEAST64_MAX;
int_fast8_t e1 = INT_FAST8_MAX;
int_fast8_t e1min = INT_FAST8_MIN;
int_fast16_t e2 = INT_FAST16_MAX;
int_fast16_t e2min = INT_FAST16_MIN;
int_fast32_t e3 = INT_FAST32_MAX;
int_fast32_t e3min = INT_FAST32_MIN;
int_fast64_t e4 = INT_FAST64_MAX;
int_fast64_t e4min = INT_FAST64_MIN;
uint_fast8_t f1 = UINT_FAST8_MAX;
uint_fast16_t f2 = UINT_FAST16_MAX;
uint_fast32_t f3 = UINT_FAST32_MAX;
uint_fast64_t f4 = UINT_FAST64_MAX;
#ifdef INTPTR_MAX
intptr_t g = INTPTR_MAX;
intptr_t gmin = INTPTR_MIN;
#endif
#ifdef UINTPTR_MAX
uintptr_t h = UINTPTR_MAX;
#endif
intmax_t i = INTMAX_MAX;
uintmax_t j = UINTMAX_MAX;

/* Check that SIZE_MAX has the correct type, if possible.  */
#if 201112 <= __STDC_VERSION__
int k = _Generic (SIZE_MAX, size_t: 0);
#elif (2 <= __GNUC__ || 4 <= __clang_major__ || defined __IBM__TYPEOF__ \
       || (0x5110 <= __SUNPRO_C && !__STDC__))
extern size_t k;
extern __typeof__ (SIZE_MAX) k;
#endif

#include <limits.h> /* for CHAR_BIT */
#define TYPE_MINIMUM(t) \
  ((t) ((t) 0 < (t) -1 ? (t) 0 : ~ TYPE_MAXIMUM (t)))
#define TYPE_MAXIMUM(t) \
  ((t) ((t) 0 < (t) -1 \
        ? (t) -1 \
        : ((((t) 1 << (sizeof (t) * CHAR_BIT - 2)) - 1) * 2 + 1)))
struct s {
  int check_PTRDIFF:
      PTRDIFF_MIN == TYPE_MINIMUM (ptrdiff_t)
      && PTRDIFF_MAX == TYPE_MAXIMUM (ptrdiff_t)
      ? 1 : -1;
  /* Detect bug in FreeBSD 6.0/ia64 and FreeBSD 13.0/arm64.  */
  int check_SIG_ATOMIC:
      SIG_ATOMIC_MIN == TYPE_MINIMUM (sig_atomic_t)
      && SIG_ATOMIC_MAX == TYPE_MAXIMUM (sig_atomic_t)
      ? 1 : -1;
  int check_SIZE: SIZE_MAX == TYPE_MAXIMUM (size_t) ? 1 : -1;
  int check_WCHAR:
      WCHAR_MIN == TYPE_MINIMUM (wchar_t)
      && WCHAR_MAX == TYPE_MAXIMUM (wchar_t)
      ? 1 : -1;
  /* Detect bug in mingw.  */
  int check_WINT:
      WINT_MIN == TYPE_MINIMUM (wint_t)
      && WINT_MAX == TYPE_MAXIMUM (wint_t)
      ? 1 : -1;

  /* Detect bugs in glibc 2.4 and Solaris 10 stdint.h, among others.  */
  int check_UINT8_C:
        (-1 < UINT8_C (0)) == (-1 < (uint_least8_t) 0) ? 1 : -1;
  int check_UINT16_C:
        (-1 < UINT16_C (0)) == (-1 < (uint_least16_t) 0) ? 1 : -1;

  /* Detect bugs in OpenBSD 3.9 stdint.h.  */
#ifdef UINT8_MAX
  int check_uint8: (uint8_t) -1 == UINT8_MAX ? 1 : -1;
#endif
#ifdef UINT16_MAX
  int check_uint16: (uint16_t) -1 == UINT16_MAX ? 1 : -1;
#endif
#ifdef UINT32_MAX
  int check_uint32: (uint32_t) -1 == UINT32_MAX ? 1 : -1;
#endif
#ifdef UINT64_MAX
  int check_uint64: (uint64_t) -1 == UINT64_MAX ? 1 : -1;
#endif
  int check_uint_least8: (uint_least8_t) -1 == UINT_LEAST8_MAX ? 1 : -1;
  int check_uint_least16: (uint_least16_t) -1 == UINT_LEAST16_MAX ? 1 : -1;
  int check_uint_least32: (uint_least32_t) -1 == UINT_LEAST32_MAX ? 1 : -1;
  int check_uint_least64: (uint_least64_t) -1 == UINT_LEAST64_MAX ? 1 : -1;
  int check_uint_fast8: (uint_fast8_t) -1 == UINT_FAST8_MAX ? 1 : -1;
  int check_uint_fast16: (uint_fast16_t) -1 == UINT_FAST16_MAX ? 1 : -1;
  int check_uint_fast32: (uint_fast32_t) -1 == UINT_FAST32_MAX ? 1 : -1;
  int check_uint_fast64: (uint_fast64_t) -1 == UINT_FAST64_MAX ? 1 : -1;
  int check_uintptr: (uintptr_t) -1 == UINTPTR_MAX ? 1 : -1;
  int check_uintmax: (uintmax_t) -1 == UINTMAX_MAX ? 1 : -1;
  int check_size: (size_t) -1 == SIZE_MAX ? 1 : -1;
};
         ]])],
         [dnl Determine whether the various *_MIN, *_MAX macros are usable
          dnl in preprocessor expression. We could do it by compiling a test
          dnl program for each of these macros. It is faster to run a program
          dnl that inspects the macro expansion.
          dnl This detects a bug on HP-UX 11.23/ia64.
          AC_RUN_IFELSE([
            AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#define __STDC_CONSTANT_MACROS 1
#define __STDC_LIMIT_MACROS 1
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
#include <stdio.h>
#include <string.h>
#define MVAL(macro) MVAL1(macro)
#define MVAL1(expression) #expression
static const char *macro_values[] =
  {
#ifdef INT8_MAX
    MVAL (INT8_MAX),
#endif
#ifdef INT16_MAX
    MVAL (INT16_MAX),
#endif
#ifdef INT32_MAX
    MVAL (INT32_MAX),
#endif
#ifdef INT64_MAX
    MVAL (INT64_MAX),
#endif
#ifdef UINT8_MAX
    MVAL (UINT8_MAX),
#endif
#ifdef UINT16_MAX
    MVAL (UINT16_MAX),
#endif
#ifdef UINT32_MAX
    MVAL (UINT32_MAX),
#endif
#ifdef UINT64_MAX
    MVAL (UINT64_MAX),
#endif
    NULL
  };
]], [[
  const char **mv;
  for (mv = macro_values; *mv != NULL; mv++)
    {
      const char *value = *mv;
      /* Test whether it looks like a cast expression.  */
      if (strncmp (value, "((unsigned int)"/*)*/, 15) == 0
          || strncmp (value, "((unsigned short)"/*)*/, 17) == 0
          || strncmp (value, "((unsigned char)"/*)*/, 16) == 0
          || strncmp (value, "((int)"/*)*/, 6) == 0
          || strncmp (value, "((signed short)"/*)*/, 15) == 0
          || strncmp (value, "((signed char)"/*)*/, 14) == 0)
        return mv - macro_values + 1;
    }
  return 0;
]])],
              [gl_cv_header_working_stdint_h=yes],
              [],
              [case "$host_os" in
                         # Guess yes on native Windows.
                 mingw*) gl_cv_header_working_stdint_h="guessing yes" ;;
                         # In general, assume it works.
                 *)      gl_cv_header_working_stdint_h="guessing yes" ;;
               esac
              ])
         ])
      ])
  fi

  HAVE_C99_STDINT_H=0
  HAVE_SYS_BITYPES_H=0
  HAVE_SYS_INTTYPES_H=0
  GL_GENERATE_STDINT_H=true
  case "$gl_cv_header_working_stdint_h" in
    *yes)
      HAVE_C99_STDINT_H=1
      dnl Now see whether the system <stdint.h> works without
      dnl __STDC_CONSTANT_MACROS/__STDC_LIMIT_MACROS defined.
      dnl If not, there would be problems when stdint.h is included from C++.
      AC_CACHE_CHECK([whether stdint.h works without ISO C predefines],
        [gl_cv_header_stdint_without_STDC_macros],
        [gl_cv_header_stdint_without_STDC_macros=no
         AC_COMPILE_IFELSE([
           AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
intmax_t im = INTMAX_MAX;
int32_t i32 = INT32_C (0x7fffffff);
           ]])],
           [gl_cv_header_stdint_without_STDC_macros=yes])
        ])

      if test $gl_cv_header_stdint_without_STDC_macros = no; then
        AC_DEFINE([__STDC_CONSTANT_MACROS], [1],
          [Define to 1 if the system <stdint.h> predates C++11.])
        AC_DEFINE([__STDC_LIMIT_MACROS], [1],
          [Define to 1 if the system <stdint.h> predates C++11.])
      fi
      AC_CACHE_CHECK([whether stdint.h has UINTMAX_WIDTH etc.],
        [gl_cv_header_stdint_width],
        [gl_cv_header_stdint_width=no
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
              /* Work if build is not clean.  */
              #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1
              #ifndef __STDC_WANT_IEC_60559_BFP_EXT__
               #define __STDC_WANT_IEC_60559_BFP_EXT__ 1
              #endif
              #include <stdint.h>
              ]gl_STDINT_INCLUDES[
              int iw = UINTMAX_WIDTH;
              ]])],
           [gl_cv_header_stdint_width=yes])])
      if test "$gl_cv_header_stdint_width" = yes; then
        GL_GENERATE_STDINT_H=false
      fi
      ;;
    *)
      dnl Check for <sys/inttypes.h>, and for
      dnl <sys/bitypes.h> (used in Linux libc4 >= 4.6.7 and libc5).
      AC_CHECK_HEADERS([sys/inttypes.h sys/bitypes.h])
      if test $ac_cv_header_sys_inttypes_h = yes; then
        HAVE_SYS_INTTYPES_H=1
      fi
      if test $ac_cv_header_sys_bitypes_h = yes; then
        HAVE_SYS_BITYPES_H=1
      fi
      gl_STDINT_TYPE_PROPERTIES
      ;;
  esac

  dnl The substitute stdint.h needs the substitute limit.h's _GL_INTEGER_WIDTH.
  gl_REPLACE_LIMITS_H

  AC_SUBST([HAVE_C99_STDINT_H])
  AC_SUBST([HAVE_SYS_BITYPES_H])
  AC_SUBST([HAVE_SYS_INTTYPES_H])
])
m4trace:m4/stdint.m4:371: -1- AC_DEFUN([gl_STDINT_BITSIZEOF], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to the number of bits in type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for bit size of $gltype], [gl_cv_bitsizeof_${gltype}],
      [AC_COMPUTE_INT([result], [sizeof ($gltype) * CHAR_BIT],
         [$2
#include <limits.h>], [result=unknown])
       eval gl_cv_bitsizeof_${gltype}=\$result
      ])
    eval result=\$gl_cv_bitsizeof_${gltype}
    if test $result = unknown; then
      dnl Use a nonempty default, because some compilers, such as IRIX 5 cc,
      dnl do a syntax check even on unused #if conditions and give an error
      dnl on valid C code like this:
      dnl   #if 0
      dnl   # if  > 32
      dnl   # endif
      dnl   #endif
      result=0
    fi
    GLTYPE=`echo "$gltype" | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    AC_DEFINE_UNQUOTED([BITSIZEOF_${GLTYPE}], [$result])
    eval BITSIZEOF_${GLTYPE}=\$result
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:409: -1- AC_DEFUN([gl_CHECK_TYPES_SIGNED], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to 1 if ']gltype[' is a signed integer type.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([whether $gltype is signed], [gl_cv_type_${gltype}_signed],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([$2[
            int verify[2 * (($gltype) -1 < ($gltype) 0) - 1];]])],
         result=yes, result=no)
       eval gl_cv_type_${gltype}_signed=\$result
      ])
    eval result=\$gl_cv_type_${gltype}_signed
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    if test "$result" = yes; then
      AC_DEFINE_UNQUOTED([HAVE_SIGNED_${GLTYPE}], [1])
      eval HAVE_SIGNED_${GLTYPE}=1
    else
      eval HAVE_SIGNED_${GLTYPE}=0
    fi
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:442: -1- AC_DEFUN([gl_INTEGER_TYPE_SUFFIX], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX],
       [Define to l, ll, u, ul, ull, etc., as suitable for
        constants of type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for $gltype integer literal suffix],
      [gl_cv_type_${gltype}_suffix],
      [eval gl_cv_type_${gltype}_suffix=no
       eval result=\$gl_cv_type_${gltype}_signed
       if test "$result" = yes; then
         glsufu=
       else
         glsufu=u
       fi
       for glsuf in "$glsufu" ${glsufu}l ${glsufu}ll ${glsufu}i64; do
         case $glsuf in
           '')  gltype1='int';;
           l)   gltype1='long int';;
           ll)  gltype1='long long int';;
           i64) gltype1='__int64';;
           u)   gltype1='unsigned int';;
           ul)  gltype1='unsigned long int';;
           ull) gltype1='unsigned long long int';;
           ui64)gltype1='unsigned __int64';;
         esac
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([$2[
              extern $gltype foo;
              extern $gltype1 foo;]])],
           [eval gl_cv_type_${gltype}_suffix=\$glsuf])
         eval result=\$gl_cv_type_${gltype}_suffix
         test "$result" != no && break
       done])
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    eval result=\$gl_cv_type_${gltype}_suffix
    test "$result" = no && result=
    eval ${GLTYPE}_SUFFIX=\$result
    AC_DEFINE_UNQUOTED([${GLTYPE}_SUFFIX], [$result])
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX])])
])
m4trace:m4/stdint.m4:492: -1- AC_DEFUN([gl_STDINT_INCLUDES], [[
  #include <stddef.h>
  #include <signal.h>
  #if HAVE_WCHAR_H
  # include <wchar.h>
  #endif
]])
m4trace:m4/stdint.m4:504: -1- AC_DEFUN([gl_STDINT_TYPE_PROPERTIES], [
  AC_REQUIRE([gl_MULTIARCH])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_STDINT_BITSIZEOF([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_cv_type_ptrdiff_t_signed=yes
  gl_cv_type_size_t_signed=no
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])

  dnl If wint_t is smaller than 'int', it cannot satisfy the ISO C 99
  dnl requirement that wint_t is "unchanged by default argument promotions".
  dnl In this case gnulib's <wchar.h> and <wctype.h> override wint_t.
  dnl Set the variable BITSIZEOF_WINT_T accordingly.
  if test $GNULIBHEADERS_OVERRIDE_WINT_T = 1; then
    BITSIZEOF_WINT_T=32
  fi
])
m4trace:m4/stdint_h.m4:12: -1- AC_DEFUN([gl_AC_HEADER_STDINT_H], [
  AC_CACHE_CHECK([for stdint.h], [gl_cv_header_stdint_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
            #include <stdint.h>]],
          [[uintmax_t i = (uintmax_t) -1; return !i;]])],
       [gl_cv_header_stdint_h=yes],
       [gl_cv_header_stdint_h=no])])
  if test $gl_cv_header_stdint_h = yes; then
    AC_DEFINE_UNQUOTED([HAVE_STDINT_H_WITH_UINTMAX], [1],
      [Define if <stdint.h> exists, doesn't clash with <sys/types.h>,
       and declares uintmax_t. ])
  fi
])
m4trace:m4/stdio_h.m4:7: -1- AC_DEFUN_ONCE([gl_STDIO_H], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AH_VERBATIM([MINGW_ANSI_STDIO],
[/* Use GNU style printf and scanf.  */
#ifndef __USE_MINGW_ANSI_STDIO
# undef __USE_MINGW_ANSI_STDIO
#endif
])
  AC_DEFINE([__USE_MINGW_ANSI_STDIO])
  gl_NEXT_HEADERS([stdio.h])

  dnl Determine whether __USE_MINGW_ANSI_STDIO makes printf and
  dnl inttypes.h behave like gnu instead of system; we must give our
  dnl printf wrapper the right attribute to match.
  AC_CACHE_CHECK([which flavor of printf attribute matches inttypes macros],
    [gl_cv_func_printf_attribute_flavor],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
       #define __STDC_FORMAT_MACROS 1
       #include <stdio.h>
       #include <inttypes.h>
       /* For non-mingw systems, compilation will trivially succeed.
          For mingw, compilation will succeed for older mingw (system
          printf, "I64d") and fail for newer mingw (gnu printf, "lld"). */
       #if (defined _WIN32 && ! defined __CYGWIN__) && \
         (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 4))
       extern char PRIdMAX_probe[sizeof PRIdMAX == sizeof "I64d" ? 1 : -1];
       #endif
      ]])], [gl_cv_func_printf_attribute_flavor=system],
      [gl_cv_func_printf_attribute_flavor=gnu])])
  if test "$gl_cv_func_printf_attribute_flavor" = gnu; then
    AC_DEFINE([GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU], [1],
      [Define to 1 if printf and friends should be labeled with
       attribute "__gnu_printf__" instead of "__printf__"])
  fi

  dnl This ifdef is an optimization, to avoid performing a configure check whose
  dnl result is not used. But it does not make the test of
  dnl GNULIB_STDIO_H_NONBLOCKING or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_READ_FUNCS=1
    fi
  ])

  dnl This ifdef is an optimization, to avoid performing a configure check whose
  dnl result is not used. But it does not make the test of
  dnl GNULIB_STDIO_H_SIGPIPE or GNULIB_SIGPIPE redundant.
  m4_ifdef([gl_SIGNAL_SIGPIPE], [
    gl_SIGNAL_SIGPIPE
    if test $gl_cv_header_signal_h_SIGPIPE != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
    fi
  ])
  dnl This ifdef is an optimization, to avoid performing a configure check whose
  dnl result is not used. But it does not make the test of
  dnl GNULIB_STDIO_H_NONBLOCKING or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
    fi
  ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by both C89 and C11.
  gl_WARN_ON_USE_PREPARE([[#include <stdio.h>
    ]], [dprintf fpurge fseeko ftello getdelim getline gets pclose popen
    renameat snprintf tmpfile vdprintf vsnprintf])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([fcloseall])
  if test $ac_cv_have_decl_fcloseall = no; then
    HAVE_DECL_FCLOSEALL=0
  fi
])
m4trace:m4/stdio_h.m4:91: -1- AC_DEFUN([gl_STDIO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDIO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdio_h.m4:103: -1- AC_DEFUN([gl_STDIO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDIO_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFLUSH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPURGE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEKO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELLO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FWRITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCHAR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDELIM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLINE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PERROR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTCHAR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMOVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAMEAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TMPFILE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSPRINTF_POSIX])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCLOSEALL], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FDOPEN], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FILENO], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETW], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTW], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TEMPNAM], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDIO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
])
m4trace:m4/stdio_h.m4:172: -1- AC_DEFUN([gl_STDIO_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_FCLOSEALL=1;         AC_SUBST([HAVE_DECL_FCLOSEALL])
  HAVE_DECL_FPURGE=1;            AC_SUBST([HAVE_DECL_FPURGE])
  HAVE_DECL_FSEEKO=1;            AC_SUBST([HAVE_DECL_FSEEKO])
  HAVE_DECL_FTELLO=1;            AC_SUBST([HAVE_DECL_FTELLO])
  HAVE_DECL_GETDELIM=1;          AC_SUBST([HAVE_DECL_GETDELIM])
  HAVE_DECL_GETLINE=1;           AC_SUBST([HAVE_DECL_GETLINE])
  HAVE_DECL_OBSTACK_PRINTF=1;    AC_SUBST([HAVE_DECL_OBSTACK_PRINTF])
  HAVE_DECL_SNPRINTF=1;          AC_SUBST([HAVE_DECL_SNPRINTF])
  HAVE_DECL_VSNPRINTF=1;         AC_SUBST([HAVE_DECL_VSNPRINTF])
  HAVE_DPRINTF=1;                AC_SUBST([HAVE_DPRINTF])
  HAVE_FSEEKO=1;                 AC_SUBST([HAVE_FSEEKO])
  HAVE_FTELLO=1;                 AC_SUBST([HAVE_FTELLO])
  HAVE_PCLOSE=1;                 AC_SUBST([HAVE_PCLOSE])
  HAVE_POPEN=1;                  AC_SUBST([HAVE_POPEN])
  HAVE_RENAMEAT=1;               AC_SUBST([HAVE_RENAMEAT])
  HAVE_VASPRINTF=1;              AC_SUBST([HAVE_VASPRINTF])
  HAVE_VDPRINTF=1;               AC_SUBST([HAVE_VDPRINTF])
  REPLACE_DPRINTF=0;             AC_SUBST([REPLACE_DPRINTF])
  REPLACE_FCLOSE=0;              AC_SUBST([REPLACE_FCLOSE])
  REPLACE_FDOPEN=0;              AC_SUBST([REPLACE_FDOPEN])
  REPLACE_FFLUSH=0;              AC_SUBST([REPLACE_FFLUSH])
  REPLACE_FOPEN=0;               AC_SUBST([REPLACE_FOPEN])
  REPLACE_FOPEN_FOR_FOPEN_GNU=0; AC_SUBST([REPLACE_FOPEN_FOR_FOPEN_GNU])
  REPLACE_FPRINTF=0;             AC_SUBST([REPLACE_FPRINTF])
  REPLACE_FPURGE=0;              AC_SUBST([REPLACE_FPURGE])
  REPLACE_FREOPEN=0;             AC_SUBST([REPLACE_FREOPEN])
  REPLACE_FSEEK=0;               AC_SUBST([REPLACE_FSEEK])
  REPLACE_FSEEKO=0;              AC_SUBST([REPLACE_FSEEKO])
  REPLACE_FTELL=0;               AC_SUBST([REPLACE_FTELL])
  REPLACE_FTELLO=0;              AC_SUBST([REPLACE_FTELLO])
  REPLACE_GETDELIM=0;            AC_SUBST([REPLACE_GETDELIM])
  REPLACE_GETLINE=0;             AC_SUBST([REPLACE_GETLINE])
  REPLACE_OBSTACK_PRINTF=0;      AC_SUBST([REPLACE_OBSTACK_PRINTF])
  REPLACE_PERROR=0;              AC_SUBST([REPLACE_PERROR])
  REPLACE_POPEN=0;               AC_SUBST([REPLACE_POPEN])
  REPLACE_PRINTF=0;              AC_SUBST([REPLACE_PRINTF])
  REPLACE_REMOVE=0;              AC_SUBST([REPLACE_REMOVE])
  REPLACE_RENAME=0;              AC_SUBST([REPLACE_RENAME])
  REPLACE_RENAMEAT=0;            AC_SUBST([REPLACE_RENAMEAT])
  REPLACE_SNPRINTF=0;            AC_SUBST([REPLACE_SNPRINTF])
  REPLACE_SPRINTF=0;             AC_SUBST([REPLACE_SPRINTF])
  REPLACE_STDIO_READ_FUNCS=0;    AC_SUBST([REPLACE_STDIO_READ_FUNCS])
  REPLACE_STDIO_WRITE_FUNCS=0;   AC_SUBST([REPLACE_STDIO_WRITE_FUNCS])
  REPLACE_TMPFILE=0;             AC_SUBST([REPLACE_TMPFILE])
  REPLACE_VASPRINTF=0;           AC_SUBST([REPLACE_VASPRINTF])
  REPLACE_VDPRINTF=0;            AC_SUBST([REPLACE_VDPRINTF])
  REPLACE_VFPRINTF=0;            AC_SUBST([REPLACE_VFPRINTF])
  REPLACE_VPRINTF=0;             AC_SUBST([REPLACE_VPRINTF])
  REPLACE_VSNPRINTF=0;           AC_SUBST([REPLACE_VSNPRINTF])
  REPLACE_VSPRINTF=0;            AC_SUBST([REPLACE_VSPRINTF])
])
m4trace:m4/stdlib_h.m4:7: -1- AC_DEFUN_ONCE([gl_STDLIB_H], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  gl_NEXT_HEADERS([stdlib.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <stdlib.h>
#if HAVE_SYS_LOADAVG_H
/* OpenIndiana has a bug: <sys/time.h> must be included before
   <sys/loadavg.h>.  */
# include <sys/time.h>
# include <sys/loadavg.h>
#endif
#if HAVE_RANDOM_H
# include <random.h>
#endif
    ]], [_Exit aligned_alloc atoll canonicalize_file_name free
    getloadavg getsubopt grantpt
    initstate initstate_r mbtowc mkdtemp mkostemp mkostemps mkstemp mkstemps
    posix_memalign posix_openpt ptsname ptsname_r qsort_r
    random random_r reallocarray realpath rpmatch secure_getenv setenv
    setstate setstate_r srandom srandom_r
    strtod strtol strtold strtoll strtoul strtoull unlockpt unsetenv])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([ecvt])
  if test $ac_cv_have_decl_ecvt = no; then
    HAVE_DECL_ECVT=0
  fi
  AC_CHECK_DECLS_ONCE([fcvt])
  if test $ac_cv_have_decl_fcvt = no; then
    HAVE_DECL_FCVT=0
  fi
  AC_CHECK_DECLS_ONCE([gcvt])
  if test $ac_cv_have_decl_gcvt = no; then
    HAVE_DECL_GCVT=0
  fi
])
m4trace:m4/stdlib_h.m4:53: -1- AC_DEFUN([gl_STDLIB_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdlib_h.m4:65: -1- AC_DEFUN([gl_STDLIB_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDLIB_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB__EXIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALIGNED_ALLOC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CANONICALIZE_FILE_NAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREE_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOADAVG])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSUBOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GRANTPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_MEMALIGN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_OPENPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_QSORT_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOCARRAY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALPATH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RPMATCH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SECURE_GETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOULL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYSTEM_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLOCKPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNSETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOMB])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ECVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GCVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKTEMP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTENV], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDLIB_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
])
m4trace:m4/stdlib_h.m4:122: -1- AC_DEFUN([gl_STDLIB_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE__EXIT=1;              AC_SUBST([HAVE__EXIT])
  HAVE_ALIGNED_ALLOC=1;      AC_SUBST([HAVE_ALIGNED_ALLOC])
  HAVE_ATOLL=1;              AC_SUBST([HAVE_ATOLL])
  HAVE_CANONICALIZE_FILE_NAME=1;  AC_SUBST([HAVE_CANONICALIZE_FILE_NAME])
  HAVE_DECL_ECVT=1;          AC_SUBST([HAVE_DECL_ECVT])
  HAVE_DECL_FCVT=1;          AC_SUBST([HAVE_DECL_FCVT])
  HAVE_DECL_GCVT=1;          AC_SUBST([HAVE_DECL_GCVT])
  HAVE_DECL_GETLOADAVG=1;    AC_SUBST([HAVE_DECL_GETLOADAVG])
  HAVE_GETSUBOPT=1;          AC_SUBST([HAVE_GETSUBOPT])
  HAVE_GRANTPT=1;            AC_SUBST([HAVE_GRANTPT])
  HAVE_INITSTATE=1;          AC_SUBST([HAVE_INITSTATE])
  HAVE_DECL_INITSTATE=1;     AC_SUBST([HAVE_DECL_INITSTATE])
  HAVE_MBTOWC=1;             AC_SUBST([HAVE_MBTOWC])
  HAVE_MKDTEMP=1;            AC_SUBST([HAVE_MKDTEMP])
  HAVE_MKOSTEMP=1;           AC_SUBST([HAVE_MKOSTEMP])
  HAVE_MKOSTEMPS=1;          AC_SUBST([HAVE_MKOSTEMPS])
  HAVE_MKSTEMP=1;            AC_SUBST([HAVE_MKSTEMP])
  HAVE_MKSTEMPS=1;           AC_SUBST([HAVE_MKSTEMPS])
  HAVE_POSIX_MEMALIGN=1;     AC_SUBST([HAVE_POSIX_MEMALIGN])
  HAVE_POSIX_OPENPT=1;       AC_SUBST([HAVE_POSIX_OPENPT])
  HAVE_PTSNAME=1;            AC_SUBST([HAVE_PTSNAME])
  HAVE_PTSNAME_R=1;          AC_SUBST([HAVE_PTSNAME_R])
  HAVE_QSORT_R=1;            AC_SUBST([HAVE_QSORT_R])
  HAVE_RANDOM=1;             AC_SUBST([HAVE_RANDOM])
  HAVE_RANDOM_H=1;           AC_SUBST([HAVE_RANDOM_H])
  HAVE_RANDOM_R=1;           AC_SUBST([HAVE_RANDOM_R])
  HAVE_REALLOCARRAY=1;       AC_SUBST([HAVE_REALLOCARRAY])
  HAVE_REALPATH=1;           AC_SUBST([HAVE_REALPATH])
  HAVE_RPMATCH=1;            AC_SUBST([HAVE_RPMATCH])
  HAVE_SECURE_GETENV=1;      AC_SUBST([HAVE_SECURE_GETENV])
  HAVE_SETENV=1;             AC_SUBST([HAVE_SETENV])
  HAVE_DECL_SETENV=1;        AC_SUBST([HAVE_DECL_SETENV])
  HAVE_SETSTATE=1;           AC_SUBST([HAVE_SETSTATE])
  HAVE_DECL_SETSTATE=1;      AC_SUBST([HAVE_DECL_SETSTATE])
  HAVE_STRTOD=1;             AC_SUBST([HAVE_STRTOD])
  HAVE_STRTOL=1;             AC_SUBST([HAVE_STRTOL])
  HAVE_STRTOLD=1;            AC_SUBST([HAVE_STRTOLD])
  HAVE_STRTOLL=1;            AC_SUBST([HAVE_STRTOLL])
  HAVE_STRTOUL=1;            AC_SUBST([HAVE_STRTOUL])
  HAVE_STRTOULL=1;           AC_SUBST([HAVE_STRTOULL])
  HAVE_STRUCT_RANDOM_DATA=1; AC_SUBST([HAVE_STRUCT_RANDOM_DATA])
  HAVE_SYS_LOADAVG_H=0;      AC_SUBST([HAVE_SYS_LOADAVG_H])
  HAVE_UNLOCKPT=1;           AC_SUBST([HAVE_UNLOCKPT])
  HAVE_DECL_UNSETENV=1;      AC_SUBST([HAVE_DECL_UNSETENV])
  REPLACE_ALIGNED_ALLOC=0;   AC_SUBST([REPLACE_ALIGNED_ALLOC])
  REPLACE_CALLOC_FOR_CALLOC_GNU=0;    AC_SUBST([REPLACE_CALLOC_FOR_CALLOC_GNU])
  REPLACE_CALLOC_FOR_CALLOC_POSIX=0;  AC_SUBST([REPLACE_CALLOC_FOR_CALLOC_POSIX])
  REPLACE_CANONICALIZE_FILE_NAME=0;  AC_SUBST([REPLACE_CANONICALIZE_FILE_NAME])
  REPLACE_FREE=0;            AC_SUBST([REPLACE_FREE])
  REPLACE_INITSTATE=0;       AC_SUBST([REPLACE_INITSTATE])
  REPLACE_MALLOC_FOR_MALLOC_GNU=0;    AC_SUBST([REPLACE_MALLOC_FOR_MALLOC_GNU])
  REPLACE_MALLOC_FOR_MALLOC_POSIX=0;  AC_SUBST([REPLACE_MALLOC_FOR_MALLOC_POSIX])
  REPLACE_MBTOWC=0;          AC_SUBST([REPLACE_MBTOWC])
  REPLACE_MKSTEMP=0;         AC_SUBST([REPLACE_MKSTEMP])
  REPLACE_POSIX_MEMALIGN=0;  AC_SUBST([REPLACE_POSIX_MEMALIGN])
  REPLACE_PTSNAME=0;         AC_SUBST([REPLACE_PTSNAME])
  REPLACE_PTSNAME_R=0;       AC_SUBST([REPLACE_PTSNAME_R])
  REPLACE_PUTENV=0;          AC_SUBST([REPLACE_PUTENV])
  REPLACE_QSORT_R=0;         AC_SUBST([REPLACE_QSORT_R])
  REPLACE_RANDOM=0;          AC_SUBST([REPLACE_RANDOM])
  REPLACE_RANDOM_R=0;        AC_SUBST([REPLACE_RANDOM_R])
  REPLACE_REALLOC_FOR_REALLOC_GNU=0;    AC_SUBST([REPLACE_REALLOC_FOR_REALLOC_GNU])
  REPLACE_REALLOC_FOR_REALLOC_POSIX=0;  AC_SUBST([REPLACE_REALLOC_FOR_REALLOC_POSIX])
  REPLACE_REALLOCARRAY=0;    AC_SUBST([REPLACE_REALLOCARRAY])
  REPLACE_REALPATH=0;        AC_SUBST([REPLACE_REALPATH])
  REPLACE_SETENV=0;          AC_SUBST([REPLACE_SETENV])
  REPLACE_SETSTATE=0;        AC_SUBST([REPLACE_SETSTATE])
  REPLACE_STRTOD=0;          AC_SUBST([REPLACE_STRTOD])
  REPLACE_STRTOL=0;          AC_SUBST([REPLACE_STRTOL])
  REPLACE_STRTOLD=0;         AC_SUBST([REPLACE_STRTOLD])
  REPLACE_STRTOLL=0;         AC_SUBST([REPLACE_STRTOLL])
  REPLACE_STRTOUL=0;         AC_SUBST([REPLACE_STRTOUL])
  REPLACE_STRTOULL=0;        AC_SUBST([REPLACE_STRTOULL])
  REPLACE_UNSETENV=0;        AC_SUBST([REPLACE_UNSETENV])
  REPLACE_WCTOMB=0;          AC_SUBST([REPLACE_WCTOMB])
])
m4trace:m4/stpcpy.m4:7: -1- AC_DEFUN([gl_FUNC_STPCPY], [
  dnl Persuade glibc <string.h> to declare stpcpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The stpcpy() declaration in lib/string.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_FUNCS([stpcpy])
  if test $ac_cv_func_stpcpy = no; then
    HAVE_STPCPY=0
  fi
])
m4trace:m4/stpcpy.m4:23: -1- AC_DEFUN([gl_PREREQ_STPCPY], [
  :
])
m4trace:m4/stpncpy.m4:8: -1- AC_DEFUN([gl_FUNC_STPNCPY], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc <string.h> to declare stpncpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The stpncpy() declaration in lib/string.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])

  dnl Both glibc and AIX (4.3.3, 5.1) have an stpncpy() function
  dnl declared in <string.h>. Its side effects are the same as those
  dnl of strncpy():
  dnl      stpncpy (dest, src, n)
  dnl overwrites dest[0..n-1], min(strlen(src),n) bytes coming from src,
  dnl and the remaining bytes being NULs.  However, the return value is
  dnl   in glibc:   dest + min(strlen(src),n)
  dnl   in AIX:     dest + max(0,n-1)
  dnl Only the glibc return value is useful in practice.

  AC_CHECK_DECLS_ONCE([stpncpy])
  AC_CHECK_FUNCS_ONCE([stpncpy])
  if test $ac_cv_func_stpncpy = yes; then
    AC_CACHE_CHECK([for working stpncpy], [gl_cv_func_stpncpy], [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdlib.h>
#include <string.h> /* for strcpy */
/* The stpncpy prototype is missing in <string.h> on AIX 4.  */
#if !HAVE_DECL_STPNCPY
extern
# ifdef __cplusplus
"C"
# endif
char *stpncpy (char *dest, const char *src, size_t n);
#endif
int main ()
{
  int result = 0;
  const char *src = "Hello";
  char dest[10];
  /* AIX 4.3.3 and AIX 5.1 stpncpy() returns dest+1 here.  */
  {
    strcpy (dest, "\377\377\377\377\377\377");
    if (stpncpy (dest, src, 2) != dest + 2)
      result |= 1;
  }
  /* AIX 4.3.3 and AIX 5.1 stpncpy() returns dest+4 here.  */
  {
    strcpy (dest, "\377\377\377\377\377\377");
    if (stpncpy (dest, src, 5) != dest + 5)
      result |= 2;
  }
  /* AIX 4.3.3 and AIX 5.1 stpncpy() returns dest+6 here.  */
  {
    strcpy (dest, "\377\377\377\377\377\377");
    if (stpncpy (dest, src, 7) != dest + 5)
      result |= 4;
  }
  return result;
}
]])],
        [gl_cv_func_stpncpy=yes],
        [gl_cv_func_stpncpy=no],
        [dnl Guess yes on glibc systems and musl systems.
         AC_EGREP_CPP([Thanks for using GNU], [
#include <features.h>
#ifdef __GNU_LIBRARY__
  Thanks for using GNU
#endif
],         [gl_cv_func_stpncpy="guessing yes"],
           [case "$host_os" in
              *-musl*) gl_cv_func_stpncpy="guessing yes" ;;
              *)       gl_cv_func_stpncpy="$gl_cross_guess_normal" ;;
            esac
           ])
        ])
    ])
    case "$gl_cv_func_stpncpy" in
      *yes)
        AC_DEFINE([HAVE_STPNCPY], [1],
          [Define if you have the stpncpy() function and it works.])
        ;;
      *)
        REPLACE_STPNCPY=1
        ;;
    esac
  else
    HAVE_STPNCPY=0
  fi
])
m4trace:m4/stpncpy.m4:103: -1- AC_DEFUN([gl_PREREQ_STPNCPY], [
  :
])
m4trace:m4/strdup.m4:9: -1- AC_DEFUN([gl_FUNC_STRDUP], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([strdup])
  if test $ac_cv_have_decl_strdup = no; then
    HAVE_DECL_STRDUP=0
  fi
])
m4trace:m4/strdup.m4:18: -1- AC_DEFUN([gl_FUNC_STRDUP_POSIX], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_POSIX])
  if test $gl_cv_func_malloc_posix != yes; then
    REPLACE_STRDUP=1
  fi
  AC_CHECK_DECLS_ONCE([strdup])
  if test $ac_cv_have_decl_strdup = no; then
    HAVE_DECL_STRDUP=0
  fi
])
m4trace:m4/strdup.m4:32: -1- AC_DEFUN([gl_PREREQ_STRDUP], [:])
m4trace:m4/strerror.m4:7: -1- AC_DEFUN([gl_FUNC_STRERROR], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  AC_REQUIRE([gl_FUNC_STRERROR_0])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  m4_ifdef([gl_FUNC_STRERROR_R_WORKS], [
    AC_REQUIRE([gl_FUNC_STRERROR_R_WORKS])
  ])
  if test "$GL_GENERATE_ERRNO_H:$REPLACE_STRERROR_0" = false:0; then
    AC_CACHE_CHECK([for working strerror function],
     [gl_cv_func_working_strerror],
     [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <string.h>
           ]],
           [[if (!*strerror (-2)) return 1;]])],
        [gl_cv_func_working_strerror=yes],
        [gl_cv_func_working_strerror=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_working_strerror="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_working_strerror="guessing yes" ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_working_strerror="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
    case "$gl_cv_func_working_strerror" in
      *yes) ;;
      *)
        dnl The system's strerror() fails to return a string for out-of-range
        dnl integers. Replace it.
        REPLACE_STRERROR=1
        ;;
    esac
    m4_ifdef([gl_FUNC_STRERROR_R_WORKS], [
      dnl If the system's strerror_r or __xpg_strerror_r clobbers strerror's
      dnl buffer, we must replace strerror.
      case "$gl_cv_func_strerror_r_works" in
        *no) REPLACE_STRERROR=1 ;;
      esac
    ])
  else
    dnl The system's strerror() cannot know about the new errno values we add
    dnl to <errno.h>, or any fix for strerror(0). Replace it.
    REPLACE_STRERROR=1
  fi
])
m4trace:m4/strerror.m4:60: -1- AC_DEFUN([gl_FUNC_STRERROR_0], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  REPLACE_STRERROR_0=0
  AC_CACHE_CHECK([whether strerror(0) succeeds],
   [gl_cv_func_strerror_0_works],
   [AC_RUN_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <string.h>
           #include <errno.h>
         ]],
         [[int result = 0;
           char *str;
           errno = 0;
           str = strerror (0);
           if (!*str) result |= 1;
           if (errno) result |= 2;
           if (strstr (str, "nknown") || strstr (str, "ndefined"))
             result |= 4;
           return result;]])],
      [gl_cv_func_strerror_0_works=yes],
      [gl_cv_func_strerror_0_works=no],
      [case "$host_os" in
                        # Guess yes on glibc systems.
         *-gnu* | gnu*) gl_cv_func_strerror_0_works="guessing yes" ;;
                        # Guess yes on musl systems.
         *-musl*)       gl_cv_func_strerror_0_works="guessing yes" ;;
                        # Guess yes on native Windows.
         mingw*)        gl_cv_func_strerror_0_works="guessing yes" ;;
                        # If we don't know, obey --enable-cross-guesses.
         *)             gl_cv_func_strerror_0_works="$gl_cross_guess_normal" ;;
       esac
      ])
  ])
  case "$gl_cv_func_strerror_0_works" in
    *yes) ;;
    *)
      REPLACE_STRERROR_0=1
      AC_DEFINE([REPLACE_STRERROR_0], [1], [Define to 1 if strerror(0)
        does not return a message implying success.])
      ;;
  esac
])
m4trace:m4/strerror_r.m4:7: -1- AC_DEFUN([gl_FUNC_STRERROR_R], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_STRERROR_R_WORKS])

  dnl Some systems don't declare strerror_r() if _THREAD_SAFE and _REENTRANT
  dnl are not defined.
  AC_CHECK_DECLS_ONCE([strerror_r])
  if test $ac_cv_have_decl_strerror_r = no; then
    HAVE_DECL_STRERROR_R=0
  fi

  if test $ac_cv_func_strerror_r = yes; then
    if test "$GL_GENERATE_ERRNO_H:$REPLACE_STRERROR_0" = false:0; then
      if test $gl_cv_func_strerror_r_posix_signature = yes; then
        case "$gl_cv_func_strerror_r_works" in
          dnl The system's strerror_r has bugs.  Replace it.
          *no) REPLACE_STRERROR_R=1 ;;
        esac
      else
        dnl The system's strerror_r() has a wrong signature. Replace it.
        REPLACE_STRERROR_R=1
      fi
    else
      dnl The system's strerror_r() cannot know about the new errno values we
      dnl add to <errno.h>, or any fix for strerror(0). Replace it.
      REPLACE_STRERROR_R=1
    fi
  fi
])
m4trace:m4/strerror_r.m4:39: -1- AC_DEFUN([gl_PREREQ_STRERROR_R], [
  AC_REQUIRE([AC_FUNC_STRERROR_R])
  dnl glibc >= 2.3.4 and cygwin 1.7.9 have a function __xpg_strerror_r.
  AC_CHECK_FUNCS_ONCE([__xpg_strerror_r])
  AC_CHECK_FUNCS_ONCE([catgets])
  AC_CHECK_FUNCS_ONCE([snprintf])
])
m4trace:m4/strerror_r.m4:49: -1- AC_DEFUN([gl_FUNC_STRERROR_R_WORKS], [
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade Android <string.h> to use the GNU strerror_r API,
  dnl and Solaris <string.h> to declare strerror_r.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_FUNC_STRERROR_0])

  AC_CHECK_FUNCS_ONCE([strerror_r])
  if test $ac_cv_func_strerror_r = yes; then
    if test "$GL_GENERATE_ERRNO_H:$REPLACE_STRERROR_0" = false:0; then
      dnl The POSIX prototype is:  int strerror_r (int, char *, size_t);
      dnl glibc, Cygwin:           char *strerror_r (int, char *, size_t);
      dnl AIX 5.1, OSF/1 5.1:      int strerror_r (int, char *, int);
      AC_CACHE_CHECK([for strerror_r with POSIX signature],
        [gl_cv_func_strerror_r_posix_signature],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <string.h>
                int strerror_r (int, char *, size_t);
              ]],
              [])],
           [gl_cv_func_strerror_r_posix_signature=yes],
           [gl_cv_func_strerror_r_posix_signature=no])
        ])
      if test $gl_cv_func_strerror_r_posix_signature = yes; then
        dnl AIX 6.1 strerror_r fails by returning -1, not an error number.
        dnl HP-UX 11.31 strerror_r always fails when the buffer length argument
        dnl is less than 80.
        dnl FreeBSD 8.s strerror_r claims failure on 0
        dnl Mac OS X 10.5 strerror_r treats 0 like -1
        dnl Solaris 10 strerror_r corrupts errno on failure
        AC_CACHE_CHECK([whether strerror_r works],
          [gl_cv_func_strerror_r_works],
          [AC_RUN_IFELSE(
             [AC_LANG_PROGRAM(
                [[#include <errno.h>
                  #include <string.h>
                ]],
                [[int result = 0;
                  char buf[79];
                  if (strerror_r (EACCES, buf, 0) < 0)
                    result |= 1;
                  errno = 0;
                  if (strerror_r (EACCES, buf, sizeof buf) != 0)
                    result |= 2;
                  strcpy (buf, "Unknown");
                  if (strerror_r (0, buf, sizeof buf) != 0)
                    result |= 4;
                  if (errno)
                    result |= 8;
                  if (strstr (buf, "nknown") || strstr (buf, "ndefined"))
                    result |= 0x10;
                  errno = 0;
                  *buf = 0;
                  if (strerror_r (-3, buf, sizeof buf) < 0)
                    result |= 0x20;
                  if (errno)
                    result |= 0x40;
                  if (!*buf)
                    result |= 0x80;
                  return result;
                ]])],
             [gl_cv_func_strerror_r_works=yes],
             [gl_cv_func_strerror_r_works=no],
             [
changequote(,)dnl
              case "$host_os" in
                       # Guess no on AIX.
                aix*)  gl_cv_func_strerror_r_works="guessing no";;
                       # Guess no on HP-UX.
                hpux*) gl_cv_func_strerror_r_works="guessing no";;
                       # Guess no on BSD variants.
                *bsd*)  gl_cv_func_strerror_r_works="guessing no";;
                       # Guess yes otherwise.
                *)     gl_cv_func_strerror_r_works="guessing yes";;
              esac
changequote([,])dnl
             ])
          ])
      else
        dnl The system's strerror() has a wrong signature.
        dnl glibc >= 2.3.4 and cygwin 1.7.9 have a function __xpg_strerror_r.
        AC_CHECK_FUNCS_ONCE([__xpg_strerror_r])
        dnl In glibc < 2.14, __xpg_strerror_r does not populate buf on failure.
        dnl In cygwin < 1.7.10, __xpg_strerror_r clobbers strerror's buffer.
        if test $ac_cv_func___xpg_strerror_r = yes; then
          AC_CACHE_CHECK([whether __xpg_strerror_r works],
            [gl_cv_func_strerror_r_works],
            [AC_RUN_IFELSE(
               [AC_LANG_PROGRAM(
                  [[#include <errno.h>
                    #include <string.h>
                    extern
                    #ifdef __cplusplus
                    "C"
                    #endif
                    int __xpg_strerror_r(int, char *, size_t);
                  ]],
                  [[int result = 0;
                    char buf[256] = "^";
                    char copy[256];
                    char *str = strerror (-1);
                    strcpy (copy, str);
                    if (__xpg_strerror_r (-2, buf, 1) == 0)
                      result |= 1;
                    if (*buf)
                      result |= 2;
                    __xpg_strerror_r (-2, buf, 256);
                    if (strcmp (str, copy))
                      result |= 4;
                    return result;
                  ]])],
               [gl_cv_func_strerror_r_works=yes],
               [gl_cv_func_strerror_r_works=no],
               [dnl Guess no on all platforms that have __xpg_strerror_r,
                dnl at least until fixed glibc and cygwin are more common.
                gl_cv_func_strerror_r_works="$gl_cross_guess_normal"
               ])
            ])
        fi
      fi
    fi
  fi
])
m4trace:m4/string_h.m4:12: -1- AC_DEFUN_ONCE([gl_STRING_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  gl_NEXT_HEADERS([string.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <string.h>
    ]],
    [ffsl ffsll memmem mempcpy memrchr rawmemchr stpcpy stpncpy strchrnul
     strdup strncat strndup strnlen strpbrk strsep strcasestr strtok_r
     strerror_r strerrorname_np sigabbrev_np sigdescr_np strsignal strverscmp])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/string_h.m4:35: -1- AC_DEFUN([gl_STRING_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STRING_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/string_h.m4:47: -1- AC_DEFUN([gl_STRING_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STRING_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPLICIT_BZERO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMMEM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAWMEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCHRNUL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCASESTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOK_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASESTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOK_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERRORNAME_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGABBREV_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGDESCR_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSIGNAL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRVERSCMP])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MEMCCPY], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_STRDUP], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STRING_H_MODULE_INDICATOR_DEFAULTS])
  dnl Make sure the shell variable for GNULIB_FREE_POSIX is initialized.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
])
m4trace:m4/string_h.m4:101: -1- AC_DEFUN([gl_STRING_H_DEFAULTS], [
  HAVE_MBSLEN=0;             AC_SUBST([HAVE_MBSLEN])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_EXPLICIT_BZERO=1;        AC_SUBST([HAVE_EXPLICIT_BZERO])
  HAVE_FFSL=1;                  AC_SUBST([HAVE_FFSL])
  HAVE_FFSLL=1;                 AC_SUBST([HAVE_FFSLL])
  HAVE_DECL_MEMMEM=1;           AC_SUBST([HAVE_DECL_MEMMEM])
  HAVE_MEMPCPY=1;               AC_SUBST([HAVE_MEMPCPY])
  HAVE_DECL_MEMRCHR=1;          AC_SUBST([HAVE_DECL_MEMRCHR])
  HAVE_RAWMEMCHR=1;             AC_SUBST([HAVE_RAWMEMCHR])
  HAVE_STPCPY=1;                AC_SUBST([HAVE_STPCPY])
  HAVE_STPNCPY=1;               AC_SUBST([HAVE_STPNCPY])
  HAVE_STRCHRNUL=1;             AC_SUBST([HAVE_STRCHRNUL])
  HAVE_DECL_STRDUP=1;           AC_SUBST([HAVE_DECL_STRDUP])
  HAVE_DECL_STRNDUP=1;          AC_SUBST([HAVE_DECL_STRNDUP])
  HAVE_DECL_STRNLEN=1;          AC_SUBST([HAVE_DECL_STRNLEN])
  HAVE_STRPBRK=1;               AC_SUBST([HAVE_STRPBRK])
  HAVE_STRSEP=1;                AC_SUBST([HAVE_STRSEP])
  HAVE_STRCASESTR=1;            AC_SUBST([HAVE_STRCASESTR])
  HAVE_DECL_STRTOK_R=1;         AC_SUBST([HAVE_DECL_STRTOK_R])
  HAVE_DECL_STRERROR_R=1;       AC_SUBST([HAVE_DECL_STRERROR_R])
  HAVE_STRERRORNAME_NP=1;       AC_SUBST([HAVE_STRERRORNAME_NP])
  HAVE_SIGABBREV_NP=1;          AC_SUBST([HAVE_SIGABBREV_NP])
  HAVE_SIGDESCR_NP=1;           AC_SUBST([HAVE_SIGDESCR_NP])
  HAVE_DECL_STRSIGNAL=1;        AC_SUBST([HAVE_DECL_STRSIGNAL])
  HAVE_STRVERSCMP=1;            AC_SUBST([HAVE_STRVERSCMP])
  REPLACE_FFSLL=0;              AC_SUBST([REPLACE_FFSLL])
  REPLACE_MEMCHR=0;             AC_SUBST([REPLACE_MEMCHR])
  REPLACE_MEMMEM=0;             AC_SUBST([REPLACE_MEMMEM])
  REPLACE_STPNCPY=0;            AC_SUBST([REPLACE_STPNCPY])
  REPLACE_STRCHRNUL=0;          AC_SUBST([REPLACE_STRCHRNUL])
  REPLACE_STRDUP=0;             AC_SUBST([REPLACE_STRDUP])
  REPLACE_STRNCAT=0;            AC_SUBST([REPLACE_STRNCAT])
  REPLACE_STRNDUP=0;            AC_SUBST([REPLACE_STRNDUP])
  REPLACE_STRNLEN=0;            AC_SUBST([REPLACE_STRNLEN])
  REPLACE_STRSTR=0;             AC_SUBST([REPLACE_STRSTR])
  REPLACE_STRCASESTR=0;         AC_SUBST([REPLACE_STRCASESTR])
  REPLACE_STRTOK_R=0;           AC_SUBST([REPLACE_STRTOK_R])
  REPLACE_STRERROR=0;           AC_SUBST([REPLACE_STRERROR])
  REPLACE_STRERROR_R=0;         AC_SUBST([REPLACE_STRERROR_R])
  REPLACE_STRERRORNAME_NP=0;    AC_SUBST([REPLACE_STRERRORNAME_NP])
  REPLACE_STRSIGNAL=0;          AC_SUBST([REPLACE_STRSIGNAL])
  UNDEFINE_STRTOK_R=0;          AC_SUBST([UNDEFINE_STRTOK_R])
])
m4trace:m4/strncat.m4:7: -1- AC_DEFUN_ONCE([gl_FUNC_STRNCAT], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Check for prerequisites for memory fence checks.
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])

  dnl Detect bug in Solaris 8..10 on SPARC and Solaris 11.0 on x86:
  dnl strncat should not dereference more than n bytes, but always dereferences
  dnl n+1 bytes if the first n bytes don't contain a NUL byte.
  dnl Assume that strncat works on platforms that lack mprotect.
  AC_CACHE_CHECK([whether strncat works], [gl_cv_func_strncat_works],
    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <string.h>
#if HAVE_SYS_MMAN_H
# include <fcntl.h>
# include <unistd.h>
# include <sys/types.h>
# include <sys/mman.h>
# ifndef MAP_FILE
#  define MAP_FILE 0
# endif
#endif
]GL_MDA_DEFINES],
[[
  char *fence = NULL;
#if HAVE_SYS_MMAN_H && HAVE_MPROTECT
# if HAVE_MAP_ANONYMOUS
  const int flags = MAP_ANONYMOUS | MAP_PRIVATE;
  const int fd = -1;
# else /* !HAVE_MAP_ANONYMOUS */
  const int flags = MAP_FILE | MAP_PRIVATE;
  int fd = open ("/dev/zero", O_RDONLY, 0666);
  if (fd >= 0)
# endif
    {
      int pagesize = getpagesize ();
      char *two_pages =
        (char *) mmap (NULL, 2 * pagesize, PROT_READ | PROT_WRITE,
                       flags, fd, 0);
      if (two_pages != (char *)(-1)
          && mprotect (two_pages + pagesize, pagesize, PROT_NONE) == 0)
        fence = two_pages + pagesize;
    }
#endif
  if (fence)
    {
      char dest[8];

      dest[0] = '*';
      dest[1] = 'a';
      dest[2] = '\0';
      dest[3] = 'w';
      dest[4] = 'x';
      dest[5] = 'y';
      dest[6] = 'z';

      *(fence - 3) = '7';
      *(fence - 2) = '2';
      *(fence - 1) = '9';

      if (strncat (dest + 1, fence - 3, 3) != dest + 1)
        return 1;
      if (dest[0] != '*')
        return 2;
      if (dest[1] != 'a'
          || dest[2] != '7' || dest[3] != '2' || dest[4] != '9'
          || dest[5] != '\0')
        return 3;
      if (dest[6] != 'z')
        return 4;
    }
  return 0;
]])], [gl_cv_func_strncat_works=yes], [gl_cv_func_strncat_works=no],
       [
        case "$host_os" in
                    # Guess no on Solaris.
          solaris*) gl_cv_func_strncat_works="guessing no" ;;
                    # Guess yes on native Windows.
          mingw*)   gl_cv_func_strncat_works="guessing yes" ;;
                    # Guess yes otherwise.
          *)        gl_cv_func_strncat_works="guessing yes" ;;
        esac
       ])
    ])
  case "$gl_cv_func_strncat_works" in
    *yes) ;;
    *) REPLACE_STRNCAT=1 ;;
  esac
])
m4trace:m4/strncat.m4:103: -1- AC_DEFUN([gl_PREREQ_STRNCAT], [
  :
])
m4trace:m4/strnlen.m4:8: -1- AC_DEFUN([gl_FUNC_STRNLEN], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])

  dnl Persuade glibc <string.h> to declare strnlen().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_DECLS_ONCE([strnlen])
  if test $ac_cv_have_decl_strnlen = no; then
    HAVE_DECL_STRNLEN=0
  else
    m4_pushdef([AC_LIBOBJ], [:])
    dnl Note: AC_FUNC_STRNLEN does AC_LIBOBJ([strnlen]).
    AC_FUNC_STRNLEN
    m4_popdef([AC_LIBOBJ])
    if test $ac_cv_func_strnlen_working = no; then
      REPLACE_STRNLEN=1
    fi
  fi
])
m4trace:m4/strnlen.m4:30: -1- AC_DEFUN([gl_PREREQ_STRNLEN], [:])
m4trace:m4/strsignal.m4:7: -1- AC_DEFUN([gl_FUNC_STRSIGNAL], [
  dnl Persuade glibc <string.h> to declare strsignal().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_DECLS_ONCE([strsignal])
  if test $ac_cv_have_decl_strsignal = no; then
    HAVE_DECL_STRSIGNAL=0
  fi

  AC_CHECK_FUNCS([strsignal])
  if test $ac_cv_func_strsignal = yes; then
    HAVE_STRSIGNAL=1
    dnl Check if strsignal behaves reasonably for out-of-range signal numbers.
    dnl On Solaris it returns NULL; on AIX 5.1 it returns (char *) -1.
    AC_CACHE_CHECK([whether strsignal always returns a string],
      [gl_cv_func_working_strsignal],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <string.h>
#include <unistd.h> /* NetBSD 5.0 declares it in wrong header. */
            ]],
            [[int result = 0;
              char *s = strsignal (-1);
              if (s == (char *) 0)
                result |= 1;
              if (s == (char *) -1)
                result |= 2;
              return result;
            ]])],
         [gl_cv_func_working_strsignal=yes],
         [gl_cv_func_working_strsignal=no],
         [case "$host_os" in
            solaris* | aix*) gl_cv_func_working_strsignal=no;;
            *)               gl_cv_func_working_strsignal="guessing yes";;
          esac])])
    if test "$gl_cv_func_working_strsignal" = no; then
      REPLACE_STRSIGNAL=1
    fi
  else
    HAVE_STRSIGNAL=0
  fi
])
m4trace:m4/strsignal.m4:55: -1- AC_DEFUN([gl_PREREQ_STRSIGNAL], [
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_DECLS([sys_siglist], [], [], [[#include <signal.h>]])
  AC_CHECK_DECLS([_sys_siglist], [], [], [[#include <signal.h>]])
])
m4trace:m4/strstr.m4:8: -1- AC_DEFUN([gl_FUNC_STRSTR_SIMPLE], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MEMCHR])
  if test $REPLACE_MEMCHR = 1; then
    REPLACE_STRSTR=1
  else
    dnl Detect https://sourceware.org/bugzilla/show_bug.cgi?id=12092
    dnl and https://sourceware.org/bugzilla/show_bug.cgi?id=23637.
    AC_CACHE_CHECK([whether strstr works],
      [gl_cv_func_strstr_works_always],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM([[
#include <string.h> /* for __GNU_LIBRARY__, strstr */
#ifdef __GNU_LIBRARY__
 #include <features.h>
 #if __GLIBC__ == 2 && __GLIBC_MINOR__ == 28
  Unlucky user
 #endif
#endif
#define P "_EF_BF_BD"
#define HAYSTACK "F_BD_CE_BD" P P P P "_C3_88_20" P P P "_C3_A7_20" P
#define NEEDLE P P P P P
]],
            [[return !!strstr (HAYSTACK, NEEDLE);
            ]])],
         [gl_cv_func_strstr_works_always=yes],
         [gl_cv_func_strstr_works_always=no],
         [dnl glibc 2.12 and cygwin 1.7.7 have a known bug.  uClibc is not
          dnl affected, since it uses different source code for strstr than
          dnl glibc.
          dnl Assume that it works on all other platforms, even if it is not
          dnl linear.
          AC_EGREP_CPP([Lucky user],
            [
#include <string.h> /* for __GNU_LIBRARY__ */
#ifdef __GNU_LIBRARY__
 #include <features.h>
 #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ > 12) || (__GLIBC__ > 2)) \
     || defined __UCLIBC__
  Lucky user
 #endif
#elif defined __CYGWIN__
 #include <cygwin/version.h>
 #if CYGWIN_VERSION_DLL_COMBINED > CYGWIN_VERSION_DLL_MAKE_COMBINED (1007, 7)
  Lucky user
 #endif
#else
  Lucky user
#endif
            ],
            [gl_cv_func_strstr_works_always="guessing yes"],
            [gl_cv_func_strstr_works_always="$gl_cross_guess_normal"])
         ])
      ])
    case "$gl_cv_func_strstr_works_always" in
      *yes) ;;
      *)
        REPLACE_STRSTR=1
        ;;
    esac
  fi
])
m4trace:m4/strstr.m4:73: -1- AC_DEFUN([gl_FUNC_STRSTR], [
  AC_REQUIRE([gl_FUNC_STRSTR_SIMPLE])
  if test $REPLACE_STRSTR = 0; then
    AC_CACHE_CHECK([whether strstr works in linear time],
      [gl_cv_func_strstr_linear],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#ifdef __MVS__
/* z/OS does not deliver signals while strstr() is running (thanks to
   restrictions on its LE runtime), which prevents us from limiting the
   running time of this test.  */
# error "This test does not work properly on z/OS"
#endif
#include <signal.h> /* for signal */
#include <string.h> /* for strstr */
#include <stdlib.h> /* for malloc */
#include <unistd.h> /* for alarm */
static void quit (int sig) { _exit (sig + 128); }
]], [[
    int result = 0;
    size_t m = 1000000;
    char *haystack = (char *) malloc (2 * m + 2);
    char *needle = (char *) malloc (m + 2);
    /* Failure to compile this test due to missing alarm is okay,
       since all such platforms (mingw) also have quadratic strstr.  */
    signal (SIGALRM, quit);
    alarm (5);
    /* Check for quadratic performance.  */
    if (haystack && needle)
      {
        memset (haystack, 'A', 2 * m);
        haystack[2 * m] = 'B';
        haystack[2 * m + 1] = 0;
        memset (needle, 'A', m);
        needle[m] = 'B';
        needle[m + 1] = 0;
        if (!strstr (haystack, needle))
          result |= 1;
      }
    /* Free allocated memory, in case some sanitizer is watching.  */
    free (haystack);
    free (needle);
    return result;
    ]])],
        [gl_cv_func_strstr_linear=yes], [gl_cv_func_strstr_linear=no],
        [dnl Only glibc > 2.12 on processors without SSE 4.2 instructions and
         dnl cygwin > 1.7.7 are known to have a bug-free strstr that works in
         dnl linear time.
         AC_EGREP_CPP([Lucky user],
           [
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ > 12) || (__GLIBC__ > 2)) \
     && !(defined __i386__ || defined __x86_64__) \
     && !defined __UCLIBC__
  Lucky user
 #endif
#endif
#ifdef __CYGWIN__
 #include <cygwin/version.h>
 #if CYGWIN_VERSION_DLL_COMBINED > CYGWIN_VERSION_DLL_MAKE_COMBINED (1007, 7)
  Lucky user
 #endif
#endif
           ],
           [gl_cv_func_strstr_linear="guessing yes"],
           [gl_cv_func_strstr_linear="$gl_cross_guess_normal"])
        ])
      ])
    case "$gl_cv_func_strstr_linear" in
      *yes) ;;
      *)
        REPLACE_STRSTR=1
        ;;
    esac
  fi
])
m4trace:m4/strtod.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOD], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  m4_ifdef([gl_FUNC_STRTOD_OBSOLETE], [
    dnl Test whether strtod is declared.
    dnl Don't call AC_FUNC_STRTOD, because it does not have the right guess
    dnl when cross-compiling.
    dnl Don't call AC_CHECK_FUNCS([strtod]) because it would collide with the
    dnl ac_cv_func_strtod variable set by the AC_FUNC_STRTOD macro.
    AC_CHECK_DECLS_ONCE([strtod])
    if test $ac_cv_have_decl_strtod != yes; then
      HAVE_STRTOD=0
    fi
  ])
  if test $HAVE_STRTOD = 1; then
    AC_CACHE_CHECK([whether strtod obeys C99], [gl_cv_func_strtod_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <stdlib.h>
#include <math.h>
#include <errno.h>
/* Compare two numbers with ==.
   This is a separate function because IRIX 6.5 "cc -O" miscompiles an
   'x == x' test.  */
static int
numeric_equal (double x, double y)
{
  return x == y;
}
]], [[
  int result = 0;
  {
    /* In some old versions of Linux (2000 or before), strtod mis-parses
       strings with leading '+'.  */
    const char *string = " +69";
    char *term;
    double value = strtod (string, &term);
    if (value != 69 || term != (string + 4))
      result |= 1;
  }
  {
    /* Under Solaris 2.4, strtod returns the wrong value for the
       terminating character under some conditions.  */
    const char *string = "NaN";
    char *term;
    strtod (string, &term);
    if (term != string && *(term - 1) == 0)
      result |= 2;
  }
  {
    /* Older glibc and Cygwin mis-parse "-0x".  */
    const char *string = "-0x";
    char *term;
    double value = strtod (string, &term);
    double zero = 0.0;
    if (1.0 / value != -1.0 / zero || term != (string + 2))
      result |= 4;
  }
  {
    /* Many platforms do not parse hex floats.  */
    const char *string = "0XaP+1";
    char *term;
    double value = strtod (string, &term);
    if (value != 20.0 || term != (string + 6))
      result |= 8;
  }
  {
    /* Many platforms do not parse infinities.  HP-UX 11.31 parses inf,
       but mistakenly sets errno.  */
    const char *string = "inf";
    char *term;
    double value;
    errno = 0;
    value = strtod (string, &term);
    if (value != HUGE_VAL || term != (string + 3) || errno)
      result |= 16;
  }
  {
    /* glibc 2.7 and cygwin 1.5.24 misparse "nan()".  */
    const char *string = "nan()";
    char *term;
    double value = strtod (string, &term);
    if (numeric_equal (value, value) || term != (string + 5))
      result |= 32;
  }
  {
    /* darwin 10.6.1 misparses "nan(".  */
    const char *string = "nan(";
    char *term;
    double value = strtod (string, &term);
    if (numeric_equal (value, value) || term != (string + 3))
      result |= 64;
  }
  return result;
]])],
        [gl_cv_func_strtod_works=yes],
        [gl_cv_func_strtod_works=no],
        [dnl The last known bugs in glibc strtod(), as of this writing,
         dnl were fixed in version 2.8
         AC_EGREP_CPP([Lucky user],
           [
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ >= 8) || (__GLIBC__ > 2)) \
     && !defined __UCLIBC__
  Lucky user
 #endif
#endif
           ],
           [gl_cv_func_strtod_works="guessing yes"],
           [case "$host_os" in
                       # Guess yes on musl systems.
              *-musl*) gl_cv_func_strtod_works="guessing yes" ;;
                       # Guess yes on native Windows.
              mingw*)  gl_cv_func_strtod_works="guessing yes" ;;
              *)       gl_cv_func_strtod_works="$gl_cross_guess_normal" ;;
            esac
           ])
        ])
      ])
    case "$gl_cv_func_strtod_works" in
      *yes) ;;
      *)
        REPLACE_STRTOD=1
        ;;
    esac
  fi
])
m4trace:m4/strtod.m4:137: -1- AC_DEFUN([gl_PREREQ_STRTOD], [
  AC_REQUIRE([gl_CHECK_LDEXP_NO_LIBM])
  if test $gl_cv_func_ldexp_no_libm = yes; then
    AC_DEFINE([HAVE_LDEXP_IN_LIBC], [1],
      [Define if the ldexp function is available in libc.])
  fi
  AC_CHECK_FUNCS([nl_langinfo])
])
m4trace:m4/strtoimax.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOIMAX], [
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])

  dnl On OSF/1 5.1 with cc, this function is declared but not defined.
  AC_CHECK_FUNCS_ONCE([strtoimax])
  AC_CHECK_DECLS_ONCE([strtoimax])
  if test "$ac_cv_have_decl_strtoimax" != yes; then
    HAVE_DECL_STRTOIMAX=0
  fi

  if test "$ac_cv_func_strtoimax" = yes; then
    HAVE_STRTOIMAX=1
    dnl On AIX 5.1, strtoimax() fails for values outside the 'int' range.
    AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
    AC_CACHE_CHECK([whether strtoimax works], [gl_cv_func_strtoimax],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE([[
#include <errno.h>
#include <string.h>
#include <inttypes.h>
int main ()
{
  if (sizeof (intmax_t) > sizeof (int))
    {
      const char *s = "4294967295";
      char *p;
      intmax_t res;
      errno = 0;
      res = strtoimax (s, &p, 10);
      if (p != s + strlen (s))
        return 1;
      if (errno != 0)
        return 2;
      if (res != (intmax_t) 65535 * (intmax_t) 65537)
        return 3;
    }
  else
    {
      const char *s = "2147483647";
      char *p;
      intmax_t res;
      errno = 0;
      res = strtoimax (s, &p, 10);
      if (p != s + strlen (s))
        return 1;
      if (errno != 0)
        return 2;
      if (res != 2147483647)
        return 3;
    }
  return 0;
}
]])],
         [gl_cv_func_strtoimax=yes],
         [gl_cv_func_strtoimax=no],
         [case "$host_os" in
                    # Guess no on AIX 5.
            aix5*)  gl_cv_func_strtoimax="guessing no" ;;
                    # Guess yes on native Windows.
            mingw*) gl_cv_func_strtoimax="guessing yes" ;;
                    # Guess yes otherwise.
            *)      gl_cv_func_strtoimax="guessing yes" ;;
          esac
         ])
      ])
    case "$gl_cv_func_strtoimax" in
      *no) REPLACE_STRTOIMAX=1 ;;
    esac
  else
    if test "$ac_cv_have_decl_strtoimax" = yes; then
      # HP-UX 11.11 has "#define strtoimax(...) ..." but no function.
      REPLACE_STRTOIMAX=1
    fi
    HAVE_STRTOIMAX=0
  fi
])
m4trace:m4/strtoimax.m4:86: -1- AC_DEFUN([gl_PREREQ_STRTOIMAX], [
  AC_CHECK_DECLS([strtoll])
])
m4trace:m4/strtold.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOLD], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([strtold])
  if test $ac_cv_func_strtold != yes; then
    HAVE_STRTOLD=0
  else
    AC_CACHE_CHECK([whether strtold obeys POSIX], [gl_cv_func_strtold_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <stdlib.h>
#include <math.h>
#include <errno.h>
/* Compare two numbers with ==.
   This is a separate function because IRIX 6.5 "cc -O" miscompiles an
   'x == x' test.  */
static int
numeric_equal (long double x, long double y)
{
  return x == y;
}
]], [[
  int result = 0;
  {
    /* Under Solaris 2.4, strtod returns the wrong value for the
       terminating character under some conditions.  */
    const char *string = "NaN";
    char *term;
    strtold (string, &term);
    if (term != string && *(term - 1) == 0)
      result |= 1;
  }
  {
    /* Older glibc and Cygwin mis-parse "-0x".  */
    const char *string = "-0x";
    char *term;
    long double value = strtold (string, &term);
    long double zero = 0.0L;
    if (1.0L / value != -1.0L / zero || term != (string + 2))
      result |= 2;
  }
  {
    /* IRIX 6.5, mingw do not parse hex floats.  */
    const char *string = "0XaP+1";
    char *term;
    long double value = strtold (string, &term);
    if (value != 20.0L || term != (string + 6))
      result |= 4;
  }
  {
    /* IRIX 6.5 does not parse infinities.  HP-UX 11.31/ia64 parses inf,
       but mistakenly sets errno.  */
    const char *string = "inf";
    char *term;
    long double value;
    errno = 0;
    value = strtold (string, &term);
    if (value != HUGE_VAL || term != (string + 3) || errno)
      result |= 8;
  }
  {
    /* glibc-2.3.2, IRIX 6.5, mingw, Haiku misparse "nan()".  */
    const char *string = "nan()";
    char *term;
    long double value = strtold (string, &term);
    if (numeric_equal (value, value) || term != (string + 5))
      result |= 16;
  }
  {
    /* Mac OS X 10.5, IRIX 6.5 misparse "nan(".  */
    const char *string = "nan(";
    char *term;
    long double value = strtold (string, &term);
    if (numeric_equal (value, value) || term != (string + 3))
      result |= 32;
  }
  {
    /* In Cygwin 2.9, strtold does not set errno upon underflow.  */
    const char *string = "1E-100000";
    char *term;
    long double value;
    errno = 0;
    value = strtold (string, &term);
    if (term != (string + 9) || (value == 0.0L && errno != ERANGE))
      result |= 64;
  }
  return result;
]])],
        [gl_cv_func_strtold_works=yes],
        [if expr $? '>=' 64 >/dev/null; then
           gl_cv_func_strtold_works="no (underflow problem)"
         else
           gl_cv_func_strtold_works=no
         fi
        ],
        [dnl The last known bugs in glibc strtold(), as of this writing,
         dnl were fixed in version 2.8
         AC_EGREP_CPP([Lucky user],
           [
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ >= 8) || (__GLIBC__ > 2)) \
     && !defined __UCLIBC__
  Lucky user
 #endif
#endif
           ],
           [gl_cv_func_strtold_works="guessing yes"],
           [case "$host_os" in
                       # Guess yes on musl systems.
              *-musl*) gl_cv_func_strtold_works="guessing yes" ;;
                       # Guess 'no (underflow problem)' on Cygwin.
              cygwin*) gl_cv_func_strtold_works="guessing no (underflow problem)" ;;
              *)       gl_cv_func_strtold_works="$gl_cross_guess_normal" ;;
            esac
           ])
        ])
      ])
    case "$gl_cv_func_strtold_works" in
      *yes) ;;
      *)
        REPLACE_STRTOLD=1
        case "$gl_cv_func_strtold_works" in
          *"no (underflow problem)")
            AC_DEFINE([STRTOLD_HAS_UNDERFLOW_BUG], [1],
              [Define to 1 if strtold does not set errno upon underflow.])
            ;;
        esac
        ;;
    esac
  fi
])
m4trace:m4/strtold.m4:142: -1- AC_DEFUN([gl_PREREQ_STRTOLD], [
  AC_REQUIRE([gl_CHECK_LDEXPL_NO_LIBM])
  if test $gl_cv_func_ldexpl_no_libm = yes; then
    AC_DEFINE([HAVE_LDEXPL_IN_LIBC], [1],
      [Define if the ldexpl function is available in libc.])
  fi
  AC_CHECK_FUNCS([nl_langinfo])
])
m4trace:m4/strtoll.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOLL], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS([strtoll])
  if test $ac_cv_func_strtoll = yes; then
    AC_CACHE_CHECK([whether strtoll works],
      [gl_cv_func_strtoll_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <stdlib.h>]],
            [[int result = 0;
              char *term;
              /* This test fails on Minix and native Windows.  */
              {
                const char input[] = "0x";
                (void) strtoll (input, &term, 16);
                if (term != input + 1)
                  result |= 1;
              }
              return result;
            ]])
         ],
         [gl_cv_func_strtoll_works=yes],
         [gl_cv_func_strtoll_works=no],
         [case "$host_os" in
                    # Guess no on native Windows.
            mingw*) gl_cv_func_strtoll_works="guessing no" ;;
            *)      gl_cv_func_strtoll_works="$gl_cross_guess_normal" ;;
          esac
         ])
    ])
    case "$gl_cv_func_strtoll_works" in
      *yes) ;;
      *)    REPLACE_STRTOLL=1 ;;
    esac
  else
    HAVE_STRTOLL=0
  fi
])
m4trace:m4/strtoll.m4:49: -1- AC_DEFUN([gl_PREREQ_STRTOLL], [
  :
])
m4trace:m4/strtoull.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOULL], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS([strtoull])
  if test $ac_cv_func_strtoull = yes; then
    AC_CACHE_CHECK([whether strtoull works],
      [gl_cv_func_strtoull_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <stdlib.h>]],
            [[int result = 0;
              char *term;
              /* This test fails on Minix and native Windows.  */
              {
                const char input[] = "0x";
                (void) strtoull (input, &term, 16);
                if (term != input + 1)
                  result |= 1;
              }
              return result;
            ]])
         ],
         [gl_cv_func_strtoull_works=yes],
         [gl_cv_func_strtoull_works=no],
         [case "$host_os" in
                    # Guess no on native Windows.
            mingw*) gl_cv_func_strtoull_works="guessing no" ;;
            *)      gl_cv_func_strtoull_works="$gl_cross_guess_normal" ;;
          esac
         ])
    ])
    case "$gl_cv_func_strtoull_works" in
      *yes) ;;
      *)    REPLACE_STRTOULL=1 ;;
    esac
  else
    HAVE_STRTOULL=0
  fi
])
m4trace:m4/strtoull.m4:49: -1- AC_DEFUN([gl_PREREQ_STRTOULL], [
  :
])
m4trace:m4/strtoumax.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOUMAX], [
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])

  dnl On OSF/1 5.1 with cc, this function is declared but not defined.
  AC_CHECK_FUNCS_ONCE([strtoumax])
  AC_CHECK_DECLS_ONCE([strtoumax])
  if test "$ac_cv_have_decl_strtoumax" = yes; then
    if test "$ac_cv_func_strtoumax" != yes; then
      # HP-UX 11.11 has "#define strtoimax(...) ..." but no function.
      REPLACE_STRTOUMAX=1
    fi
  else
    HAVE_DECL_STRTOUMAX=0
  fi
])
m4trace:m4/strtoumax.m4:25: -1- AC_DEFUN([gl_PREREQ_STRTOUMAX], [
  AC_CHECK_DECLS([strtoull])
])
m4trace:m4/symlink.m4:11: -1- AC_DEFUN([gl_FUNC_SYMLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([symlink])
  dnl The best we can do on mingw is provide a dummy that always fails, so
  dnl that compilation can proceed with fewer ifdefs.  On FreeBSD 7.2, AIX 7.1,
  dnl and Solaris 9, we want to fix a bug with trailing slash handling.
  if test $ac_cv_func_symlink = no; then
    HAVE_SYMLINK=0
  else
    AC_CACHE_CHECK([whether symlink handles trailing slash correctly],
      [gl_cv_func_symlink_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
           ]],
           [[int result = 0;
             if (!symlink ("a", "conftest.link/"))
               result |= 1;
             if (symlink ("conftest.f", "conftest.lnk2"))
               result |= 2;
             else if (!symlink ("a", "conftest.lnk2/"))
               result |= 4;
             return result;
           ]])],
         [gl_cv_func_symlink_works=yes], [gl_cv_func_symlink_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_symlink_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_symlink_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_symlink_works="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.f conftest.link conftest.lnk2])
    case "$gl_cv_func_symlink_works" in
      *yes) ;;
      *)
        REPLACE_SYMLINK=1
        ;;
    esac
  fi
])
m4trace:m4/symlinkat.m4:11: -1- AC_DEFUN([gl_FUNC_SYMLINKAT], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_OPENAT])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([symlinkat])
  if test $ac_cv_func_symlinkat = no; then
    HAVE_SYMLINKAT=0
  else
    AC_CACHE_CHECK([whether symlinkat handles trailing slash correctly],
      [gl_cv_func_symlinkat_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <fcntl.h>
             #include <unistd.h>
           ]],
           [[int result = 0;
             if (!symlinkat ("a", AT_FDCWD, "conftest.link/"))
               result |= 1;
             if (symlinkat ("conftest.f", AT_FDCWD, "conftest.lnk2"))
               result |= 2;
             else if (!symlinkat ("a", AT_FDCWD, "conftest.lnk2/"))
               result |= 4;
             return result;
           ]])],
         [gl_cv_func_symlinkat_works=yes],
         [gl_cv_func_symlinkat_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_symlinkat_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_symlinkat_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_symlinkat_works="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.f conftest.link conftest.lnk2])
    case "$gl_cv_func_symlinkat_works" in
      *yes) ;;
      *)
        REPLACE_SYMLINKAT=1
        ;;
    esac
  fi
])
m4trace:m4/sys_ioctl_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_IOCTL_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])

  AC_CHECK_HEADERS_ONCE([sys/ioctl.h])
  if test $ac_cv_header_sys_ioctl_h = yes; then
    HAVE_SYS_IOCTL_H=1
    dnl Test whether <sys/ioctl.h> declares ioctl(), or whether some other
    dnl header file, such as <unistd.h> or <stropts.h>, is needed for that.
    AC_CACHE_CHECK([whether <sys/ioctl.h> declares ioctl],
      [gl_cv_decl_ioctl_in_sys_ioctl_h],
      [dnl We cannot use AC_CHECK_DECL because it produces its own messages.
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/ioctl.h>]],
            [[(void) ioctl;]])],
         [gl_cv_decl_ioctl_in_sys_ioctl_h=yes],
         [gl_cv_decl_ioctl_in_sys_ioctl_h=no])
      ])
  else
    HAVE_SYS_IOCTL_H=0
  fi
  AC_SUBST([HAVE_SYS_IOCTL_H])
  dnl <sys/ioctl.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/ioctl.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/ioctl.h>
/* Some platforms declare ioctl in the wrong header.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <unistd.h>
#endif
    ]], [ioctl])
])
m4trace:m4/sys_ioctl_h.m4:51: -1- AC_DEFUN([gl_SYS_IOCTL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_IOCTL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_ioctl_h.m4:63: -1- AC_DEFUN([gl_SYS_IOCTL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_IOCTL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IOCTL])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_IOCTL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])
])
m4trace:m4/sys_ioctl_h.m4:72: -1- AC_DEFUN([gl_SYS_IOCTL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  SYS_IOCTL_H_HAVE_WINSOCK2_H=0; AC_SUBST([SYS_IOCTL_H_HAVE_WINSOCK2_H])
  SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=0;
                        AC_SUBST([SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS])
  REPLACE_IOCTL=0;      AC_SUBST([REPLACE_IOCTL])
])
m4trace:m4/sys_random_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_RANDOM_H], [
  AC_REQUIRE([gl_SYS_RANDOM_H_DEFAULTS])
  dnl <sys/random.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/random.h])
  if test $ac_cv_header_sys_random_h = yes; then
    HAVE_SYS_RANDOM_H=1
  else
    HAVE_SYS_RANDOM_H=0
  fi
  AC_SUBST([HAVE_SYS_RANDOM_H])

  m4_ifdef([gl_UNISTD_H_DEFAULTS], [AC_REQUIRE([gl_UNISTD_H_DEFAULTS])])
  if test $ac_cv_header_sys_random_h = yes; then
    UNISTD_H_HAVE_SYS_RANDOM_H=1
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_RANDOM_H
/* Additional includes are needed before <sys/random.h> on uClibc
   and Mac OS X.  */
# include <sys/types.h>
# include <stdlib.h>
# include <sys/random.h>
#endif
    ]],
    [getrandom])
])
m4trace:m4/sys_random_h.m4:42: -1- AC_DEFUN([gl_SYS_RANDOM_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_random_h.m4:54: -1- AC_DEFUN([gl_SYS_RANDOM_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_RANDOM_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETRANDOM])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_RANDOM_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_RANDOM_H_DEFAULTS])
])
m4trace:m4/sys_random_h.m4:63: -1- AC_DEFUN([gl_SYS_RANDOM_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_GETRANDOM=1;       AC_SUBST([HAVE_GETRANDOM])
  REPLACE_GETRANDOM=0;    AC_SUBST([REPLACE_GETRANDOM])
])
m4trace:m4/sys_resource_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_RESOURCE_H], [
  AC_REQUIRE([gl_SYS_RESOURCE_H_DEFAULTS])
  dnl <sys/resource.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/resource.h])
  if test $ac_cv_header_sys_resource_h = yes; then
    HAVE_SYS_RESOURCE_H=1
  else
    HAVE_SYS_RESOURCE_H=0
  fi
  AC_SUBST([HAVE_SYS_RESOURCE_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_RESOURCE_H
/* At least FreeBSD 5.0 needs extra headers before <sys/resource.h>
   will compile.  */
# include <sys/types.h>
# include <sys/time.h>
# include <sys/resource.h>
#endif
    ]],
    [getrusage])
])
m4trace:m4/sys_resource_h.m4:37: -1- AC_DEFUN([gl_SYS_RESOURCE_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_resource_h.m4:49: -1- AC_DEFUN([gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_RESOURCE_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETRUSAGE])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_RESOURCE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_RESOURCE_H_DEFAULTS])
])
m4trace:m4/sys_resource_h.m4:58: -1- AC_DEFUN([gl_SYS_RESOURCE_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_GETRUSAGE=1;       AC_SUBST([HAVE_GETRUSAGE])
])
m4trace:m4/sys_select_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_SELECT_H], [
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CACHE_CHECK([whether <sys/select.h> is self-contained],
    [gl_cv_header_sys_select_h_selfcontained],
    [
      dnl Test against two bugs:
      dnl 1. On many platforms, <sys/select.h> assumes prior inclusion of
      dnl    <sys/types.h>.
      dnl 2. On OSF/1 4.0, <sys/select.h> provides only a forward declaration
      dnl    of 'struct timeval', and no definition of this type.
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/select.h>]],
                                         [[struct timeval b;]])],
        [gl_cv_header_sys_select_h_selfcontained=yes],
        [gl_cv_header_sys_select_h_selfcontained=no])
      dnl Test against another bug:
      dnl 3. On Solaris 10, <sys/select.h> provides an FD_ZERO implementation
      dnl    that relies on memset(), but without including <string.h>.
      if test $gl_cv_header_sys_select_h_selfcontained = yes; then
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM([[#include <sys/select.h>]],
                           [[int memset; int bzero;]])
          ],
          [AC_LINK_IFELSE(
             [AC_LANG_PROGRAM([[#include <sys/select.h>]], [[
                  #undef memset
                  #define memset nonexistent_memset
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void *memset (void *, int, unsigned long);
                  #undef bzero
                  #define bzero nonexistent_bzero
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void bzero (void *, unsigned long);
                  fd_set fds;
                  FD_ZERO (&fds);
                ]])
             ],
             [],
             [gl_cv_header_sys_select_h_selfcontained=no])
          ])
      fi
    ])
  dnl <sys/select.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/select.h])
  if test $ac_cv_header_sys_select_h = yes; then
    HAVE_SYS_SELECT_H=1
  else
    HAVE_SYS_SELECT_H=0
  fi
  AC_SUBST([HAVE_SYS_SELECT_H])
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <sys/select.h>
    ]], [pselect select])
])
m4trace:m4/sys_select_h.m4:82: -1- AC_DEFUN([gl_SYS_SELECT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_SELECT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_select_h.m4:94: -1- AC_DEFUN([gl_SYS_SELECT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_SELECT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PSELECT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SELECT])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_SELECT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
])
m4trace:m4/sys_select_h.m4:104: -1- AC_DEFUN([gl_SYS_SELECT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_PSELECT=1; AC_SUBST([HAVE_PSELECT])
  REPLACE_PSELECT=0; AC_SUBST([REPLACE_PSELECT])
  REPLACE_SELECT=0; AC_SUBST([REPLACE_SELECT])
])
m4trace:m4/sys_socket_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_SOCKET_H], [
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl On OSF/1, the functions recv(), send(), recvfrom(), sendto() have
  dnl old-style declarations (with return type 'int' instead of 'ssize_t')
  dnl unless _POSIX_PII_SOCKET is defined.
  case "$host_os" in
    osf*)
      AC_DEFINE([_POSIX_PII_SOCKET], [1],
        [Define to 1 in order to get the POSIX compatible declarations
         of socket functions.])
      ;;
  esac

  GL_GENERATE_SYS_SOCKET_H=false
  AC_CACHE_CHECK([whether <sys/socket.h> is self-contained],
    [gl_cv_header_sys_socket_h_selfcontained],
    [
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]], [[]])],
        [gl_cv_header_sys_socket_h_selfcontained=yes],
        [gl_cv_header_sys_socket_h_selfcontained=no])
    ])
  if test $gl_cv_header_sys_socket_h_selfcontained = yes; then
    dnl If the shutdown function exists, <sys/socket.h> should define
    dnl SHUT_RD, SHUT_WR, SHUT_RDWR.
    AC_CHECK_FUNCS([shutdown])
    if test $ac_cv_func_shutdown = yes; then
      AC_CACHE_CHECK([whether <sys/socket.h> defines the SHUT_* macros],
        [gl_cv_header_sys_socket_h_shut],
        [
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM([[#include <sys/socket.h>]],
               [[int a[] = { SHUT_RD, SHUT_WR, SHUT_RDWR };]])],
            [gl_cv_header_sys_socket_h_shut=yes],
            [gl_cv_header_sys_socket_h_shut=no])
        ])
      if test $gl_cv_header_sys_socket_h_shut = no; then
        GL_GENERATE_SYS_SOCKET_H=true
      fi
    fi
  fi
  # We need to check for ws2tcpip.h now.
  gl_PREREQ_SYS_H_SOCKET
  AC_CHECK_TYPES([struct sockaddr_storage, sa_family_t],,,[
  /* sys/types.h is not needed according to POSIX, but the
     sys/socket.h in i386-unknown-freebsd4.10 and
     powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
])
  if test $ac_cv_type_struct_sockaddr_storage = no; then
    HAVE_STRUCT_SOCKADDR_STORAGE=0
  fi
  if test $ac_cv_type_sa_family_t = no; then
    HAVE_SA_FAMILY_T=0
  fi
  if test $ac_cv_type_struct_sockaddr_storage != no; then
    AC_CHECK_MEMBERS([struct sockaddr_storage.ss_family],
      [],
      [HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=0],
      [#include <sys/types.h>
       #ifdef HAVE_SYS_SOCKET_H
       #include <sys/socket.h>
       #endif
       #ifdef HAVE_WS2TCPIP_H
       #include <ws2tcpip.h>
       #endif
      ])
  fi
  if test $HAVE_STRUCT_SOCKADDR_STORAGE = 0 || test $HAVE_SA_FAMILY_T = 0 \
     || test $HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY = 0; then
    GL_GENERATE_SYS_SOCKET_H=true
  fi
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#include <sys/socket.h>
    ]], [socket connect accept bind getpeername getsockname getsockopt
    listen recv send recvfrom sendto setsockopt shutdown accept4])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/sys_socket_h.m4:103: -1- AC_DEFUN([gl_PREREQ_SYS_H_SOCKET], [
  dnl Check prerequisites of the <sys/socket.h> replacement.
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  gl_CHECK_NEXT_HEADERS([sys/socket.h])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_SYS_SOCKET_H=1
  else
    HAVE_SYS_SOCKET_H=0
  fi
  AC_SUBST([HAVE_SYS_SOCKET_H])
  gl_PREREQ_SYS_H_WS2TCPIP
])
m4trace:m4/sys_socket_h.m4:120: -1- AC_DEFUN([gl_PREREQ_SYS_H_WINSOCK2], [
  m4_ifdef([gl_UNISTD_H_DEFAULTS], [AC_REQUIRE([gl_UNISTD_H_DEFAULTS])])
  m4_ifdef([gl_SYS_IOCTL_H_DEFAULTS], [AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])])
  AC_CHECK_HEADERS_ONCE([sys/socket.h])
  if test $ac_cv_header_sys_socket_h != yes; then
    dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
    dnl the check for those headers unconditional; yet cygwin reports
    dnl that the headers are present but cannot be compiled (since on
    dnl cygwin, all socket information should come from sys/socket.h).
    AC_CHECK_HEADERS([winsock2.h])
  fi
  if test "$ac_cv_header_winsock2_h" = yes; then
    HAVE_WINSOCK2_H=1
    UNISTD_H_HAVE_WINSOCK2_H=1
    SYS_IOCTL_H_HAVE_WINSOCK2_H=1
  else
    HAVE_WINSOCK2_H=0
  fi
  AC_SUBST([HAVE_WINSOCK2_H])
])
m4trace:m4/sys_socket_h.m4:145: -1- AC_DEFUN([gl_PREREQ_SYS_H_WS2TCPIP], [
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_WS2TCPIP_H=0
  else
    if test $ac_cv_header_ws2tcpip_h = yes; then
      HAVE_WS2TCPIP_H=1
    else
      HAVE_WS2TCPIP_H=0
    fi
  fi
  AC_SUBST([HAVE_WS2TCPIP_H])
])
m4trace:m4/sys_socket_h.m4:164: -1- AC_DEFUN([gl_SYS_SOCKET_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_socket_h.m4:176: -1- AC_DEFUN([gl_SYS_SOCKET_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_SOCKET_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SOCKET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CONNECT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BIND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPEERNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LISTEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SEND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECVFROM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SENDTO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETSOCKOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SHUTDOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT4])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_SOCKET_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
])
m4trace:m4/sys_socket_h.m4:199: -1- AC_DEFUN([gl_SYS_SOCKET_H_DEFAULTS], [
  HAVE_STRUCT_SOCKADDR_STORAGE=1; AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE])
  HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=1;
                        AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY])
  HAVE_SA_FAMILY_T=1;   AC_SUBST([HAVE_SA_FAMILY_T])
  HAVE_ACCEPT4=1;       AC_SUBST([HAVE_ACCEPT4])
])
m4trace:m4/sys_stat_h.m4:10: -1- AC_DEFUN_ONCE([gl_SYS_STAT_H], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  dnl Check for broken stat macros.
  AC_REQUIRE([AC_HEADER_STAT])

  gl_CHECK_NEXT_HEADERS([sys/stat.h])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to enable precise timestamps in 'struct stat'.
  m4_ifdef([gl_WINDOWS_STAT_TIMESPEC], [
    AC_REQUIRE([gl_WINDOWS_STAT_TIMESPEC])
  ], [
    WINDOWS_STAT_TIMESPEC=0
  ])
  AC_SUBST([WINDOWS_STAT_TIMESPEC])

  dnl Whether to ensure that struct stat.st_size is 64-bit wide.
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_ST_SIZE=0
  ])
  AC_SUBST([WINDOWS_64_BIT_ST_SIZE])

  dnl Define types that are supposed to be defined in <sys/types.h> or
  dnl <sys/stat.h>.
  AC_CHECK_TYPE([nlink_t], [],
    [AC_DEFINE([nlink_t], [int],
       [Define to the type of st_nlink in struct stat, or a supertype.])],
    [#include <sys/types.h>
     #include <sys/stat.h>])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/stat.h>
    ]], [fchmodat fstat fstatat futimens getumask lchmod lstat
    mkdirat mkfifo mkfifoat mknod mknodat stat utimensat])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/sys_stat_h.m4:59: -1- AC_DEFUN([gl_SYS_STAT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_STAT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_stat_h.m4:71: -1- AC_DEFUN([gl_SYS_STAT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_STAT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_UNISTD_H_REQUIRE_DEFAULTS dnl for REPLACE_FCHDIR
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHMODAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTATAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FUTIMENS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHMOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSTAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIRAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFOAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNODAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIMENSAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OVERRIDES_STRUCT_STAT])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHMOD], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UMASK], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_STAT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
])
m4trace:m4/sys_stat_h.m4:100: -1- AC_DEFUN([gl_SYS_STAT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCHMODAT=1;      AC_SUBST([HAVE_FCHMODAT])
  HAVE_FSTATAT=1;       AC_SUBST([HAVE_FSTATAT])
  HAVE_FUTIMENS=1;      AC_SUBST([HAVE_FUTIMENS])
  HAVE_GETUMASK=1;      AC_SUBST([HAVE_GETUMASK])
  HAVE_LCHMOD=1;        AC_SUBST([HAVE_LCHMOD])
  HAVE_LSTAT=1;         AC_SUBST([HAVE_LSTAT])
  HAVE_MKDIRAT=1;       AC_SUBST([HAVE_MKDIRAT])
  HAVE_MKFIFO=1;        AC_SUBST([HAVE_MKFIFO])
  HAVE_MKFIFOAT=1;      AC_SUBST([HAVE_MKFIFOAT])
  HAVE_MKNOD=1;         AC_SUBST([HAVE_MKNOD])
  HAVE_MKNODAT=1;       AC_SUBST([HAVE_MKNODAT])
  HAVE_UTIMENSAT=1;     AC_SUBST([HAVE_UTIMENSAT])
  REPLACE_FCHMODAT=0;   AC_SUBST([REPLACE_FCHMODAT])
  REPLACE_FSTAT=0;      AC_SUBST([REPLACE_FSTAT])
  REPLACE_FSTATAT=0;    AC_SUBST([REPLACE_FSTATAT])
  REPLACE_FUTIMENS=0;   AC_SUBST([REPLACE_FUTIMENS])
  REPLACE_LSTAT=0;      AC_SUBST([REPLACE_LSTAT])
  REPLACE_MKDIR=0;      AC_SUBST([REPLACE_MKDIR])
  REPLACE_MKFIFO=0;     AC_SUBST([REPLACE_MKFIFO])
  REPLACE_MKFIFOAT=0;   AC_SUBST([REPLACE_MKFIFOAT])
  REPLACE_MKNOD=0;      AC_SUBST([REPLACE_MKNOD])
  REPLACE_MKNODAT=0;    AC_SUBST([REPLACE_MKNODAT])
  REPLACE_STAT=0;       AC_SUBST([REPLACE_STAT])
  REPLACE_UTIMENSAT=0;  AC_SUBST([REPLACE_UTIMENSAT])
])
m4trace:m4/sys_time_h.m4:11: -1- AC_DEFUN_ONCE([gl_SYS_TIME_H], [
  dnl Use AC_REQUIRE here, so that the REPLACE_GETTIMEOFDAY=0 statement
  dnl below is expanded once only, before all REPLACE_GETTIMEOFDAY=1
  dnl statements that occur in other macros.
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  gl_CHECK_NEXT_HEADERS([sys/time.h])

  if test $ac_cv_header_sys_time_h != yes; then
    HAVE_SYS_TIME_H=0
  fi

  dnl On native Windows with MSVC, 'struct timeval' is defined in <winsock2.h>
  dnl only. So include that header in the list.
  gl_PREREQ_SYS_H_WINSOCK2
  AC_CACHE_CHECK([for struct timeval], [gl_cv_sys_struct_timeval],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#if HAVE_SYS_TIME_H
             #include <sys/time.h>
            #endif
            #include <time.h>
            #if HAVE_WINSOCK2_H
            # include <winsock2.h>
            #endif
          ]],
          [[static struct timeval x; x.tv_sec = x.tv_usec;]])],
       [gl_cv_sys_struct_timeval=yes],
       [gl_cv_sys_struct_timeval=no])
    ])
  if test $gl_cv_sys_struct_timeval != yes; then
    HAVE_STRUCT_TIMEVAL=0
  else
    dnl On native Windows with a 64-bit 'time_t', 'struct timeval' is defined
    dnl (in <sys/time.h> and <winsock2.h> for mingw64, in <winsock2.h> only
    dnl for MSVC) with a tv_sec field of type 'long' (32-bit!), which is
    dnl smaller than the 'time_t' type mandated by POSIX.
    dnl On OpenBSD 5.1 amd64, tv_sec is 64 bits and time_t 32 bits, but
    dnl that is good enough.
    AC_CACHE_CHECK([for wide-enough struct timeval.tv_sec member],
      [gl_cv_sys_struct_timeval_tv_sec],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#if HAVE_SYS_TIME_H
               #include <sys/time.h>
              #endif
              #include <time.h>
              #if HAVE_WINSOCK2_H
              # include <winsock2.h>
              #endif
            ]],
            [[static struct timeval x;
              typedef int verify_tv_sec_type[
                sizeof (time_t) <= sizeof x.tv_sec ? 1 : -1
              ];
            ]])],
         [gl_cv_sys_struct_timeval_tv_sec=yes],
         [gl_cv_sys_struct_timeval_tv_sec=no])
      ])
    if test $gl_cv_sys_struct_timeval_tv_sec != yes; then
      REPLACE_STRUCT_TIMEVAL=1
    fi
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <time.h>
    ]], [gettimeofday])
])
m4trace:m4/sys_time_h.m4:91: -1- AC_DEFUN([gl_SYS_TIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_time_h.m4:103: -1- AC_DEFUN([gl_SYS_TIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETTIMEOFDAY])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
])
m4trace:m4/sys_time_h.m4:112: -1- AC_DEFUN([gl_SYS_TIME_H_DEFAULTS], [
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_GETTIMEOFDAY=1;       AC_SUBST([HAVE_GETTIMEOFDAY])
  HAVE_STRUCT_TIMEVAL=1;     AC_SUBST([HAVE_STRUCT_TIMEVAL])
  HAVE_SYS_TIME_H=1;         AC_SUBST([HAVE_SYS_TIME_H])
  REPLACE_GETTIMEOFDAY=0;    AC_SUBST([REPLACE_GETTIMEOFDAY])
  REPLACE_STRUCT_TIMEVAL=0;  AC_SUBST([REPLACE_STRUCT_TIMEVAL])
])
m4trace:m4/sys_types_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_TYPES_H], [
  AC_REQUIRE([gl_SYS_TYPES_H_DEFAULTS])

  dnl Use sane struct stat types in OpenVMS 8.2 and later.
  AC_DEFINE([_USE_STD_STAT], 1, [For standard stat data types on VMS.])

  gl_NEXT_HEADERS([sys/types.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to override the 'off_t' type.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Whether to override the 'dev_t' and 'ino_t' types.
  m4_ifdef([gl_WINDOWS_STAT_INODES], [
    AC_REQUIRE([gl_WINDOWS_STAT_INODES])
  ], [
    WINDOWS_STAT_INODES=0
  ])
  AC_SUBST([WINDOWS_STAT_INODES])
])
m4trace:m4/sys_types_h.m4:37: -1- AC_DEFUN([gl_SYS_TYPES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TYPE_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TYPE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TYPES_H_DEFAULTS])
])
m4trace:m4/sys_types_h.m4:45: -1- AC_DEFUN([gl_SYS_TYPES_H_DEFAULTS], [
])
m4trace:m4/sys_types_h.m4:53: -1- AC_DEFUN([AC_HEADER_MAJOR], [AC_CHECK_HEADERS_ONCE([sys/types.h])
AC_CHECK_HEADER([sys/mkdev.h],
                [AC_DEFINE([MAJOR_IN_MKDEV], [1],
                           [Define to 1 if `major', `minor', and `makedev' are
                            declared in <mkdev.h>.])])
if test $ac_cv_header_sys_mkdev_h = no; then
  AC_CHECK_HEADER([sys/sysmacros.h],
                  [AC_DEFINE([MAJOR_IN_SYSMACROS], [1],
                             [Define to 1 if `major', `minor', and `makedev'
                              are declared in <sysmacros.h>.])])
fi
])
m4trace:m4/sys_uio_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_UIO_H], [
  AC_REQUIRE([gl_SYS_UIO_H_DEFAULTS])
  dnl <sys/uio.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/uio.h])
  if test $ac_cv_header_sys_uio_h = yes; then
    HAVE_SYS_UIO_H=1
  else
    HAVE_SYS_UIO_H=0
  fi
  AC_SUBST([HAVE_SYS_UIO_H])
])
m4trace:m4/sys_uio_h.m4:24: -1- AC_DEFUN([gl_SYS_UIO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_UIO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_uio_h.m4:36: -1- AC_DEFUN([gl_SYS_UIO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_UIO_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_UIO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_UIO_H_DEFAULTS])
])
m4trace:m4/sys_uio_h.m4:44: -1- AC_DEFUN([gl_SYS_UIO_H_DEFAULTS], [
])
m4trace:m4/sys_utsname_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_UTSNAME_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_SYS_UTSNAME_H_DEFAULTS])

  dnl <sys/utsname.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/utsname.h])
  if test $ac_cv_header_sys_utsname_h != yes; then
    HAVE_SYS_UTSNAME_H=0
    HAVE_STRUCT_UTSNAME=0
  else
    HAVE_SYS_UTSNAME_H=1
    AC_CHECK_TYPES([struct utsname], [], [HAVE_STRUCT_UTSNAME=0], [[
/* Minix 3.1.8 has a bug: <stddef.h> must be included before
   <sys/utsname.h>.  */
#include <stddef.h>
#include <sys/utsname.h>
      ]])
  fi
  AC_SUBST([HAVE_SYS_UTSNAME_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
    /* Minix 3.1.8 has a bug: <stddef.h> must be included before
       <sys/utsname.h>.  */
    #include <stddef.h>
    #include <sys/utsname.h>
    ]], [uname])
])
m4trace:m4/sys_utsname_h.m4:45: -1- AC_DEFUN([gl_SYS_UTSNAME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/sys_utsname_h.m4:55: -1- AC_DEFUN([gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_UTSNAME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNAME])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_UTSNAME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_UTSNAME_H_DEFAULTS])
])
m4trace:m4/sys_utsname_h.m4:64: -1- AC_DEFUN([gl_SYS_UTSNAME_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_UNAME=1;           AC_SUBST([HAVE_UNAME])
  HAVE_STRUCT_UTSNAME=1;  AC_SUBST([HAVE_STRUCT_UTSNAME])
])
m4trace:m4/sys_wait_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_WAIT_H], [
  AC_REQUIRE([gl_SYS_WAIT_H_DEFAULTS])

  dnl <sys/wait.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/wait.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/wait.h>]],
    [waitpid])
])
m4trace:m4/sys_wait_h.m4:27: -1- AC_DEFUN([gl_SYS_WAIT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_WAIT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_wait_h.m4:39: -1- AC_DEFUN([gl_SYS_WAIT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_WAIT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WAITPID])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_WAIT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_WAIT_H_DEFAULTS])
])
m4trace:m4/sys_wait_h.m4:48: -1- AC_DEFUN([gl_SYS_WAIT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
])
m4trace:m4/tempname.m4:10: -1- AC_DEFUN([gl_FUNC_GEN_TEMPNAME], [
  gl_PREREQ_TEMPNAME
])
m4trace:m4/tempname.m4:16: -1- AC_DEFUN([gl_PREREQ_TEMPNAME], [
  :
])
m4trace:m4/termios_h.m4:7: -1- AC_DEFUN_ONCE([gl_TERMIOS_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_TERMIOS_H_DEFAULTS])

  gl_CHECK_NEXT_HEADERS([termios.h])
  if test $ac_cv_header_termios_h != yes; then
    HAVE_TERMIOS_H=0
  fi

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <termios.h>]],
    [tcgetsid])
])
m4trace:m4/termios_h.m4:32: -1- AC_DEFUN([gl_TERMIOS_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_TERMIOS_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/termios_h.m4:44: -1- AC_DEFUN([gl_TERMIOS_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_TERMIOS_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TCGETSID])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_TERMIOS_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_TERMIOS_H_DEFAULTS])
])
m4trace:m4/termios_h.m4:53: -1- AC_DEFUN([gl_TERMIOS_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_TCGETSID=1;   AC_SUBST([HAVE_DECL_TCGETSID])
  HAVE_TERMIOS_H=1;       AC_SUBST([HAVE_TERMIOS_H])
])
m4trace:m4/thread.m4:7: -1- AC_DEFUN([gl_THREAD], [
  AC_REQUIRE([gl_THREADLIB])

  if test $gl_threads_api = posix; then
    gl_save_LIBS="$LIBS"
    LIBS="$LIBS $LIBMULTITHREAD"
    AC_CHECK_FUNCS([pthread_atfork])
    LIBS="$gl_save_LIBS"
  fi
])
m4trace:m4/threadlib.m4:54: -1- AC_DEFUN([gl_ANYTHREADLIB_EARLY], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test -z "$gl_anythreadlib_early_done"; then
    case "$host_os" in
      osf*)
        # On OSF/1, the compiler needs the flag -D_REENTRANT so that it
        # groks <pthread.h>. cc also understands the flag -pthread, but
        # we don't use it because 1. gcc-2.95 doesn't understand -pthread,
        # 2. putting a flag into CPPFLAGS that has an effect on the linker
        # causes the AC_LINK_IFELSE test below to succeed unexpectedly,
        # leading to wrong values of LIBTHREAD and LTLIBTHREAD.
        CPPFLAGS="$CPPFLAGS -D_REENTRANT"
        ;;
    esac
    # Some systems optimize for single-threaded programs by default, and
    # need special flags to disable these optimizations. For example, the
    # definition of 'errno' in <errno.h>.
    case "$host_os" in
      aix* | freebsd*) CPPFLAGS="$CPPFLAGS -D_THREAD_SAFE" ;;
      solaris*) CPPFLAGS="$CPPFLAGS -D_REENTRANT" ;;
    esac
    gl_anythreadlib_early_done=done
  fi
])
m4trace:m4/threadlib.m4:82: -1- AC_DEFUN([gl_WEAK_SYMBOLS], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether imported symbols can be declared weak],
    [gl_cv_have_weak],
    [case "$host_os" in
       cygwin*)
         dnl On Cygwin 3.2.0 with gcc 10.2, the test below would succeed, but
         dnl programs that use pthread_in_use() with weak symbol references
         dnl crash miserably at runtime.
         gl_cv_have_weak="guessing no"
         ;;
       *)
         gl_cv_have_weak=no
         dnl First, test whether the compiler accepts it syntactically.
         AC_LINK_IFELSE(
           [AC_LANG_PROGRAM(
              [[extern void xyzzy ();
#pragma weak xyzzy]],
              [[xyzzy();]])],
           [gl_cv_have_weak=maybe])
         if test $gl_cv_have_weak = maybe; then
           dnl Second, test whether it actually works. On Cygwin 1.7.2, with
           dnl gcc 4.3, symbols declared weak always evaluate to the address 0.
           AC_RUN_IFELSE(
             [AC_LANG_SOURCE([[
#include <stdio.h>
#pragma weak fputs
int main ()
{
  return (fputs == NULL);
}]])],
             [gl_cv_have_weak=yes],
             [gl_cv_have_weak=no],
             [dnl When cross-compiling, assume that only ELF platforms support
              dnl weak symbols.
              AC_EGREP_CPP([Extensible Linking Format],
                [#ifdef __ELF__
                 Extensible Linking Format
                 #endif
                ],
                [gl_cv_have_weak="guessing yes"],
                [gl_cv_have_weak="guessing no"])
             ])
         fi
         ;;
     esac
     dnl But when linking statically, weak symbols don't work.
     case " $LDFLAGS " in
       *" -static "*) gl_cv_have_weak=no ;;
     esac
     dnl Test for a bug in FreeBSD 11: A link error occurs when using a weak
     dnl symbol and linking against a shared library that has a dependency on
     dnl the shared library that defines the symbol.
     case "$gl_cv_have_weak" in
       *yes)
         case "$host_os" in
           freebsd* | dragonfly* | midnightbsd*)
             : > conftest1.c
             $CC $CPPFLAGS $CFLAGS $LDFLAGS -fPIC -shared -o libempty.so conftest1.c -lpthread >&AS_MESSAGE_LOG_FD 2>&1
             cat <<EOF > conftest2.c
#include <pthread.h>
#pragma weak pthread_mutexattr_gettype
int main ()
{
  return (pthread_mutexattr_gettype != NULL);
}
EOF
             $CC $CPPFLAGS $CFLAGS $LDFLAGS -o conftest conftest2.c libempty.so >&AS_MESSAGE_LOG_FD 2>&1 \
               || gl_cv_have_weak=no
             rm -f conftest1.c libempty.so conftest2.c conftest
             ;;
         esac
         ;;
     esac
    ])
  case "$gl_cv_have_weak" in
    *yes)
      AC_DEFINE([HAVE_WEAK_SYMBOLS], [1],
        [Define to 1 if the compiler and linker support weak declarations of symbols.])
      ;;
  esac
])
m4trace:m4/threadlib.m4:186: -1- AC_DEFUN([gl_PTHREADLIB_BODY], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  if test -z "$gl_pthreadlib_body_done"; then
    gl_pthread_api=no
    LIBPTHREAD=
    LIBPMULTITHREAD=
    # On OSF/1, the compiler needs the flag -pthread or -D_REENTRANT so that
    # it groks <pthread.h>. It's added above, in gl_ANYTHREADLIB_EARLY.
    AC_CHECK_HEADER([pthread.h],
      [gl_have_pthread_h=yes], [gl_have_pthread_h=no])
    if test "$gl_have_pthread_h" = yes; then
      # Other possible tests:
      #   -lpthreads (FSU threads, PCthreads)
      #   -lgthreads
      # Test whether both pthread_mutex_lock and pthread_mutexattr_init exist
      # in libc. IRIX 6.5 has the first one in both libc and libpthread, but
      # the second one only in libpthread, and lock.c needs it.
      #
      # If -pthread works, prefer it to -lpthread, since Ubuntu 14.04
      # needs -pthread for some reason.  See:
      # https://lists.gnu.org/r/bug-gnulib/2014-09/msg00023.html
      save_LIBS=$LIBS
      for gl_pthread in '' '-pthread'; do
        LIBS="$LIBS $gl_pthread"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <pthread.h>
               pthread_mutex_t m;
               pthread_mutexattr_t ma;
             ]],
             [[pthread_mutex_lock (&m);
               pthread_mutexattr_init (&ma);]])],
          [gl_pthread_api=yes
           LIBPTHREAD=$gl_pthread
           LIBPMULTITHREAD=$gl_pthread])
        LIBS=$save_LIBS
        test $gl_pthread_api = yes && break
      done
      echo "$as_me:__oline__: gl_pthread_api=$gl_pthread_api" >&AS_MESSAGE_LOG_FD
      echo "$as_me:__oline__: LIBPTHREAD=$LIBPTHREAD" >&AS_MESSAGE_LOG_FD

      gl_pthread_in_glibc=no
      # On Linux with glibc >= 2.34, libc contains the fully functional
      # pthread functions.
      case "$host_os" in
        linux*)
          AC_EGREP_CPP([Lucky user],
            [#include <features.h>
             #ifdef __GNU_LIBRARY__
              #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 34) || (__GLIBC__ > 2)
               Lucky user
              #endif
             #endif
            ],
            [gl_pthread_in_glibc=yes],
            [])
          ;;
      esac
      echo "$as_me:__oline__: gl_pthread_in_glibc=$gl_pthread_in_glibc" >&AS_MESSAGE_LOG_FD

      # Test for libpthread by looking for pthread_kill. (Not pthread_self,
      # since it is defined as a macro on OSF/1.)
      if test $gl_pthread_api = yes && test -z "$LIBPTHREAD"; then
        # The program links fine without libpthread. But it may actually
        # need to link with libpthread in order to create multiple threads.
        AC_CHECK_LIB([pthread], [pthread_kill],
          [if test $gl_pthread_in_glibc = yes; then
             LIBPMULTITHREAD=
           else
             LIBPMULTITHREAD=-lpthread
             # On Solaris and HP-UX, most pthread functions exist also in libc.
             # Therefore pthread_in_use() needs to actually try to create a
             # thread: pthread_create from libc will fail, whereas
             # pthread_create will actually create a thread.
             # On Solaris 10 or newer, this test is no longer needed, because
             # libc contains the fully functional pthread functions.
             case "$host_os" in
               solaris | solaris2.[1-9] | solaris2.[1-9].* | hpux*)
                 AC_DEFINE([PTHREAD_IN_USE_DETECTION_HARD], [1],
                   [Define if the pthread_in_use() detection is hard.])
             esac
           fi
          ])
      elif test $gl_pthread_api != yes; then
        # Some library is needed. Try libpthread and libc_r.
        AC_CHECK_LIB([pthread], [pthread_kill],
          [gl_pthread_api=yes
           LIBPTHREAD=-lpthread
           LIBPMULTITHREAD=-lpthread])
        if test $gl_pthread_api != yes; then
          # For FreeBSD 4.
          AC_CHECK_LIB([c_r], [pthread_kill],
            [gl_pthread_api=yes
             LIBPTHREAD=-lc_r
             LIBPMULTITHREAD=-lc_r])
        fi
      fi
      echo "$as_me:__oline__: LIBPMULTITHREAD=$LIBPMULTITHREAD" >&AS_MESSAGE_LOG_FD
    fi
    AC_MSG_CHECKING([whether POSIX threads API is available])
    AC_MSG_RESULT([$gl_pthread_api])
    AC_SUBST([LIBPTHREAD])
    AC_SUBST([LIBPMULTITHREAD])
    if test $gl_pthread_api = yes; then
      AC_DEFINE([HAVE_PTHREAD_API], [1],
        [Define if you have the <pthread.h> header and the POSIX threads API.])
    fi

    dnl On some systems, sched_yield is in librt, rather than in libpthread.
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <sched.h>]],
         [[sched_yield ();]])],
      [LIB_SCHED_YIELD=
      ],
      [dnl Solaris 7...10 has sched_yield in librt, not in libpthread or libc.
       AC_CHECK_LIB([rt], [sched_yield], [LIB_SCHED_YIELD=-lrt],
         [dnl Solaris 2.5.1, 2.6 has sched_yield in libposix4, not librt.
          AC_CHECK_LIB([posix4], [sched_yield], [LIB_SCHED_YIELD=-lposix4])])
      ])
    AC_SUBST([LIB_SCHED_YIELD])

    gl_pthreadlib_body_done=done
  fi
])
m4trace:m4/threadlib.m4:313: -1- AC_DEFUN([gl_PTHREADLIB], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  gl_PTHREADLIB_BODY
])
m4trace:m4/threadlib.m4:333: -1- AC_DEFUN([gl_STDTHREADLIB_BODY], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test -z "$gl_stdthreadlib_body_done"; then
    AC_CHECK_HEADERS_ONCE([threads.h])

    case "$host_os" in
      mingw*)
        LIBSTDTHREAD=
        ;;
      *)
        gl_PTHREADLIB_BODY
        if test $ac_cv_header_threads_h = yes; then
          dnl glibc >= 2.29 has thrd_create in libpthread.
          dnl FreeBSD >= 10 has thrd_create in libstdthreads; this library depends
          dnl on libpthread (for the symbol 'pthread_mutexattr_gettype').
          dnl glibc >= 2.34, AIX >= 7.1, and Solaris >= 11.4 have thrd_create in
          dnl libc.
          AC_CHECK_FUNCS([thrd_create])
          if test $ac_cv_func_thrd_create = yes; then
            LIBSTDTHREAD=
          else
            AC_CHECK_LIB([stdthreads], [thrd_create], [
              LIBSTDTHREAD='-lstdthreads -lpthread'
            ], [
              dnl Guess that thrd_create is in libpthread.
              LIBSTDTHREAD="$LIBPMULTITHREAD"
            ])
          fi
        else
          dnl Libraries needed by thrd.c, mtx.c, cnd.c, tss.c.
          LIBSTDTHREAD="$LIBPMULTITHREAD $LIB_SCHED_YIELD"
        fi
        ;;
    esac
    AC_SUBST([LIBSTDTHREAD])

    AC_MSG_CHECKING([whether ISO C threads API is available])
    AC_MSG_RESULT([$ac_cv_header_threads_h])
    gl_stdthreadlib_body_done=done
  fi
])
m4trace:m4/threadlib.m4:377: -1- AC_DEFUN([gl_STDTHREADLIB], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  gl_STDTHREADLIB_BODY
])
m4trace:m4/threadlib.m4:414: -1- AC_DEFUN([gl_THREADLIB_EARLY], [
  AC_REQUIRE([gl_THREADLIB_EARLY_BODY])
])
m4trace:m4/threadlib.m4:421: -1- AC_DEFUN([gl_THREADLIB_EARLY_BODY], [
  dnl Ordering constraints: This macro modifies CPPFLAGS in a way that
  dnl influences the result of the autoconf tests that test for *_unlocked
  dnl declarations, on AIX 5 at least. Therefore it must come early.
  AC_BEFORE([$0], [gl_FUNC_GLIBC_UNLOCKED_IO])dnl
  AC_BEFORE([$0], [gl_ARGP])dnl

  AC_REQUIRE([AC_CANONICAL_HOST])
  dnl _GNU_SOURCE is needed for pthread_rwlock_t on glibc systems.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  dnl Check for multithreading.
  m4_ifdef([gl_THREADLIB_DEFAULT_NO],
    [m4_divert_text([DEFAULTS], [gl_use_threads_default=no])],
    [m4_divert_text([DEFAULTS], [gl_use_threads_default=])])
  m4_divert_text([DEFAULTS], [gl_use_winpthreads_default=])
  AC_ARG_ENABLE([threads],
AS_HELP_STRING([--enable-threads={isoc|posix|isoc+posix|windows}], [specify multithreading API])m4_ifdef([gl_THREADLIB_DEFAULT_NO], [], [
AS_HELP_STRING([--disable-threads], [build without multithread safety])]),
    [gl_use_threads=$enableval],
    [if test -n "$gl_use_threads_default"; then
       gl_use_threads="$gl_use_threads_default"
     else
changequote(,)dnl
       case "$host_os" in
         dnl Disable multithreading by default on OSF/1, because it interferes
         dnl with fork()/exec(): When msgexec is linked with -lpthread, its
         dnl child process gets an endless segmentation fault inside execvp().
         osf*) gl_use_threads=no ;;
         dnl Disable multithreading by default on Cygwin 1.5.x, because it has
         dnl bugs that lead to endless loops or crashes. See
         dnl <https://cygwin.com/ml/cygwin/2009-08/msg00283.html>.
         cygwin*)
               case `uname -r` in
                 1.[0-5].*) gl_use_threads=no ;;
                 *)         gl_use_threads=yes ;;
               esac
               ;;
         dnl Obey gl_AVOID_WINPTHREAD on mingw.
         mingw*)
               case "$gl_use_winpthreads_default" in
                 yes) gl_use_threads=posix ;;
                 no)  gl_use_threads=windows ;;
                 *)   gl_use_threads=yes ;;
               esac
               ;;
         *)    gl_use_threads=yes ;;
       esac
changequote([,])dnl
     fi
    ])
  if test "$gl_use_threads" = yes \
     || test "$gl_use_threads" = isoc \
     || test "$gl_use_threads" = posix \
     || test "$gl_use_threads" = isoc+posix; then
    # For using <threads.h> or <pthread.h>:
    gl_ANYTHREADLIB_EARLY
  fi
])
m4trace:m4/threadlib.m4:483: -1- AC_DEFUN([gl_THREADLIB_BODY], [
  AC_REQUIRE([gl_THREADLIB_EARLY_BODY])
  gl_threads_api=none
  LIBTHREAD=
  LTLIBTHREAD=
  LIBMULTITHREAD=
  LTLIBMULTITHREAD=
  if test "$gl_use_threads" != no; then
    dnl Check whether the compiler and linker support weak declarations.
    gl_WEAK_SYMBOLS
    if case "$gl_cv_have_weak" in *yes) true;; *) false;; esac; then
      dnl If we use weak symbols to implement pthread_in_use / pth_in_use /
      dnl thread_in_use, we also need to test whether the ISO C 11 thrd_create
      dnl facility is in use.
      AC_CHECK_HEADERS_ONCE([threads.h])
      :
    fi
    if test "$gl_use_threads" = isoc || test "$gl_use_threads" = isoc+posix; then
      AC_CHECK_HEADERS_ONCE([threads.h])
      gl_have_isoc_threads="$ac_cv_header_threads_h"
    fi
    if test "$gl_use_threads" = yes \
       || test "$gl_use_threads" = posix \
       || test "$gl_use_threads" = isoc+posix; then
      gl_PTHREADLIB_BODY
      LIBTHREAD=$LIBPTHREAD LTLIBTHREAD=$LIBPTHREAD
      LIBMULTITHREAD=$LIBPMULTITHREAD LTLIBMULTITHREAD=$LIBPMULTITHREAD
      if test $gl_pthread_api = yes; then
        if test "$gl_use_threads" = isoc+posix && test "$gl_have_isoc_threads" = yes; then
          gl_threads_api='isoc+posix'
          AC_DEFINE([USE_ISOC_AND_POSIX_THREADS], [1],
            [Define if the combination of the ISO C and POSIX multithreading APIs can be used.])
          LIBTHREAD= LTLIBTHREAD=
        else
          gl_threads_api=posix
          AC_DEFINE([USE_POSIX_THREADS], [1],
            [Define if the POSIX multithreading library can be used.])
          if test -z "$LIBMULTITHREAD" && test -z "$LTLIBMULTITHREAD"; then
            AC_DEFINE([USE_POSIX_THREADS_FROM_LIBC], [1],
              [Define if references to the POSIX multithreading library are satisfied by libc.])
          else
            if case "$gl_cv_have_weak" in *yes) true;; *) false;; esac; then
              AC_DEFINE([USE_POSIX_THREADS_WEAK], [1],
                [Define if references to the POSIX multithreading library should be made weak.])
              LIBTHREAD= LTLIBTHREAD=
            else
              case "$host_os" in
                freebsd* | dragonfly* | midnightbsd*)
                  if test "x$LIBTHREAD" != "x$LIBMULTITHREAD"; then
                    dnl If weak symbols can't tell whether pthread_create(), pthread_key_create()
                    dnl etc. will succeed, we need a runtime test.
                    AC_DEFINE([PTHREAD_IN_USE_DETECTION_HARD], [1],
                      [Define if the pthread_in_use() detection is hard.])
                  fi
                  ;;
              esac
            fi
          fi
        fi
      fi
    fi
    if test $gl_threads_api = none; then
      if test "$gl_use_threads" = isoc && test "$gl_have_isoc_threads" = yes; then
        gl_STDTHREADLIB_BODY
        LIBTHREAD=$LIBSTDTHREAD LTLIBTHREAD=$LIBSTDTHREAD
        LIBMULTITHREAD=$LIBSTDTHREAD LTLIBMULTITHREAD=$LIBSTDTHREAD
        gl_threads_api=isoc
        AC_DEFINE([USE_ISOC_THREADS], [1],
          [Define if the ISO C multithreading library can be used.])
      fi
    fi
    if test $gl_threads_api = none; then
      case "$gl_use_threads" in
        yes | windows | win32) # The 'win32' is for backward compatibility.
          if { case "$host_os" in
                 mingw*) true;;
                 *) false;;
               esac
             }; then
            gl_threads_api=windows
            AC_DEFINE([USE_WINDOWS_THREADS], [1],
              [Define if the native Windows multithreading API can be used.])
          fi
          ;;
      esac
    fi
  fi
  AC_MSG_CHECKING([for multithread API to use])
  AC_MSG_RESULT([$gl_threads_api])
  AC_SUBST([LIBTHREAD])
  AC_SUBST([LTLIBTHREAD])
  AC_SUBST([LIBMULTITHREAD])
  AC_SUBST([LTLIBMULTITHREAD])
])
m4trace:m4/threadlib.m4:579: -1- AC_DEFUN([gl_THREADLIB], [
  AC_REQUIRE([gl_THREADLIB_EARLY])
  AC_REQUIRE([gl_THREADLIB_BODY])
])
m4trace:m4/threadlib.m4:592: -1- AC_DEFUN([gl_DISABLE_THREADS], [
  m4_divert_text([INIT_PREPARE], [gl_use_threads_default=no])
])
m4trace:m4/threadlib.m4:604: -1- AC_DEFUN([gl_AVOID_WINPTHREAD], [
  m4_divert_text([INIT_PREPARE], [gl_use_winpthreads_default=no])
])
m4trace:m4/time_h.m4:13: -1- AC_DEFUN_ONCE([gl_TIME_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_TIME_H_DEFAULTS])

  gl_NEXT_HEADERS([time.h])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_TIMESPEC])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CACHE_CHECK([for TIME_UTC in <time.h>],
    [gl_cv_time_h_has_TIME_UTC],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static int x = TIME_UTC; x++;]])],
       [gl_cv_time_h_has_TIME_UTC=yes],
       [gl_cv_time_h_has_TIME_UTC=no])])
  if test $gl_cv_time_h_has_TIME_UTC = yes; then
    TIME_H_DEFINES_TIME_UTC=1
  else
    TIME_H_DEFINES_TIME_UTC=0
  fi
  AC_SUBST([TIME_H_DEFINES_TIME_UTC])
])
m4trace:m4/time_h.m4:44: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_TIMESPEC], [
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CACHE_CHECK([for struct timespec in <time.h>],
    [gl_cv_sys_struct_timespec_in_time_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
       [gl_cv_sys_struct_timespec_in_time_h=yes],
       [gl_cv_sys_struct_timespec_in_time_h=no])])

  TIME_H_DEFINES_STRUCT_TIMESPEC=0
  SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=0
  PTHREAD_H_DEFINES_STRUCT_TIMESPEC=0
  UNISTD_H_DEFINES_STRUCT_TIMESPEC=0
  if test $gl_cv_sys_struct_timespec_in_time_h = yes; then
    TIME_H_DEFINES_STRUCT_TIMESPEC=1
  else
    AC_CACHE_CHECK([for struct timespec in <sys/time.h>],
      [gl_cv_sys_struct_timespec_in_sys_time_h],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
            ]],
            [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
         [gl_cv_sys_struct_timespec_in_sys_time_h=yes],
         [gl_cv_sys_struct_timespec_in_sys_time_h=no])])
    if test $gl_cv_sys_struct_timespec_in_sys_time_h = yes; then
      SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=1
    else
      AC_CACHE_CHECK([for struct timespec in <pthread.h>],
        [gl_cv_sys_struct_timespec_in_pthread_h],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <pthread.h>
              ]],
              [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
           [gl_cv_sys_struct_timespec_in_pthread_h=yes],
           [gl_cv_sys_struct_timespec_in_pthread_h=no])])
      if test $gl_cv_sys_struct_timespec_in_pthread_h = yes; then
        PTHREAD_H_DEFINES_STRUCT_TIMESPEC=1
      else
        AC_CACHE_CHECK([for struct timespec in <unistd.h>],
          [gl_cv_sys_struct_timespec_in_unistd_h],
          [AC_COMPILE_IFELSE(
             [AC_LANG_PROGRAM(
                [[#include <unistd.h>
                ]],
                [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
             [gl_cv_sys_struct_timespec_in_unistd_h=yes],
             [gl_cv_sys_struct_timespec_in_unistd_h=no])])
        if test $gl_cv_sys_struct_timespec_in_unistd_h = yes; then
          UNISTD_H_DEFINES_STRUCT_TIMESPEC=1
        fi
      fi
    fi
  fi
  AC_SUBST([TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([SYS_TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([PTHREAD_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([UNISTD_H_DEFINES_STRUCT_TIMESPEC])
])
m4trace:m4/time_h.m4:113: -1- AC_DEFUN([gl_TIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_TIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/time_h.m4:125: -1- AC_DEFUN([gl_TIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_TIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NANOSLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRFTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMEGM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GETRES])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_RZ])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZSET])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TZSET], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_TIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
])
m4trace:m4/time_h.m4:147: -1- AC_DEFUN([gl_TIME_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_LOCALTIME_R=1;               AC_SUBST([HAVE_DECL_LOCALTIME_R])
  HAVE_NANOSLEEP=1;                      AC_SUBST([HAVE_NANOSLEEP])
  HAVE_STRPTIME=1;                       AC_SUBST([HAVE_STRPTIME])
  HAVE_TIMEGM=1;                         AC_SUBST([HAVE_TIMEGM])
  HAVE_TIMESPEC_GET=1;                   AC_SUBST([HAVE_TIMESPEC_GET])
  HAVE_TIMESPEC_GETRES=1;                AC_SUBST([HAVE_TIMESPEC_GETRES])
  dnl Even GNU libc does not have timezone_t yet.
  HAVE_TIMEZONE_T=0;                     AC_SUBST([HAVE_TIMEZONE_T])
  dnl If another module says to replace or to not replace, do that.
  dnl Otherwise, replace only if someone compiles with -DGNULIB_PORTCHECK;
  dnl this lets maintainers check for portability.
  REPLACE_CTIME=GNULIB_PORTCHECK;        AC_SUBST([REPLACE_CTIME])
  REPLACE_LOCALTIME_R=GNULIB_PORTCHECK;  AC_SUBST([REPLACE_LOCALTIME_R])
  REPLACE_MKTIME=GNULIB_PORTCHECK;       AC_SUBST([REPLACE_MKTIME])
  REPLACE_NANOSLEEP=GNULIB_PORTCHECK;    AC_SUBST([REPLACE_NANOSLEEP])
  REPLACE_STRFTIME=GNULIB_PORTCHECK;     AC_SUBST([REPLACE_STRFTIME])
  REPLACE_TIMEGM=GNULIB_PORTCHECK;       AC_SUBST([REPLACE_TIMEGM])
  REPLACE_TZSET=GNULIB_PORTCHECK;        AC_SUBST([REPLACE_TZSET])

  dnl Hack so that the time module doesn't depend on the sys_time module.
  dnl First, default GNULIB_GETTIMEOFDAY to 0 if sys_time is absent.
  : ${GNULIB_GETTIMEOFDAY=0};            AC_SUBST([GNULIB_GETTIMEOFDAY])
  dnl Second, it's OK to not use GNULIB_PORTCHECK for REPLACE_GMTIME
  dnl and REPLACE_LOCALTIME, as portability to Solaris 2.6 and earlier
  dnl is no longer a big deal.
  REPLACE_GMTIME=0;                      AC_SUBST([REPLACE_GMTIME])
  REPLACE_LOCALTIME=0;                   AC_SUBST([REPLACE_LOCALTIME])
])
m4trace:m4/time_r.m4:10: -1- AC_DEFUN([gl_TIME_R], [
  dnl Persuade glibc and Solaris <time.h> to declare localtime_r.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])

  dnl Some systems don't declare localtime_r() and gmtime_r() if _REENTRANT is
  dnl not defined.
  AC_CHECK_DECLS([localtime_r], [], [],
    [[/* mingw's <time.h> provides the functions asctime_r, ctime_r,
         gmtime_r, localtime_r only if <unistd.h> or <pthread.h> has
         been included before.  */
      #if defined __MINGW32__
      # include <unistd.h>
      #endif
      #include <time.h>
    ]])
  if test $ac_cv_have_decl_localtime_r = no; then
    HAVE_DECL_LOCALTIME_R=0
  fi

  AC_CHECK_FUNCS_ONCE([localtime_r])
  if test $ac_cv_func_localtime_r = yes; then
    HAVE_LOCALTIME_R=1
    AC_CACHE_CHECK([whether localtime_r is compatible with its POSIX signature],
      [gl_cv_time_r_posix],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[/* mingw's <time.h> provides the functions asctime_r, ctime_r,
                 gmtime_r, localtime_r only if <unistd.h> or <pthread.h> has
                 been included before.  */
              #if defined __MINGW32__
              # include <unistd.h>
              #endif
              #include <time.h>
            ]],
            [[/* We don't need to append 'restrict's to the argument types,
                 even though the POSIX signature has the 'restrict's,
                 since C99 says they can't affect type compatibility.  */
              struct tm * (*ptr) (time_t const *, struct tm *) = localtime_r;
              if (ptr) return 0;
              /* Check the return type is a pointer.
                 On HP-UX 10 it is 'int'.  */
              *localtime_r (0, 0);]])
         ],
         [gl_cv_time_r_posix=yes],
         [gl_cv_time_r_posix=no])
      ])
    if test $gl_cv_time_r_posix = yes; then
      REPLACE_LOCALTIME_R=0
    else
      REPLACE_LOCALTIME_R=1
    fi
  else
    HAVE_LOCALTIME_R=0
    dnl On mingw, localtime_r() is defined as an inline function; use through a
    dnl direct function call works but the use as a function pointer leads to a
    dnl link error.
    AC_CACHE_CHECK([whether localtime_r exists as an inline function],
      [gl_cv_func_localtime_r_inline],
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM(
            [[/* mingw's <time.h> provides the functions asctime_r, ctime_r,
                 gmtime_r, localtime_r only if <unistd.h> or <pthread.h> has
                 been included before.  */
              #if defined __MINGW32__
              # include <unistd.h>
              #endif
              #include <time.h>
            ]],
            [[time_t a;
              struct tm r;
              localtime_r (&a, &r);
            ]])
         ],
         [gl_cv_func_localtime_r_inline=yes],
         [gl_cv_func_localtime_r_inline=no])
      ])
    if test $gl_cv_func_localtime_r_inline = yes; then
      REPLACE_LOCALTIME_R=1
    fi
  fi
])
m4trace:m4/time_r.m4:97: -1- AC_DEFUN([gl_PREREQ_TIME_R], [
  :
])
m4trace:m4/time_rz.m4:10: -1- AC_DEFUN([gl_TIME_RZ], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_STRUCT_TIMEZONE])

  # On Mac OS X 10.6, localtime loops forever with some time_t values.
  # See Bug#27706, Bug#27736, and
  # https://lists.gnu.org/r/bug-gnulib/2017-07/msg00142.html
  AC_CACHE_CHECK([whether localtime works even near extrema],
    [gl_cv_func_localtime_works],
    [gl_cv_func_localtime_works=yes
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
            #include <string.h>
            #include <unistd.h>
            #include <time.h>
          ]], [[
            time_t t = -67768038400666600;
            struct tm *tm;
            char *tz = getenv ("TZ");
            if (! (tz && strcmp (tz, "QQQ0") == 0))
              return 0;
            alarm (2);
            tm = localtime (&t);
            /* Use TM and *TM to suppress over-optimization.  */
            return tm && tm->tm_isdst;
          ]])],
       [(TZ=QQQ0 ./conftest$EXEEXT) >/dev/null 2>&1 ||
           gl_cv_func_localtime_works=no],
       [],
       [gl_cv_func_localtime_works="guessing yes"])])
  if test "$gl_cv_func_localtime_works" = no; then
      AC_DEFINE([HAVE_LOCALTIME_INFLOOP_BUG], 1,
        [Define if localtime-like functions can loop forever on
         extreme arguments.])
  fi

  AC_CHECK_TYPES([timezone_t], [], [], [[#include <time.h>]])
  if test "$ac_cv_type_timezone_t" = yes; then
    HAVE_TIMEZONE_T=1
  fi
])
m4trace:m4/timegm.m4:7: -1- AC_DEFUN([gl_FUNC_TIMEGM], [
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MKTIME_WORKS])
  REPLACE_TIMEGM=0
  AC_CHECK_FUNCS_ONCE([timegm])
  if test $ac_cv_func_timegm = yes; then
    if test "$gl_cv_func_working_mktime" != yes; then
      # Assume that timegm is buggy if mktime is.
      REPLACE_TIMEGM=1
    fi
  else
    HAVE_TIMEGM=0
  fi
])
m4trace:m4/timegm.m4:24: -1- AC_DEFUN([gl_PREREQ_TIMEGM], [
  :
])
m4trace:m4/timer_time.m4:9: -1- AC_DEFUN([gl_TIMER_TIME], [
  dnl Based on clock_time.m4. See details there.

  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl Test whether the gnulib module 'threadlib' is in use.
  dnl Some packages like Emacs use --avoid=threadlib.
  dnl Write the symbol in such a way that it does not cause 'aclocal' to pick
  dnl the threadlib.m4 file that is installed in $PREFIX/share/aclocal/.
  m4_ifdef([gl_][PTHREADLIB], [AC_REQUIRE([gl_][PTHREADLIB])])

  AC_CHECK_DECL([timer_settime], [], [],
                [[#include <time.h>
                ]])
  LIB_TIMER_TIME=
  AC_SUBST([LIB_TIMER_TIME])
  AS_IF([test "$ac_cv_have_decl_timer_settime" = yes], [
    gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([timer_settime], [rt posix4],
                   [test "$ac_cv_search_timer_settime" = "none required" ||
                    LIB_TIMER_TIME=$ac_cv_search_timer_settime])
    m4_ifdef([gl_][PTHREADLIB],
      [dnl GLIBC uses threads to emulate posix timers when kernel support
       dnl is not available (like Linux < 2.6 or when used with kFreeBSD)
       dnl Now the pthread lib is linked automatically in the normal case,
       dnl but when linking statically, it needs to be explicitly specified.
       AC_EGREP_CPP([Thread],
         [#include <features.h>
          #ifdef __GNU_LIBRARY__
           #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ >= 2) || (__GLIBC__ > 2)) \
               && !(__UCLIBC__ && __HAS_NO_THREADS__)
            Thread emulation available
           #endif
          #endif
         ],
         [LIB_TIMER_TIME="$LIB_TIMER_TIME $LIBPMULTITHREAD"])])
    AC_CHECK_FUNCS([timer_settime])
    LIBS=$gl_saved_libs
  ])
])
m4trace:m4/timespec.m4:11: -1- AC_DEFUN([gl_TIMESPEC], [:])
m4trace:m4/tls.m4:9: -1- AC_DEFUN([gl_TLS], [
  AC_REQUIRE([gl_THREADLIB])
])
m4trace:m4/tm_gmtoff.m4:7: -1- AC_DEFUN([gl_TM_GMTOFF], [
 AC_CHECK_MEMBER([struct tm.tm_gmtoff],
                 [AC_DEFINE([HAVE_TM_GMTOFF], [1],
                            [Define if struct tm has the tm_gmtoff member.])],
                 ,
                 [#include <time.h>])
])
m4trace:m4/tmpdir.m4:9: -1- AC_DEFUN([gt_TMPDIR], [:])
m4trace:m4/tmpfile.m4:24: -1- AC_DEFUN([gl_FUNC_TMPFILE], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether tmpfile works],
    [gl_cv_func_tmpfile_works],
    [AC_EGREP_CPP([choke me], [
#if defined _WIN32 && !defined __CYGWIN__
choke me
#endif
       ],
       [gl_cv_func_tmpfile_works=no],
       [AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <stdio.h>
#include <stdlib.h>
int
main (void)
{
  return tmpfile () == NULL;
}]])],
          [gl_cv_func_tmpfile_works=yes],
          [gl_cv_func_tmpfile_works=no],
          [case "$host_os" in
                              # Guess no on Android.
             linux*-android*) gl_cv_func_tmpfile_works="guessing no" ;;
                              # Guess yes otherwise.
             *)               gl_cv_func_tmpfile_works="guessing yes" ;;
           esac
          ])
       ])
    ])
  case "$gl_cv_func_tmpfile_works" in
    *yes) ;;
    *) REPLACE_TMPFILE=1 ;;
  esac
])
m4trace:m4/tmpfile.m4:62: -1- AC_DEFUN([gl_PREREQ_TMPFILE], [:])
m4trace:m4/tzset.m4:10: -1- AC_DEFUN([gl_FUNC_TZSET], [
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  REPLACE_TZSET=0
  case "$host_os" in
    mingw*) REPLACE_TZSET=1 ;;
  esac
])
m4trace:m4/uname.m4:7: -1- AC_DEFUN([gl_FUNC_UNAME], [
  AC_REQUIRE([gl_SYS_UTSNAME_H_DEFAULTS])
  AC_CHECK_FUNCS([uname])
  if test $ac_cv_func_uname = no; then
    HAVE_UNAME=0
  fi
])
m4trace:m4/uname.m4:17: -1- AC_DEFUN([gl_PREREQ_UNAME], [
  :
])
m4trace:m4/ungetc.m4:7: -1- AC_DEFUN_ONCE([gl_FUNC_UNGETC_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CACHE_CHECK([whether ungetc works on arbitrary bytes],
    [gl_cv_func_ungetc_works],
    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <stdio.h>
      ]], [[FILE *f;
            if (!(f = fopen ("conftest.tmp", "w+")))
              return 1;
            if (fputs ("abc", f) < 0)
              { fclose (f); return 2; }
            rewind (f);
            if (fgetc (f) != 'a')
              { fclose (f); return 3; }
            if (fgetc (f) != 'b')
              { fclose (f); return 4; }
            if (ungetc ('d', f) != 'd')
              { fclose (f); return 5; }
            if (ftell (f) != 1)
              { fclose (f); return 6; }
            if (fgetc (f) != 'd')
              { fclose (f); return 7; }
            if (ftell (f) != 2)
              { fclose (f); return 8; }
            if (fseek (f, 0, SEEK_CUR) != 0)
              { fclose (f); return 9; }
            if (ftell (f) != 2)
              { fclose (f); return 10; }
            if (fgetc (f) != 'c')
              { fclose (f); return 11; }
            fclose (f);
            remove ("conftest.tmp");
          ]])],
        [gl_cv_func_ungetc_works=yes], [gl_cv_func_ungetc_works=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_ungetc_works="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_ungetc_works="guessing yes" ;;
                          # Guess yes on bionic systems.
           *-android*)    gl_cv_func_ungetc_works="guessing yes" ;;
                          # Guess yes on native Windows.
           mingw*)        gl_cv_func_ungetc_works="guessing yes" ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_ungetc_works="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
  gl_ftello_broken_after_ungetc=no
  case "$gl_cv_func_ungetc_works" in
    *yes) ;;
    *)
      dnl On macOS >= 10.15, where the above program fails with exit code 6,
      dnl we fix it through an ftello override.
      case "$host_os" in
        darwin*) gl_ftello_broken_after_ungetc=yes ;;
        *)
          AC_DEFINE([FUNC_UNGETC_BROKEN], [1],
            [Define to 1 if ungetc is broken when used on arbitrary bytes.])
          ;;
      esac
      ;;
  esac
])
m4trace:m4/unicodeio.m4:7: -1- AC_DEFUN([gl_UNICODEIO], [
  dnl Prerequisites of lib/unicodeio.c.
  gl_MUSL_LIBC
])
m4trace:m4/unistd-safer.m4:7: -1- AC_DEFUN([gl_UNISTD_SAFER], [
  AC_CHECK_FUNCS_ONCE([pipe])
])
m4trace:m4/unistd_h.m4:9: -1- AC_DEFUN_ONCE([gl_UNISTD_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  gl_CHECK_NEXT_HEADERS([unistd.h])
  if test $ac_cv_header_unistd_h = yes; then
    HAVE_UNISTD_H=1
  else
    HAVE_UNISTD_H=0
  fi
  AC_SUBST([HAVE_UNISTD_H])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Determine WINDOWS_64_BIT_OFF_T.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
/* Some systems declare various items in the wrong headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# if defined _WIN32 && ! defined __CYGWIN__
#  include <io.h>
# endif
#endif
    ]], [access chdir chown copy_file_range dup dup2 dup3 environ euidaccess
    execl execle execlp execv execve execvp execvpe
    faccessat fchdir
    fchownat fdatasync fsync ftruncate getcwd getdomainname getdtablesize
    getentropy getgroups gethostname getlogin getlogin_r getpagesize getpass
    getusershell setusershell endusershell
    group_member isatty lchown link linkat lseek pipe pipe2 pread pwrite
    readlink readlinkat rmdir sethostname sleep symlink symlinkat
    truncate ttyname_r unlink unlinkat usleep])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([execvpe])
  if test $ac_cv_have_decl_execvpe = no; then
    HAVE_DECL_EXECVPE=0
  fi
])
m4trace:m4/unistd_h.m4:66: -1- AC_DEFUN([gl_UNISTD_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_UNISTD_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/unistd_h.m4:78: -1- AC_DEFUN([gl_UNISTD_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_UNISTD_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCESS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPY_FILE_RANGE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP3])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ENVIRON])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EUIDACCESS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FACCESSAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHOWNAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDATASYNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSYNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTRUNCATE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCWD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDOMAINNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDTABLESIZE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETENTROPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETGROUPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETHOSTNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETOPT_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPAGESIZE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUSERSHELL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GROUP_MEMBER])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISATTY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSEEK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PWRITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READ])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RMDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETHOSTNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCATE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TTYNAME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_USLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WRITE])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ACCESS], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CLOSE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP2], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECL], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECV], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVPE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETCWD], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETPID], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ISATTY], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_LSEEK], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_READ], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_RMDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_SWAB], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UNLINK], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WRITE], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_UNISTD_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
])
m4trace:m4/unistd_h.m4:171: -1- AC_DEFUN([gl_UNISTD_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_CHOWN=1;                      AC_SUBST([HAVE_CHOWN])
  HAVE_COPY_FILE_RANGE=1;            AC_SUBST([HAVE_COPY_FILE_RANGE])
  HAVE_DUP3=1;                       AC_SUBST([HAVE_DUP3])
  HAVE_EUIDACCESS=1;                 AC_SUBST([HAVE_EUIDACCESS])
  HAVE_EXECVPE=1;                    AC_SUBST([HAVE_EXECVPE])
  HAVE_FACCESSAT=1;                  AC_SUBST([HAVE_FACCESSAT])
  HAVE_FCHDIR=1;                     AC_SUBST([HAVE_FCHDIR])
  HAVE_FCHOWNAT=1;                   AC_SUBST([HAVE_FCHOWNAT])
  HAVE_FDATASYNC=1;                  AC_SUBST([HAVE_FDATASYNC])
  HAVE_FSYNC=1;                      AC_SUBST([HAVE_FSYNC])
  HAVE_FTRUNCATE=1;                  AC_SUBST([HAVE_FTRUNCATE])
  HAVE_GETDTABLESIZE=1;              AC_SUBST([HAVE_GETDTABLESIZE])
  HAVE_GETENTROPY=1;                 AC_SUBST([HAVE_GETENTROPY])
  HAVE_GETGROUPS=1;                  AC_SUBST([HAVE_GETGROUPS])
  HAVE_GETHOSTNAME=1;                AC_SUBST([HAVE_GETHOSTNAME])
  HAVE_GETLOGIN=1;                   AC_SUBST([HAVE_GETLOGIN])
  HAVE_GETPAGESIZE=1;                AC_SUBST([HAVE_GETPAGESIZE])
  HAVE_GETPASS=1;                    AC_SUBST([HAVE_GETPASS])
  HAVE_GROUP_MEMBER=1;               AC_SUBST([HAVE_GROUP_MEMBER])
  HAVE_LCHOWN=1;                     AC_SUBST([HAVE_LCHOWN])
  HAVE_LINK=1;                       AC_SUBST([HAVE_LINK])
  HAVE_LINKAT=1;                     AC_SUBST([HAVE_LINKAT])
  HAVE_PIPE=1;                       AC_SUBST([HAVE_PIPE])
  HAVE_PIPE2=1;                      AC_SUBST([HAVE_PIPE2])
  HAVE_PREAD=1;                      AC_SUBST([HAVE_PREAD])
  HAVE_PWRITE=1;                     AC_SUBST([HAVE_PWRITE])
  HAVE_READLINK=1;                   AC_SUBST([HAVE_READLINK])
  HAVE_READLINKAT=1;                 AC_SUBST([HAVE_READLINKAT])
  HAVE_SETHOSTNAME=1;                AC_SUBST([HAVE_SETHOSTNAME])
  HAVE_SLEEP=1;                      AC_SUBST([HAVE_SLEEP])
  HAVE_SYMLINK=1;                    AC_SUBST([HAVE_SYMLINK])
  HAVE_SYMLINKAT=1;                  AC_SUBST([HAVE_SYMLINKAT])
  HAVE_UNLINKAT=1;                   AC_SUBST([HAVE_UNLINKAT])
  HAVE_USLEEP=1;                     AC_SUBST([HAVE_USLEEP])
  HAVE_DECL_ENVIRON=1;               AC_SUBST([HAVE_DECL_ENVIRON])
  HAVE_DECL_EXECVPE=1;               AC_SUBST([HAVE_DECL_EXECVPE])
  HAVE_DECL_FCHDIR=1;                AC_SUBST([HAVE_DECL_FCHDIR])
  HAVE_DECL_FDATASYNC=1;             AC_SUBST([HAVE_DECL_FDATASYNC])
  HAVE_DECL_GETDOMAINNAME=1;         AC_SUBST([HAVE_DECL_GETDOMAINNAME])
  HAVE_DECL_GETLOGIN=1;              AC_SUBST([HAVE_DECL_GETLOGIN])
  HAVE_DECL_GETLOGIN_R=1;            AC_SUBST([HAVE_DECL_GETLOGIN_R])
  HAVE_DECL_GETPAGESIZE=1;           AC_SUBST([HAVE_DECL_GETPAGESIZE])
  HAVE_DECL_GETUSERSHELL=1;          AC_SUBST([HAVE_DECL_GETUSERSHELL])
  HAVE_DECL_SETHOSTNAME=1;           AC_SUBST([HAVE_DECL_SETHOSTNAME])
  HAVE_DECL_TRUNCATE=1;              AC_SUBST([HAVE_DECL_TRUNCATE])
  HAVE_DECL_TTYNAME_R=1;             AC_SUBST([HAVE_DECL_TTYNAME_R])
  HAVE_OS_H=0;                       AC_SUBST([HAVE_OS_H])
  HAVE_SYS_PARAM_H=0;                AC_SUBST([HAVE_SYS_PARAM_H])
  REPLACE_ACCESS=0;                  AC_SUBST([REPLACE_ACCESS])
  REPLACE_CHOWN=0;                   AC_SUBST([REPLACE_CHOWN])
  REPLACE_CLOSE=0;                   AC_SUBST([REPLACE_CLOSE])
  REPLACE_COPY_FILE_RANGE=0;         AC_SUBST([REPLACE_COPY_FILE_RANGE])
  REPLACE_DUP=0;                     AC_SUBST([REPLACE_DUP])
  REPLACE_DUP2=0;                    AC_SUBST([REPLACE_DUP2])
  REPLACE_EXECL=0;                   AC_SUBST([REPLACE_EXECL])
  REPLACE_EXECLE=0;                  AC_SUBST([REPLACE_EXECLE])
  REPLACE_EXECLP=0;                  AC_SUBST([REPLACE_EXECLP])
  REPLACE_EXECV=0;                   AC_SUBST([REPLACE_EXECV])
  REPLACE_EXECVE=0;                  AC_SUBST([REPLACE_EXECVE])
  REPLACE_EXECVP=0;                  AC_SUBST([REPLACE_EXECVP])
  REPLACE_EXECVPE=0;                 AC_SUBST([REPLACE_EXECVPE])
  REPLACE_FACCESSAT=0;               AC_SUBST([REPLACE_FACCESSAT])
  REPLACE_FCHOWNAT=0;                AC_SUBST([REPLACE_FCHOWNAT])
  REPLACE_FTRUNCATE=0;               AC_SUBST([REPLACE_FTRUNCATE])
  REPLACE_GETCWD=0;                  AC_SUBST([REPLACE_GETCWD])
  REPLACE_GETDOMAINNAME=0;           AC_SUBST([REPLACE_GETDOMAINNAME])
  REPLACE_GETDTABLESIZE=0;           AC_SUBST([REPLACE_GETDTABLESIZE])
  REPLACE_GETLOGIN_R=0;              AC_SUBST([REPLACE_GETLOGIN_R])
  REPLACE_GETGROUPS=0;               AC_SUBST([REPLACE_GETGROUPS])
  REPLACE_GETPAGESIZE=0;             AC_SUBST([REPLACE_GETPAGESIZE])
  REPLACE_GETPASS=0;                 AC_SUBST([REPLACE_GETPASS])
  REPLACE_GETPASS_FOR_GETPASS_GNU=0; AC_SUBST([REPLACE_GETPASS_FOR_GETPASS_GNU])
  REPLACE_ISATTY=0;                  AC_SUBST([REPLACE_ISATTY])
  REPLACE_LCHOWN=0;                  AC_SUBST([REPLACE_LCHOWN])
  REPLACE_LINK=0;                    AC_SUBST([REPLACE_LINK])
  REPLACE_LINKAT=0;                  AC_SUBST([REPLACE_LINKAT])
  REPLACE_LSEEK=0;                   AC_SUBST([REPLACE_LSEEK])
  REPLACE_PREAD=0;                   AC_SUBST([REPLACE_PREAD])
  REPLACE_PWRITE=0;                  AC_SUBST([REPLACE_PWRITE])
  REPLACE_READ=0;                    AC_SUBST([REPLACE_READ])
  REPLACE_READLINK=0;                AC_SUBST([REPLACE_READLINK])
  REPLACE_READLINKAT=0;              AC_SUBST([REPLACE_READLINKAT])
  REPLACE_RMDIR=0;                   AC_SUBST([REPLACE_RMDIR])
  REPLACE_SLEEP=0;                   AC_SUBST([REPLACE_SLEEP])
  REPLACE_SYMLINK=0;                 AC_SUBST([REPLACE_SYMLINK])
  REPLACE_SYMLINKAT=0;               AC_SUBST([REPLACE_SYMLINKAT])
  REPLACE_TRUNCATE=0;                AC_SUBST([REPLACE_TRUNCATE])
  REPLACE_TTYNAME_R=0;               AC_SUBST([REPLACE_TTYNAME_R])
  REPLACE_UNLINK=0;                  AC_SUBST([REPLACE_UNLINK])
  REPLACE_UNLINKAT=0;                AC_SUBST([REPLACE_UNLINKAT])
  REPLACE_USLEEP=0;                  AC_SUBST([REPLACE_USLEEP])
  REPLACE_WRITE=0;                   AC_SUBST([REPLACE_WRITE])
  UNISTD_H_HAVE_SYS_RANDOM_H=0;      AC_SUBST([UNISTD_H_HAVE_SYS_RANDOM_H])
  UNISTD_H_HAVE_WINSOCK2_H=0;        AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H])
  UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=0;
                           AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS])
])
m4trace:m4/unlink-busy.m4:12: -1- AC_DEFUN([gl_FUNC_UNLINK_BUSY_TEXT], [dnl
  AC_CACHE_CHECK([whether a running program can be unlinked],
    [gl_cv_func_unlink_busy_text],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE(
           [AC_INCLUDES_DEFAULT
            GL_MDA_DEFINES[
            int
            main (int argc, char **argv)
            {
              int result = 0;
              if (argc == 0)
                result |= 1;
              else if (unlink (argv[0]) != 0)
                result |= 2;
              return result;
            }]])],
        [gl_cv_func_unlink_busy_text=yes],
        [gl_cv_func_unlink_busy_text=no],
        [case "$host_os" in
                   # Guess no on native Windows.
           mingw*) gl_cv_func_unlink_busy_text="guessing no" ;;
           *)      gl_cv_func_unlink_busy_text="guessing no" ;;
         esac
        ]
      )
    ]
  )

  case "$gl_cv_func_unlink_busy_text" in
    *no) INSTALL=$ac_install_sh ;;
  esac
])
m4trace:m4/unlink.m4:7: -1- AC_DEFUN([gl_FUNC_UNLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_HEADERS_ONCE([unistd.h])

  dnl Detect FreeBSD 7.2, AIX 7.1, Solaris 9 bug.
  AC_CACHE_CHECK([whether unlink honors trailing slashes],
    [gl_cv_func_unlink_honors_slashes],
    [touch conftest.file
     # Assume that if we have lstat, we can also check symlinks.
     if test $ac_cv_func_lstat = yes; then
       ln -s conftest.file conftest.lnk
     fi
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
         [[#if HAVE_UNISTD_H
           # include <unistd.h>
           #else /* on Windows with MSVC */
           # include <io.h>
           #endif
           #include <errno.h>
         ]GL_MDA_DEFINES],
         [[int result = 0;
           if (!unlink ("conftest.file/"))
             result |= 1;
           else if (errno != ENOTDIR)
             result |= 2;
#if HAVE_LSTAT
           if (!unlink ("conftest.lnk/"))
             result |= 4;
           else if (errno != ENOTDIR)
             result |= 8;
#endif
           return result;
         ]])],
      [gl_cv_func_unlink_honors_slashes=yes],
      [gl_cv_func_unlink_honors_slashes=no],
      [case "$host_os" in
                          # Guess yes on Linux systems.
         linux-* | linux) gl_cv_func_unlink_honors_slashes="guessing yes" ;;
                          # Guess yes on glibc systems.
         *-gnu*)          gl_cv_func_unlink_honors_slashes="guessing yes" ;;
                          # Guess no on native Windows.
         mingw*)          gl_cv_func_unlink_honors_slashes="guessing no" ;;
                          # If we don't know, obey --enable-cross-guesses.
         *)               gl_cv_func_unlink_honors_slashes="$gl_cross_guess_normal" ;;
       esac
      ])
     rm -f conftest.file conftest.lnk])
  case "$gl_cv_func_unlink_honors_slashes" in
    *no)
      REPLACE_UNLINK=1
      ;;
  esac

  dnl Detect Mac OS X 10.5.6 bug: On read-write HFS mounts, unlink("..") or
  dnl unlink("../..") succeeds without doing anything.
  AC_CACHE_CHECK([whether unlink of a parent directory fails as it should],
    [gl_cv_func_unlink_parent_fails],
    [case "$host_os" in
       darwin*)
         dnl Try to unlink a subdirectory of /tmp, because /tmp is usually on a
         dnl HFS mount on Mac OS X. Use a subdirectory, owned by the current
         dnl user, because otherwise unlink() may fail due to permissions
         dnl reasons, and because when running as root we don't want to risk
         dnl destroying the entire /tmp.
         if {
              # Use the mktemp program if available. If not available, hide the error
              # message.
              tmp=`(umask 077 && mktemp -d /tmp/gtXXXXXX) 2>/dev/null` &&
              test -n "$tmp" && test -d "$tmp"
            } ||
            {
              # Use a simple mkdir command. It is guaranteed to fail if the directory
              # already exists.  $RANDOM is bash specific and expands to empty in shells
              # other than bash, ksh and zsh.  Its use does not increase security;
              # rather, it minimizes the probability of failure in a very cluttered /tmp
              # directory.
              tmp=/tmp/gt$$-$RANDOM
              (umask 077 && mkdir "$tmp")
            }; then
           mkdir "$tmp/subdir"
           GL_SUBDIR_FOR_UNLINK="$tmp/subdir"
           export GL_SUBDIR_FOR_UNLINK
           AC_RUN_IFELSE(
             [AC_LANG_SOURCE([[
                #include <stdlib.h>
                #if HAVE_UNISTD_H
                # include <unistd.h>
                #else /* on Windows with MSVC */
                # include <direct.h>
                # include <io.h>
                #endif
                ]GL_MDA_DEFINES[
                int main ()
                {
                  int result = 0;
                  if (chdir (getenv ("GL_SUBDIR_FOR_UNLINK")) != 0)
                    result |= 1;
                  else if (unlink ("..") == 0)
                    result |= 2;
                  return result;
                }
              ]])],
             [gl_cv_func_unlink_parent_fails=yes],
             [gl_cv_func_unlink_parent_fails=no],
             [# If we don't know, obey --enable-cross-guesses.
              gl_cv_func_unlink_parent_fails="$gl_cross_guess_normal"
             ])
           unset GL_SUBDIR_FOR_UNLINK
           rm -rf "$tmp"
         else
           gl_cv_func_unlink_parent_fails="guessing no"
         fi
         ;;
       *)
         gl_cv_func_unlink_parent_fails="guessing yes"
         ;;
     esac
    ])
  case "$gl_cv_func_unlink_parent_fails" in
    *no)
      REPLACE_UNLINK=1
      AC_DEFINE([UNLINK_PARENT_BUG], [1],
        [Define to 1 if unlink() on a parent directory may succeed])
      ;;
  esac
])
m4trace:m4/unlinkat.m4:9: -1- AC_DEFUN([gl_FUNC_UNLINKAT], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([unlinkat])
  AC_REQUIRE([gl_FUNC_UNLINK])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  if test $ac_cv_func_unlinkat = no; then
    HAVE_UNLINKAT=0
  else
    case "$gl_cv_func_lstat_dereferences_slashed_symlink" in
      *no)
        # Solaris 9 has *at functions, but uniformly mishandles trailing
        # slash in all of them.
        REPLACE_UNLINKAT=1
        ;;
      *)
        # GNU/Hurd has unlinkat, but it has the same bug as unlink.
        # Darwin has unlinkat, but it has the same UNLINK_PARENT_BUG.
        if test $REPLACE_UNLINK = 1; then
          REPLACE_UNLINKAT=1
        fi
        ;;
    esac
  fi
])
m4trace:m4/unlinkdir.m4:11: -1- AC_DEFUN([gl_UNLINKDIR], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_HEADERS_ONCE([priv.h])

  # The Hurd, the Linux kernel, the FreeBSD kernel version 2.2 and later,
  # Cygwin, and mingw never let anyone (even root) unlink directories.
  # If anyone knows of another system for which unlink can never
  # remove a directory, please report it to <bug-coreutils@gnu.org>.
  # Unfortunately this is difficult to test for, since it requires root access
  # and might create garbage in the file system,
  # so the code below simply relies on the kernel name and version number.
  case $host_os in
  gnu[[0-9]]* | \
  linux-* | linux | \
  freebsd2.2* | freebsd[[3-9]]* | freebsd[[1-9]][[0-9]]* | \
  cygwin | \
  mingw*)
    AC_DEFINE([UNLINK_CANNOT_UNLINK_DIR], [1],
      [Define to 1 if unlink (dir) cannot possibly succeed.]);;
  esac
])
m4trace:m4/unlocked-io.m4:17: -1- AC_DEFUN([gl_FUNC_GLIBC_UNLOCKED_IO], [
  dnl Persuade glibc and Solaris <stdio.h> to declare
  dnl fgets_unlocked(), fputs_unlocked() etc.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_DECLS_ONCE([clearerr_unlocked])
  AC_CHECK_DECLS_ONCE([feof_unlocked])
  AC_CHECK_DECLS_ONCE([ferror_unlocked])
  AC_CHECK_DECLS_ONCE([fflush_unlocked])
  AC_CHECK_DECLS_ONCE([fgets_unlocked])
  AC_CHECK_DECLS_ONCE([fputc_unlocked])
  AC_CHECK_DECLS_ONCE([fputs_unlocked])
  AC_CHECK_DECLS_ONCE([fread_unlocked])
  AC_CHECK_DECLS_ONCE([fwrite_unlocked])
  AC_CHECK_DECLS_ONCE([getc_unlocked])
  AC_CHECK_DECLS_ONCE([getchar_unlocked])
  AC_CHECK_DECLS_ONCE([putc_unlocked])
  AC_CHECK_DECLS_ONCE([putchar_unlocked])
])
m4trace:m4/uptime.m4:10: -1- AC_DEFUN([gl_SYS_PROC_UPTIME], [ dnl Require AC_PROG_CC to see if we're cross compiling.
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for /proc/uptime], [gl_cv_have_proc_uptime],
  [gl_cv_have_proc_uptime=no
    test -f /proc/uptime \
      && test "$cross_compiling" = no \
      && cat < /proc/uptime >/dev/null 2>/dev/null \
      && gl_cv_have_proc_uptime=yes])
  if test $gl_cv_have_proc_uptime = yes; then
    AC_DEFINE([HAVE_PROC_UPTIME], [1],
              [  Define if your system has the /proc/uptime special file.])
  fi
])
m4trace:m4/userspec.m4:8: -1- AC_DEFUN([gl_USERSPEC], [
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/usleep.m4:9: -1- AC_DEFUN([gl_FUNC_USLEEP], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  dnl usleep was required in POSIX 2001, but dropped as obsolete in
  dnl POSIX 2008; therefore, it is not always exposed in headers.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([usleep])
  AC_CHECK_TYPE([useconds_t], [],
    [AC_DEFINE([useconds_t], [unsigned int], [Define to an unsigned 32-bit
      type if <sys/types.h> lacks this type.])])
  if test $ac_cv_func_usleep = no; then
    HAVE_USLEEP=0
  else
    dnl POSIX allows implementations to reject arguments larger than
    dnl 999999, but GNU guarantees it will work.
    AC_CACHE_CHECK([whether usleep allows large arguments],
      [gl_cv_func_usleep_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <unistd.h>
]], [[return !!usleep (1000000);]])],
        [gl_cv_func_usleep_works=yes], [gl_cv_func_usleep_works=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_usleep_works="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_usleep_works="guessing yes" ;;
                          # Guess no on native Windows.
           mingw*)        gl_cv_func_usleep_works="guessing no" ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_usleep_works="$gl_cross_guess_normal" ;;
         esac
        ])])
    case "$gl_cv_func_usleep_works" in
      *yes) ;;
      *)
        REPLACE_USLEEP=1
        ;;
    esac
  fi
])
m4trace:m4/utime.m4:7: -1- AC_DEFUN([gl_FUNC_UTIME], [
  AC_REQUIRE([gl_UTIME_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([lstat])
  case "$host_os" in
    mingw*)
      dnl On this platform, the original utime() or _utime() produces
      dnl timestamps that are affected by the time zone.
      dnl Use the function name 'rpl_utime' always, in order to avoid a
      dnl possible conflict with the function name 'utime' from oldnames.lib
      dnl (MSVC) or liboldnames.a (mingw).
      REPLACE_UTIME=1
      ;;
    *)
      AC_CHECK_FUNCS([utime])
      if test $ac_cv_func_utime = no; then
        HAVE_UTIME=0
      else
        dnl On macOS 10.13, utime("link-to-file/", NULL) mistakenly succeeds.
        AC_CACHE_CHECK([whether utime handles trailing slashes on files],
          [gl_cv_func_utime_file_slash],
          [touch conftest.tmp
           # Assume that if we have lstat, we can also check symlinks.
           if test $ac_cv_func_lstat = yes; then
             ln -s conftest.tmp conftest.lnk
           fi
           AC_RUN_IFELSE(
             [AC_LANG_PROGRAM(
               [[#include <stddef.h>
                 #include <utime.h>
               ]],
               [[int result = 0;
                 if (!utime ("conftest.tmp/", NULL))
                   result |= 1;
                 #if HAVE_LSTAT
                 if (!utime ("conftest.lnk/", NULL))
                   result |= 2;
                 #endif
                 return result;
               ]])],
             [gl_cv_func_utime_file_slash=yes],
             [gl_cv_func_utime_file_slash=no],
             [case "$host_os" in
                                 # Guess yes on Linux systems.
                linux-* | linux) gl_cv_func_utime_file_slash="guessing yes" ;;
                                 # Guess yes on glibc systems.
                *-gnu* | gnu*)   gl_cv_func_utime_file_slash="guessing yes" ;;
                                 # Guess no on macOS.
                darwin*)         gl_cv_func_utime_file_slash="guessing no" ;;
                                 # If we don't know, obey --enable-cross-guesses.
                *)               gl_cv_func_utime_file_slash="$gl_cross_guess_normal" ;;
              esac
             ])
           rm -f conftest.tmp conftest.lnk
          ])
        case $gl_cv_func_stat_file_slash in
          *no)
            REPLACE_UTIME=1
            AC_DEFINE([REPLACE_FUNC_UTIME_FILE], [1],
              [Define to 1 if utime needs help when passed a file name with a trailing slash])
            ;;
        esac
      fi
      ;;
  esac
])
m4trace:m4/utime.m4:76: -1- AC_DEFUN([gl_PREREQ_UTIME], [:])
m4trace:m4/utime_h.m4:9: -1- AC_DEFUN_ONCE([gl_UTIME_H], [
  AC_REQUIRE([gl_UTIME_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  m4_ifdef([gl_ANSI_CXX], [AC_REQUIRE([gl_ANSI_CXX])])
  AC_CHECK_HEADERS_ONCE([utime.h])
  gl_CHECK_NEXT_HEADERS([utime.h])

  if test $ac_cv_header_utime_h = yes; then
    HAVE_UTIME_H=1
  else
    HAVE_UTIME_H=0
  fi
  AC_SUBST([HAVE_UTIME_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <utime.h>
    ]],
    [utime])
])
m4trace:m4/utime_h.m4:35: -1- AC_DEFUN([gl_UTIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_UTIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/utime_h.m4:47: -1- AC_DEFUN([gl_UTIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_UTIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIME])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UTIME], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_UTIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_UTIME_H_DEFAULTS])
])
m4trace:m4/utime_h.m4:58: -1- AC_DEFUN([gl_UTIME_H_DEFAULTS], [
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_UTIME=1;              AC_SUBST([HAVE_UTIME])
  REPLACE_UTIME=0;           AC_SUBST([REPLACE_UTIME])
])
m4trace:m4/utimecmp.m4:7: -1- AC_DEFUN([gl_UTIMECMP], [
  dnl Prerequisites of lib/utimecmp.c.
  AC_REQUIRE([gl_FUNC_UTIMES])
  :
])
m4trace:m4/utimens.m4:8: -1- AC_DEFUN([gl_UTIMENS], [
  dnl Prerequisites of lib/utimens.c.
  AC_REQUIRE([gl_FUNC_UTIMES])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_TIMESPEC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([futimes futimesat futimens utimensat lutimes])

  if test $ac_cv_func_futimens = no && test $ac_cv_func_futimesat = yes; then
    dnl FreeBSD 8.0-rc2 mishandles futimesat(fd,NULL,time).  It is not
    dnl standardized, but Solaris implemented it first and uses it as
    dnl its only means to set fd time.
    AC_CACHE_CHECK([whether futimesat handles NULL file],
      [gl_cv_func_futimesat_works],
      [touch conftest.file
       AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <stddef.h>
#include <sys/times.h>
#include <fcntl.h>
]GL_MDA_DEFINES],
        [[int fd = open ("conftest.file", O_RDWR);
          if (fd < 0) return 1;
          if (futimesat (fd, NULL, NULL)) return 2;
        ]])],
        [gl_cv_func_futimesat_works=yes],
        [gl_cv_func_futimesat_works=no],
        [case "$host_os" in
                            # Guess yes on Linux systems.
           linux-* | linux) gl_cv_func_futimesat_works="guessing yes" ;;
                            # Guess yes on glibc systems.
           *-gnu*)          gl_cv_func_futimesat_works="guessing yes" ;;
                            # If we don't know, obey --enable-cross-guesses.
           *)               gl_cv_func_futimesat_works="$gl_cross_guess_normal" ;;
         esac
        ])
      rm -f conftest.file])
    case "$gl_cv_func_futimesat_works" in
      *yes) ;;
      *)
        AC_DEFINE([FUTIMESAT_NULL_BUG], [1],
          [Define to 1 if futimesat mishandles a NULL file name.])
        ;;
    esac
  fi
])
m4trace:m4/utimensat.m4:11: -1- AC_DEFUN([gl_FUNC_UTIMENSAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([utimensat])
  if test $ac_cv_func_utimensat = no; then
    HAVE_UTIMENSAT=0
  else
    AC_CACHE_CHECK([whether utimensat works],
      [gl_cv_func_utimensat_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM([[
#include <fcntl.h>
#include <sys/stat.h>
#include <unistd.h>
]GL_MDA_DEFINES],
            [[int result = 0;
              const char *f = "conftest.file";
              if (close (creat (f, 0600)))
                return 1;
              /* Test whether a trailing slash is handled correctly.
                 This fails on AIX 7.2.  */
              {
                struct timespec ts[2];
                ts[0].tv_sec = 345183300; ts[0].tv_nsec = 0;
                ts[1] = ts[0];
                if (utimensat (AT_FDCWD, "conftest.file/", ts, 0) == 0)
                  result |= 2;
              }
              /* Test whether the AT_SYMLINK_NOFOLLOW flag is supported.  */
              {
                if (utimensat (AT_FDCWD, f, NULL, AT_SYMLINK_NOFOLLOW))
                  result |= 4;
              }
              /* Test whether UTIME_NOW and UTIME_OMIT work.  */
              {
                struct timespec ts[2];
                ts[0].tv_sec = 1;
                ts[0].tv_nsec = UTIME_OMIT;
                ts[1].tv_sec = 1;
                ts[1].tv_nsec = UTIME_NOW;
                if (utimensat (AT_FDCWD, f, ts, 0))
                  result |= 8;
              }
              sleep (1);
              {
                struct stat st;
                struct timespec ts[2];
                ts[0].tv_sec = 1;
                ts[0].tv_nsec = UTIME_NOW;
                ts[1].tv_sec = 1;
                ts[1].tv_nsec = UTIME_OMIT;
                if (utimensat (AT_FDCWD, f, ts, 0))
                  result |= 16;
                if (stat (f, &st))
                  result |= 32;
                else if (st.st_ctime < st.st_atime)
                  result |= 64;
              }
              return result;
            ]])],
         [gl_cv_func_utimensat_works=yes],
         [case $? in
            2) gl_cv_func_utimensat_works='nearly' ;;
            *) gl_cv_func_utimensat_works=no ;;
          esac
         ],
         [case "$host_os" in
            # Guess yes on Linux or glibc systems.
            linux-* | linux | *-gnu* | gnu*)
              gl_cv_func_utimensat_works="guessing yes" ;;
            # Guess 'nearly' on AIX.
            aix*)
              gl_cv_func_utimensat_works="guessing nearly" ;;
            # If we don't know, obey --enable-cross-guesses.
            *)
              gl_cv_func_utimensat_works="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
    case "$gl_cv_func_utimensat_works" in
      *yes)
        ;;
      *nearly)
        AC_DEFINE([HAVE_NEARLY_WORKING_UTIMENSAT], [1],
          [Define to 1 if utimensat works, except for the trailing slash handling.])
        REPLACE_UTIMENSAT=1
        ;;
      *)
        REPLACE_UTIMENSAT=1
        ;;
    esac
  fi
])
m4trace:m4/utimes.m4:21: -1- AC_DEFUN([gl_FUNC_UTIMES], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether the utimes function works],
                 [gl_cv_func_working_utimes],
    [AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/time.h>
#include <time.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <utime.h>
#include <errno.h>
]GL_MDA_DEFINES[

static int
inorder (time_t a, time_t b, time_t c)
{
  return a <= b && b <= c;
}

int
main ()
{
  int result = 0;
  char const *file = "conftest.utimes";
  /* On OS/2, file timestamps must be on or after 1980 in local time,
     with an even number of seconds.  */
  static struct timeval timeval[2] = {{315620000 + 10, 10},
                                      {315620000 + 1000000, 999998}};

  /* Test whether utimes() essentially works.  */
  {
    struct stat sbuf;
    FILE *f = fopen (file, "w");
    if (f == NULL)
      result |= 1;
    else if (fclose (f) != 0)
      result |= 1;
    else if (utimes (file, timeval) != 0)
      result |= 2;
    else if (lstat (file, &sbuf) != 0)
      result |= 1;
    else if (!(sbuf.st_atime == timeval[0].tv_sec
               && sbuf.st_mtime == timeval[1].tv_sec))
      result |= 4;
    if (unlink (file) != 0)
      result |= 1;
  }

  /* Test whether utimes() with a NULL argument sets the file's timestamp
     to the current time.  Use 'fstat' as well as 'time' to
     determine the "current" time, to accommodate NFS file systems
     if there is a time skew between the host and the NFS server.  */
  {
    int fd = open (file, O_WRONLY|O_CREAT, 0644);
    if (fd < 0)
      result |= 1;
    else
      {
        time_t t0, t2;
        struct stat st0, st1, st2;
        if (time (&t0) == (time_t) -1)
          result |= 1;
        else if (fstat (fd, &st0) != 0)
          result |= 1;
        else if (utimes (file, timeval) != 0
                 && (errno != EACCES
                     /* OS/2 kLIBC utimes fails on opened files.  */
                     || close (fd) != 0
                     || utimes (file, timeval) != 0
                     || (fd = open (file, O_WRONLY)) < 0))
          result |= 2;
        else if (utimes (file, NULL) != 0
                 && (errno != EACCES
                     /* OS/2 kLIBC utimes fails on opened files.  */
                     || close (fd) != 0
                     || utimes (file, NULL) != 0
                     || (fd = open (file, O_WRONLY)) < 0))
          result |= 8;
        else if (fstat (fd, &st1) != 0)
          result |= 1;
        else if (write (fd, "\n", 1) != 1)
          result |= 1;
        else if (fstat (fd, &st2) != 0)
          result |= 1;
        else if (time (&t2) == (time_t) -1)
          result |= 1;
        else
          {
            int m_ok_POSIX = inorder (t0, st1.st_mtime, t2);
            int m_ok_NFS = inorder (st0.st_mtime, st1.st_mtime, st2.st_mtime);
            if (! (st1.st_atime == st1.st_mtime))
              result |= 16;
            if (! (m_ok_POSIX || m_ok_NFS))
              result |= 32;
          }
        if (close (fd) != 0)
          result |= 1;
      }
    if (unlink (file) != 0)
      result |= 1;
  }

  /* Test whether utimes() with a NULL argument works on read-only files.  */
  {
    int fd = open (file, O_WRONLY|O_CREAT, 0444);
    if (fd < 0)
      result |= 1;
    else if (close (fd) != 0)
      result |= 1;
    else if (utimes (file, NULL) != 0)
      result |= 64;
    if (unlink (file) != 0)
      result |= 1;
  }

  return result;
}
  ]])],
       [gl_cv_func_working_utimes=yes],
       [gl_cv_func_working_utimes=no],
       [case "$host_os" in
                   # Guess yes on musl systems.
          *-musl*) gl_cv_func_working_utimes="guessing yes" ;;
                   # Guess no on native Windows.
          mingw*)  gl_cv_func_working_utimes="guessing no" ;;
          *)       gl_cv_func_working_utimes="$gl_cross_guess_normal" ;;
        esac
       ])
    ])

  case "$gl_cv_func_working_utimes" in
    *yes)
      AC_DEFINE([HAVE_WORKING_UTIMES], [1], [Define if utimes works properly.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:7: -1- AC_DEFUN([gl_FUNC_VASNPRINTF], [
  AC_CHECK_FUNCS_ONCE([vasnprintf])
  if test $ac_cv_func_vasnprintf = no; then
    gl_REPLACE_VASNPRINTF
  fi
])
m4trace:m4/vasnprintf.m4:15: -1- AC_DEFUN([gl_REPLACE_VASNPRINTF], [
  AC_CHECK_FUNCS_ONCE([vasnprintf])
  AC_LIBOBJ([vasnprintf])
  AC_LIBOBJ([printf-args])
  AC_LIBOBJ([printf-parse])
  AC_LIBOBJ([asnprintf])
  if test $ac_cv_func_vasnprintf = yes; then
    AC_DEFINE([REPLACE_VASNPRINTF], [1],
      [Define if vasnprintf exists but is overridden by gnulib.])
  fi
  gl_PREREQ_PRINTF_ARGS
  gl_PREREQ_PRINTF_PARSE
  gl_PREREQ_VASNPRINTF
  gl_PREREQ_ASNPRINTF
])
m4trace:m4/vasnprintf.m4:33: -1- AC_DEFUN([gl_PREREQ_PRINTF_ARGS], [
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
])
m4trace:m4/vasnprintf.m4:40: -1- AC_DEFUN([gl_PREREQ_PRINTF_PARSE], [
  AC_REQUIRE([gl_FEATURES_H])
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
  AC_REQUIRE([AC_TYPE_SIZE_T])
  AC_CHECK_TYPE([ptrdiff_t], ,
    [AC_DEFINE([ptrdiff_t], [long],
       [Define as the type of the result of subtracting two pointers, if the system doesn't define it.])
    ])
  AC_REQUIRE([gt_AC_TYPE_INTMAX_T])
])
m4trace:m4/vasnprintf.m4:54: -1- AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
  AC_CHECK_FUNCS([snprintf strnlen wcslen wcsnlen mbrtowc wcrtomb])
  dnl Use the _snprintf function only if it is declared (because on NetBSD it
  dnl is defined as a weak alias of snprintf; we prefer to use the latter).
  AC_CHECK_DECLS([_snprintf], , , [[#include <stdio.h>]])
  dnl Knowing DBL_EXPBIT0_WORD and DBL_EXPBIT0_BIT enables an optimization
  dnl in the code for NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_DOUBLE.
  AC_REQUIRE([gl_DOUBLE_EXPONENT_LOCATION])
  dnl We can avoid a lot of code by assuming that snprintf's return value
  dnl conforms to ISO C99. So check that.
  AC_REQUIRE([gl_SNPRINTF_RETVAL_C99])
  case "$gl_cv_func_snprintf_retval_c99" in
    *yes)
      AC_DEFINE([HAVE_SNPRINTF_RETVAL_C99], [1],
        [Define if the return value of the snprintf function is the number of
         of bytes (excluding the terminating NUL) that would have been produced
         if the buffer had been large enough.])
      ;;
  esac
  dnl Additionally, the use of %n can be eliminated by assuming that snprintf
  dnl always produces NUL-terminated strings (no truncation).
  AC_REQUIRE([gl_SNPRINTF_TRUNCATION_C99])
  case "$gl_cv_func_snprintf_truncation_c99" in
    *yes)
      AC_DEFINE([HAVE_SNPRINTF_TRUNCATION_C99], [1],
        [Define if the string produced by the snprintf function is always NUL
         terminated.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:91: -1- AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  case "$gl_cv_func_printf_long_double" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:107: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_INFINITE])
  case "$gl_cv_func_printf_infinite" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_INFINITE_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         infinite 'double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:123: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_INFINITE_LONG_DOUBLE])
  dnl There is no need to set NEED_PRINTF_INFINITE_LONG_DOUBLE if
  dnl NEED_PRINTF_LONG_DOUBLE is already set.
  AC_REQUIRE([gl_PREREQ_VASNPRINTF_LONG_DOUBLE])
  case "$gl_cv_func_printf_long_double" in
    *yes)
      case "$gl_cv_func_printf_infinite_long_double" in
        *yes)
          ;;
        *)
          AC_DEFINE([NEED_PRINTF_INFINITE_LONG_DOUBLE], [1],
            [Define if the vasnprintf implementation needs special code for
             infinite 'long double' arguments.])
          ;;
      esac
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:145: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_A], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_A])
  case "$gl_cv_func_printf_directive_a" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_A], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'a' and 'A' directives.])
      AC_CHECK_FUNCS([nl_langinfo])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:161: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_F], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_F])
  case "$gl_cv_func_printf_directive_f" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_F], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'F' directive.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:176: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_LS], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_LS])
  case "$gl_cv_func_printf_directive_ls" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_LS], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'ls' directive.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:191: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_GROUPING], [
  AC_REQUIRE([gl_PRINTF_FLAG_GROUPING])
  case "$gl_cv_func_printf_flag_grouping" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_GROUPING], [1],
        [Define if the vasnprintf implementation needs special code for the
         ' flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:206: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST], [
  AC_REQUIRE([gl_PRINTF_FLAG_LEFTADJUST])
  case "$gl_cv_func_printf_flag_leftadjust" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_LEFTADJUST], [1],
        [Define if the vasnprintf implementation needs special code for the
         '-' flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:221: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_ZERO], [
  AC_REQUIRE([gl_PRINTF_FLAG_ZERO])
  case "$gl_cv_func_printf_flag_zero" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_ZERO], [1],
        [Define if the vasnprintf implementation needs special code for the
         0 flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:236: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_PRECISION], [
  AC_REQUIRE([gl_PRINTF_PRECISION])
  case "$gl_cv_func_printf_precision" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_UNBOUNDED_PRECISION], [1],
        [Define if the vasnprintf implementation needs special code for
         supporting large precisions without arbitrary bounds.])
      AC_DEFINE([NEED_PRINTF_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'double' arguments.])
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:258: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_ENOMEM], [
  AC_REQUIRE([gl_PRINTF_ENOMEM])
  case "$gl_cv_func_printf_enomem" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_ENOMEM], [1],
        [Define if the vasnprintf implementation needs special code for
         surviving out-of-memory conditions.])
      AC_DEFINE([NEED_PRINTF_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'double' arguments.])
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:279: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_WITH_EXTRAS], [
  AC_REQUIRE([gl_PREREQ_VASNPRINTF])
  gl_PREREQ_VASNPRINTF_LONG_DOUBLE
  gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
  gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
  gl_PREREQ_VASNPRINTF_DIRECTIVE_A
  gl_PREREQ_VASNPRINTF_DIRECTIVE_F
  gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
  gl_PREREQ_VASNPRINTF_FLAG_GROUPING
  gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
  gl_PREREQ_VASNPRINTF_FLAG_ZERO
  gl_PREREQ_VASNPRINTF_PRECISION
  gl_PREREQ_VASNPRINTF_ENOMEM
])
m4trace:m4/vasnprintf.m4:296: -1- AC_DEFUN([gl_PREREQ_ASNPRINTF], [
])
m4trace:m4/vasprintf-posix.m4:7: -1- AC_DEFUN([gl_FUNC_VASPRINTF_POSIX], [
  AC_REQUIRE([gl_PRINTF_SIZES_C99])
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  AC_REQUIRE([gl_PRINTF_INFINITE])
  AC_REQUIRE([gl_PRINTF_INFINITE_LONG_DOUBLE])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_A])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_F])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_N])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_LS])
  AC_REQUIRE([gl_PRINTF_POSITIONS])
  AC_REQUIRE([gl_PRINTF_FLAG_GROUPING])
  AC_REQUIRE([gl_PRINTF_FLAG_LEFTADJUST])
  AC_REQUIRE([gl_PRINTF_FLAG_ZERO])
  AC_REQUIRE([gl_PRINTF_PRECISION])
  AC_REQUIRE([gl_PRINTF_ENOMEM])
  gl_cv_func_vasprintf_posix=no
  AC_CHECK_FUNCS([vasprintf])
  case "$gl_cv_func_printf_sizes_c99" in
    *yes)
      case "$gl_cv_func_printf_long_double" in
        *yes)
          case "$gl_cv_func_printf_infinite" in
            *yes)
              case "$gl_cv_func_printf_infinite_long_double" in
                *yes)
                  case "$gl_cv_func_printf_directive_a" in
                    *yes)
                      case "$gl_cv_func_printf_directive_f" in
                        *yes)
                          case "$gl_cv_func_printf_directive_n" in
                            *yes)
                              case "$gl_cv_func_printf_directive_ls" in
                                *yes)
                                  case "$gl_cv_func_printf_positions" in
                                    *yes)
                                      case "$gl_cv_func_printf_flag_grouping" in
                                        *yes)
                                          case "$gl_cv_func_printf_flag_leftadjust" in
                                            *yes)
                                              case "$gl_cv_func_printf_flag_zero" in
                                                *yes)
                                                  case "$gl_cv_func_printf_precision" in
                                                    *yes)
                                                      case "$gl_cv_func_printf_enomem" in
                                                        *yes)
                                                          if test $ac_cv_func_vasprintf = yes; then
                                                            # vasprintf exists and is
                                                            # already POSIX compliant.
                                                            gl_cv_func_vasprintf_posix=yes
                                                          fi
                                                          ;;
                                                      esac
                                                      ;;
                                                  esac
                                                  ;;
                                              esac
                                              ;;
                                          esac
                                          ;;
                                      esac
                                      ;;
                                  esac
                                  ;;
                              esac
                              ;;
                          esac
                          ;;
                      esac
                      ;;
                  esac
                  ;;
              esac
              ;;
          esac
          ;;
      esac
      ;;
  esac
  if test $gl_cv_func_vasprintf_posix = no; then
    gl_PREREQ_VASNPRINTF_LONG_DOUBLE
    gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
    gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
    gl_PREREQ_VASNPRINTF_DIRECTIVE_A
    gl_PREREQ_VASNPRINTF_DIRECTIVE_F
    gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
    gl_PREREQ_VASNPRINTF_FLAG_GROUPING
    gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
    gl_PREREQ_VASNPRINTF_FLAG_ZERO
    gl_PREREQ_VASNPRINTF_PRECISION
    gl_PREREQ_VASNPRINTF_ENOMEM
    gl_REPLACE_VASNPRINTF
    gl_REPLACE_VASPRINTF
  fi
])
m4trace:m4/vasprintf.m4:8: -1- AC_DEFUN([gl_FUNC_VASPRINTF], [
  AC_CHECK_FUNCS([vasprintf])
  if test $ac_cv_func_vasprintf = no; then
    gl_REPLACE_VASPRINTF
  fi
])
m4trace:m4/vasprintf.m4:16: -1- AC_DEFUN([gl_REPLACE_VASPRINTF], [
  AC_LIBOBJ([vasprintf])
  AC_LIBOBJ([asprintf])
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  if test $ac_cv_func_vasprintf = yes; then
    REPLACE_VASPRINTF=1
  else
    HAVE_VASPRINTF=0
  fi
  gl_PREREQ_VASPRINTF_H
  gl_PREREQ_VASPRINTF
  gl_PREREQ_ASPRINTF
])
m4trace:m4/vasprintf.m4:32: -1- AC_DEFUN([gl_PREREQ_VASPRINTF_H], [
  dnl Persuade glibc <stdio.h> to declare asprintf() and vasprintf().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
])
m4trace:m4/vasprintf.m4:39: -1- AC_DEFUN([gl_PREREQ_VASPRINTF], [
])
m4trace:m4/vasprintf.m4:44: -1- AC_DEFUN([gl_PREREQ_ASPRINTF], [
])
m4trace:m4/version-etc.m4:20: -1- AC_DEFUN([gl_VERSION_ETC], [dnl
  gl_VERSION_ETC_FLAG([packager],
                      [String identifying the packager of this software])
  gl_VERSION_ETC_FLAG([packager-version],
                      [Packager-specific version information])
  gl_VERSION_ETC_FLAG([packager-bug-reports],
                      [Packager info for bug reports (URL/e-mail/...)])
  if test "X$with_packager" = "X" && \
     test "X$with_packager_version$with_packager_bug_reports" != "X"
  then
    AC_MSG_ERROR([The --with-packager-{bug-reports,version} options require --with-packager])
  fi
])
m4trace:m4/vfprintf-posix.m4:7: -1- AC_DEFUN([gl_FUNC_VFPRINTF_POSIX], [
  AC_REQUIRE([gl_PRINTF_SIZES_C99])
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  AC_REQUIRE([gl_PRINTF_INFINITE])
  AC_REQUIRE([gl_PRINTF_INFINITE_LONG_DOUBLE])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_A])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_F])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_N])
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_LS])
  AC_REQUIRE([gl_PRINTF_POSITIONS])
  AC_REQUIRE([gl_PRINTF_FLAG_GROUPING])
  AC_REQUIRE([gl_PRINTF_FLAG_LEFTADJUST])
  AC_REQUIRE([gl_PRINTF_FLAG_ZERO])
  AC_REQUIRE([gl_PRINTF_PRECISION])
  AC_REQUIRE([gl_PRINTF_ENOMEM])
  gl_cv_func_vfprintf_posix=no
  case "$gl_cv_func_printf_sizes_c99" in
    *yes)
      case "$gl_cv_func_printf_long_double" in
        *yes)
          case "$gl_cv_func_printf_infinite" in
            *yes)
              case "$gl_cv_func_printf_infinite_long_double" in
                *yes)
                  case "$gl_cv_func_printf_directive_a" in
                    *yes)
                      case "$gl_cv_func_printf_directive_f" in
                        *yes)
                          case "$gl_cv_func_printf_directive_n" in
                            *yes)
                              case "$gl_cv_func_printf_directive_ls" in
                                *yes)
                                  case "$gl_cv_func_printf_positions" in
                                    *yes)
                                      case "$gl_cv_func_printf_flag_grouping" in
                                        *yes)
                                          case "$gl_cv_func_printf_flag_leftadjust" in
                                            *yes)
                                              case "$gl_cv_func_printf_flag_zero" in
                                                *yes)
                                                  case "$gl_cv_func_printf_precision" in
                                                    *yes)
                                                      case "$gl_cv_func_printf_enomem" in
                                                        *yes)
                                                          # vfprintf exists and is
                                                          # already POSIX compliant.
                                                          gl_cv_func_vfprintf_posix=yes
                                                          ;;
                                                      esac
                                                      ;;
                                                  esac
                                                  ;;
                                              esac
                                              ;;
                                          esac
                                          ;;
                                      esac
                                      ;;
                                  esac
                                  ;;
                              esac
                              ;;
                          esac
                          ;;
                      esac
                      ;;
                  esac
                  ;;
              esac
              ;;
          esac
          ;;
      esac
      ;;
  esac
  if test $gl_cv_func_vfprintf_posix = no; then
    gl_PREREQ_VASNPRINTF_LONG_DOUBLE
    gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
    gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
    gl_PREREQ_VASNPRINTF_DIRECTIVE_A
    gl_PREREQ_VASNPRINTF_DIRECTIVE_F
    gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
    gl_PREREQ_VASNPRINTF_FLAG_GROUPING
    gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
    gl_PREREQ_VASNPRINTF_FLAG_ZERO
    gl_PREREQ_VASNPRINTF_PRECISION
    gl_PREREQ_VASNPRINTF_ENOMEM
    gl_REPLACE_VASNPRINTF
    gl_REPLACE_VFPRINTF
  fi
])
m4trace:m4/vfprintf-posix.m4:100: -1- AC_DEFUN([gl_REPLACE_VFPRINTF], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_LIBOBJ([vfprintf])
  REPLACE_VFPRINTF=1
  AC_DEFINE([REPLACE_VFPRINTF_POSIX], [1],
    [Define if vfprintf is overridden by a POSIX compliant gnulib implementation.])
  gl_PREREQ_VFPRINTF
])
m4trace:m4/vfprintf-posix.m4:110: -1- AC_DEFUN([gl_PREREQ_VFPRINTF], [:])
m4trace:m4/visibility.m4:23: -1- AC_DEFUN([gl_VISIBILITY], [
  AC_REQUIRE([AC_PROG_CC])
  CFLAG_VISIBILITY=
  HAVE_VISIBILITY=0
  if test -n "$GCC"; then
    dnl First, check whether -Werror can be added to the command line, or
    dnl whether it leads to an error because of some other option that the
    dnl user has put into $CC $CFLAGS $CPPFLAGS.
    AC_CACHE_CHECK([whether the -Werror option is usable],
      [gl_cv_cc_vis_werror],
      [gl_save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS -Werror"
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[]], [[]])],
         [gl_cv_cc_vis_werror=yes],
         [gl_cv_cc_vis_werror=no])
       CFLAGS="$gl_save_CFLAGS"
      ])
    dnl Now check whether visibility declarations are supported.
    AC_CACHE_CHECK([for simple visibility declarations],
      [gl_cv_cc_visibility],
      [gl_save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS -fvisibility=hidden"
       dnl We use the option -Werror and a function dummyfunc, because on some
       dnl platforms (Cygwin 1.7) the use of -fvisibility triggers a warning
       dnl "visibility attribute not supported in this configuration; ignored"
       dnl at the first function definition in every compilation unit, and we
       dnl don't want to use the option in this case.
       if test $gl_cv_cc_vis_werror = yes; then
         CFLAGS="$CFLAGS -Werror"
       fi
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[extern __attribute__((__visibility__("hidden"))) int hiddenvar;
              extern __attribute__((__visibility__("default"))) int exportedvar;
              extern __attribute__((__visibility__("hidden"))) int hiddenfunc (void);
              extern __attribute__((__visibility__("default"))) int exportedfunc (void);
              void dummyfunc (void);
              int hiddenvar;
              int exportedvar;
              int hiddenfunc (void) { return 51; }
              int exportedfunc (void) { return 1225736919; }
              void dummyfunc (void) {}
            ]],
            [[]])],
         [gl_cv_cc_visibility=yes],
         [gl_cv_cc_visibility=no])
       CFLAGS="$gl_save_CFLAGS"
      ])
    if test $gl_cv_cc_visibility = yes; then
      CFLAG_VISIBILITY="-fvisibility=hidden"
      HAVE_VISIBILITY=1
    fi
  fi
  AC_SUBST([CFLAG_VISIBILITY])
  AC_SUBST([HAVE_VISIBILITY])
  AC_DEFINE_UNQUOTED([HAVE_VISIBILITY], [$HAVE_VISIBILITY],
    [Define to 1 or 0, depending whether the compiler supports simple visibility declarations.])
])
m4trace:m4/vprintf-posix.m4:7: -1- AC_DEFUN([gl_FUNC_VPRINTF_POSIX], [
  AC_REQUIRE([gl_FUNC_VFPRINTF_POSIX])
  if test $gl_cv_func_vfprintf_posix = no; then
    gl_REPLACE_VPRINTF
  fi
])
m4trace:m4/vprintf-posix.m4:15: -1- AC_DEFUN([gl_REPLACE_VPRINTF], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_LIBOBJ([vprintf])
  REPLACE_VPRINTF=1
  AC_DEFINE([REPLACE_VPRINTF_POSIX], [1],
    [Define if vprintf is overridden by a POSIX compliant gnulib implementation.])
  gl_PREREQ_VPRINTF
])
m4trace:m4/vprintf-posix.m4:25: -1- AC_DEFUN([gl_PREREQ_VPRINTF], [:])
m4trace:m4/warnings.m4:24: -1- AC_DEFUN([gl_COMPILER_OPTION_IF], [
AS_VAR_PUSHDEF([gl_Warn], [gl_cv_warn_[]_AC_LANG_ABBREV[]_$1])dnl
AS_VAR_PUSHDEF([gl_Flags], [_AC_LANG_PREFIX[]FLAGS])dnl
AS_LITERAL_IF([$1],
  [m4_pushdef([gl_Positive], m4_bpatsubst([$1], [^-Wno-], [-W]))],
  [gl_positive="$1"
case $gl_positive in
  -Wno-*) gl_positive=-W`expr "X$gl_positive" : 'X-Wno-\(.*\)'` ;;
esac
m4_pushdef([gl_Positive], [$gl_positive])])dnl
AC_CACHE_CHECK([whether _AC_LANG compiler handles $1], [gl_Warn], [
  gl_save_compiler_FLAGS="$gl_Flags"
  gl_AS_VAR_APPEND(m4_defn([gl_Flags]),
    [" $gl_unknown_warnings_are_errors ]m4_defn([gl_Positive])["])
  AC_LINK_IFELSE([m4_default([$4], [AC_LANG_PROGRAM([[]])])],
                 [AS_VAR_SET([gl_Warn], [yes])],
                 [AS_VAR_SET([gl_Warn], [no])])
  gl_Flags="$gl_save_compiler_FLAGS"
])
AS_VAR_IF(gl_Warn, [yes], [$2], [$3])
m4_popdef([gl_Positive])dnl
AS_VAR_POPDEF([gl_Flags])dnl
AS_VAR_POPDEF([gl_Warn])dnl
])
m4trace:m4/warnings.m4:56: -1- AC_DEFUN([gl_UNKNOWN_WARNINGS_ARE_ERRORS], [_AC_LANG_DISPATCH([$0], _AC_LANG, $@)])
m4trace:m4/warnings.m4:60: -1- AC_DEFUN([gl_UNKNOWN_WARNINGS_ARE_ERRORS(C)], [
  AC_LANG_PUSH([C])
  gl_UNKNOWN_WARNINGS_ARE_ERRORS_IMPL
  AC_LANG_POP([C])
])
m4trace:m4/warnings.m4:68: -1- AC_DEFUN([gl_UNKNOWN_WARNINGS_ARE_ERRORS(C++)], [
  AC_LANG_PUSH([C++])
  gl_UNKNOWN_WARNINGS_ARE_ERRORS_IMPL
  AC_LANG_POP([C++])
])
m4trace:m4/warnings.m4:76: -1- AC_DEFUN([gl_UNKNOWN_WARNINGS_ARE_ERRORS(Objective C)], [
  AC_LANG_PUSH([Objective C])
  gl_UNKNOWN_WARNINGS_ARE_ERRORS_IMPL
  AC_LANG_POP([Objective C])
])
m4trace:m4/warnings.m4:83: -1- AC_DEFUN([gl_UNKNOWN_WARNINGS_ARE_ERRORS_IMPL], [gl_COMPILER_OPTION_IF([-Werror -Wunknown-warning-option],
   [gl_unknown_warnings_are_errors='-Wunknown-warning-option -Werror'],
   [gl_unknown_warnings_are_errors=])])
m4trace:m4/warnings.m4:97: -1- AC_DEFUN([gl_WARN_ADD], [AC_REQUIRE([gl_UNKNOWN_WARNINGS_ARE_ERRORS(]_AC_LANG[)])
gl_COMPILER_OPTION_IF([$1],
  [gl_AS_VAR_APPEND(m4_if([$2], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[$2]]), [" $1"])],
  [],
  [$3])
m4_ifval([$2],
         [AS_LITERAL_IF([$2], [AC_SUBST([$2])])],
         [AC_SUBST([WARN_]_AC_LANG_PREFIX[FLAGS])])dnl
])
m4trace:m4/wchar_h.m4:12: -1- AC_DEFUN_ONCE([gl_WCHAR_H], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([gl_WCHAR_H_INLINE_OK])
  dnl Prepare for creating substitute <wchar.h>.
  dnl Check for <wchar.h> (missing in Linux uClibc when built without wide
  dnl character support).
  dnl <wchar.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  AC_REQUIRE([gl_FEATURES_H])

  AC_REQUIRE([gt_TYPE_WINT_T])
  if test $gt_cv_c_wint_t = yes; then
    HAVE_WINT_T=1
  else
    HAVE_WINT_T=0
  fi
  AC_SUBST([HAVE_WINT_T])

  AC_REQUIRE([gl_TYPE_WINT_T_PREREQ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
      #include <wchar.h>
    ]],
    [btowc wctob mbsinit mbrtowc mbrlen mbsrtowcs mbsnrtowcs wcrtomb
     wcsrtombs wcsnrtombs wcwidth
     wmemchr wmemcmp wmemcpy wmemmove wmempcpy wmemset
     wcslen wcsnlen wcscpy wcpcpy wcsncpy wcpncpy wcscat wcsncat wcscmp
     wcsncmp wcscasecmp wcsncasecmp wcscoll wcsxfrm wcsdup wcschr wcsrchr
     wcscspn wcsspn wcspbrk wcsstr wcstok wcswidth wcsftime
    ])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS([wcsdup], [], [], [[
      #include <wchar.h>
    ]])
  if test $ac_cv_have_decl_wcsdup = no; then
    HAVE_DECL_WCSDUP=0
  fi
])
m4trace:m4/wchar_h.m4:64: -1- AC_DEFUN([gl_WCHAR_H_INLINE_OK], [
  dnl Test whether <wchar.h> suffers due to the transition from '__inline' to
  dnl 'gnu_inline'. See <https://sourceware.org/bugzilla/show_bug.cgi?id=4022>
  dnl and <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=42440>. In summary,
  dnl glibc version 2.5 or older, together with gcc version 4.3 or newer and
  dnl the option -std=c99 or -std=gnu99, leads to a broken <wchar.h>.
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether <wchar.h> uses 'inline' correctly],
    [gl_cv_header_wchar_h_correct_inline],
    [gl_cv_header_wchar_h_correct_inline=yes
     case "$host_os" in
       *-gnu* | gnu*)
         AC_LANG_CONFTEST([
           AC_LANG_SOURCE([[
             #define wcstod renamed_wcstod
             #include <wchar.h>
             extern int zero (void);
             int main () { return zero(); }
           ]])])
         dnl Do not rename the object file from conftest.$ac_objext to
         dnl conftest1.$ac_objext, as this will cause the link to fail on
         dnl z/OS when using the XPLINK object format (due to duplicate
         dnl CSECT names). Instead, temporarily redefine $ac_compile so
         dnl that the object file has the latter name from the start.
         save_ac_compile="$ac_compile"
         ac_compile=`echo "$save_ac_compile" | sed s/conftest/conftest1/`
         if echo '#include "conftest.c"' >conftest1.c \
            && AC_TRY_EVAL([ac_compile]); then
           AC_LANG_CONFTEST([
             AC_LANG_SOURCE([[
               #define wcstod renamed_wcstod
               #include <wchar.h>
               int zero (void) { return 0; }
             ]])])
           dnl See note above about renaming object files.
           ac_compile=`echo "$save_ac_compile" | sed s/conftest/conftest2/`
           if echo '#include "conftest.c"' >conftest2.c \
              && AC_TRY_EVAL([ac_compile]); then
             if $CC -o conftest$ac_exeext $CFLAGS $LDFLAGS conftest1.$ac_objext conftest2.$ac_objext $LIBS >&AS_MESSAGE_LOG_FD 2>&1; then
               :
             else
               gl_cv_header_wchar_h_correct_inline=no
             fi
           fi
         fi
         ac_compile="$save_ac_compile"
         rm -f conftest[12].c conftest[12].$ac_objext conftest$ac_exeext
         ;;
     esac
    ])
  if test $gl_cv_header_wchar_h_correct_inline = no; then
    AC_MSG_ERROR([<wchar.h> cannot be used with this compiler ($CC $CFLAGS $CPPFLAGS).
This is a known interoperability problem of glibc <= 2.5 with gcc >= 4.3 in
C99 mode. You have four options:
  - Add the flag -fgnu89-inline to CC and reconfigure, or
  - Fix your include files, using parts of
    <https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=b037a293a48718af30d706c2e18c929d0e69a621>, or
  - Use a gcc version older than 4.3, or
  - Don't use the flags -std=c99 or -std=gnu99.
Configuration aborted.])
  fi
])
m4trace:m4/wchar_h.m4:132: -1- AC_DEFUN([gl_WCHAR_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_WCHAR_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/wchar_h.m4:144: -1- AC_DEFUN([gl_WCHAR_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_WCHAR_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSINIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNRTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCRTOMB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRTOMBS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNRTOMBS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCWIDTH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMMOVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMSET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSXFRM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSTOK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSWIDTH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSFTIME])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WCSDUP], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_WCHAR_H_MODULE_INDICATOR_DEFAULTS])
  dnl Make sure the shell variable for GNULIB_FREE_POSIX is initialized.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
])
m4trace:m4/wchar_h.m4:197: -1- AC_DEFUN([gl_WCHAR_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_BTOWC=1;         AC_SUBST([HAVE_BTOWC])
  HAVE_MBSINIT=1;       AC_SUBST([HAVE_MBSINIT])
  HAVE_MBRTOWC=1;       AC_SUBST([HAVE_MBRTOWC])
  HAVE_MBRLEN=1;        AC_SUBST([HAVE_MBRLEN])
  HAVE_MBSRTOWCS=1;     AC_SUBST([HAVE_MBSRTOWCS])
  HAVE_MBSNRTOWCS=1;    AC_SUBST([HAVE_MBSNRTOWCS])
  HAVE_WCRTOMB=1;       AC_SUBST([HAVE_WCRTOMB])
  HAVE_WCSRTOMBS=1;     AC_SUBST([HAVE_WCSRTOMBS])
  HAVE_WCSNRTOMBS=1;    AC_SUBST([HAVE_WCSNRTOMBS])
  HAVE_WMEMCHR=1;       AC_SUBST([HAVE_WMEMCHR])
  HAVE_WMEMCMP=1;       AC_SUBST([HAVE_WMEMCMP])
  HAVE_WMEMCPY=1;       AC_SUBST([HAVE_WMEMCPY])
  HAVE_WMEMMOVE=1;      AC_SUBST([HAVE_WMEMMOVE])
  HAVE_WMEMPCPY=1;      AC_SUBST([HAVE_WMEMPCPY])
  HAVE_WMEMSET=1;       AC_SUBST([HAVE_WMEMSET])
  HAVE_WCSLEN=1;        AC_SUBST([HAVE_WCSLEN])
  HAVE_WCSNLEN=1;       AC_SUBST([HAVE_WCSNLEN])
  HAVE_WCSCPY=1;        AC_SUBST([HAVE_WCSCPY])
  HAVE_WCPCPY=1;        AC_SUBST([HAVE_WCPCPY])
  HAVE_WCSNCPY=1;       AC_SUBST([HAVE_WCSNCPY])
  HAVE_WCPNCPY=1;       AC_SUBST([HAVE_WCPNCPY])
  HAVE_WCSCAT=1;        AC_SUBST([HAVE_WCSCAT])
  HAVE_WCSNCAT=1;       AC_SUBST([HAVE_WCSNCAT])
  HAVE_WCSCMP=1;        AC_SUBST([HAVE_WCSCMP])
  HAVE_WCSNCMP=1;       AC_SUBST([HAVE_WCSNCMP])
  HAVE_WCSCASECMP=1;    AC_SUBST([HAVE_WCSCASECMP])
  HAVE_WCSNCASECMP=1;   AC_SUBST([HAVE_WCSNCASECMP])
  HAVE_WCSCOLL=1;       AC_SUBST([HAVE_WCSCOLL])
  HAVE_WCSXFRM=1;       AC_SUBST([HAVE_WCSXFRM])
  HAVE_WCSDUP=1;        AC_SUBST([HAVE_WCSDUP])
  HAVE_WCSCHR=1;        AC_SUBST([HAVE_WCSCHR])
  HAVE_WCSRCHR=1;       AC_SUBST([HAVE_WCSRCHR])
  HAVE_WCSCSPN=1;       AC_SUBST([HAVE_WCSCSPN])
  HAVE_WCSSPN=1;        AC_SUBST([HAVE_WCSSPN])
  HAVE_WCSPBRK=1;       AC_SUBST([HAVE_WCSPBRK])
  HAVE_WCSSTR=1;        AC_SUBST([HAVE_WCSSTR])
  HAVE_WCSTOK=1;        AC_SUBST([HAVE_WCSTOK])
  HAVE_WCSWIDTH=1;      AC_SUBST([HAVE_WCSWIDTH])
  HAVE_WCSFTIME=1;      AC_SUBST([HAVE_WCSFTIME])
  HAVE_DECL_WCTOB=1;    AC_SUBST([HAVE_DECL_WCTOB])
  HAVE_DECL_WCSDUP=1;   AC_SUBST([HAVE_DECL_WCSDUP])
  HAVE_DECL_WCWIDTH=1;  AC_SUBST([HAVE_DECL_WCWIDTH])
  REPLACE_MBSTATE_T=0;  AC_SUBST([REPLACE_MBSTATE_T])
  REPLACE_BTOWC=0;      AC_SUBST([REPLACE_BTOWC])
  REPLACE_WCTOB=0;      AC_SUBST([REPLACE_WCTOB])
  REPLACE_MBSINIT=0;    AC_SUBST([REPLACE_MBSINIT])
  REPLACE_MBRTOWC=0;    AC_SUBST([REPLACE_MBRTOWC])
  REPLACE_MBRLEN=0;     AC_SUBST([REPLACE_MBRLEN])
  REPLACE_MBSRTOWCS=0;  AC_SUBST([REPLACE_MBSRTOWCS])
  REPLACE_MBSNRTOWCS=0; AC_SUBST([REPLACE_MBSNRTOWCS])
  REPLACE_WCRTOMB=0;    AC_SUBST([REPLACE_WCRTOMB])
  REPLACE_WCSRTOMBS=0;  AC_SUBST([REPLACE_WCSRTOMBS])
  REPLACE_WCSNRTOMBS=0; AC_SUBST([REPLACE_WCSNRTOMBS])
  REPLACE_WCWIDTH=0;    AC_SUBST([REPLACE_WCWIDTH])
  REPLACE_WCSWIDTH=0;   AC_SUBST([REPLACE_WCSWIDTH])
  REPLACE_WCSFTIME=0;   AC_SUBST([REPLACE_WCSFTIME])
  REPLACE_WCSTOK=0;     AC_SUBST([REPLACE_WCSTOK])
])
m4trace:m4/wchar_t.m4:11: -1- AC_DEFUN([gt_TYPE_WCHAR_T], [
  AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stddef.h>
            wchar_t foo = (wchar_t)'\0';]],
          [[]])],
       [gt_cv_c_wchar_t=yes],
       [gt_cv_c_wchar_t=no])])
  if test $gt_cv_c_wchar_t = yes; then
    AC_DEFINE([HAVE_WCHAR_T], [1], [Define if you have the 'wchar_t' type.])
  fi
])
m4trace:m4/wcrtomb.m4:7: -1- AC_DEFUN([gl_FUNC_WCRTOMB], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  gl_MBSTATE_T_BROKEN

  AC_CHECK_FUNCS_ONCE([wcrtomb])
  if test $ac_cv_func_wcrtomb = no; then
    HAVE_WCRTOMB=0
    AC_CHECK_DECLS([wcrtomb],,, [[
      #include <wchar.h>
    ]])
    if test $ac_cv_have_decl_wcrtomb = yes; then
      dnl On Minix 3.1.8, the system's <wchar.h> declares wcrtomb() although
      dnl it does not have the function. Avoid a collision with gnulib's
      dnl replacement.
      REPLACE_WCRTOMB=1
    fi
  else
    dnl We don't actually need to override wcrtomb when redefining the semantics
    dnl of the mbstate_t type. Tested on 32-bit AIX.
    dnl if test $REPLACE_MBSTATE_T = 1; then
    dnl   REPLACE_WCRTOMB=1
    dnl fi
    if test $REPLACE_WCRTOMB = 0; then
      dnl On Android 4.3, wcrtomb produces wrong characters in the C locale.
      dnl On AIX 4.3, OSF/1 5.1 and Solaris <= 11.3, wcrtomb (NULL, 0, NULL)
      dnl sometimes returns 0 instead of 1.
      AC_REQUIRE([AC_PROG_CC])
      AC_REQUIRE([gt_LOCALE_FR])
      AC_REQUIRE([gt_LOCALE_FR_UTF8])
      AC_REQUIRE([gt_LOCALE_JA])
      AC_REQUIRE([gt_LOCALE_ZH_CN])
      AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
      AC_CACHE_CHECK([whether wcrtomb works in the C locale],
        [gl_cv_func_wcrtomb_works],
        [AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <string.h>
#include <stdlib.h>
#include <wchar.h>
int main ()
{
  mbstate_t state;
  char out[64];
  int count;
  memset (&state, 0, sizeof (state));
  out[0] = 'x';
  count = wcrtomb (out, L'a', &state);
  return !(count == 1 && out[0] == 'a');
}]])],
           [gl_cv_func_wcrtomb_works=yes],
           [gl_cv_func_wcrtomb_works=no],
           [case "$host_os" in
                               # Guess no on Android.
              linux*-android*) gl_cv_func_wcrtomb_works="guessing no";;
                               # Guess yes otherwise.
              *)               gl_cv_func_wcrtomb_works="guessing yes";;
            esac
           ])
        ])
      case "$gl_cv_func_wcrtomb_works" in
        *yes) ;;
        *) AC_DEFINE([WCRTOMB_C_LOCALE_BUG], [1],
             [Define if the wcrtomb function does not work in the C locale.])
           REPLACE_WCRTOMB=1 ;;
      esac
    fi
    if test $REPLACE_WCRTOMB = 0; then
      AC_CACHE_CHECK([whether wcrtomb return value is correct],
        [gl_cv_func_wcrtomb_retval],
        [
          dnl Initial guess, used when cross-compiling or when no suitable locale
          dnl is present.
changequote(,)dnl
          case "$host_os" in
            # Guess no on AIX 4, OSF/1, Solaris, native Windows.
            aix4* | osf* | solaris* | mingw*) gl_cv_func_wcrtomb_retval="guessing no" ;;
            # Guess yes otherwise.
            *)                                gl_cv_func_wcrtomb_retval="guessing yes" ;;
          esac
changequote([,])dnl
          if test $LOCALE_FR != none || test $LOCALE_FR_UTF8 != none || test $LOCALE_JA != none || test $LOCALE_ZH_CN != none; then
            AC_RUN_IFELSE(
              [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
#include <stdlib.h>
int main ()
{
  int result = 0;
  if (setlocale (LC_ALL, "$LOCALE_FR") != NULL)
    {
      if (wcrtomb (NULL, 0, NULL) != 1)
        result |= 1;
    }
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      if (wcrtomb (NULL, 0, NULL) != 1)
        result |= 2;
      {
        wchar_t wc = (wchar_t) 0xBADFACE;
        if (mbtowc (&wc, "\303\274", 2) == 2)
          if (wcrtomb (NULL, wc, NULL) != 1)
            result |= 2;
      }
    }
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      if (wcrtomb (NULL, 0, NULL) != 1)
        result |= 4;
    }
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      if (wcrtomb (NULL, 0, NULL) != 1)
        result |= 8;
    }
  return result;
}]])],
              [gl_cv_func_wcrtomb_retval=yes],
              [gl_cv_func_wcrtomb_retval=no],
              [:])
          fi
        ])
      case "$gl_cv_func_wcrtomb_retval" in
        *yes) ;;
        *) AC_DEFINE([WCRTOMB_RETVAL_BUG], [1],
             [Define if the wcrtomb function has an incorrect return value.])
           REPLACE_WCRTOMB=1 ;;
      esac
    fi
  fi
])
m4trace:m4/wcrtomb.m4:144: -1- AC_DEFUN([gl_PREREQ_WCRTOMB], [
  :
])
m4trace:m4/wcswidth.m4:7: -1- AC_DEFUN([gl_FUNC_WCSWIDTH], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_WCWIDTH])
  AC_CHECK_FUNCS_ONCE([wcswidth])
  if test $ac_cv_func_wcswidth = no; then
    HAVE_WCSWIDTH=0
  else
    if test $REPLACE_WCWIDTH = 1; then
      dnl If wcwidth needed to be replaced, wcswidth needs to be replaced
      dnl as well.
      REPLACE_WCSWIDTH=1
    fi
  fi
])
m4trace:m4/wctob.m4:7: -1- AC_DEFUN([gl_FUNC_WCTOB], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  AC_CHECK_FUNCS_ONCE([wctob])
  if test $ac_cv_func_wctob = no; then
    HAVE_WCTOB=0
    HAVE_DECL_WCTOB=0
  else
    HAVE_WCTOB=1

    dnl Solaris 9 has the wctob() function but it does not work.
    dnl Cygwin 1.7.2 has the wctob() function but it clobbers caller-owned
    dnl registers, see <https://cygwin.com/ml/cygwin/2010-05/msg00015.html>.
    AC_REQUIRE([AC_PROG_CC])
    AC_REQUIRE([gt_LOCALE_FR])
    AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
    AC_CACHE_CHECK([whether wctob works],
      [gl_cv_func_wctob_works],
      [
        dnl Initial guess, used when cross-compiling or when no suitable locale
        dnl is present.
changequote(,)dnl
        case "$host_os" in
            # Guess no on Solaris <= 9 and Cygwin.
          solaris2.[1-9] | solaris2.[1-9].* | cygwin*)
            gl_cv_func_wctob_works="guessing no" ;;
            # Guess no on native Windows.
          mingw*)
            gl_cv_func_wctob_works="guessing no" ;;
            # Guess yes otherwise.
          *) gl_cv_func_wctob_works="guessing yes" ;;
        esac
changequote([,])dnl
        case "$host_os" in
          cygwin*)
            AC_RUN_IFELSE(
              [AC_LANG_SOURCE([[
#include <locale.h>
#include <wchar.h>

register long global __asm__ ("%ebx");

int main ()
{
  setlocale (LC_ALL, "en_US.UTF-8");

  global = 0x12345678;
  if (wctob (0x00FC) != -1)
    return 1;
  if (global != 0x12345678)
    return 2;
  return 0;
}]])],
              [:],
              [gl_cv_func_wctob_works=no],
              [:])
            ;;
        esac
        if test "$gl_cv_func_wctob_works" != no && test $LOCALE_FR != none; then
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR") != NULL)
    {
      wchar_t wc;

      if (mbtowc (&wc, "\374", 1) == 1)
        if (wctob (wc) != (unsigned char) '\374')
          return 1;
    }
  return 0;
}]])],
            [gl_cv_func_wctob_works=yes],
            [gl_cv_func_wctob_works=no],
            [:])
        fi
      ])
    case "$gl_cv_func_wctob_works" in
      *yes) ;;
      *) REPLACE_WCTOB=1 ;;
    esac
    if test $REPLACE_WCTOB = 0; then

      dnl IRIX 6.5 has the wctob() function but does not declare it.
      AC_CHECK_DECLS([wctob], [], [], [[
        #include <wchar.h>
      ]])
      if test $ac_cv_have_decl_wctob != yes; then
        HAVE_DECL_WCTOB=0
      fi
    fi
  fi
])
m4trace:m4/wctob.m4:107: -1- AC_DEFUN([gl_PREREQ_WCTOB], [
  :
])
m4trace:m4/wctomb.m4:7: -1- AC_DEFUN([gl_FUNC_WCTOMB], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  if false; then
    REPLACE_WCTOMB=1
  fi
])
m4trace:m4/wctomb.m4:17: -1- AC_DEFUN([gl_PREREQ_WCTOMB], [
  :
])
m4trace:m4/wctype_h.m4:12: -1- AC_DEFUN_ONCE([gl_WCTYPE_H], [
  AC_REQUIRE([gl_WCTYPE_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([iswcntrl])
  if test $ac_cv_func_iswcntrl = yes; then
    HAVE_ISWCNTRL=1
  else
    HAVE_ISWCNTRL=0
  fi
  AC_SUBST([HAVE_ISWCNTRL])

  AC_REQUIRE([gt_TYPE_WINT_T])
  if test $gt_cv_c_wint_t = yes; then
    HAVE_WINT_T=1
  else
    HAVE_WINT_T=0
  fi
  AC_SUBST([HAVE_WINT_T])

  AC_REQUIRE([gl_TYPE_WINT_T_PREREQ])

  gl_CHECK_NEXT_HEADERS([wctype.h])
  if test $ac_cv_header_wctype_h = yes; then
    if test $ac_cv_func_iswcntrl = yes; then
      dnl Linux libc5 has an iswprint function that returns 0 for all arguments.
      dnl The other functions are likely broken in the same way.
      AC_CACHE_CHECK([whether iswcntrl works], [gl_cv_func_iswcntrl_works],
        [
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
               #include <wchar.h>
               #include <wctype.h>
               int main () { return iswprint ('x') == 0; }
            ]])],
            [gl_cv_func_iswcntrl_works=yes], [gl_cv_func_iswcntrl_works=no],
            [dnl Guess no on Linux libc5, yes otherwise.
             AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>
                          #if __GNU_LIBRARY__ == 1
                          Linux libc5 i18n is broken.
                          #endif]], [[]])],
              [gl_cv_func_iswcntrl_works="guessing yes"],
              [gl_cv_func_iswcntrl_works="guessing no"])
            ])
        ])
    fi
    HAVE_WCTYPE_H=1
  else
    HAVE_WCTYPE_H=0
  fi
  AC_SUBST([HAVE_WCTYPE_H])

  if test $GNULIBHEADERS_OVERRIDE_WINT_T = 1; then
    REPLACE_ISWCNTRL=1
  else
    case "$gl_cv_func_iswcntrl_works" in
      *yes) REPLACE_ISWCNTRL=0 ;;
      *)    REPLACE_ISWCNTRL=1 ;;
    esac
  fi
  AC_SUBST([REPLACE_ISWCNTRL])

  if test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; then
    dnl Redefine all of iswcntrl, ..., iswxdigit in <wctype.h>.
    :
  fi

  if test $REPLACE_ISWCNTRL = 1; then
    REPLACE_TOWLOWER=1
  else
    AC_CHECK_FUNCS([towlower])
    if test $ac_cv_func_towlower = yes; then
      REPLACE_TOWLOWER=0
    else
      AC_CHECK_DECLS([towlower],,,
        [[#include <wchar.h>
          #if HAVE_WCTYPE_H
          # include <wctype.h>
          #endif
        ]])
      if test $ac_cv_have_decl_towlower = yes; then
        dnl On Minix 3.1.8, the system's <wctype.h> declares towlower() and
        dnl towupper() although it does not have the functions. Avoid a
        dnl collision with gnulib's replacement.
        REPLACE_TOWLOWER=1
      else
        REPLACE_TOWLOWER=0
      fi
    fi
  fi
  AC_SUBST([REPLACE_TOWLOWER])

  if test $HAVE_ISWCNTRL = 0 || test $REPLACE_TOWLOWER = 1; then
    dnl Redefine towlower, towupper in <wctype.h>.
    :
  fi

  dnl We assume that the wctype() and iswctype() functions exist if and only
  dnl if the type wctype_t is defined in <wchar.h> or in <wctype.h> if that
  dnl exists.
  dnl HP-UX 11.00 declares all these in <wchar.h> and lacks <wctype.h>.
  AC_CACHE_CHECK([for wctype_t], [gl_cv_type_wctype_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
            #if HAVE_WCTYPE_H
            # include <wctype.h>
            #endif
            wctype_t a;
          ]],
          [[]])],
       [gl_cv_type_wctype_t=yes],
       [gl_cv_type_wctype_t=no])
    ])
  if test $gl_cv_type_wctype_t = no; then
    HAVE_WCTYPE_T=0
  fi

  dnl We assume that the wctrans() and towctrans() functions exist if and only
  dnl if the type wctrans_t is defined in <wctype.h>.
  AC_CACHE_CHECK([for wctrans_t], [gl_cv_type_wctrans_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
            #include <wctype.h>
            wctrans_t a;
          ]],
          [[]])],
       [gl_cv_type_wctrans_t=yes],
       [gl_cv_type_wctrans_t=no])
    ])
  if test $gl_cv_type_wctrans_t = no; then
    HAVE_WCTRANS_T=0
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <wchar.h>
#endif
#include <wctype.h>
    ]],
    [wctype iswctype wctrans towctrans
    ])
])
m4trace:m4/wctype_h.m4:164: -1- AC_DEFUN([gl_WCTYPE_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_WCTYPE_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/wctype_h.m4:176: -1- AC_DEFUN([gl_WCTYPE_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_WCTYPE_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWBLANK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWDIGIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWXDIGIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTYPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWCTYPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTRANS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TOWCTRANS])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_WCTYPE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_WCTYPE_H_DEFAULTS])
])
m4trace:m4/wctype_h.m4:191: -1- AC_DEFUN([gl_WCTYPE_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_ISWBLANK=1;      AC_SUBST([HAVE_ISWBLANK])
  HAVE_WCTYPE_T=1;      AC_SUBST([HAVE_WCTYPE_T])
  HAVE_WCTRANS_T=1;     AC_SUBST([HAVE_WCTRANS_T])
  REPLACE_ISWBLANK=0;   AC_SUBST([REPLACE_ISWBLANK])
  REPLACE_ISWDIGIT=0;   AC_SUBST([REPLACE_ISWDIGIT])
  REPLACE_ISWXDIGIT=0;  AC_SUBST([REPLACE_ISWXDIGIT])
])
m4trace:m4/wcwidth.m4:7: -1- AC_DEFUN([gl_FUNC_WCWIDTH], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc <wchar.h> to declare wcwidth().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])

  AC_CHECK_HEADERS_ONCE([wchar.h])
  AC_CHECK_FUNCS_ONCE([wcwidth])

  AC_CHECK_DECLS([wcwidth], [], [], [[
    #include <wchar.h>
  ]])
  if test $ac_cv_have_decl_wcwidth != yes; then
    HAVE_DECL_WCWIDTH=0
  fi

  if test $ac_cv_func_wcwidth != yes; then
    AC_CACHE_CHECK([whether wcwidth is a macro],
      [gl_cv_func_wcwidth_macro],
      [AC_EGREP_CPP([wchar_header_defines_wcwidth], [
#include <wchar.h>
#ifdef wcwidth
 wchar_header_defines_wcwidth
#endif],
         [gl_cv_func_wcwidth_macro=yes],
         [gl_cv_func_wcwidth_macro=no])
      ])
  fi

  if test $ac_cv_func_wcwidth = yes || test $gl_cv_func_wcwidth_macro = yes; then
    HAVE_WCWIDTH=1
    dnl On Mac OS X 10.3, wcwidth(0x0301) (COMBINING ACUTE ACCENT) returns 1.
    dnl On NetBSD 9.0, OpenBSD 5.0, MidnightBSD 1.1,
    dnl wcwidth(0x05B0) (HEBREW POINT SHEVA) returns 1.
    dnl On NetBSD 9.0, MidnightBSD 1.1, OSF/1 5.1,
    dnl wcwidth(0x200B) (ZERO WIDTH SPACE) returns 1.
    dnl On OpenBSD 5.8, wcwidth(0xFF1A) (FULLWIDTH COLON) returns 0.
    dnl This leads to bugs in 'ls' (coreutils).
    dnl On Solaris 11.4, wcwidth(0x2202) (PARTIAL DIFFERENTIAL) returns 2,
    dnl even in Western locales.
    AC_CACHE_CHECK([whether wcwidth works reasonably in UTF-8 locales],
      [gl_cv_func_wcwidth_works],
      [
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <wchar.h>
#if !HAVE_DECL_WCWIDTH
extern
# ifdef __cplusplus
"C"
# endif
int wcwidth (int);
#endif
int main ()
{
  int result = 0;
  if (setlocale (LC_ALL, "en_US.UTF-8") != NULL)
    {
      if (wcwidth (0x0301) > 0)
        result |= 1;
      if (wcwidth (0x05B0) > 0)
        result |= 2;
      if (wcwidth (0x200B) > 0)
        result |= 4;
      if (wcwidth (0xFF1A) == 0)
        result |= 8;
      if (wcwidth (0x2202) > 1)
        result |= 16;
    }
  return result;
}]])],
          [gl_cv_func_wcwidth_works=yes],
          [gl_cv_func_wcwidth_works=no],
          [
changequote(,)dnl
           case "$host_os" in
                            # Guess yes on glibc systems.
             *-gnu* | gnu*) gl_cv_func_wcwidth_works="guessing yes";;
                            # Guess yes on musl systems.
             *-musl*)       gl_cv_func_wcwidth_works="guessing yes";;
                            # Guess yes on AIX 7 systems.
             aix[7-9]*)     gl_cv_func_wcwidth_works="guessing yes";;
             *)             gl_cv_func_wcwidth_works="$gl_cross_guess_normal";;
           esac
changequote([,])dnl
          ])
      ])
    case "$gl_cv_func_wcwidth_works" in
      *yes) ;;
      *no) REPLACE_WCWIDTH=1 ;;
    esac
  else
    HAVE_WCWIDTH=0
  fi
  dnl We don't substitute HAVE_WCWIDTH. We assume that if the system does not
  dnl have the wcwidth function, then it does not declare it.
])
m4trace:m4/wcwidth.m4:112: -1- AC_DEFUN([gl_PREREQ_WCWIDTH], [
  AC_REQUIRE([AC_C_INLINE])
  :
])
m4trace:m4/wint_t.m4:12: -1- AC_DEFUN([gt_TYPE_WINT_T], [
  AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
            wint_t foo = (wchar_t)'\0';]],
          [[]])],
       [gt_cv_c_wint_t=yes],
       [gt_cv_c_wint_t=no])])
  if test $gt_cv_c_wint_t = yes; then
    AC_DEFINE([HAVE_WINT_T], [1], [Define if you have the 'wint_t' type.])

    dnl Determine whether gnulib's <wchar.h> or <wctype.h> would, if present,
    dnl override 'wint_t'.
    AC_CACHE_CHECK([whether wint_t is large enough],
      [gl_cv_type_wint_t_large_enough],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <wchar.h>
              int verify[sizeof (wint_t) < sizeof (int) ? -1 : 1];
            ]])],
         [gl_cv_type_wint_t_large_enough=yes],
         [gl_cv_type_wint_t_large_enough=no])])
    if test $gl_cv_type_wint_t_large_enough = no; then
      GNULIBHEADERS_OVERRIDE_WINT_T=1
    else
      GNULIBHEADERS_OVERRIDE_WINT_T=0
    fi
  else
    GNULIBHEADERS_OVERRIDE_WINT_T=0
  fi
  AC_SUBST([GNULIBHEADERS_OVERRIDE_WINT_T])
])
m4trace:m4/wint_t.m4:48: -1- AC_DEFUN([gl_TYPE_WINT_T_PREREQ], [
  AC_CHECK_HEADERS_ONCE([crtdefs.h])
  if test $ac_cv_header_crtdefs_h = yes; then
    HAVE_CRTDEFS_H=1
  else
    HAVE_CRTDEFS_H=0
  fi
  AC_SUBST([HAVE_CRTDEFS_H])
])
m4trace:m4/wmemchr.m4:7: -1- AC_DEFUN([gl_FUNC_WMEMCHR], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  dnl We cannot use AC_CHECK_FUNCS here, because the MSVC 9 header files
  dnl provide this function as an inline function definition.
  AC_CACHE_CHECK([for wmemchr], [gl_cv_func_wmemchr],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
          ]],
          [[return ! wmemchr ((const wchar_t *) 0, (wchar_t) ' ', 0);]])
       ],
       [gl_cv_func_wmemchr=yes],
       [gl_cv_func_wmemchr=no])
    ])
  if test $gl_cv_func_wmemchr = no; then
    HAVE_WMEMCHR=0
  fi
])
m4trace:m4/wmempcpy.m4:7: -1- AC_DEFUN([gl_FUNC_WMEMPCPY], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  dnl Persuade glibc <wchar.h> to declare wmempcpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The wmempcpy() declaration in lib/wchar.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_FUNCS_ONCE([wmempcpy])
  if test $ac_cv_func_wmempcpy = no; then
    HAVE_WMEMPCPY=0
  fi
])
m4trace:m4/write-any-file.m4:11: -1- AC_DEFUN([gl_WRITE_ANY_FILE], [
  AC_CHECK_HEADERS_ONCE([priv.h])
])
m4trace:m4/write.m4:7: -1- AC_DEFUN([gl_FUNC_WRITE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_WRITE=1
    fi
  ])
  dnl This ifdef is just an optimization, to avoid performing a configure
  dnl check whose result is not used. It does not make the test of
  dnl GNULIB_UNISTD_H_SIGPIPE or GNULIB_SIGPIPE redundant.
  m4_ifdef([gl_SIGNAL_SIGPIPE], [
    gl_SIGNAL_SIGPIPE
    if test $gl_cv_header_signal_h_SIGPIPE != yes; then
      REPLACE_WRITE=1
    fi
  ])
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_WRITE=1
    fi
  ])
])
m4trace:m4/write.m4:34: -1- AC_DEFUN([gl_PREREQ_WRITE], [:])
m4trace:m4/xalloc.m4:7: -1- AC_DEFUN([gl_XALLOC], [:])
m4trace:m4/xattr.m4:11: -1- AC_DEFUN([gl_FUNC_XATTR], [
  AC_ARG_ENABLE([xattr],
        AS_HELP_STRING([--disable-xattr],
                       [do not support extended attributes]),
        [use_xattr=$enableval], [use_xattr=yes])

  LIB_XATTR=
  AC_SUBST([LIB_XATTR])

  if test "$use_xattr" = "yes"; then
    AC_CHECK_HEADERS([attr/error_context.h attr/libattr.h])
    use_xattr=no
    if test $ac_cv_header_attr_libattr_h = yes \
        && test $ac_cv_header_attr_error_context_h = yes; then
      xattr_saved_LIBS=$LIBS
      AC_SEARCH_LIBS([attr_copy_file], [attr],
                     [test "$ac_cv_search_attr_copy_file" = "none required" ||
                        LIB_XATTR=$ac_cv_search_attr_copy_file])
      AC_CHECK_FUNCS([attr_copy_file])
      LIBS=$xattr_saved_LIBS
      if test $ac_cv_func_attr_copy_file = yes; then
        use_xattr=yes
      fi
    fi
    if test $use_xattr = no; then
      AC_MSG_WARN([libattr development library was not found or not usable.])
      AC_MSG_WARN([AC_PACKAGE_NAME will be built without xattr support.])
    fi
  fi
  AC_DEFINE_UNQUOTED([USE_XATTR], [`test $use_xattr != yes; echo $?`],
                     [Define if you want extended attribute support.])
])
m4trace:m4/xgetcwd.m4:7: -1- AC_DEFUN([gl_XGETCWD], [
  :
])
m4trace:m4/xnanosleep.m4:9: -1- AC_DEFUN([gl_XNANOSLEEP], [
  AC_CHECK_FUNCS_ONCE([pause])
])
m4trace:m4/xsize.m4:7: -1- AC_DEFUN([gl_XSIZE], [
  dnl Prerequisites of lib/xsize.h.
  AC_REQUIRE([gl_SIZE_MAX])
  AC_CHECK_HEADERS([stdint.h])
])
m4trace:m4/xstrtod.m4:9: -1- AC_DEFUN([gl_XSTRTOD], [
  :
])
m4trace:m4/xstrtod.m4:15: -1- AC_DEFUN([gl_XSTRTOLD], [
  :
])
m4trace:m4/xstrtol.m4:7: -1- AC_DEFUN([gl_XSTRTOL], [
  :
])
m4trace:m4/xvasprintf.m4:8: -1- AC_DEFUN([gl_XVASPRINTF], [:])
m4trace:m4/year2038.m4:10: -1- AC_DEFUN([gl_YEAR2038_EARLY], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_DEFINE([__MINGW_USE_VC2005_COMPAT], [1],
        [For 64-bit time_t on 32-bit mingw.])
      ;;
  esac
])
m4trace:m4/year2038.m4:23: -1- AC_DEFUN([gl_YEAR2038_TEST_INCLUDES], [[
  #include <time.h>
  /* Check that time_t can represent 2**32 - 1 correctly.  */
  #define LARGE_TIME_T \\
    ((time_t) (((time_t) 1 << 30) - 1 + 3 * ((time_t) 1 << 30)))
  int verify_time_t_range[(LARGE_TIME_T / 65537 == 65535
                           && LARGE_TIME_T % 65537 == 0)
                          ? 1 : -1];
]])
m4trace:m4/year2038.m4:36: -1- AC_DEFUN([gl_YEAR2038_BODY], [
 AC_ARG_ENABLE([year2038],
   [  --disable-year2038      omit support for timestamps past the year 2038])
 AS_IF([test "$enable_year2038" != no],
 [
  dnl On many systems, time_t is already a 64-bit type.
  dnl On those systems where time_t is still 32-bit, it requires kernel
  dnl and libc support to make it 64-bit. For glibc 2.34 and later on Linux,
  dnl defining _TIME_BITS=64 and _FILE_OFFSET_BITS=64 is needed on x86 and ARM.
  dnl
  dnl On native Windows, the system include files define types __time32_t
  dnl and __time64_t. By default, time_t is an alias of
  dnl   - __time32_t on 32-bit mingw,
  dnl   - __time64_t on 64-bit mingw and on MSVC (since MSVC 8).
  dnl But when compiling with -D__MINGW_USE_VC2005_COMPAT, time_t is an
  dnl alias of __time64_t.
  dnl And when compiling with -D_USE_32BIT_TIME_T, time_t is an alias of
  dnl __time32_t.
  AC_CACHE_CHECK([for time_t past the year 2038], [gl_cv_type_time_t_y2038],
    [AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE([gl_YEAR2038_TEST_INCLUDES])],
       [gl_cv_type_time_t_y2038=yes], [gl_cv_type_time_t_y2038=no])
    ])
  if test "$gl_cv_type_time_t_y2038" = no; then
    AC_CACHE_CHECK([for 64-bit time_t with _TIME_BITS=64],
      [gl_cv_type_time_t_bits_macro],
      [AC_COMPILE_IFELSE(
         [AC_LANG_SOURCE([[#define _TIME_BITS 64
                           #define _FILE_OFFSET_BITS 64
                           ]gl_YEAR2038_TEST_INCLUDES])],
         [gl_cv_type_time_t_bits_macro=yes],
         [gl_cv_type_time_t_bits_macro=no])
      ])
    if test "$gl_cv_type_time_t_bits_macro" = yes; then
      AC_DEFINE([_TIME_BITS], [64],
        [Number of bits in a timestamp, on hosts where this is settable.])
      dnl AC_SYS_LARGFILE also defines this; it's OK if we do too.
      AC_DEFINE([_FILE_OFFSET_BITS], [64],
        [Number of bits in a file offset, on hosts where this is settable.])
      gl_cv_type_time_t_y2038=yes
    fi
  fi
  if test $gl_cv_type_time_t_y2038 = no; then
    AC_COMPILE_IFELSE(
      [AC_LANG_SOURCE(
         [[#ifdef _USE_32BIT_TIME_T
             int ok;
           #else
             error fail
           #endif
         ]])],
      [AC_MSG_FAILURE(
         [The 'time_t' type stops working after January 2038.
          Remove _USE_32BIT_TIME_T from the compiler flags.])],
      [# If not cross-compiling and $1 says we should check,
       # and 'touch' works with a large timestamp, then evidently wider time_t
       # is desired and supported, so fail and ask the builder to fix the
       # problem.  Otherwise, just warn the builder.
       m4_ifval([$1],
         [if test $cross_compiling = no \
             && TZ=UTC0 touch -t 210602070628.15 conftest.time 2>/dev/null; then
            case `TZ=UTC0 LC_ALL=C ls -l conftest.time 2>/dev/null` in
              *'Feb  7  2106'* | *'Feb  7 17:10'*)
                AC_MSG_FAILURE(
                  [The 'time_t' type stops working after January 2038,
                   and your system appears to support a wider 'time_t'.
                   Try configuring with 'CC="${CC} -m64"'.
                   To build with a 32-bit time_t anyway (not recommended),
                   configure with '--disable-year2038'.]);;
            esac
            rm -f conftest.time
          fi])
       if test "$gl_warned_about_y2038" != yes; then
         AC_MSG_WARN(
           [The 'time_t' type stops working after January 2038,
            and this package needs a wider 'time_t' type
            if there is any way to access timestamps after that.
            Configure with 'CC="${CC} -m64"' perhaps?])
         gl_warned_about_y2038=yes
       fi
      ])
  fi])
])
m4trace:m4/year2038.m4:121: -1- AC_DEFUN([gl_YEAR2038], [
  gl_YEAR2038_BODY([require-year2038-safe])
])
m4trace:m4/yesno.m4:8: -1- AC_DEFUN([gl_YESNO], [
  dnl No prerequisites of lib/yesno.c.
  :
])
m4trace:m4/yield.m4:7: -1- AC_DEFUN([gl_YIELD], [
  AC_REQUIRE([gl_PTHREADLIB])
  AC_REQUIRE([gl_THREADLIB])

  if test $gl_threads_api = posix; then
    YIELD_LIB="$LIB_SCHED_YIELD"
  else
    YIELD_LIB=
  fi
  AC_SUBST([YIELD_LIB])
])
m4trace:m4/zzgnulib.m4:23: -1- AC_DEFUN([gl_ZZGNULIB])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:27: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:27: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:38: -1- AM_INIT_AUTOMAKE([1.11.2 dist-xz color-tests parallel-tests subdir-objects])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:38: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:38: -1- AM_AUTOMAKE_VERSION([1.16.1])
m4trace:configure.ac:38: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:38: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:38: -1- _AM_SET_OPTIONS([1.11.2 dist-xz color-tests parallel-tests subdir-objects])
m4trace:configure.ac:38: -1- _AM_SET_OPTION([1.11.2])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([1.11.2])
m4trace:configure.ac:38: -1- _AM_SET_OPTION([dist-xz])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([dist-xz])
m4trace:configure.ac:38: -1- _AM_SET_OPTION([color-tests])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([color-tests])
m4trace:configure.ac:38: -1- _AM_SET_OPTION([parallel-tests])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([parallel-tests])
m4trace:configure.ac:38: -1- _AM_SET_OPTION([subdir-objects])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([subdir-objects])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:38: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:38: -1- AM_SANITY_CHECK
m4trace:configure.ac:38: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:38: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:38: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:38: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:38: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:38: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:38: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:38: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:38: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:38: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:38: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:38: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:38: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:38: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:38: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:38: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:38: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:38: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:38: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:38: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:38: -1- AM_SILENT_RULES
m4trace:configure.ac:38: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:38: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:38: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:39: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:39: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:39: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:39: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:39: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:39: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:39: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:39: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:39: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:39: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:52: -1- gl_ASSERT_NO_GNULIB_POSIXCHECK
m4trace:configure.ac:52: -1- AC_DEFUN([gl_WARN_ON_USE_PREPARE], [])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:55: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:55: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:55: -1- gl_COMPILER_CLANG
m4trace:configure.ac:55: -1- gl_COMPILER_PREPARE_CHECK_DECL
m4trace:configure.ac:55: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:55: -1- AM_SET_DEPDIR
m4trace:configure.ac:55: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:55: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:55: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:55: -1- AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:55: -1- AM_DEP_TRACK
m4trace:configure.ac:55: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:55: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:55: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:55: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:55: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:56: -1- AM_PROG_CC_C_O
m4trace:configure.ac:57: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:59: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:60: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:61: -1- gl_EARLY
m4trace:configure.ac:61: -1- m4_pattern_forbid([^gl_[A-Z]])
m4trace:configure.ac:61: -1- m4_pattern_allow([^gl_ES$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:61: -1- gl_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:61: -1- AC_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:61: -1- AC_CHECK_INCLUDES_DEFAULT
m4trace:configure.ac:61: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" wchar.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:61: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:61: -1- AC_DEFUN([_AC_Header_minix_config_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" minix/config.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_DARWIN_C_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_HPUX_ALT_XOPEN_SOCKET_API$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_NETBSD_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_OPENBSD_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_ATTRIBS_EXT__$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_BFP_EXT__$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_DFP_EXT__$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_FUNCS_EXT__$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_TYPES_EXT__$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^__STDC_WANT_LIB_EXT2__$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^__STDC_WANT_MATH_SPEC_FUNCS__$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_XOPEN_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_ISOC11_SOURCE$])
m4trace:configure.ac:61: -1- gl_PROG_AR_RANLIB
m4trace:configure.ac:61: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:61: -1- AB_INIT
m4trace:configure.ac:61: -1- gl_SET_LARGEFILE_SOURCE
m4trace:configure.ac:61: -1- m4_pattern_allow([^_LARGEFILE_SOURCE$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_LARGEFILE_SOURCE$])
m4trace:configure.ac:61: -1- gl_FP_IEEE
m4trace:configure.ac:61: -1- AC_SYS_LARGEFILE
m4trace:configure.ac:61: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:61: -1- gl_YEAR2038_BODY([])
m4trace:configure.ac:61: -1- gl_YEAR2038_TEST_INCLUDES
m4trace:configure.ac:61: -1- gl_YEAR2038_TEST_INCLUDES
m4trace:configure.ac:61: -1- m4_pattern_allow([^_TIME_BITS$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:61: -1- gl_YEAR2038_EARLY
m4trace:configure.ac:61: -1- m4_pattern_allow([^__MINGW_USE_VC2005_COMPAT$])
m4trace:configure.ac:61: -1- gl_ANYTHREADLIB_EARLY
m4trace:configure.ac:61: -1- gl_PROG_CC_C99
m4trace:configure.ac:61: -1- gl_THREADLIB_EARLY
m4trace:configure.ac:61: -1- gl_THREADLIB_EARLY_BODY
m4trace:configure.ac:61: -1- gl_ANYTHREADLIB_EARLY
m4trace:configure.ac:62: -1- gl_SET_CRYPTO_CHECK_DEFAULT([auto-gpl-compat])
m4trace:configure.ac:63: -1- gl_INIT
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_LIBTOOL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_LIBTOOL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:63: -1- gl_COMMON
m4trace:configure.ac:63: -1- gl_00GNULIB
m4trace:configure.ac:63: -1- gl_COMMON_BODY
m4trace:configure.ac:63: -1- gl_ZZGNULIB
m4trace:configure.ac:63: -1- gl_FUNC_ACL
m4trace:configure.ac:63: -1- gl_FUNC_ACL_ARG
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchmod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchmod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_ACL_H$])
m4trace:configure.ac:63: -1- gl_ACL_GET_FILE([use_acl=1], [])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACL_LIBACL_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACL_ENTRIES$])
m4trace:configure.ac:63: -1- gl_LIBOBJ([$ac_func])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACL_FIRST_ENTRY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACL_TYPE_EXTENDED$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FACL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACL_TRIVIAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETACL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACLV_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACLX_GET$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STATACL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACLSORT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_ACL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_ACL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_ACL$])
m4trace:configure.ac:63: -1- gl_ALIGNALLOC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_posix_memalign], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" posix_memalign"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_ALLOCA
m4trace:configure.ac:63: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ALLOCA$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^C_ALLOCA$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STACK_DIRECTION$])
m4trace:configure.ac:63: -1- gl_PREREQ_ALLOCA
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([alloca.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ALLOCA_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_ALLOCA_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([areadlinkat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_AREADLINKAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([areadlinkat-with-size])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_AREADLINKAT_WITH_SIZE$])
m4trace:configure.ac:63: -1- gl_ARPA_INET_H
m4trace:configure.ac:63: -1- gl_ARPA_INET_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INET_NTOP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INET_PTON$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_INET_NTOP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_INET_PTON$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_arpa_inet_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" arpa/inet.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ARPA_INET_H$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([arpa/inet.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([arpa/inet.h], [check])
m4trace:configure.ac:63: -1- gl_INCLUDE_NEXT
m4trace:configure.ac:63: -1- m4_pattern_allow([^INCLUDE_NEXT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INCLUDE_NEXT_AS_FIRST_DIRECTIVE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PRAGMA_SYSTEM_HEADER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PRAGMA_COLUMNS$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_arpa_inet_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" arpa/inet.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([arpa/inet.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_ARPA_INET_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ARPA_INET_H$])
m4trace:configure.ac:63: -1- gl_FEATURES_H
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_features_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" features.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FEATURES_H$])
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WS2TCPIP
m4trace:configure.ac:63: -1- gl_CHECK_SOCKET_HEADERS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:63: -1- gl_ARPA_INET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_INET_NTOP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_INET_NTOP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_INET_PTON])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_INET_PTON$])
m4trace:configure.ac:63: -1- gl_ASSERT
m4trace:configure.ac:63: -1- m4_pattern_allow([^NDEBUG$])
m4trace:configure.ac:63: -1- gl_BACKUPFILE
m4trace:configure.ac:63: -1- gl_CHECK_TYPE_STRUCT_DIRENT_D_INO
m4trace:configure.ac:63: -1- m4_pattern_allow([^D_INO_IN_DIRENT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LONG_FILE_NAMES$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pathconf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pathconf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_BACKUPFILE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pathconf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pathconf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_BASE32
m4trace:configure.ac:63: -1- gl_PREREQ_BASE32
m4trace:configure.ac:63: -1- AC_C_RESTRICT
m4trace:configure.ac:63: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:63: -1- gl_FUNC_BASE64
m4trace:configure.ac:63: -1- gl_PREREQ_BASE64
m4trace:configure.ac:63: -1- gl_FUNC_BTOWC
m4trace:configure.ac:63: -1- gl_WCHAR_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_BTOWC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBSINIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBRTOWC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBRLEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBSRTOWCS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBSNRTOWCS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCRTOMB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSRTOMBS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSNRTOMBS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WMEMCHR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WMEMCMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WMEMCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WMEMMOVE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WMEMPCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WMEMSET$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSLEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSNLEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCPCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSNCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCPNCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSCAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSNCAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSCMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSNCMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSCASECMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSNCASECMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSCOLL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSXFRM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSDUP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSCHR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSRCHR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSCSPN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSSPN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSPBRK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSSTR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSTOK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSWIDTH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCSFTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_WCTOB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_WCSDUP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_WCWIDTH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MBSTATE_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_BTOWC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCTOB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MBSINIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MBRTOWC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MBRLEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MBSRTOWCS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MBSNRTOWCS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCRTOMB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCSRTOMBS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCSNRTOMBS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCWIDTH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCSWIDTH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCSFTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCSTOK$])
m4trace:configure.ac:63: -1- gl_WCHAR_H_INLINE_OK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_btowc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" btowc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- AM_LANGINFO_CODESET
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LANGINFO_CODESET$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_BTOWC], [test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_BTOWC], [test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_BTOWC_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_BTOWC_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_BTOWC_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_BTOWC_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_BTOWC], [
    gl_PREREQ_BTOWC
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_BTOWC
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([btowc])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BTOWC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_BTOWC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOB])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCTOB$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSINIT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSINIT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRTOWC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBRTOWC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRLEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBRLEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRTOWCS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSRTOWCS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNRTOWCS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSNRTOWCS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCRTOMB])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCRTOMB$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRTOMBS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSRTOMBS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNRTOMBS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSNRTOMBS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCWIDTH])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCWIDTH$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCHR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WMEMCHR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WMEMCMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WMEMCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMMOVE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WMEMMOVE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMPCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WMEMPCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMSET])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WMEMSET$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSLEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSLEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNLEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSNLEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCPCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSNCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPNCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCPNCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSCAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSNCAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSCMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSNCMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCASECMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSCASECMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCASECMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSNCASECMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCOLL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSCOLL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSXFRM])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSXFRM$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSDUP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSDUP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCHR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSCHR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRCHR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSRCHR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCSPN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSCSPN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSPN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSSPN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSPBRK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSPBRK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSTR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSSTR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSTOK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSTOK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSWIDTH])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSWIDTH$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSFTIME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCSFTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WCSDUP], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_WCSDUP$])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB__EXIT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB__EXIT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALIGNED_ALLOC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ALIGNED_ALLOC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATOLL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ATOLL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_GNU])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CALLOC_GNU$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CALLOC_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREE_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FREE_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOADAVG])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETLOADAVG$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSUBOPT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETSUBOPT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GRANTPT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GRANTPT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_GNU])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MALLOC_GNU$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MALLOC_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBTOWC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBTOWC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDTEMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKDTEMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKOSTEMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMPS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKOSTEMPS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKSTEMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMPS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKSTEMPS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_MEMALIGN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_POSIX_MEMALIGN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_OPENPT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_POSIX_OPENPT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTSNAME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTSNAME_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTENV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PUTENV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_QSORT_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_QSORT_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RANDOM$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RANDOM_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOCARRAY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REALLOCARRAY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_GNU])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REALLOC_GNU$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REALLOC_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALPATH])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REALPATH$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RPMATCH])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RPMATCH$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SECURE_GETENV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SECURE_GETENV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETENV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SETENV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOLD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOLL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOUL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOULL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOULL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYSTEM_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SYSTEM_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLOCKPT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNLOCKPT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNSETENV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNSETENV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOMB])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCTOMB$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ECVT], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_ECVT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCVT], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_FCVT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GCVT], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_GCVT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKTEMP], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_MKTEMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTENV], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_PUTENV$])
m4trace:configure.ac:63: -1- gl_STDLIB_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE__EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ALIGNED_ALLOC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ATOLL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ECVT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FCVT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GCVT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETLOADAVG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETSUBOPT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GRANTPT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_INITSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INITSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBTOWC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKDTEMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKOSTEMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKOSTEMPS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKSTEMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKSTEMPS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_POSIX_MEMALIGN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_POSIX_OPENPT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTSNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTSNAME_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_QSORT_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RANDOM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RANDOM_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RANDOM_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_REALPATH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RPMATCH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SECURE_GETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SETSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SETSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOLD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOUL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOULL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_RANDOM_DATA$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_LOADAVG_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNLOCKPT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ALIGNED_ALLOC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CALLOC_FOR_CALLOC_GNU$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CALLOC_FOR_CALLOC_POSIX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FREE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_INITSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MALLOC_FOR_MALLOC_GNU$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MALLOC_FOR_MALLOC_POSIX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MBTOWC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MKSTEMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_POSIX_MEMALIGN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTSNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTSNAME_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PUTENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_QSORT_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_RANDOM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_RANDOM_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_REALLOC_FOR_REALLOC_GNU$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_REALLOC_FOR_REALLOC_POSIX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_REALLOCARRAY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_REALPATH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SETSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOLD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOLL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOUL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOULL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_UNSETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WCTOMB$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([btowc])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[btowc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([btowc])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_BTOWC$])
m4trace:configure.ac:63: -1- gl___BUILTIN_EXPECT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE___BUILTIN_EXPECT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE___BUILTIN_EXPECT$])
m4trace:configure.ac:63: -1- gl_BYTESWAP
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_BYTESWAP_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([byteswap.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^BYTESWAP_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_BYTESWAP_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_BYTESWAP_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_BYTESWAP_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_BYTESWAP_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_BYTESWAP_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_BYTESWAP_H_FALSE])
m4trace:configure.ac:63: -1- gl_C_STRTOD
m4trace:configure.ac:63: -1- gt_FUNC_USELOCALE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_uselocale], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" uselocale"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_xlocale_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" xlocale.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WORKING_USELOCALE$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_xlocale_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" xlocale.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOD_L$])
m4trace:configure.ac:63: -1- gl_C_STRTOLD
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOLD_L$])
m4trace:configure.ac:63: -1- gl_FUNC_CALLOC_GNU
m4trace:configure.ac:63: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:63: -1- gl_FUNC_MALLOC_POSIX
m4trace:configure.ac:63: -1- gl_FUNC_MALLOC_PTRDIFF
m4trace:configure.ac:63: -1- gl_CHECK_MALLOC_PTRDIFF
m4trace:configure.ac:63: -1- gl_CHECK_MALLOC_POSIX
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MALLOC_POSIX$])
m4trace:configure.ac:63: -1- _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC_FOR_CALLOC_GNU=1])
m4trace:configure.ac:63: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [../../lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/calloc.m4:18: _AC_FUNC_CALLOC_IF is expanded from...
m4/calloc.m4:57: gl_FUNC_CALLOC_GNU is expanded from...
m4/gnulib-comp.m4:945: gl_INIT is expanded from...
configure.ac:63: the top level])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([calloc-gnu])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([calloc-gnu])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[calloc-gnu]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([calloc-gnu])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CALLOC_GNU$])
m4trace:configure.ac:63: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:63: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([calloc-posix])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([calloc-posix])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[calloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([calloc-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CALLOC_POSIX$])
m4trace:configure.ac:63: -1- gl_PREREQ_CANON_HOST
m4trace:configure.ac:63: -1- gl_FUNC_CANONICALIZE_FILENAME_MODE
m4trace:configure.ac:63: -1- gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
m4trace:configure.ac:63: -1- m4_pattern_allow([^LSTAT_FOLLOWS_SLASHED_SYMLINK$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_canonicalize_file_name], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" canonicalize_file_name"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_faccessat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" faccessat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_DOUBLE_SLASH_ROOT
m4trace:configure.ac:63: -1- m4_pattern_allow([^DOUBLE_SLASH_IS_DISTINCT_ROOT$])
m4trace:configure.ac:63: -1- gl_FUNC_REALPATH_WORKS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_realpath], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" realpath"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_NOCRASH
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_REALPATH_WORKS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_REALPATH_NEARLY_WORKS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([canonicalize])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_CANONICALIZE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([canonicalize])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CANONICALIZE$])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([canonicalize_file_name])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([canonicalize_file_name])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[canonicalize_file_name]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([canonicalize_file_name])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_readlinkat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" readlinkat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([chdir])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCESS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ACCESS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CHDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHOWN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CHOWN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CLOSE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPY_FILE_RANGE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_COPY_FILE_RANGE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_DUP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP2])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_DUP2$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP3])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_DUP3$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ENVIRON])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ENVIRON$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EUIDACCESS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EUIDACCESS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXECL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXECLE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXECLP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXECV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXECVE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXECVP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVPE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXECVPE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FACCESSAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FACCESSAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FCHDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHOWNAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FCHOWNAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDATASYNC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FDATASYNC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSYNC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FSYNC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTRUNCATE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FTRUNCATE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCWD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETCWD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDOMAINNAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETDOMAINNAME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDTABLESIZE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETDTABLESIZE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETENTROPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETENTROPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETGROUPS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETGROUPS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETHOSTNAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETHOSTNAME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETLOGIN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETLOGIN_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETOPT_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETOPT_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPAGESIZE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETPAGESIZE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETPASS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS_GNU])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETPASS_GNU$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUSERSHELL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETUSERSHELL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GROUP_MEMBER])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GROUP_MEMBER$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISATTY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISATTY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHOWN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LCHOWN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LINK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINKAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LINKAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSEEK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LSEEK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PIPE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE2])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PIPE2$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PREAD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PREAD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PWRITE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PWRITE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READ])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_READ$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_READLINK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINKAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_READLINKAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RMDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RMDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETHOSTNAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SETHOSTNAME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SLEEP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SLEEP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SYMLINK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINKAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SYMLINKAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCATE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TRUNCATE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TTYNAME_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TTYNAME_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_GETOPT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_NONBLOCKING])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_NONBLOCKING$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_SIGPIPE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_SIGPIPE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNLINK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINKAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNLINKAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_USLEEP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_USLEEP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WRITE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WRITE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ACCESS], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_ACCESS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHDIR], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_CHDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CLOSE], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_CLOSE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_DUP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP2], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_DUP2$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECL], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLE], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECLE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLP], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECLP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECV], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVE], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVP], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVPE], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVPE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETCWD], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETCWD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETPID], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETPID$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ISATTY], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_ISATTY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_LSEEK], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_LSEEK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_READ], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_READ$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_RMDIR], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_RMDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_SWAB], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_SWAB$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UNLINK], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_UNLINK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WRITE], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_WRITE$])
m4trace:configure.ac:63: -1- gl_UNISTD_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CHOWN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COPY_FILE_RANGE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DUP3$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EUIDACCESS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EXECVPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FACCESSAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FCHDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FCHOWNAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FSYNC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FTRUNCATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETDTABLESIZE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETENTROPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETHOSTNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETLOGIN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETPASS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GROUP_MEMBER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LCHOWN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LINK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LINKAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PIPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PIPE2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PWRITE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_READLINK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_READLINKAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SETHOSTNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SLEEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYMLINK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYMLINKAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNLINKAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_USLEEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ENVIRON$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_EXECVPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FDATASYNC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETDOMAINNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETPAGESIZE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETUSERSHELL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SETHOSTNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TRUNCATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TTYNAME_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OS_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ACCESS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CHOWN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CLOSE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_COPY_FILE_RANGE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_DUP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_DUP2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXECL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXECLE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXECLP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXECV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXECVE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXECVP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXECVPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FACCESSAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FCHOWNAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FTRUNCATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETCWD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETDOMAINNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETDTABLESIZE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETLOGIN_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETGROUPS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETPAGESIZE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETPASS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETPASS_FOR_GETPASS_GNU$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ISATTY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LCHOWN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LINK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LINKAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LSEEK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PWRITE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_READ$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_READLINK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_READLINKAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_RMDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SLEEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SYMLINK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SYMLINKAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TRUNCATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TTYNAME_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_UNLINK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_UNLINKAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_USLEEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_WRITE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UNISTD_H_HAVE_SYS_RANDOM_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([chdir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[chdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([chdir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CHDIR$])
m4trace:configure.ac:63: -1- gl_FUNC_CHDIR_LONG
m4trace:configure.ac:63: -1- gl_PATHMAX_SNIPPET_PREREQ
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -2- gl_PATHMAX_SNIPPET
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_CHDIR_LONG], [test $gl_cv_have_unlimited_file_name_length = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_CHDIR_LONG], [test $gl_cv_have_unlimited_file_name_length = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CHDIR_LONG_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CHDIR_LONG_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CHDIR_LONG_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CHDIR_LONG_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_CHDIR_LONG], [
    gl_PREREQ_CHDIR_LONG
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_CHDIR_LONG
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([chmodat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_CHMODAT$])
m4trace:configure.ac:63: -1- gl_FUNC_CHOWN
m4trace:configure.ac:63: -1- m4_pattern_allow([^uid_t$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^gid_t$])
m4trace:configure.ac:63: -1- AC_FUNC_CHOWN
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- _GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CHOWN$])
m4trace:configure.ac:63: -1- gl_FUNC_CHOWN_FOLLOWS_SYMLINK
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^CHOWN_MODIFIES_SYMLINK$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_chown], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" chown"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchown], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchown"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^CHOWN_FAILS_TO_HONOR_ID_OF_NEGATIVE_ONE$])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^CHOWN_TRAILING_SLASH_BUG$])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^CHOWN_CHANGE_TIME_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_CHOWN], [test $HAVE_CHOWN = 0 || test $REPLACE_CHOWN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_CHOWN], [test $HAVE_CHOWN = 0 || test $REPLACE_CHOWN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CHOWN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CHOWN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CHOWN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CHOWN_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FCHOWN_STUB], [test $REPLACE_CHOWN = 1 && test $ac_cv_func_fchown = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FCHOWN_STUB], [test $REPLACE_CHOWN = 1 && test $ac_cv_func_fchown = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCHOWN_STUB_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCHOWN_STUB_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHOWN_STUB_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHOWN_STUB_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([chown])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([chown])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[chown]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([chown])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CHOWN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([chownat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_CHOWNAT$])
m4trace:configure.ac:63: -1- gl_CLOCK_TIME
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_CLOCK_GETTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([cloexec])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CLOEXEC$])
m4trace:configure.ac:63: -1- gl_FUNC_CLOSE
m4trace:configure.ac:63: -1- gl_MSVC_INVAL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func__set_invalid_parameter_handler], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" _set_invalid_parameter_handler"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- gl_SYS_IOCTL_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^SYS_IOCTL_H_HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_IOCTL$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- gl_TEST_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_CLOSE], [test $REPLACE_CLOSE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_CLOSE], [test $REPLACE_CLOSE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CLOSE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CLOSE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CLOSE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CLOSE_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([close])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([close])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[close]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([close])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CLOSE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([close-stream])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_CLOSE_STREAM$])
m4trace:configure.ac:63: -1- gl_FUNC_CLOSEDIR
m4trace:configure.ac:63: -1- gl_DIRENT_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_READDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_REWINDDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CLOSEDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_DIRFD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FDOPENDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FDOPENDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SCANDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ALPHASORT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_OPENDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CLOSEDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_DIRFD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FDOPENDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CLOSEDIR$])
m4trace:configure.ac:63: -1- gl_TEST_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_CLOSEDIR], [test $HAVE_CLOSEDIR = 0 || test $REPLACE_CLOSEDIR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_CLOSEDIR], [test $HAVE_CLOSEDIR = 0 || test $REPLACE_CLOSEDIR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CLOSEDIR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CLOSEDIR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CLOSEDIR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CLOSEDIR_FALSE])
m4trace:configure.ac:63: -1- gl_DIRENT_MODULE_INDICATOR([closedir])
m4trace:configure.ac:63: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_OPENDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_READDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REWINDDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REWINDDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSEDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CLOSEDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DIRFD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_DIRFD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPENDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FDOPENDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SCANDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALPHASORT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ALPHASORT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([closedir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[closedir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([closedir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CLOSEDIR$])
m4trace:configure.ac:63: -1- gl_CONFIG_H
m4trace:configure.ac:63: -1- gl_CONFIGMAKE_PREP
m4trace:configure.ac:63: -1- m4_pattern_allow([^lispdir$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^pkglibexecdir$])
m4trace:configure.ac:63: -1- gl_FUNC_COPY_FILE_RANGE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COPY_FILE_RANGE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_COPY_FILE_RANGE], [test $HAVE_COPY_FILE_RANGE = 0 ||
                  test $REPLACE_COPY_FILE_RANGE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_COPY_FILE_RANGE], [test $HAVE_COPY_FILE_RANGE = 0 ||
                  test $REPLACE_COPY_FILE_RANGE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_COPY_FILE_RANGE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_COPY_FILE_RANGE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_COPY_FILE_RANGE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_COPY_FILE_RANGE_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([copy-file-range])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([copy-file-range])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[copy-file-range]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([copy-file-range])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_COPY_FILE_RANGE$])
m4trace:configure.ac:63: -1- gl_AF_ALG
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SA_FAMILY_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACCEPT4$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^_POSIX_PII_SOCKET$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SHUTDOWN$])
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_SOCKET
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/socket.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/socket.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/socket.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_SOCKET_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_SOCKET_H$])
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WS2TCPIP
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SA_FAMILY_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY$])
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LINUX_IF_ALG_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_LINUX_CRYPTO_API$])
m4trace:configure.ac:63: -1- gl_MD5
m4trace:configure.ac:63: -1- gl_BIGENDIAN
m4trace:configure.ac:63: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:63: -1- gl_CRYPTO_CHECK([MD5])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENSSL_MD5_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENSSL_MD5$])
m4trace:configure.ac:63: -1- gl_SHA1
m4trace:configure.ac:63: -1- gl_CRYPTO_CHECK([SHA1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA1$])
m4trace:configure.ac:63: -1- gl_SHA256
m4trace:configure.ac:63: -1- gl_CRYPTO_CHECK([SHA256])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA256$])
m4trace:configure.ac:63: -1- gl_SHA512
m4trace:configure.ac:63: -1- gl_CRYPTO_CHECK([SHA512])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA512$])
m4trace:configure.ac:63: -1- gl_SM3
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:63: -1- gl_CTYPE_H
m4trace:configure.ac:63: -1- gl_CTYPE_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISBLANK$])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([ctype.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([ctype.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([ctype.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_CTYPE_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_CTYPE_H$])
m4trace:configure.ac:63: -1- gl_CTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISBLANK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISBLANK$])
m4trace:configure.ac:63: -1- gl_CYCLE_CHECK
m4trace:configure.ac:63: -1- gl_CHECK_TYPE_STRUCT_DIRENT_D_INO
m4trace:configure.ac:63: -1- m4_pattern_allow([^D_INO_IN_DIRENT$])
m4trace:configure.ac:63: -1- gl_CHECK_TYPE_STRUCT_DIRENT_D_TYPE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_DIRENT_D_TYPE$])
m4trace:configure.ac:63: -1- gl_DIRENT_H
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([dirent.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([dirent.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_dirent_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" dirent.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([dirent.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_DIRENT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_DIRENT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DIRENT_H$])
m4trace:configure.ac:63: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_DIRENT_SAFER
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fdopendir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fdopendir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([dirent-safer])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_DIRENT_SAFER$])
m4trace:configure.ac:63: -1- gl_FUNC_DIRFD
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DIRFD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_DIRFD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_DIRFD$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_DIRFD], [test $ac_cv_func_dirfd = no && test $gl_cv_func_dirfd_macro = no || test $REPLACE_DIRFD = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_DIRFD], [test $ac_cv_func_dirfd = no && test $gl_cv_func_dirfd_macro = no || test $REPLACE_DIRFD = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_DIRFD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_DIRFD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DIRFD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DIRFD_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_DIRFD], [
    gl_PREREQ_DIRFD
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_DIRFD
m4trace:configure.ac:63: -1- m4_pattern_allow([^DIR_FD_MEMBER_NAME$])
m4trace:configure.ac:63: -1- gl_DIRENT_MODULE_INDICATOR([dirfd])
m4trace:configure.ac:63: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dirfd])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dirfd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([dirfd])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_DIRFD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([dirname])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_DIRNAME$])
m4trace:configure.ac:63: -1- gl_DOUBLE_SLASH_ROOT
m4trace:configure.ac:63: -1- m4_pattern_allow([^DOUBLE_SLASH_IS_DISTINCT_ROOT$])
m4trace:configure.ac:63: -1- gl_FUNC_DUP
m4trace:configure.ac:63: -1- gl_TEST_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_DUP], [test $REPLACE_DUP = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_DUP], [test $REPLACE_DUP = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_DUP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_DUP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DUP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DUP_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_DUP], [
    gl_PREREQ_DUP
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_DUP
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([dup])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dup]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_DUP$])
m4trace:configure.ac:63: -1- gl_FUNC_DUP2
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SETDTABLESIZE$])
m4trace:configure.ac:63: -1- gl_TEST_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_DUP2], [test $REPLACE_DUP2 = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_DUP2], [test $REPLACE_DUP2 = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_DUP2_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_DUP2_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DUP2_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DUP2_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_DUP2], [
    gl_PREREQ_DUP2
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_DUP2
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([dup2])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup2])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dup2]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup2])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_DUP2$])
m4trace:configure.ac:63: -1- gl_ENVIRON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gt_CHECK_VAR_DECL([#if HAVE_UNISTD_H
     #include <unistd.h>
     #endif
     /* mingw, BeOS, Haiku declare environ in <stdlib.h>, not in <unistd.h>.  */
     #include <stdlib.h>
    ], [environ])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ENVIRON_DECL$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([environ])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([environ])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[environ]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([environ])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_ENVIRON$])
m4trace:configure.ac:63: -1- gl_HEADER_ERRNO_H
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([errno.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([errno.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([errno.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_ERRNO_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ERRNO_H$])
m4trace:configure.ac:63: -1- gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^EMULTIHOP_HIDDEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^EMULTIHOP_VALUE$])
m4trace:configure.ac:63: -1- gl_REPLACE_ERRNO_VALUE([ENOLINK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ENOLINK_HIDDEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ENOLINK_VALUE$])
m4trace:configure.ac:63: -1- gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
m4trace:configure.ac:63: -1- m4_pattern_allow([^EOVERFLOW_HIDDEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^EOVERFLOW_VALUE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([errno.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ERRNO_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_ERRNO_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_FALSE])
m4trace:configure.ac:63: -1- gl_ERROR
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ERROR], [test "$ac_cv_lib_error_at_line" = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ERROR], [test "$ac_cv_lib_error_at_line" = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ERROR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ERROR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ERROR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ERROR_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_ERROR], [
    gl_PREREQ_ERROR
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_ERROR
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRERROR_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STRERROR_R_CHAR_P$])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=error:3:c-format])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION_INIT
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=error_at_line:5:c-format])
m4trace:configure.ac:63: -1- gl_FUNC_EUIDACCESS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EUIDACCESS$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_EUIDACCESS], [test $HAVE_EUIDACCESS = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_EUIDACCESS], [test $HAVE_EUIDACCESS = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_EUIDACCESS_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_EUIDACCESS_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_EUIDACCESS_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_EUIDACCESS_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_EUIDACCESS], [
    gl_PREREQ_EUIDACCESS
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_EUIDACCESS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_faccessat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" faccessat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LIBGEN_H$])
m4trace:configure.ac:63: -1- AC_FUNC_GETGROUPS
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETGROUPS_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_EACCESS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EACCESS$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([euidaccess])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([euidaccess])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[euidaccess]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([euidaccess])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_EUIDACCESS$])
m4trace:configure.ac:63: -1- gl_FUNC_EXPLICIT_BZERO
m4trace:configure.ac:63: -1- gl_STRING_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBSLEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EXPLICIT_BZERO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FFSL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FFSLL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MEMMEM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STPNCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRCHRNUL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRNDUP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRPBRK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRSEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRCASESTR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRTOK_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRERRORNAME_NP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGABBREV_NP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGDESCR_NP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRVERSCMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FFSLL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MEMCHR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MEMMEM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STPNCPY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRCHRNUL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRDUP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRNCAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRNDUP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRNLEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRSTR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRCASESTR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOK_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRERROR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRERROR_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRERRORNAME_NP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRSIGNAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UNDEFINE_STRTOK_R$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_explicit_bzero], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" explicit_bzero"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_EXPLICIT_BZERO], [test $HAVE_EXPLICIT_BZERO = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_EXPLICIT_BZERO], [test $HAVE_EXPLICIT_BZERO = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_EXPLICIT_BZERO_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_EXPLICIT_BZERO_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_EXPLICIT_BZERO_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_EXPLICIT_BZERO_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_EXPLICIT_BZERO], [
    gl_PREREQ_EXPLICIT_BZERO
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_EXPLICIT_BZERO
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EXPLICIT_MEMSET$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_memset_s], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" memset_s"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([explicit_bzero])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPLICIT_BZERO])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXPLICIT_BZERO$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FFSL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSLL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FFSLL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMCHR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MEMCHR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMMEM])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MEMMEM$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMPCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MEMPCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMRCHR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MEMRCHR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAWMEMCHR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RAWMEMCHR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STPCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPNCPY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STPNCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCHRNUL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRCHRNUL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRDUP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRDUP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNCAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRNCAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNDUP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRNDUP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNLEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRNLEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPBRK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRPBRK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSEP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRSEP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSTR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRSTR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCASESTR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRCASESTR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOK_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOK_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSLEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSLEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNLEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSNLEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCHR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSCHR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRCHR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSRCHR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSTR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSSTR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASECMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSCASECMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNCASECMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSNCASECMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPCASECMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSPCASECMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASESTR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSCASESTR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCSPN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSCSPN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPBRK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSPBRK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSPN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSSPN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSEP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSSEP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOK_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MBSTOK_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRERROR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRERROR_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERRORNAME_NP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRERRORNAME_NP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGABBREV_NP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SIGABBREV_NP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGDESCR_NP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SIGDESCR_NP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSIGNAL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRSIGNAL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRVERSCMP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRVERSCMP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MEMCCPY], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_MEMCCPY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_STRDUP], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_STRDUP$])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([explicit_bzero])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[explicit_bzero]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([explicit_bzero])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_EXPLICIT_BZERO$])
m4trace:configure.ac:63: -1- gl_EXTERN_INLINE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE___HEADER_INLINE$])
m4trace:configure.ac:63: -1- gl_FUNC_FACCESSAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_faccessat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" faccessat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FACCESSAT], [test $HAVE_FACCESSAT = 0 || test $REPLACE_FACCESSAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FACCESSAT], [test $HAVE_FACCESSAT = 0 || test $REPLACE_FACCESSAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FACCESSAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FACCESSAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FACCESSAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FACCESSAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FACCESSAT], [
    gl_PREREQ_FACCESSAT
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FACCESSAT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACCESS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([faccessat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FACCESSAT$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([faccessat])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([faccessat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[faccessat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([faccessat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FACCESSAT$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_posix_fadvise], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" posix_fadvise"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fchdir], [_AC_CHECK_DECLS([fchdir])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FCHDIR$])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_OPEN_DIRECTORY$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FCHDIR], [test $HAVE_FCHDIR = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FCHDIR], [test $HAVE_FCHDIR = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCHDIR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCHDIR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHDIR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHDIR_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FCHDIR], [
    gl_PREREQ_FCHDIR
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FCHDIR
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([fchdir])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fchdir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fchdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fchdir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FCHDIR$])
m4trace:configure.ac:63: -1- gl_FUNC_FCHMODAT
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FCHMODAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FSTATAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FUTIMENS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETUMASK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LCHMOD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LSTAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKDIRAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKFIFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKFIFOAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKNOD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKNODAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UTIMENSAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FCHMODAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FSTAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FSTATAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FUTIMENS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LSTAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MKDIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MKFIFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MKFIFOAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MKNOD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MKNODAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_UTIMENSAT$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchmodat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchmodat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lchmod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lchmod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NEARLY_WORKING_FCHMODAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_FCHMODAT_NONSYMLINK_FIX$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FCHMODAT], [test $HAVE_FCHMODAT = 0 || test $REPLACE_FCHMODAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FCHMODAT], [test $HAVE_FCHMODAT = 0 || test $REPLACE_FCHMODAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCHMODAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCHMODAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHMODAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHMODAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FCHMODAT], [
    gl_PREREQ_FCHMODAT
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FCHMODAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lchmod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lchmod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([fchmodat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHMODAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FCHMODAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FSTAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTATAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FSTATAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FUTIMENS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FUTIMENS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUMASK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETUMASK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHMOD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LCHMOD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSTAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LSTAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIRAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKDIRAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFO])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKFIFO$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFOAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKFIFOAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNOD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKNOD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNODAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKNODAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIMENSAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UTIMENSAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OVERRIDES_STRUCT_STAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_OVERRIDES_STRUCT_STAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHMOD], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_CHMOD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKDIR], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_MKDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UMASK], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_UMASK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fchmodat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fchmodat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fchmodat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FCHMODAT$])
m4trace:configure.ac:63: -1- gl_FUNC_FCHOWNAT
m4trace:configure.ac:63: -1- gl_FUNC_FCHOWNAT_DEREF_BUG([REPLACE_FCHOWNAT=1
        AC_DEFINE([FCHOWNAT_NOFOLLOW_BUG], [1],
                  [Define to 1 if your platform has fchownat, but it cannot
                   perform lchown tasks.])
       ])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FCHOWNAT_NOFOLLOW_BUG$])
m4trace:configure.ac:63: -1- gl_FUNC_FCHOWNAT_EMPTY_FILENAME_BUG([REPLACE_FCHOWNAT=1
        AC_DEFINE([FCHOWNAT_EMPTY_FILENAME_BUG], [1],
                  [Define to 1 if your platform has fchownat, but it does
                   not reject an empty file name.])
       ])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^FCHOWNAT_EMPTY_FILENAME_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FCHOWNAT], [test $HAVE_FCHOWNAT = 0 || test $REPLACE_FCHOWNAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FCHOWNAT], [test $HAVE_FCHOWNAT = 0 || test $REPLACE_FCHOWNAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCHOWNAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCHOWNAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHOWNAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHOWNAT_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([fchownat])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fchownat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fchownat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fchownat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FCHOWNAT$])
m4trace:configure.ac:63: -1- gl_FUNC_FCLOSE
m4trace:configure.ac:63: -1- gl_STDIO_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FCLOSEALL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FPURGE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETDELIM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_OBSTACK_PRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_VSNPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FTELLO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PCLOSE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_POPEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RENAMEAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VDPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_DPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FCLOSE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FDOPEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FFLUSH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FOPEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FOPEN_FOR_FOPEN_GNU$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FPURGE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FREOPEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FSEEK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FSEEKO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FTELL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FTELLO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETDELIM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETLINE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_OBSTACK_PRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PERROR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_POPEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_REMOVE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_RENAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_RENAMEAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SNPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STDIO_READ_FUNCS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STDIO_WRITE_FUNCS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TMPFILE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VASPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VDPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VFPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VSNPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VSPRINTF$])
m4trace:configure.ac:63: -1- gl_FUNC_FFLUSH_STDIN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_FFLUSH_STDIN$])
m4trace:configure.ac:63: -1- gl_FUNC_FCLOSE_STDIN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FCLOSE], [test $REPLACE_FCLOSE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FCLOSE], [test $REPLACE_FCLOSE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCLOSE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCLOSE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCLOSE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCLOSE_FALSE])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fclose])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DPRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_DPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCLOSE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FCLOSE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FDOPEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFLUSH])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FFLUSH$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FGETC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FGETS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FOPEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN_GNU])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FOPEN_GNU$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPURGE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FPURGE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FPUTC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FPUTS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREAD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FREAD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREOPEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FREOPEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSCANF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FSCANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FSEEK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEKO])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FSEEKO$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FTELL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELLO])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FTELLO$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FWRITE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FWRITE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCHAR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETCHAR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDELIM])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETDELIM$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLINE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETLINE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_PRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_PRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PCLOSE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PCLOSE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PERROR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PERROR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POPEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_POPEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PUTC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTCHAR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PUTCHAR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PUTS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMOVE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REMOVE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RENAME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAMEAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RENAMEAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SCANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNPRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SNPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SPRINTF_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_NONBLOCKING])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STDIO_H_NONBLOCKING$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_SIGPIPE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STDIO_H_SIGPIPE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TMPFILE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TMPFILE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASPRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VASPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFSCANF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VFSCANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSCANF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VSCANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDPRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VDPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VFPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VFPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNPRINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VSNPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSPRINTF_POSIX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_VSPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCLOSEALL], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_FCLOSEALL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FDOPEN], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_FDOPEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FILENO], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_FILENO$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETW], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETW$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTW], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_PUTW$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TEMPNAM], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_TEMPNAM$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fclose])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fclose]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fclose])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FCLOSE$])
m4trace:configure.ac:63: -1- gl_FUNC_FCNTL
m4trace:configure.ac:63: -1- gl_FCNTL_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FCNTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CREAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FCNTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_OPEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_OPENAT$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FCNTL_DUPFD_BUGGY$])
m4trace:configure.ac:63: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_TEST_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FCNTL], [test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FCNTL], [test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCNTL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FCNTL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCNTL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCNTL_FALSE])
m4trace:configure.ac:63: -1- gl_FCNTL_MODULE_INDICATOR([fcntl])
m4trace:configure.ac:63: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CREAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CREAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCNTL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FCNTL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NONBLOCKING])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_NONBLOCKING$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_OPEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENAT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_OPENAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CREAT], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_CREAT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_OPEN], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_OPEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fcntl])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fcntl]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fcntl])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FCNTL$])
m4trace:configure.ac:63: -1- gl_FCNTL_H
m4trace:configure.ac:63: -1- gl_FCNTL_O_FLAGS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_symlink], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" symlink"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WORKING_O_NOATIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WORKING_O_NOFOLLOW$])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([fcntl.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([fcntl.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([fcntl.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_FCNTL_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FCNTL_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^mode_t$])
m4trace:configure.ac:63: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_FCNTL_SAFER
m4trace:configure.ac:63: -1- gl_PROMOTED_TYPE_MODE_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^PROMOTED_MODE_T$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fcntl-safer])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FCNTL_SAFER$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fd-safer-flag])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FD_SAFER_FLAG$])
m4trace:configure.ac:63: -1- gl_FUNC_FDATASYNC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fdatasync], [_AC_CHECK_DECLS([fdatasync])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FDATASYNC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_FDATASYNC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FDATASYNC], [test $HAVE_FDATASYNC = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FDATASYNC], [test $HAVE_FDATASYNC = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FDATASYNC_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FDATASYNC_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FDATASYNC_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FDATASYNC_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([fdatasync])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fdatasync])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fdatasync]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fdatasync])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FDATASYNC$])
m4trace:configure.ac:63: -1- gl_FUNC_FDOPEN
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FDOPEN], [test $REPLACE_FDOPEN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FDOPEN], [test $REPLACE_FDOPEN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FDOPEN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FDOPEN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FDOPEN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FDOPEN_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FDOPEN], [
    gl_PREREQ_FDOPEN
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FDOPEN
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fdopen])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fdopen])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fdopen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fdopen])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FDOPEN$])
m4trace:configure.ac:63: -1- gl_FUNC_FDOPENDIR
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FDOPENDIR$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fdopendir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fdopendir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FDOPENDIR], [test $HAVE_FDOPENDIR = 0 || test $REPLACE_FDOPENDIR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FDOPENDIR], [test $HAVE_FDOPENDIR = 0 || test $REPLACE_FDOPENDIR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FDOPENDIR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FDOPENDIR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FDOPENDIR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FDOPENDIR_FALSE])
m4trace:configure.ac:63: -1- gl_DIRENT_MODULE_INDICATOR([fdopendir])
m4trace:configure.ac:63: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fdopendir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fdopendir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fdopendir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FDOPENDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fdopendir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FDOPENDIR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fdutimensat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FDUTIMENSAT$])
m4trace:configure.ac:63: -1- gl_FUNC_FFLUSH
m4trace:configure.ac:63: -1- gl_FUNC_FFLUSH_STDIN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_FFLUSH_STDIN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FFLUSH], [test $REPLACE_FFLUSH = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FFLUSH], [test $REPLACE_FFLUSH = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FFLUSH_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FFLUSH_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FFLUSH_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FFLUSH_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FFLUSH], [
    gl_PREREQ_FFLUSH
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FFLUSH
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fflush])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FFLUSH$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fflush])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fflush])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fflush]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fflush])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FFLUSH$])
m4trace:configure.ac:63: -1- gl_FILE_HAS_ACL
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETXATTR_WITH_POSIX_ACLS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_HAS_ACL$])
m4trace:configure.ac:63: -1- gl_FILEBLOCKS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BLOCKS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ST_BLOCKS$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FILEBLOCKS], [test $ac_cv_member_struct_stat_st_blocks = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FILEBLOCKS], [test $ac_cv_member_struct_stat_st_blocks = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FILEBLOCKS_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FILEBLOCKS_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FILEBLOCKS_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FILEBLOCKS_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FILEBLOCKS], [
    gl_PREREQ_FILEBLOCKS
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FILEBLOCKS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FILEMODE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_strmode], [_AC_CHECK_DECLS([strmode])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRMODE$])
m4trace:configure.ac:63: -1- gl_FILE_NAME_CONCAT
m4trace:configure.ac:63: -1- gl_FILE_NAME_CONCAT_LGPL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mempcpy], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mempcpy"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([filenamecat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FILENAMECAT$])
m4trace:configure.ac:63: -1- gl_FILE_NAME_CONCAT_LGPL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mempcpy], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mempcpy"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_C_FLEXIBLE_ARRAY_MEMBER
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLEXIBLE_ARRAY_MEMBER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLEXIBLE_ARRAY_MEMBER$])
m4trace:configure.ac:63: -1- gl_FLOAT_H
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([float.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([float.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([float.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_FLOAT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FLOAT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ITOLD$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([float.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLOAT_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_FLOAT_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_FLOAT_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FLOAT], [test $REPLACE_FLOAT_LDBL = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FLOAT], [test $REPLACE_FLOAT_LDBL = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FLOAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FLOAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FLOAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FLOAT_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ITOLD], [test $REPLACE_ITOLD = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ITOLD], [test $REPLACE_ITOLD = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ITOLD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ITOLD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ITOLD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ITOLD_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_FNMATCH_POSIX
m4trace:configure.ac:63: -1- gl_FNMATCH_H
m4trace:configure.ac:63: -1- gl_FNMATCH_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FNMATCH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FNMATCH$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_fnmatch_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" fnmatch.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([fnmatch.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([fnmatch.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_fnmatch_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" fnmatch.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([fnmatch.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_FNMATCH_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FNMATCH_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FNMATCH_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fnmatch], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fnmatch"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_REPLACE_FNMATCH_H
m4trace:configure.ac:63: -1- gl_FNMATCH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FNMATCH])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FNMATCH$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([fnmatch.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FNMATCH_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_FNMATCH_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_FNMATCH_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_FNMATCH_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_FNMATCH_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FNMATCH_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FNMATCH_H_FALSE])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([fnmatch.c])
m4trace:configure.ac:63: -1- gl_PREREQ_FNMATCH
m4trace:configure.ac:63: -1- AC_TYPE_MBSTATE_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBSTATE_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^mbstate_t$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsrtowcs], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsrtowcs"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FNMATCH_MODULE_INDICATOR([fnmatch])
m4trace:configure.ac:63: -1- gl_FNMATCH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fnmatch])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fnmatch]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fnmatch])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FNMATCH$])
m4trace:configure.ac:63: -1- gl_FUNC_FNMATCH_GNU
m4trace:configure.ac:63: -1- gl_LIBSOURCES([fnmatch.c])
m4trace:configure.ac:63: -1- gl_PREREQ_FNMATCH
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsrtowcs], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsrtowcs"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fnmatch-gnu])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FNMATCH_GNU$])
m4trace:configure.ac:63: -1- gl_FNMATCH_H
m4trace:configure.ac:63: -1- gl_FNMATCH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([fnmatch.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FNMATCH_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_FNMATCH_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_FNMATCH_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_FNMATCH_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_FNMATCH_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FNMATCH_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FNMATCH_H_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_FOPEN
m4trace:configure.ac:63: -1- m4_pattern_allow([^FOPEN_TRAILING_SLASH_BUG$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([fopen.c])
m4trace:configure.ac:63: -1- gl_PREREQ_FOPEN
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fopen])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fopen])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fopen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fopen])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FOPEN$])
m4trace:configure.ac:63: -1- gl_FUNC_FOPEN_GNU
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_LIBSOURCES([fopen.c])
m4trace:configure.ac:63: -1- gl_PREREQ_FOPEN
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fopen-gnu])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FOPEN_GNU$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fopen-safer])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FOPEN_SAFER$])
m4trace:configure.ac:63: -1- gl_FUNC_FPENDING
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_stdio_ext_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdio_ext.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL___FPENDING$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FPENDING], [test $gl_cv_func___fpending = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FPENDING], [test $gl_cv_func___fpending = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FPENDING_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FPENDING_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FPENDING_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FPENDING_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_FPURGE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_stdio_ext_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdio_ext.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fpurge], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fpurge"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___fpurge], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __fpurge"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FPURGE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FPURGE], [test $HAVE_FPURGE = 0 || test $REPLACE_FPURGE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FPURGE], [test $HAVE_FPURGE = 0 || test $REPLACE_FPURGE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FPURGE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FPURGE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FPURGE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FPURGE_FALSE])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fpurge])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fpurge])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fpurge]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fpurge])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FPURGE$])
m4trace:configure.ac:63: -1- gl_FUNC_FREADAHEAD
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___freadahead], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __freadahead"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FREADAHEAD], [test $ac_cv_func___freadahead = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FREADAHEAD], [test $ac_cv_func___freadahead = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FREADAHEAD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FREADAHEAD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREADAHEAD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREADAHEAD_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_FREADING
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_stdio_ext_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdio_ext.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___freading], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __freading"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_FREADPTR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___freadptr], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __freadptr"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FREADPTR], [test $ac_cv_func___freadptr = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FREADPTR], [test $ac_cv_func___freadptr = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FREADPTR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FREADPTR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREADPTR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREADPTR_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_FREADSEEK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___freadptrinc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __freadptrinc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_FREE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FREE_POSIX$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FREE], [test $REPLACE_FREE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FREE], [test $REPLACE_FREE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FREE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FREE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FREE], [
    gl_PREREQ_FREE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FREE
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([free-posix])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([free-posix])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[free-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([free-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FREE_POSIX$])
m4trace:configure.ac:63: -1- gl_FUNC_FREOPEN
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FREOPEN], [test $REPLACE_FREOPEN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FREOPEN], [test $REPLACE_FREOPEN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FREOPEN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FREOPEN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREOPEN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREOPEN_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FREOPEN], [
    gl_PREREQ_FREOPEN
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FREOPEN
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([freopen])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([freopen])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[freopen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([freopen])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FREOPEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([freopen-safer])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FREOPEN_SAFER$])
m4trace:configure.ac:63: -1- gl_FUNC_FREXP_NO_LIBM
m4trace:configure.ac:63: -1- gl_MATH_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACOSF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ACOSL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ASINF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ASINL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ATANF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ATANL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ATAN2F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CBRT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CBRTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CBRTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COPYSIGN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COPYSIGNL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COSF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COSL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COSHF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EXPF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EXPL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EXPM1$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_EXPM1F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FABSF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FABSL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FMA$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FMAF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FMAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FMODF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FMODL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FREXPF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_HYPOTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_HYPOTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ILOGB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ILOGBF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ILOGBL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISNANF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISNAND$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISNANL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LDEXPF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOGF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOGL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOG10F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOG10L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOG1P$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOG1PF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOG1PL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOGBF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOGBL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MODFF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MODFL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_POWF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_REMAINDER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_REMAINDERF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RINT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RINTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SINF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SINL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SINHF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SQRTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SQRTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TANF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TANL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TANHF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ACOSL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ASINL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ATANL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_CBRTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_CBRTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_CEILF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_CEILL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_COSL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_EXPL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_EXP2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_EXP2F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_EXP2L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_EXPM1L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FLOORF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FLOORL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FREXPL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LDEXPL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LOGL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LOG10L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LOG2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LOG2F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LOG2L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LOGB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_REMAINDER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_REMAINDERL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_RINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ROUND$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ROUNDF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ROUNDL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SINL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SQRTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TANL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TRUNC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TRUNCF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TRUNCL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ACOSF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ASINF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ATANF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ATAN2F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CBRTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CBRTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CEIL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CEILF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CEILL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_COSF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_COSHF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXPF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXPL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXPM1$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXPM1F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXPM1L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXP2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_EXP2L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FABSL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FLOOR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FLOORF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FLOORL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FMA$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FMAF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FMAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FMOD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FMODF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FMODL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FREXPF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FREXP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FREXPL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_HUGE_VAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_HYPOT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_HYPOTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_HYPOTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ILOGB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ILOGBF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ILOGBL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ISFINITE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ISINF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ISNAN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LDEXPL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOGF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOGL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG10$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG10F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG10L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG1P$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG1PF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG1PL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG2F$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOG2L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOGB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOGBF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOGBL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MODF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MODFF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MODFL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_NAN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_REMAINDER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_REMAINDERF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_REMAINDERL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_RINTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ROUND$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ROUNDF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ROUNDL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SIGNBIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SIGNBIT_USING_BUILTINS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SINF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SINHF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SQRTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SQRTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TANF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TANHF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TRUNC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TRUNCF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TRUNCL$])
m4trace:configure.ac:63: -1- gl_CHECK_FREXP_NO_LIBM
m4trace:configure.ac:63: -1- gl_FUNC_FREXP_WORKS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ALARM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FREXP_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([frexp.c])
m4trace:configure.ac:63: -1- gl_MATH_MODULE_INDICATOR([frexp])
m4trace:configure.ac:63: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ACOSF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ACOSL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ASINF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ASINL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ATANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ATANL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATAN2F])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ATAN2F$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CBRT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CBRTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CBRTL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEIL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CEIL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CEILF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CEILL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGNF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGNL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_COSF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_COSL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSHF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_COSHF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXPF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXPL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXP2$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2F])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXP2F$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2L])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXP2L$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXPM1$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1F])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXPM1F$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1L])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_EXPM1L$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FABSF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FABSL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOOR])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FLOOR$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FLOORF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FLOORL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMA])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FMA$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FMAF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FMAL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMOD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FMOD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FMODF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FMODL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FREXPF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FREXP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_FREXPL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_HYPOT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_HYPOTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_HYPOTL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGB])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ILOGB$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ILOGBF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ILOGBL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISFINITE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISFINITE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISINF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISINF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISNAN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISNANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAND])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISNAND$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISNANL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LDEXPF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LDEXPL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOGF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOGL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG10$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10F])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG10F$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10L])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG10L$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1P])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG1P$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG1PF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG1PL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG2$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2F])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG2F$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2L])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOG2L$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGB])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOGB$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOGBF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOGBL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MODF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MODFF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MODFL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POWF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_POWF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDER])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REMAINDER$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REMAINDERF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_REMAINDERL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RINT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RINTL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUND])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ROUND$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ROUNDF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ROUNDL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNBIT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SIGNBIT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SINF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SINL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINHF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SINHF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SQRTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SQRTL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TANL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANHF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TANHF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNC])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TRUNC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCF])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TRUNCF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TRUNCL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J0], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_J0$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J1], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_J1$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_JN], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_JN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y0], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_Y0$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y1], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_Y1$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_YN], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_YN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([frexp])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[frexp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([frexp])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FREXP$])
m4trace:configure.ac:63: -1- gl_FUNC_FREXPL_NO_LIBM
m4trace:configure.ac:63: -1- gl_LONG_DOUBLE_VS_DOUBLE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SAME_LONG_DOUBLE_AS_DOUBLE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SAME_LONG_DOUBLE_AS_DOUBLE$])
m4trace:configure.ac:63: -1- gl_CHECK_FREXPL_NO_LIBM
m4trace:configure.ac:63: -1- gl_FUNC_FREXPL_WORKS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FREXPL_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([frexpl.c])
m4trace:configure.ac:63: -1- gl_MATH_MODULE_INDICATOR([frexpl])
m4trace:configure.ac:63: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([frexpl])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[frexpl]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([frexpl])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FREXPL$])
m4trace:configure.ac:63: -1- gl_FUNC_FSEEK
m4trace:configure.ac:63: -1- gl_FUNC_FSEEKO
m4trace:configure.ac:63: -1- gl_STDIN_LARGE_OFFSET
m4trace:configure.ac:63: -1- gl_SYS_TYPES_H
m4trace:configure.ac:63: -1- gl_SYS_TYPES_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^_USE_STD_STAT$])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([sys/types.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/types.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/types.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_TYPES_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H$])
m4trace:configure.ac:63: -1- gl_TYPE_OFF_T
m4trace:configure.ac:63: -1- gl_LARGEFILE
m4trace:configure.ac:63: -1- m4_pattern_allow([^WINDOWS_64_BIT_OFF_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WINDOWS_STAT_INODES$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fseeko], [_AC_CHECK_DECLS([fseeko])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
m4trace:configure.ac:63: -1- gl_FUNC_FFLUSH_STDIN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_FFLUSH_STDIN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FSEEK], [test $REPLACE_FSEEK = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FSEEK], [test $REPLACE_FSEEK = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSEEK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSEEK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSEEK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSEEK_FALSE])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fseek])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fseek])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fseek]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fseek])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FSEEK$])
m4trace:configure.ac:63: -1- gl_FUNC_FSEEKO
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fseeko], [_AC_CHECK_DECLS([fseeko])])
m4trace:configure.ac:63: -1- gl_FUNC_FFLUSH_STDIN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_FFLUSH_STDIN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FSEEKO], [test $HAVE_FSEEKO = 0 || test $REPLACE_FSEEKO = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FSEEKO], [test $HAVE_FSEEKO = 0 || test $REPLACE_FSEEKO = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSEEKO_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSEEKO_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSEEKO_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSEEKO_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FSEEKO], [
    gl_PREREQ_FSEEKO
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FSEEKO
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE__FSEEKI64$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL__FSEEKI64$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fseeko])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fseeko])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fseeko]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fseeko])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FSEEKO$])
m4trace:configure.ac:63: -1- gl_FUNC_FSETERR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___fseterr], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __fseterr"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FSETERR], [test $ac_cv_func___fseterr = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FSETERR], [test $ac_cv_func___fseterr = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSETERR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSETERR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSETERR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSETERR_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_FSTAT
m4trace:configure.ac:63: -1- gl_TEST_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FSTAT], [test $REPLACE_FSTAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FSTAT], [test $REPLACE_FSTAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSTAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSTAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSTAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSTAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FSTAT], [
    case "$host_os" in
      mingw*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_FSTAT
  ])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:63: -1- gl_PREREQ_FSTAT
m4trace:configure.ac:63: -1- gl_SYS_STAT_H
m4trace:configure.ac:63: -1- m4_pattern_allow([^STAT_MACROS_BROKEN$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/stat.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/stat.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/stat.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/stat.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_STAT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WINDOWS_STAT_TIMESPEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WINDOWS_64_BIT_ST_SIZE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^nlink_t$])
m4trace:configure.ac:63: -1- gl_PREREQ_STAT_W32
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SDKDDKVER_H$])
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([fstat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FSTAT$])
m4trace:configure.ac:63: -1- gl_FUNC_FSTATAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fstatat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fstatat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WORKING_FSTATAT_ZERO_FLAG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FSTATAT], [test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FSTATAT], [test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSTATAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSTATAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSTATAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSTATAT_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([fstatat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstatat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fstatat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstatat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FSTATAT$])
m4trace:configure.ac:63: -1- gl_FSUSAGE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_vfs_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/vfs.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_fs_types_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/fs_types.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_MOUNT_H$])
m4trace:configure.ac:63: -1- gl_FILE_SYSTEM_USAGE([gl_cv_fs_space=yes], [gl_cv_fs_space=no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STAT_STATVFS64$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STAT_STATVFS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STAT_STATFS2_FRSIZE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STAT_STATFS3_OSF1$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STAT_STATFS2_BSIZE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STAT_STATFS4$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STAT_STATFS2_FSIZE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FSUSAGE], [test $gl_cv_fs_space = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FSUSAGE], [test $gl_cv_fs_space = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSUSAGE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSUSAGE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSUSAGE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSUSAGE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FSUSAGE], [
    gl_PREREQ_FSUSAGE_EXTRA
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FSUSAGE_EXTRA
m4trace:configure.ac:63: -1- gl_STATFS_TRUNCATES
m4trace:configure.ac:63: -1- m4_pattern_allow([^STATFS_TRUNCATES_BLOCK_COUNTS$])
m4trace:configure.ac:63: -1- gl_FUNC_FSYNC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fsync], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fsync"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FSYNC], [test $HAVE_FSYNC = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FSYNC], [test $HAVE_FSYNC = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSYNC_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FSYNC_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSYNC_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSYNC_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FSYNC], [
    gl_PREREQ_FSYNC
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FSYNC
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([fsync])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fsync])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fsync]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fsync])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FSYNC$])
m4trace:configure.ac:63: -1- gl_FUNC_FTELL
m4trace:configure.ac:63: -1- gl_FUNC_FTELLO
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_ftello], [_AC_CHECK_DECLS([ftello])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FTELLO_BROKEN_AFTER_SWITCHING_FROM_READ_TO_WRITE$])
m4trace:configure.ac:63: -1- gl_FUNC_UNGETC_WORKS
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_UNGETC_BROKEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FTELLO_BROKEN_AFTER_UNGETC$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FTELL], [test $REPLACE_FTELL = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FTELL], [test $REPLACE_FTELL = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FTELL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FTELL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTELL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTELL_FALSE])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([ftell])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([ftell])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ftell]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([ftell])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FTELL$])
m4trace:configure.ac:63: -1- gl_FUNC_FTELLO
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_ftello], [_AC_CHECK_DECLS([ftello])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FTELLO_BROKEN_AFTER_SWITCHING_FROM_READ_TO_WRITE$])
m4trace:configure.ac:63: -1- gl_FUNC_UNGETC_WORKS
m4trace:configure.ac:63: -1- m4_pattern_allow([^FTELLO_BROKEN_AFTER_UNGETC$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FTELLO], [test $HAVE_FTELLO = 0 || test $REPLACE_FTELLO = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FTELLO], [test $HAVE_FTELLO = 0 || test $REPLACE_FTELLO = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FTELLO_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FTELLO_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTELLO_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTELLO_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FTELLO], [
    gl_PREREQ_FTELLO
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FTELLO
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE__FTELLI64$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([ftello])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([ftello])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ftello]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([ftello])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FTELLO$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_strtof], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" strtof"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_FTRUNCATE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_ftruncate], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" ftruncate"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FTRUNCATE], [test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FTRUNCATE], [test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FTRUNCATE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FTRUNCATE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTRUNCATE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTRUNCATE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_FTRUNCATE], [
    gl_PREREQ_FTRUNCATE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_FTRUNCATE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE__CHSIZE$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([ftruncate])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([ftruncate])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ftruncate]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([ftruncate])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FTRUNCATE$])
m4trace:configure.ac:63: -1- gl_FUNC_FTS
m4trace:configure.ac:63: -1- gl_FUNC_FTS_CORE
m4trace:configure.ac:63: -1- gl_FUNC_OPENAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_openat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" openat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_PREPROC_O_CLOEXEC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fstatfs], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fstatfs"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_vfs_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/vfs.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STATFS_F_TYPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE___FSWORD_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^fts_open$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^fts_close$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^fts_read$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^fts_set$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^fts_children$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^fts_cross_check$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FTS], [true])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FTS], [true])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FTS_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FTS_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTS_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTS_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_FUTIMENS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_futimens], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" futimens"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_FUTIMENS], [test $HAVE_FUTIMENS = 0 || test $REPLACE_FUTIMENS = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_FUTIMENS], [test $HAVE_FUTIMENS = 0 || test $REPLACE_FUTIMENS = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FUTIMENS_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_FUTIMENS_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FUTIMENS_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FUTIMENS_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([futimens])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([futimens])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[futimens]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([futimens])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FUTIMENS$])
m4trace:configure.ac:63: -1- gl_GETADDRINFO
m4trace:configure.ac:63: -1- gl_NETDB_H
m4trace:configure.ac:63: -1- gl_NETDB_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_ADDRINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FREEADDRINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GAI_STRERROR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETADDRINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETNAMEINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GAI_STRERROR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETADDRINFO$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([netdb.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([netdb.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_netdb_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netdb.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([netdb.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_NETDB_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_NETDB_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NETDB_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETADDRINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GAI_STRERROR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GAI_STRERRORA$])
m4trace:configure.ac:63: -1- gl_PREREQ_GETADDRINFO
m4trace:configure.ac:63: -1- gl_HOSTENT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETHOSTBYNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HOSTENT_LIB$])
m4trace:configure.ac:63: -1- gl_SERVENT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETSERVBYNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SERVENT_LIB$])
m4trace:configure.ac:63: -1- gl_FUNC_INET_NTOP
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INET_NTOP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_INET_NTOP$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_netdb_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netdb.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INET_NTOP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INET_NTOP_LIB$])
m4trace:configure.ac:63: -1- gl_SOCKET_FAMILIES
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_netinet_in_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netinet/in.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_IPV4$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_IPV6$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_SA_LEN$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_netinet_in_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netinet/in.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETADDRINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FREEADDRINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETNAMEINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_ADDRINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETADDRINFO_LIB$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETADDRINFO], [test $HAVE_GETADDRINFO = 0 || test $REPLACE_GETADDRINFO = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETADDRINFO], [test $HAVE_GETADDRINFO = 0 || test $REPLACE_GETADDRINFO = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETADDRINFO_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETADDRINFO_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETADDRINFO_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETADDRINFO_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GAI_STRERROR], [test $HAVE_DECL_GAI_STRERROR = 0 || test $REPLACE_GAI_STRERROR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GAI_STRERROR], [test $HAVE_DECL_GAI_STRERROR = 0 || test $REPLACE_GAI_STRERROR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GAI_STRERROR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GAI_STRERROR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GAI_STRERROR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GAI_STRERROR_FALSE])
m4trace:configure.ac:63: -1- gl_NETDB_MODULE_INDICATOR([getaddrinfo])
m4trace:configure.ac:63: -1- gl_NETDB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETADDRINFO])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETADDRINFO$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getaddrinfo])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getaddrinfo]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getaddrinfo])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETADDRINFO$])
m4trace:configure.ac:63: -1- gl_FUNC_GETCWD
m4trace:configure.ac:63: -1- gl_FUNC_GETCWD_NULL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_FUNC_GETCWD_SIGNATURE
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_FUNC_GETCWD_PATH_MAX
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_getcwd], [_AC_CHECK_DECLS([getcwd])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETCWD$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_PATHMAX_SNIPPET
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_FUNC_GETCWD_ABORT_BUG([gl_abort_bug=yes])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_getcwd], [_AC_CHECK_DECLS([getcwd])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CHECK_FUNC_GETPAGESIZE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:63: -1- gl_PATHMAX_SNIPPET
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MINIMALLY_WORKING_GETCWD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PARTLY_WORKING_GETCWD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETCWD_SHORTER$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETCWD], [test $REPLACE_GETCWD = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETCWD], [test $REPLACE_GETCWD = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETCWD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETCWD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETCWD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETCWD_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GETCWD], [
    gl_PREREQ_GETCWD
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_GETCWD
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_GETCWD$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getcwd])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getcwd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getcwd])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETCWD$])
m4trace:configure.ac:63: -1- gl_FUNC_GETCWD_LGPL
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETCWD_LGPL], [test $REPLACE_GETCWD = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETCWD_LGPL], [test $REPLACE_GETCWD = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETCWD_LGPL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETCWD_LGPL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETCWD_LGPL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETCWD_LGPL_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getcwd])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getcwd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getcwd])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETCWD$])
m4trace:configure.ac:63: -1- gl_FUNC_GETDELIM
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_getdelim], [_AC_CHECK_DECLS([getdelim])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETDELIM$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getdelim], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getdelim"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETDELIM], [test $HAVE_GETDELIM = 0 || test $REPLACE_GETDELIM = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETDELIM], [test $HAVE_GETDELIM = 0 || test $REPLACE_GETDELIM = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETDELIM_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETDELIM_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETDELIM_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETDELIM_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GETDELIM], [
    gl_PREREQ_GETDELIM
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_GETDELIM
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETC_UNLOCKED$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([getdelim])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getdelim])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getdelim]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getdelim])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETDELIM$])
m4trace:configure.ac:63: -1- gl_FUNC_GETDTABLESIZE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getdtablesize], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getdtablesize"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_getdtablesize], [_AC_CHECK_DECLS([getdtablesize])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETDTABLESIZE$])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETDTABLESIZE], [test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETDTABLESIZE], [test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETDTABLESIZE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETDTABLESIZE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETDTABLESIZE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETDTABLESIZE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GETDTABLESIZE], [
    gl_PREREQ_GETDTABLESIZE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_GETDTABLESIZE
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getdtablesize])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getdtablesize])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getdtablesize]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getdtablesize])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETDTABLESIZE$])
m4trace:configure.ac:63: -1- gl_FUNC_GETGROUPS
m4trace:configure.ac:63: -1- AC_FUNC_GETGROUPS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETGROUPS_ZERO_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETGROUPS], [test $HAVE_GETGROUPS = 0 || test $REPLACE_GETGROUPS = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETGROUPS], [test $HAVE_GETGROUPS = 0 || test $REPLACE_GETGROUPS = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETGROUPS_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETGROUPS_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETGROUPS_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETGROUPS_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getgroups])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getgroups])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getgroups]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getgroups])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETGROUPS$])
m4trace:configure.ac:63: -1- gl_FUNC_GETHOSTNAME
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETHOSTNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETHOSTNAME_LIB$])
m4trace:configure.ac:63: -1- gl_PREREQ_HOST_NAME_MAX
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_netdb_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netdb.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HOST_NAME_MAX$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETHOSTNAME], [test $HAVE_GETHOSTNAME = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETHOSTNAME], [test $HAVE_GETHOSTNAME = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETHOSTNAME_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETHOSTNAME_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETHOSTNAME_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETHOSTNAME_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GETHOSTNAME], [
    gl_PREREQ_GETHOSTNAME
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_GETHOSTNAME
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNAME$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([gethostname])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([gethostname])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[gethostname]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([gethostname])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETHOSTNAME$])
m4trace:configure.ac:63: -1- gl_GETHRXTIME
m4trace:configure.ac:63: -1- gl_ARITHMETIC_HRTIME_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ARITHMETIC_HRTIME_T$])
m4trace:configure.ac:63: -1- gl_XTIME
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETHRTIME$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_microuptime], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" microuptime"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_nanouptime], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" nanouptime"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_GETHRXTIME$])
m4trace:configure.ac:63: -1- gl_FUNC_GETLINE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_getline], [_AC_CHECK_DECLS([getline])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETLINE], [test $REPLACE_GETLINE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETLINE], [test $REPLACE_GETLINE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETLINE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETLINE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETLINE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETLINE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GETLINE], [
    gl_PREREQ_GETLINE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_GETLINE
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([getline])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getline])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getline]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getline])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETLINE$])
m4trace:configure.ac:63: -1- gl_GETLOADAVG
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LIBKSTAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LIBPERFSTAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^DGUX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LIBDGC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETLOADAVG_LIBS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_LOADAVG_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETLOADAVG], [test $HAVE_GETLOADAVG = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETLOADAVG], [test $HAVE_GETLOADAVG = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETLOADAVG_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETLOADAVG_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETLOADAVG_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETLOADAVG_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GETLOADAVG], [
    gl_PREREQ_GETLOADAVG
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_GETLOADAVG
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PSTAT_GETDYNAMIC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SVR4$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UMAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UMAX4_3$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UMAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MACH_MACH_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NLIST_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_NLIST_N_UN_N_NAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^N_NAME_POINTER$])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([getloadavg])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getloadavg])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getloadavg]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getloadavg])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETLOADAVG$])
m4trace:configure.ac:63: -1- gl_FUNC_GETLOGIN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_getlogin], [_AC_CHECK_DECLS([getlogin])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getlogin], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getlogin"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETLOGIN], [test $HAVE_GETLOGIN = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETLOGIN], [test $HAVE_GETLOGIN = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETLOGIN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETLOGIN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETLOGIN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETLOGIN_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getlogin])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getlogin])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getlogin]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getlogin])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETLOGIN$])
m4trace:configure.ac:63: -1- gl_LIB_GETLOGIN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_GETLOGIN$])
m4trace:configure.ac:63: -1- gl_GETNDELIM2
m4trace:configure.ac:63: -1- gl_PREREQ_GETNDELIM2
m4trace:configure.ac:63: -1- gt_TYPE_SSIZE_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_flockfile], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" flockfile"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_funlockfile], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" funlockfile"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_GETOPT_GNU
m4trace:configure.ac:63: -1- gl_FUNC_GETOPT_POSIX
m4trace:configure.ac:63: -1- gl_GETOPT_CHECK_HEADERS
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([getopt.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([getopt.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_getopt_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" getopt.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([getopt.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_GETOPT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_GETOPT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETOPT_LONG_ONLY$])
m4trace:configure.ac:63: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [../../lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:50: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:945: gl_INIT is expanded from...
configure.ac:63: the top level])
m4trace:configure.ac:63: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [../../lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:50: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:945: gl_INIT is expanded from...
configure.ac:63: the top level])
m4trace:configure.ac:63: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [../../lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:50: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:945: gl_INIT is expanded from...
configure.ac:63: the top level])
m4trace:configure.ac:63: -1- GL_NOCRASH
m4trace:configure.ac:63: -1- gl_GETOPT_SUBSTITUTE_HEADER
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_cdefs_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/cdefs.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_CDEFS_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^__GETOPT_PREFIX$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([getopt.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETOPT_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_GETOPT_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_GETOPT_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_GETOPT_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_GETOPT_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GETOPT_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GETOPT_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([getopt-cdefs.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETOPT_CDEFS_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_GETOPT_CDEFS_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_GETOPT_CDEFS_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_GETOPT_CDEFS_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_GETOPT_CDEFS_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GETOPT_CDEFS_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GETOPT_CDEFS_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETOPT], [test $REPLACE_GETOPT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETOPT], [test $REPLACE_GETOPT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETOPT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETOPT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETOPT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETOPT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GETOPT], [
    dnl Define the substituted variable GNULIB_UNISTD_H_GETOPT to 1.
    gl_UNISTD_H_REQUIRE_DEFAULTS
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT], [1])
  ])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_GETOPT$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getopt-posix])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getopt-posix])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getopt-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getopt-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETOPT_POSIX$])
m4trace:configure.ac:63: -1- gl_FUNC_GETPAGESIZE
m4trace:configure.ac:63: -1- gl_CHECK_FUNC_GETPAGESIZE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OS_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETPAGESIZE], [test $REPLACE_GETPAGESIZE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETPAGESIZE], [test $REPLACE_GETPAGESIZE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETPAGESIZE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETPAGESIZE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETPAGESIZE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETPAGESIZE_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getpagesize])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getpagesize])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getpagesize]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getpagesize])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETPAGESIZE$])
m4trace:configure.ac:63: -1- gl_FUNC_GETPASS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getpass], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getpass"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([getpass.c])
m4trace:configure.ac:63: -1- gl_PREREQ_GETPASS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_stdio_ext_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdio_ext.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_termios_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" termios.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___fsetlocking], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __fsetlocking"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL___FSETLOCKING$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fflush_unlocked], [_AC_CHECK_DECLS([fflush_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FFLUSH_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_flockfile], [_AC_CHECK_DECLS([flockfile])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FLOCKFILE$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fputs_unlocked], [_AC_CHECK_DECLS([fputs_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FPUTS_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_funlockfile], [_AC_CHECK_DECLS([funlockfile])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FUNLOCKFILE$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_putc_unlocked], [_AC_CHECK_DECLS([putc_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_PUTC_UNLOCKED$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TCGETATTR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TCSETATTR$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getpass])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getpass])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getpass]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getpass])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETPASS$])
m4trace:configure.ac:63: -1- gl_FUNC_GETPASS_GNU
m4trace:configure.ac:63: -1- gl_LIBSOURCES([getpass.c])
m4trace:configure.ac:63: -1- gl_PREREQ_GETPASS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_stdio_ext_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdio_ext.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_termios_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" termios.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___fsetlocking], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __fsetlocking"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL___FSETLOCKING$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fflush_unlocked], [_AC_CHECK_DECLS([fflush_unlocked])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_flockfile], [_AC_CHECK_DECLS([flockfile])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fputs_unlocked], [_AC_CHECK_DECLS([fputs_unlocked])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_funlockfile], [_AC_CHECK_DECLS([funlockfile])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_putc_unlocked], [_AC_CHECK_DECLS([putc_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TCGETATTR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TCSETATTR$])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getpass-gnu])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getpass-gnu])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getpass-gnu]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getpass-gnu])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETPASS_GNU$])
m4trace:configure.ac:63: -1- gl_FUNC_GETPROGNAME
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getprogname], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getprogname"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getexecname], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getexecname"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_NAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL___ARGV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VAR___PROGNAME$])
m4trace:configure.ac:63: -1- gl_FUNC_GETRANDOM
m4trace:configure.ac:63: -1- gl_SYS_RANDOM_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETRANDOM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETRANDOM$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getrandom], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getrandom"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_BCRYPT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LIB_BCRYPT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_GETRANDOM$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETRANDOM], [test $HAVE_GETRANDOM = 0 || test $REPLACE_GETRANDOM = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETRANDOM], [test $HAVE_GETRANDOM = 0 || test $REPLACE_GETRANDOM = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETRANDOM_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETRANDOM_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETRANDOM_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETRANDOM_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_RANDOM_MODULE_INDICATOR([getrandom])
m4trace:configure.ac:63: -1- gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETRANDOM])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETRANDOM$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getrandom])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getrandom]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getrandom])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETRANDOM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBINTL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LTLIBINTL$])
m4trace:configure.ac:63: -1- gl_GETTIME
m4trace:configure.ac:63: -1- gl_TIMESPEC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_timespec_get], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" timespec_get"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_GETTIME_RES
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_timespec_getres], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" timespec_getres"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_GETTIMEOFDAY
m4trace:configure.ac:63: -1- gl_SYS_TIME_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETTIMEOFDAY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_TIMEVAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_TIME_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GETTIMEOFDAY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRUCT_TIMEVAL$])
m4trace:configure.ac:63: -1- gl_SYS_TIME_H
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/time.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/time.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/time.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_TIME_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H$])
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_gettimeofday], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" gettimeofday"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GETTIMEOFDAY_TIMEZONE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETTIMEOFDAY], [test $HAVE_GETTIMEOFDAY = 0 || test $REPLACE_GETTIMEOFDAY = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETTIMEOFDAY], [test $HAVE_GETTIMEOFDAY = 0 || test $REPLACE_GETTIMEOFDAY = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETTIMEOFDAY_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETTIMEOFDAY_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETTIMEOFDAY_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETTIMEOFDAY_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GETTIMEOFDAY], [
    gl_PREREQ_GETTIMEOFDAY
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_GETTIMEOFDAY
m4trace:configure.ac:63: -1- gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
m4trace:configure.ac:63: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETTIMEOFDAY])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([gettimeofday])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[gettimeofday]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([gettimeofday])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETTIMEOFDAY$])
m4trace:configure.ac:63: -1- gl_GETUGROUPS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_grp_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" grp.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_GETUSERSHELL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getusershell], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getusershell"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETUSERSHELL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETUSERSHELL], [test $HAVE_GETUSERSHELL = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETUSERSHELL], [test $HAVE_GETUSERSHELL = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETUSERSHELL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETUSERSHELL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETUSERSHELL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETUSERSHELL_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([getusershell])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getusershell])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getusershell]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getusershell])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETUSERSHELL$])
m4trace:configure.ac:63: -1- gl_GNU_MAKE
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GNU_MAKE], [LC_ALL=C ${MAKE-make} --version 2>/dev/null | sed -e '2,$d' | grep GNU >/dev/null])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNU_MAKE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNU_MAKE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GNU_MAKE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GNU_MAKE_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_GROUP_MEMBER
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GROUP_MEMBER], [test $HAVE_GROUP_MEMBER = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GROUP_MEMBER], [test $HAVE_GROUP_MEMBER = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GROUP_MEMBER_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GROUP_MEMBER_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GROUP_MEMBER_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GROUP_MEMBER_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_GROUP_MEMBER], [
    gl_PREREQ_GROUP_MEMBER
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_GROUP_MEMBER
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([group-member])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([group-member])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[group-member]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([group-member])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GROUP_MEMBER$])
m4trace:configure.ac:63: -1- gl_FUNC_SETLOCALE_NULL
m4trace:configure.ac:63: -1- gl_PTHREADLIB
m4trace:configure.ac:63: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" threads.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SETLOCALE_NULL_ALL_MTSAFE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SETLOCALE_NULL_ONE_MTSAFE$])
m4trace:configure.ac:63: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SETLOCALE_NULL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_HARD_LOCALE$])
m4trace:configure.ac:63: -1- AC_DEFUN([gl_HAVE_MODULE_HAVELIB])
m4trace:configure.ac:63: -1- gl_HOST_OS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HOST_OPERATING_SYSTEM$])
m4trace:configure.ac:63: -1- gl_HOSTENT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETHOSTBYNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HOSTENT_LIB$])
m4trace:configure.ac:63: -1- gl_HUMAN
m4trace:configure.ac:63: -1- gl_I_RING
m4trace:configure.ac:63: -1- AM_ICONV
m4trace:configure.ac:63: -1- AM_ICONV_LINK
m4trace:configure.ac:63: -1- AM_ICONV_LINKFLAGS_BODY
m4trace:configure.ac:63: -1- AC_LIB_PREPARE_PREFIX
m4trace:configure.ac:63: -1- AC_LIB_RPATH
m4trace:configure.ac:63: -1- AC_LIB_PROG_LD
m4trace:configure.ac:63: -1- AC_LIB_PROG_LD_GNU
m4trace:configure.ac:63: -1- AC_LIB_LINKFLAGS_BODY([iconv])
m4trace:configure.ac:63: -1- AC_LIB_PREPARE_MULTILIB
m4trace:configure.ac:63: -1- gl_HOST_CPU_C_ABI_32BIT
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([
    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"
    eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
    eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
  ])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([
          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"
          eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
          eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
        ])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCICONV])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ICONV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBICONV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LTLIBICONV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ICONV_CONST$])
m4trace:configure.ac:63: -1- gl_ICONV_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^ICONV_CONST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ICONV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ICONV_OPEN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ICONV_UTF$])
m4trace:configure.ac:63: -1- gl_ICONV_MODULE_INDICATOR([iconv])
m4trace:configure.ac:63: -1- gl_ICONV_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ICONV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ICONV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([iconv])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[iconv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_ICONV_H
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([iconv.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([iconv.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_iconv_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" iconv.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([iconv.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_ICONV_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ICONV_H$])
m4trace:configure.ac:63: -1- gl_ICONV_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([iconv.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ICONV_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_ICONV_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_ICONV_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_ICONV_OPEN
m4trace:configure.ac:63: -1- gl_REPLACE_ICONV_H
m4trace:configure.ac:63: -1- gl_ICONV_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^ICONV_FLAVOR$])
m4trace:configure.ac:63: -1- gl_REPLACE_ICONV_OPEN
m4trace:configure.ac:63: -1- gl_REPLACE_ICONV_H
m4trace:configure.ac:63: -1- gl_ICONV_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([iconv.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ICONV_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_ICONV_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_ICONV_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ICONV_OPEN], [test $REPLACE_ICONV_OPEN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ICONV_OPEN], [test $REPLACE_ICONV_OPEN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ICONV_OPEN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ICONV_OPEN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ICONV_OPEN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ICONV_OPEN_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ICONV], [test $REPLACE_ICONV = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ICONV], [test $REPLACE_ICONV = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ICONV_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ICONV_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ICONV_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ICONV_FALSE])
m4trace:configure.ac:63: -1- gl_IDCACHE
m4trace:configure.ac:63: -1- gl_FUNC_INET_NTOP
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INET_NTOP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_INET_NTOP$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_netdb_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netdb.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INET_NTOP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INET_NTOP_LIB$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_INET_NTOP], [test $HAVE_INET_NTOP = 0 || test $REPLACE_INET_NTOP = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_INET_NTOP], [test $HAVE_INET_NTOP = 0 || test $REPLACE_INET_NTOP = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_INET_NTOP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_INET_NTOP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_INET_NTOP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_INET_NTOP_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_INET_NTOP], [
    gl_PREREQ_INET_NTOP
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_INET_NTOP
m4trace:configure.ac:63: -1- gl_ARPA_INET_MODULE_INDICATOR([inet_ntop])
m4trace:configure.ac:63: -1- gl_ARPA_INET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([inet_ntop])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[inet_ntop]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_INLINE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_INLINE$])
m4trace:configure.ac:63: -1- gl_INTTOSTR
m4trace:configure.ac:63: -1- gl_PREREQ_INTTOSTR
m4trace:configure.ac:63: -1- m4_pattern_allow([^off_t$])
m4trace:configure.ac:63: -1- gl_PREREQ_IMAXTOSTR
m4trace:configure.ac:63: -1- gl_PREREQ_OFFTOSTR
m4trace:configure.ac:63: -1- gl_PREREQ_UMAXTOSTR
m4trace:configure.ac:63: -1- gl_PREREQ_UINTTOSTR
m4trace:configure.ac:63: -1- gl_INTTYPES_H
m4trace:configure.ac:63: -1- gl_INTTYPES_INCOMPLETE
m4trace:configure.ac:63: -1- gl_STDINT_H
m4trace:configure.ac:63: -1- gl_LIMITS_H
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([limits.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([limits.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_limits_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" limits.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([limits.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_LIMITS_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LIMITS_H$])
m4trace:configure.ac:63: -1- gt_TYPE_WINT_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIBHEADERS_OVERRIDE_WINT_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" wchar.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" inttypes.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_INTTYPES_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/types.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_TYPES_H$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([stdint.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([stdint.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdint.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([stdint.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_STDINT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDINT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- m4_pattern_allow([^__STDC_CONSTANT_MACROS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^__STDC_LIMIT_MACROS$])
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- gl_STDINT_TYPE_PROPERTIES
m4trace:configure.ac:63: -1- gl_MULTIARCH
m4trace:configure.ac:63: -1- m4_pattern_allow([^APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:63: -1- gl_STDINT_BITSIZEOF([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- m4_pattern_allow([^BITSIZEOF_PTRDIFF_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^BITSIZEOF_SIZE_T$])
m4trace:configure.ac:63: -1- gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- m4_pattern_allow([^BITSIZEOF_SIG_ATOMIC_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^BITSIZEOF_WCHAR_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^BITSIZEOF_WINT_T$])
m4trace:configure.ac:63: -1- gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGNED_SIG_ATOMIC_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGNED_WCHAR_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGNED_WINT_T$])
m4trace:configure.ac:63: -1- gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTRDIFF_T_SUFFIX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SIZE_T_SUFFIX$])
m4trace:configure.ac:63: -1- gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:63: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:63: -1- m4_pattern_allow([^SIG_ATOMIC_T_SUFFIX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WCHAR_T_SUFFIX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WINT_T_SUFFIX$])
m4trace:configure.ac:63: -1- gl_REPLACE_LIMITS_H
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_C99_STDINT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" inttypes.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_INTTYPES_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_IMAXABS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_IMAXDIV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRTOIMAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRTOUMAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_IMAXDIV_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOIMAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRTOUMAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INT32_MAX_LT_INTMAX_MAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INT64_MAX_EQ_LONG_MAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PRIPTR_PREFIX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UINT32_MAX_LT_UINTMAX_MAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UINT64_MAX_EQ_ULONG_MAX$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([inttypes.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([inttypes.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" inttypes.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([inttypes.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_INTTYPES_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H$])
m4trace:configure.ac:63: -1- gl_INTTYPES_PRI_SCN
m4trace:configure.ac:63: -1- m4_pattern_allow([^PRIPTR_PREFIX$])
m4trace:configure.ac:63: -1- gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION([INT32_MAX_LT_INTMAX_MAX], [defined INT32_MAX && defined INTMAX_MAX], [INT32_MAX < INTMAX_MAX], [sizeof (int) < sizeof (long long int)])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INT32_MAX_LT_INTMAX_MAX$])
m4trace:configure.ac:63: -1- gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION([INT64_MAX_EQ_LONG_MAX], [defined INT64_MAX], [INT64_MAX == LONG_MAX], [sizeof (long long int) == sizeof (long int)])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INT64_MAX_EQ_LONG_MAX$])
m4trace:configure.ac:63: -1- gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION([UINT32_MAX_LT_UINTMAX_MAX], [defined UINT32_MAX && defined UINTMAX_MAX], [UINT32_MAX < UINTMAX_MAX], [sizeof (unsigned int) < sizeof (unsigned long long int)])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UINT32_MAX_LT_UINTMAX_MAX$])
m4trace:configure.ac:63: -1- gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION([UINT64_MAX_EQ_ULONG_MAX], [defined UINT64_MAX], [UINT64_MAX == ULONG_MAX], [sizeof (unsigned long long int) == sizeof (unsigned long int)])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UINT64_MAX_EQ_ULONG_MAX$])
m4trace:configure.ac:63: -1- gl_INTTYPES_INCOMPLETE
m4trace:configure.ac:63: -1- gl_INTTYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXABS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_IMAXABS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXDIV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_IMAXDIV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOIMAX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOIMAX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUMAX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRTOUMAX$])
m4trace:configure.ac:63: -1- gl_ISAPIPE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISAPIPE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ISAPIPE], [test $HAVE_ISAPIPE = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ISAPIPE], [test $HAVE_ISAPIPE = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISAPIPE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISAPIPE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISAPIPE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISAPIPE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_ISAPIPE], [
    gl_PREREQ_ISAPIPE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_ISAPIPE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FIFO_PIPES$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FIFO_PIPES$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PIPE_LINK_COUNT_MAX$])
m4trace:configure.ac:63: -1- gl_FUNC_ISATTY
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ISATTY], [test $REPLACE_ISATTY = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ISATTY], [test $REPLACE_ISATTY = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISATTY_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISATTY_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISATTY_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISATTY_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_ISATTY], [
    gl_PREREQ_ISATTY
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_ISATTY
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([isatty])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([isatty])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[isatty]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([isatty])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_ISATTY$])
m4trace:configure.ac:63: -1- gl_FUNC_ISBLANK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_isblank], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" isblank"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ISBLANK], [test $HAVE_ISBLANK = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ISBLANK], [test $HAVE_ISBLANK = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISBLANK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISBLANK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISBLANK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISBLANK_FALSE])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([isblank])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_ISBLANK$])
m4trace:configure.ac:63: -1- gl_CTYPE_MODULE_INDICATOR([isblank])
m4trace:configure.ac:63: -1- gl_CTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([isblank])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[isblank]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_FUNC_ISNAND_NO_LIBM
m4trace:configure.ac:63: -1- gl_HAVE_ISNAND_NO_LIBM
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISNAND_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([isnand.c])
m4trace:configure.ac:63: -1- gl_PREREQ_ISNAND
m4trace:configure.ac:63: -1- gl_DOUBLE_EXPONENT_LOCATION
m4trace:configure.ac:63: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^DBL_EXPBIT0_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^DBL_EXPBIT0_BIT$])
m4trace:configure.ac:63: -1- gl_FUNC_ISNANF_NO_LIBM
m4trace:configure.ac:63: -1- gl_HAVE_ISNANF_NO_LIBM
m4trace:configure.ac:63: -1- gl_ISNANF_WORKS
m4trace:configure.ac:63: -1- gl_FLOAT_EXPONENT_LOCATION
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLT_EXPBIT0_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLT_EXPBIT0_BIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISNANF_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([isnanf.c])
m4trace:configure.ac:63: -1- gl_PREREQ_ISNANF
m4trace:configure.ac:63: -1- gl_FLOAT_EXPONENT_LOCATION
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLT_EXPBIT0_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLT_EXPBIT0_BIT$])
m4trace:configure.ac:63: -1- gl_FUNC_ISNANL_NO_LIBM
m4trace:configure.ac:63: -1- gl_HAVE_ISNANL_NO_LIBM
m4trace:configure.ac:63: -1- gl_FUNC_ISNANL_WORKS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISNANL_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([isnanl.c])
m4trace:configure.ac:63: -1- gl_PREREQ_ISNANL
m4trace:configure.ac:63: -1- gl_LONG_DOUBLE_EXPONENT_LOCATION
m4trace:configure.ac:63: -1- m4_pattern_allow([^LDBL_EXPBIT0_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LDBL_EXPBIT0_BIT$])
m4trace:configure.ac:63: -1- gl_FUNC_ISWBLANK
m4trace:configure.ac:63: -1- gl_WCTYPE_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISWBLANK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCTYPE_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCTRANS_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ISWBLANK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ISWDIGIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ISWXDIGIT$])
m4trace:configure.ac:63: -1- gl_WCTYPE_H
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_iswcntrl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" iswcntrl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISWCNTRL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:63: -1- gl_TYPE_WINT_T_PREREQ
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_crtdefs_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" crtdefs.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CRTDEFS_H$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([wctype.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([wctype.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_wctype_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" wctype.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([wctype.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_WCTYPE_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_WCTYPE_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCTYPE_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_ISWCNTRL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TOWLOWER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TOWLOWER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TOWLOWER$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_iswblank], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" iswblank"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ISWBLANK$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ISWBLANK], [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && { test $HAVE_ISWBLANK = 0 || test $REPLACE_ISWBLANK = 1; }])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ISWBLANK], [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && { test $HAVE_ISWBLANK = 0 || test $REPLACE_ISWBLANK = 1; }])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISWBLANK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISWBLANK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISWBLANK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISWBLANK_FALSE])
m4trace:configure.ac:63: -1- gl_WCTYPE_MODULE_INDICATOR([iswblank])
m4trace:configure.ac:63: -1- gl_WCTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWBLANK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISWBLANK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWDIGIT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISWDIGIT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWXDIGIT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISWXDIGIT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTYPE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCTYPE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWCTYPE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ISWCTYPE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTRANS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WCTRANS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TOWCTRANS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TOWCTRANS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([iswblank])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[iswblank]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([iswblank])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_ISWBLANK$])
m4trace:configure.ac:63: -1- gl_FUNC_ISWDIGIT
m4trace:configure.ac:63: -1- gt_LOCALE_JA
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_JA$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ISWDIGIT], [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWDIGIT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ISWDIGIT], [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWDIGIT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISWDIGIT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISWDIGIT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISWDIGIT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISWDIGIT_FALSE])
m4trace:configure.ac:63: -1- gl_WCTYPE_MODULE_INDICATOR([iswdigit])
m4trace:configure.ac:63: -1- gl_WCTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([iswdigit])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[iswdigit]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([iswdigit])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_ISWDIGIT$])
m4trace:configure.ac:63: -1- gl_FUNC_ISWXDIGIT
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ISWXDIGIT], [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWXDIGIT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ISWXDIGIT], [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWXDIGIT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISWXDIGIT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ISWXDIGIT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISWXDIGIT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ISWXDIGIT_FALSE])
m4trace:configure.ac:63: -1- gl_WCTYPE_MODULE_INDICATOR([iswxdigit])
m4trace:configure.ac:63: -1- gl_WCTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([iswxdigit])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[iswxdigit]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([iswxdigit])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_ISWXDIGIT$])
m4trace:configure.ac:63: -1- gl_LANGINFO_H
m4trace:configure.ac:63: -1- gl_LANGINFO_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NL_LANGINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_NL_LANGINFO$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([langinfo.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([langinfo.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_langinfo_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" langinfo.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([langinfo.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_LANGINFO_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LANGINFO_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_langinfo_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" langinfo.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LANGINFO_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LANGINFO_CODESET$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LANGINFO_T_FMT_AMPM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LANGINFO_ALTMON$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LANGINFO_ERA$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LANGINFO_YESEXPR$])
m4trace:configure.ac:63: -1- gl_LANGINFO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NL_LANGINFO])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_NL_LANGINFO$])
m4trace:configure.ac:63: -1- gl_FUNC_LCHMOD
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lchmod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lchmod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_LCHMOD], [test $HAVE_LCHMOD = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_LCHMOD], [test $HAVE_LCHMOD = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LCHMOD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LCHMOD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LCHMOD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LCHMOD_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_LCHMOD], [
    gl_PREREQ_LCHMOD
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_LCHMOD
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([lchmod])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lchmod])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lchmod]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([lchmod])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LCHMOD$])
m4trace:configure.ac:63: -1- gl_FUNC_LCHOWN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lchmod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lchmod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LCHOWN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_LCHOWN], [test $HAVE_LCHOWN = 0 || test $REPLACE_LCHOWN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_LCHOWN], [test $HAVE_LCHOWN = 0 || test $REPLACE_LCHOWN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LCHOWN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LCHOWN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LCHOWN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LCHOWN_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([lchown])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lchown])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lchown]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([lchown])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LCHOWN$])
m4trace:configure.ac:63: -1- gl_IGNORE_UNUSED_LIBRARIES
m4trace:configure.ac:63: -1- _gl_IGNORE_UNUSED_LIBRARIES_OPTIONS
m4trace:configure.ac:63: -1- m4_pattern_allow([^IGNORE_UNUSED_LIBRARIES_CFLAGS$])
m4trace:configure.ac:63: -1- gl___INLINE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE___INLINE$])
m4trace:configure.ac:63: -1- gl_LIBGMP
m4trace:configure.ac:63: -1- AC_LIB_HAVE_LINKFLAGS([gmp], [], [#if HAVE_GMP_H
              # include <gmp.h>
              #else
              # include <gmp/gmp.h>
              #endif], [static const mp_limb_t x[2] = { 0x73, 0x55 };
              mpz_t tmp;
              mpz_roinit_n (tmp, x, 2);
             ], [no])
m4trace:configure.ac:63: -1- AC_LIB_LINKFLAGS_BODY([gmp], [])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([
    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"
    eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
    eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
  ])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([
          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"
          eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
          eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
        ])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCGMP])
m4trace:configure.ac:63: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LIBGMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LIBGMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBGMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LTLIBGMP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBGMP_PREFIX$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_MINI_GMP_H], [test $HAVE_LIBGMP != yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_MINI_GMP_H], [test $HAVE_LIBGMP != yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_MINI_GMP_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_MINI_GMP_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_MINI_GMP_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_MINI_GMP_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_GMP_GMP_H], [test $HAVE_LIBGMP = yes && test "$ac_cv_header_gmp_h" != yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_GMP_GMP_H], [test $HAVE_LIBGMP = yes && test "$ac_cv_header_gmp_h" != yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_GMP_GMP_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_GMP_GMP_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GMP_GMP_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GMP_GMP_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([gmp.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GMP_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_GMP_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_GMP_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_GMP_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_GMP_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GMP_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GMP_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MINI_GMP_GNULIB], [test $HAVE_LIBGMP != yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MINI_GMP_GNULIB], [test $HAVE_LIBGMP != yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MINI_GMP_GNULIB_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MINI_GMP_GNULIB_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MINI_GMP_GNULIB_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MINI_GMP_GNULIB_FALSE])
m4trace:configure.ac:63: -1- gl_LIMITS_H
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([limits.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIMITS_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_LIMITS_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_LINK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_link], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" link"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_LINK], [test $HAVE_LINK = 0 || test $REPLACE_LINK = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_LINK], [test $HAVE_LINK = 0 || test $REPLACE_LINK = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LINK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LINK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LINK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LINK_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([link])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([link])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[link]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([link])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LINK$])
m4trace:configure.ac:63: -1- gl_FUNC_LINK_FOLLOWS_SYMLINK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_readlink], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" readlink"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LINK_FOLLOWS_SYMLINKS$])
m4trace:configure.ac:63: -1- gl_FUNC_LINKAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_linkat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" linkat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_symlink], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" symlink"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^LINKAT_TRAILING_SLASH_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LINKAT_SYMLINK_NOTSUP$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_LINKAT], [test $HAVE_LINKAT = 0 || test $REPLACE_LINKAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_LINKAT], [test $HAVE_LINKAT = 0 || test $REPLACE_LINKAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LINKAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LINKAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LINKAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LINKAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_LINKAT], [
    AC_LIBOBJ([at-func2])
  ])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([at-func2.c])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([linkat])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([linkat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[linkat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([linkat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LINKAT$])
m4trace:configure.ac:63: -1- gl_LOCALCHARSET
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALCHARSET_TESTS_ENVIRONMENT$])
m4trace:configure.ac:63: -1- gl_LOCALE_H
m4trace:configure.ac:63: -1- gl_LOCALE_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NEWLOCALE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DUPLOCALE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FREELOCALE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOCALECONV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SETLOCALE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_NEWLOCALE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_DUPLOCALE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FREELOCALE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRUCT_LCONV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALENAME_ENHANCE_LOCALE_FUNCS$])
m4trace:configure.ac:63: -1- gl_STDDEF_H
m4trace:configure.ac:63: -1- gl_STDDEF_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_NULL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MAX_ALIGN_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:63: -1- gt_TYPE_WCHAR_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([stddef.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([stddef.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([stddef.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_STDDEF_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDDEF_H$])
m4trace:configure.ac:63: -1- gl_LOCALE_T
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_xlocale_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" xlocale.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_XLOCALE_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^_LCONV_C99$])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([locale.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([locale.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([locale.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_LOCALE_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LOCALE_H$])
m4trace:configure.ac:63: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALECONV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOCALECONV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETLOCALE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SETLOCALE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETLOCALE_NULL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SETLOCALE_NULL$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUPLOCALE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_DUPLOCALE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALENAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOCALENAME$])
m4trace:configure.ac:63: -1- gl_FUNC_LOCALECONV
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_LOCALECONV], [test $REPLACE_LOCALECONV = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_LOCALECONV], [test $REPLACE_LOCALECONV = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LOCALECONV_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LOCALECONV_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LOCALECONV_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LOCALECONV_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_LOCALECONV], [
    gl_PREREQ_LOCALECONV
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_LOCALECONV
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_LCONV_DECIMAL_POINT$])
m4trace:configure.ac:63: -1- gl_LOCALE_MODULE_INDICATOR([localeconv])
m4trace:configure.ac:63: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([localeconv])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[localeconv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([localeconv])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LOCALECONV$])
m4trace:configure.ac:63: -1- gl_LOCK
m4trace:configure.ac:63: -1- gl_THREADLIB
m4trace:configure.ac:63: -1- gl_THREADLIB_BODY
m4trace:configure.ac:63: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" threads.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" threads.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_ISOC_AND_POSIX_THREADS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_POSIX_THREADS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_POSIX_THREADS_FROM_LIBC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_POSIX_THREADS_WEAK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:63: -1- gl_STDTHREADLIB_BODY
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" threads.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_THRD_CREATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBSTDTHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_ISOC_THREADS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_WINDOWS_THREADS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBTHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LTLIBTHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBMULTITHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LTLIBMULTITHREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK$])
m4trace:configure.ac:63: -1- gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_RECURSIVE$])
m4trace:configure.ac:63: -1- gl_PREREQ_LOCK
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([lock])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_LOCK$])
m4trace:configure.ac:63: -1- gl_FUNC_LSEEK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^LSEEK_PIPE_BROKEN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_LSEEK], [test $REPLACE_LSEEK = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_LSEEK], [test $REPLACE_LSEEK = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LSEEK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LSEEK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LSEEK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LSEEK_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([lseek])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lseek])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lseek]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([lseek])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LSEEK$])
m4trace:configure.ac:63: -1- gl_FUNC_LSTAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_LSTAT], [test $REPLACE_LSTAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_LSTAT], [test $REPLACE_LSTAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LSTAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LSTAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LSTAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LSTAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_LSTAT], [
    gl_PREREQ_LSTAT
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_LSTAT
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([lstat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lstat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([lstat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LSTAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:63: -1- gl_FUNC_MALLOC_GNU
m4trace:configure.ac:63: -1- _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC_FOR_MALLOC_GNU=1])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([malloc-gnu])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([malloc-gnu])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[malloc-gnu]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([malloc-gnu])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MALLOC_GNU$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([malloc-posix])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([malloc-posix])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[malloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([malloc-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MALLOC_POSIX$])
m4trace:configure.ac:63: -1- gl_MALLOCA
m4trace:configure.ac:63: -1- gl_EEMALLOC
m4trace:configure.ac:63: -1- _AC_FUNC_MALLOC_IF([gl_cv_func_malloc_0_nonnull=1], [gl_cv_func_malloc_0_nonnull=0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MALLOC_0_IS_NONNULL$])
m4trace:configure.ac:63: -1- gl_MATH_H
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([math.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([math.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_math_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" math.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([math.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_MATH_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_MATH_H$])
m4trace:configure.ac:63: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MBCHAR
m4trace:configure.ac:63: -1- gl_MBITER
m4trace:configure.ac:63: -1- gl_FUNC_MBRLEN
m4trace:configure.ac:63: -1- gl_FUNC_MBRTOWC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" threads.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MBSTATE_T_BROKEN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsinit"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrtowc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MBRTOWC_INCOMPLETE_STATE
m4trace:configure.ac:63: -1- gl_MBRTOWC_SANITYCHECK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrtowc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MBRTOWC$])
m4trace:configure.ac:63: -1- gl_MBRTOWC_NULL_ARG1
m4trace:configure.ac:63: -1- gl_MBRTOWC_NULL_ARG2
m4trace:configure.ac:63: -1- gl_MBRTOWC_RETVAL
m4trace:configure.ac:63: -1- gl_MBRTOWC_NUL_RETVAL
m4trace:configure.ac:63: -1- gl_MBRTOWC_STORES_INCOMPLETE
m4trace:configure.ac:63: -1- gl_MBRTOWC_EMPTY_INPUT
m4trace:configure.ac:63: -1- gl_MBRTOWC_C_LOCALE
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_NULL_ARG1_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_NULL_ARG2_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_RETVAL_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_NUL_RETVAL_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_STORES_INCOMPLETE_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_EMPTY_INPUT_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_IN_C_LOCALE_MAYBE_EILSEQ$])
m4trace:configure.ac:63: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_MBRTOWC$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbrlen], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrlen"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MBRLEN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MBRLEN], [test $HAVE_MBRLEN = 0 || test $REPLACE_MBRLEN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MBRLEN], [test $HAVE_MBRLEN = 0 || test $REPLACE_MBRLEN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBRLEN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBRLEN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBRLEN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBRLEN_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MBRLEN], [
    gl_PREREQ_MBRLEN
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MBRLEN
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([mbrlen])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbrlen])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbrlen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbrlen])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBRLEN$])
m4trace:configure.ac:63: -1- gl_FUNC_MBRTOWC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" threads.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MBSTATE_T_BROKEN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsinit"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrtowc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MBRTOWC_INCOMPLETE_STATE
m4trace:configure.ac:63: -1- gl_MBRTOWC_SANITYCHECK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrtowc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MBRTOWC$])
m4trace:configure.ac:63: -1- gl_MBRTOWC_NULL_ARG1
m4trace:configure.ac:63: -1- gl_MBRTOWC_NULL_ARG2
m4trace:configure.ac:63: -1- gl_MBRTOWC_RETVAL
m4trace:configure.ac:63: -1- gl_MBRTOWC_NUL_RETVAL
m4trace:configure.ac:63: -1- gl_MBRTOWC_STORES_INCOMPLETE
m4trace:configure.ac:63: -1- gl_MBRTOWC_EMPTY_INPUT
m4trace:configure.ac:63: -1- gl_MBRTOWC_C_LOCALE
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_NULL_ARG1_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_NULL_ARG2_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_RETVAL_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_NUL_RETVAL_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_STORES_INCOMPLETE_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_EMPTY_INPUT_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MBRTOWC_IN_C_LOCALE_MAYBE_EILSEQ$])
m4trace:configure.ac:63: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_MBRTOWC$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MBRTOWC], [test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MBRTOWC], [test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBRTOWC_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBRTOWC_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBRTOWC_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBRTOWC_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MBRTOWC], [
    if test $REPLACE_MBSTATE_T = 1; then
      AC_LIBOBJ([lc-charset-dispatch])
      AC_LIBOBJ([mbtowc-lock])
      gl_PREREQ_MBTOWC_LOCK
    fi
    gl_PREREQ_MBRTOWC
  ])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([lc-charset-dispatch.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([mbtowc-lock.c])
m4trace:configure.ac:63: -1- gl_PREREQ_MBTOWC_LOCK
m4trace:configure.ac:63: -1- gl_VISIBILITY
m4trace:configure.ac:63: -1- m4_pattern_allow([^CFLAG_VISIBILITY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:63: -1- gl_PREREQ_MBRTOWC
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([mbrtowc])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbrtowc])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbrtowc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbrtowc])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBRTOWC$])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([mbscasecmp])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbscasecmp])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbscasecmp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbscasecmp])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBSCASECMP$])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([mbschr])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbschr])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbschr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbschr])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBSCHR$])
m4trace:configure.ac:63: -1- gl_FUNC_MBSINIT
m4trace:configure.ac:63: -1- gl_MBSTATE_T_BROKEN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsinit"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrtowc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MBRTOWC_INCOMPLETE_STATE
m4trace:configure.ac:63: -1- gl_MBRTOWC_SANITYCHECK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsinit"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MBSINIT$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MBSINIT], [test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MBSINIT], [test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBSINIT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBSINIT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBSINIT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBSINIT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MBSINIT], [
    gl_PREREQ_MBSINIT
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MBSINIT
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([mbsinit])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbsinit])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbsinit]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbsinit])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBSINIT$])
m4trace:configure.ac:63: -1- gl_FUNC_MBSLEN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbslen], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbslen"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([mbslen])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbslen])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbslen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbslen])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBSLEN$])
m4trace:configure.ac:63: -1- gl_FUNC_MBSRTOWCS
m4trace:configure.ac:63: -1- gl_MBSTATE_T_BROKEN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsinit"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrtowc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MBRTOWC_INCOMPLETE_STATE
m4trace:configure.ac:63: -1- gl_MBRTOWC_SANITYCHECK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsrtowcs], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsrtowcs"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MBSRTOWCS$])
m4trace:configure.ac:63: -1- gl_MBSRTOWCS_WORKS
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MBSRTOWCS], [test $HAVE_MBSRTOWCS = 0 || test $REPLACE_MBSRTOWCS = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MBSRTOWCS], [test $HAVE_MBSRTOWCS = 0 || test $REPLACE_MBSRTOWCS = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBSRTOWCS_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBSRTOWCS_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBSRTOWCS_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBSRTOWCS_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MBSRTOWCS], [
    AC_LIBOBJ([mbsrtowcs-state])
    gl_PREREQ_MBSRTOWCS
  ])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([mbsrtowcs-state.c])
m4trace:configure.ac:63: -1- gl_PREREQ_MBSRTOWCS
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([mbsrtowcs])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbsrtowcs])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbsrtowcs]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbsrtowcs])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBSRTOWCS$])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([mbsstr])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbsstr])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbsstr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbsstr])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBSSTR$])
m4trace:configure.ac:63: -1- gl_MBSWIDTH
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" wchar.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_isascii], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" isascii"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsinit"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MBSWIDTH_IN_WCHAR_H$])
m4trace:configure.ac:63: -1- AC_TYPE_MBSTATE_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBSTATE_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^mbstate_t$])
m4trace:configure.ac:63: -1- gl_FUNC_MBTOWC
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MBTOWC$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MBTOWC], [test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MBTOWC], [test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBTOWC_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MBTOWC_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBTOWC_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MBTOWC_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MBTOWC], [
    gl_PREREQ_MBTOWC
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MBTOWC
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([mbtowc])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbtowc])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbtowc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbtowc])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MBTOWC$])
m4trace:configure.ac:63: -1- gl_MBITER
m4trace:configure.ac:63: -1- gl_MEMCASECMP
m4trace:configure.ac:63: -1- gl_FUNC_MEMCHR
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- m4_pattern_allow([^MAP_ANONYMOUS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MAP_ANONYMOUS$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MEMCHR], [test $REPLACE_MEMCHR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MEMCHR], [test $REPLACE_MEMCHR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MEMCHR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MEMCHR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMCHR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMCHR_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MEMCHR], [
    gl_PREREQ_MEMCHR
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MEMCHR
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_BP_SYM_H$])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([memchr])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memchr])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[memchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([memchr])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MEMCHR$])
m4trace:configure.ac:63: -1- gl_MEMCOLL
m4trace:configure.ac:63: -1- gl_FUNC_MEMPCPY
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MEMPCPY], [test $HAVE_MEMPCPY = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MEMPCPY], [test $HAVE_MEMPCPY = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MEMPCPY_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MEMPCPY_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMPCPY_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMPCPY_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MEMPCPY], [
    gl_PREREQ_MEMPCPY
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MEMPCPY
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([mempcpy])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mempcpy])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mempcpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mempcpy])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MEMPCPY$])
m4trace:configure.ac:63: -1- gl_FUNC_MEMRCHR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_memrchr], [_AC_CHECK_DECLS([memrchr])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MEMRCHR$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MEMRCHR], [test $ac_cv_func_memrchr = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MEMRCHR], [test $ac_cv_func_memrchr = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MEMRCHR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MEMRCHR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMRCHR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMRCHR_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MEMRCHR], [
    gl_PREREQ_MEMRCHR
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MEMRCHR
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([memrchr])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memrchr])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[memrchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([memrchr])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MEMRCHR$])
m4trace:configure.ac:63: -1- gl_MGETGROUPS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getgrouplist], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getgrouplist"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MINMAX
m4trace:configure.ac:63: -1- gl_PREREQ_MINMAX
m4trace:configure.ac:63: -1- gl_MINMAX_IN_HEADER([limits.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MINMAX_IN_LIMITS_H$])
m4trace:configure.ac:63: -1- gl_MINMAX_IN_HEADER([sys/param.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MINMAX_IN_SYS_PARAM_H$])
m4trace:configure.ac:63: -1- gl_MKANCESDIRS
m4trace:configure.ac:63: -1- gl_FUNC_MKDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_MKDIR_DOT_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MKDIR], [test $REPLACE_MKDIR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MKDIR], [test $REPLACE_MKDIR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKDIR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKDIR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKDIR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKDIR_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([mkdir])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkdir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkdir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKDIR$])
m4trace:configure.ac:63: -1- gl_MKDIR_PARENTS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchmod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchmod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_MKDIRAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mkdirat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mkdirat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MKDIRAT], [test $HAVE_MKDIRAT = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MKDIRAT], [test $HAVE_MKDIRAT = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKDIRAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKDIRAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKDIRAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKDIRAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MKDIRAT], [
    gl_PREREQ_MKDIRAT
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MKDIRAT
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([mkdirat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkdirat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkdirat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkdirat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKDIRAT$])
m4trace:configure.ac:63: -1- gl_FUNC_MKFIFO
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_MKFIFO$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MKFIFO_TRAILING_SLASH_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MKFIFO], [test $HAVE_MKFIFO = 0 || test $REPLACE_MKFIFO = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MKFIFO], [test $HAVE_MKFIFO = 0 || test $REPLACE_MKFIFO = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKFIFO_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKFIFO_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKFIFO_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKFIFO_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([mkfifo])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkfifo])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkfifo]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkfifo])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKFIFO$])
m4trace:configure.ac:63: -1- gl_FUNC_MKFIFOAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mkfifoat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mkfifoat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mknodat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mknodat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MKFIFOAT], [test $HAVE_MKFIFOAT = 0 || test $REPLACE_MKFIFOAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MKFIFOAT], [test $HAVE_MKFIFOAT = 0 || test $REPLACE_MKFIFOAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKFIFOAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKFIFOAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKFIFOAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKFIFOAT_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MKNODAT], [test $HAVE_MKNODAT = 0 || test $REPLACE_MKNODAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MKNODAT], [test $HAVE_MKNODAT = 0 || test $REPLACE_MKNODAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKNODAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKNODAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKNODAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKNODAT_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([mkfifoat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkfifoat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkfifoat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkfifoat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKFIFOAT$])
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([mknodat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mknodat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mknodat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mknodat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKNODAT$])
m4trace:configure.ac:63: -1- gl_FUNC_MKNOD
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mknod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mknod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MKNOD_FIFO_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MKNOD], [test $HAVE_MKNOD = 0 || test $REPLACE_MKNOD = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MKNOD], [test $HAVE_MKNOD = 0 || test $REPLACE_MKNOD = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKNOD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKNOD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKNOD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKNOD_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([mknod])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mknod])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mknod]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mknod])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKNOD$])
m4trace:configure.ac:63: -1- gl_FUNC_MKOSTEMP
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mkostemp], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mkostemp"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MKOSTEMP], [test $HAVE_MKOSTEMP = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MKOSTEMP], [test $HAVE_MKOSTEMP = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKOSTEMP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKOSTEMP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKOSTEMP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKOSTEMP_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MKOSTEMP], [
    gl_PREREQ_MKOSTEMP
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MKOSTEMP
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([mkostemp])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_MKOSTEMP$])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([mkostemp])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkostemp])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkostemp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkostemp])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKOSTEMP$])
m4trace:configure.ac:63: -1- gl_FUNC_MKSTEMP
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mkstemp], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mkstemp"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MKSTEMP], [test $HAVE_MKSTEMP = 0 || test $REPLACE_MKSTEMP = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MKSTEMP], [test $HAVE_MKSTEMP = 0 || test $REPLACE_MKSTEMP = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKSTEMP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MKSTEMP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKSTEMP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKSTEMP_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MKSTEMP], [
    gl_PREREQ_MKSTEMP
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MKSTEMP
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([mkstemp])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkstemp])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkstemp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkstemp])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKSTEMP$])
m4trace:configure.ac:63: -1- gl_FUNC_MKTIME
m4trace:configure.ac:63: -1- gl_TIME_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LOCALTIME_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NANOSLEEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRPTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TIMEGM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TIMESPEC_GET$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TIMESPEC_GETRES$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TIMEZONE_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_CTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOCALTIME_R$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_MKTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_NANOSLEEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRFTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TIMEGM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_TZSET$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_GMTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_LOCALTIME$])
m4trace:configure.ac:63: -1- gl_FUNC_MKTIME_WORKS
m4trace:configure.ac:63: -1- gl_TIME_T_IS_SIGNED
m4trace:configure.ac:63: -1- m4_pattern_allow([^TIME_T_IS_SIGNED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_MKTIME_WORKING$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_MKTIME_WINDOWS$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([mktime.c])
m4trace:configure.ac:63: -1- gl_PREREQ_MKTIME
m4trace:configure.ac:63: -1- gl_TIME_MODULE_INDICATOR([mktime])
m4trace:configure.ac:63: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CTIME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKTIME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MKTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALTIME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LOCALTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NANOSLEEP])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_NANOSLEEP$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRFTIME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRFTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPTIME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_STRPTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMEGM])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TIMEGM$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GET])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TIMESPEC_GET$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GETRES])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TIMESPEC_GETRES$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_R])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TIME_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_RZ])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TIME_RZ$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZSET])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TZSET$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TZSET], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_TZSET$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mktime])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mktime]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([mktime])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_MKTIME$])
m4trace:configure.ac:63: -1- gl_FUNC_MKTIME_INTERNAL
m4trace:configure.ac:63: -1- m4_pattern_allow([^mktime_internal$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_MKTIME_INTERNAL$])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([mktime.c])
m4trace:configure.ac:63: -1- gl_PREREQ_MKTIME
m4trace:configure.ac:63: -1- gl_MODECHANGE
m4trace:configure.ac:63: -1- gl_MOUNTLIST
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LISTMNTENT$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_statvfs_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/statvfs.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_UCRED_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_MOUNT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_FSSTAT_F_FSTYPENAME$])
m4trace:configure.ac:63: -1- AC_FUNC_GETMNTENT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETMNTENT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_VMOUNT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_GETMNTENT1$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_GETEXTMNTENT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_GETMNTENT2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_HASMNTOPT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_GETFSSTAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_FREAD_FSTYP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_GETMNTINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_GETMNTINFO2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FS_INFO_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_FS_STAT_DEV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STATVFS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MOUNTED_INTERIX_STATVFS$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MOUNTLIST], [test $gl_cv_list_mounted_fs = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MOUNTLIST], [test $gl_cv_list_mounted_fs = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MOUNTLIST_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MOUNTLIST_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MOUNTLIST_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MOUNTLIST_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_MOUNTLIST], [
    gl_PREREQ_MOUNTLIST_EXTRA
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_MOUNTLIST_EXTRA
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_MNTENT_H$])
m4trace:configure.ac:63: -1- AC_HEADER_MAJOR([])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/types.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MAJOR_IN_MKDEV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^MAJOR_IN_SYSMACROS$])
m4trace:configure.ac:63: -1- gl_FSTYPENAME
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STATFS_F_FSTYPENAME$])
m4trace:configure.ac:63: -1- gl_MPSORT
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MSVC_INVAL], [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MSVC_INVAL], [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MSVC_INVAL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MSVC_INVAL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MSVC_INVAL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MSVC_INVAL_FALSE])
m4trace:configure.ac:63: -1- gl_MSVC_NOTHROW
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_MSVC_NOTHROW], [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_MSVC_NOTHROW], [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MSVC_NOTHROW_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_MSVC_NOTHROW_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MSVC_NOTHROW_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MSVC_NOTHROW_FALSE])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([msvc-nothrow])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_MSVC_NOTHROW$])
m4trace:configure.ac:63: -1- gl_MULTIARCH
m4trace:configure.ac:63: -1- gl_FUNC_NANOSLEEP
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_NANOSLEEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_BUG_BIG_NANOSLEEP$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_NANOSLEEP], [test $HAVE_NANOSLEEP = 0 || test $REPLACE_NANOSLEEP = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_NANOSLEEP], [test $HAVE_NANOSLEEP = 0 || test $REPLACE_NANOSLEEP = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_NANOSLEEP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_NANOSLEEP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_NANOSLEEP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_NANOSLEEP_FALSE])
m4trace:configure.ac:63: -1- gl_TIME_MODULE_INDICATOR([nanosleep])
m4trace:configure.ac:63: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([nanosleep])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[nanosleep]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([nanosleep])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_NANOSLEEP$])
m4trace:configure.ac:63: -1- gl_NETDB_H
m4trace:configure.ac:63: -1- gl_NETDB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_HEADER_NETINET_IN
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NETINET_IN_H$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([netinet/in.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([netinet/in.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_netinet_in_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netinet/in.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([netinet/in.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_NETINET_IN_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_NETINET_IN_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NETINET_IN_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([netinet/in.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NETINET_IN_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_NETINET_IN_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_NETINET_IN_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_NETINET_IN_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_NETINET_IN_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_NETINET_IN_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_NETINET_IN_H_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_NL_LANGINFO
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_nl_langinfo], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" nl_langinfo"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" threads.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUNC_NL_LANGINFO_YESEXPR_WORKS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NL_LANGINFO_MTSAFE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_NL_LANGINFO$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_NL_LANGINFO$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO], [test $HAVE_NL_LANGINFO = 0 || test $REPLACE_NL_LANGINFO = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO], [test $HAVE_NL_LANGINFO = 0 || test $REPLACE_NL_LANGINFO = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_NL_LANGINFO_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_NL_LANGINFO_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_NL_LANGINFO_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_NL_LANGINFO_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO_LOCK], [test $REPLACE_NL_LANGINFO = 1 && test $NL_LANGINFO_MTSAFE = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO_LOCK], [test $REPLACE_NL_LANGINFO = 1 && test $NL_LANGINFO_MTSAFE = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_NL_LANGINFO_LOCK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_NL_LANGINFO_LOCK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_NL_LANGINFO_LOCK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_NL_LANGINFO_LOCK_FALSE])
m4trace:configure.ac:63: -1- gl_PREREQ_NL_LANGINFO_LOCK
m4trace:configure.ac:63: -1- gl_VISIBILITY
m4trace:configure.ac:63: -1- m4_pattern_allow([^CFLAG_VISIBILITY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:63: -1- gl_LANGINFO_MODULE_INDICATOR([nl_langinfo])
m4trace:configure.ac:63: -1- gl_LANGINFO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([nl_langinfo])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[nl_langinfo]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([nl_langinfo])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_NL_LANGINFO$])
m4trace:configure.ac:63: -1- gl_NPROC
m4trace:configure.ac:63: -1- gl_PREREQ_NPROC
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_SYSCTL_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SCHED_GETAFFINITY_LIKE_GLIBC$])
m4trace:configure.ac:63: -1- gl_FUNC_GNU_STRFTIME
m4trace:configure.ac:63: -1- m4_pattern_allow([^TM_IN_SYS_TIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_TM_TM_ZONE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TM_ZONE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TZNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TZNAME$])
m4trace:configure.ac:63: -1- gl_TM_GMTOFF
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TM_GMTOFF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^my_strftime$])
m4trace:configure.ac:63: -1- gl_FUNC_OBSTACK
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OBSTACK$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_OBSTACK], [test "$gl_cv_func_obstack" != yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_OBSTACK], [test "$gl_cv_func_obstack" != yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_OBSTACK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_OBSTACK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OBSTACK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OBSTACK_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_OPEN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_OPEN_TRAILING_SLASH_BUG
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^OPEN_TRAILING_SLASH_BUG$])
m4trace:configure.ac:63: -1- gl_TEST_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_OPEN], [test $REPLACE_OPEN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_OPEN], [test $REPLACE_OPEN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_OPEN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_OPEN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPEN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPEN_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_OPEN], [
    gl_PREREQ_OPEN
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_OPEN
m4trace:configure.ac:63: -1- gl_FCNTL_MODULE_INDICATOR([open])
m4trace:configure.ac:63: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([open])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[open]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([open])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_OPEN$])
m4trace:configure.ac:63: -1- gl_FUNC_OPENAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_openat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" openat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_OPENAT], [test $HAVE_OPENAT = 0 || test $REPLACE_OPENAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_OPENAT], [test $HAVE_OPENAT = 0 || test $REPLACE_OPENAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_OPENAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_OPENAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPENAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPENAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_OPENAT], [
    gl_PREREQ_OPENAT
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_OPENAT
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([openat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_OPENAT$])
m4trace:configure.ac:63: -1- gl_FCNTL_MODULE_INDICATOR([openat])
m4trace:configure.ac:63: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([openat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[openat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([openat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_OPENAT$])
m4trace:configure.ac:63: -1- gl_OPENAT_SAFER
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([openat-safer])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_OPENAT_SAFER$])
m4trace:configure.ac:63: -1- gl_FUNC_OPENDIR
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_OPENDIR$])
m4trace:configure.ac:63: -1- gl_TEST_FCHDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_OPENDIR], [test $HAVE_OPENDIR = 0 || test $REPLACE_OPENDIR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_OPENDIR], [test $HAVE_OPENDIR = 0 || test $REPLACE_OPENDIR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_OPENDIR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_OPENDIR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPENDIR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPENDIR_FALSE])
m4trace:configure.ac:63: -1- gl_DIRENT_MODULE_INDICATOR([opendir])
m4trace:configure.ac:63: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([opendir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[opendir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([opendir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_OPENDIR$])
m4trace:configure.ac:63: -1- gl_PARSE_DATETIME
m4trace:configure.ac:63: -1- gl_PROG_BISON([PARSE_DATETIME_BISON], [2.4])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PARSE_DATETIME_BISON$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PARSE_DATETIME_BISON$])
m4trace:configure.ac:63: -1- gl_BISON
m4trace:configure.ac:63: -1- m4_pattern_allow([^YACC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^YFLAGS$])
m4trace:configure.ac:63: -1- gl_C_COMPOUND_LITERALS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COMPOUND_LITERALS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_TM_TM_ZONE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TM_ZONE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TZNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TZNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_PARSE_DATETIME2$])
m4trace:configure.ac:63: -1- gl_PATHMAX
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_PERL
m4trace:configure.ac:63: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:63: -1- gl_PHYSMEM
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_SYSCTL_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SYSINFO_MEM_UNIT$])
m4trace:configure.ac:63: -1- gl_SYS__SYSTEM_CONFIGURATION
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE__SYSTEM_CONFIGURATION$])
m4trace:configure.ac:63: -1- gl_FUNC_PIPE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pipe], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pipe"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PIPE], [test $HAVE_PIPE = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PIPE], [test $HAVE_PIPE = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PIPE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PIPE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PIPE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PIPE_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([pipe])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pipe])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pipe]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([pipe])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PIPE$])
m4trace:configure.ac:63: -1- gl_FUNC_PIPE2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pipe2], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pipe2"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([pipe2])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pipe2])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pipe2]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([pipe2])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PIPE2$])
m4trace:configure.ac:63: -1- gl_POSIX_SHELL
m4trace:configure.ac:63: -1- m4_pattern_allow([^POSIX_SHELL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PREFERABLY_POSIX_SHELL$])
m4trace:configure.ac:63: -1- gl_FUNC_POSIX_MEMALIGN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_posix_memalign], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" posix_memalign"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_POSIX_MEMALIGN], [test $REPLACE_POSIX_MEMALIGN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_POSIX_MEMALIGN], [test $REPLACE_POSIX_MEMALIGN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_POSIX_MEMALIGN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_POSIX_MEMALIGN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_POSIX_MEMALIGN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_POSIX_MEMALIGN_FALSE])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([posix_memalign])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_memalign])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_memalign]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_memalign])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_MEMALIGN$])
m4trace:configure.ac:63: -1- gl_POSIXTM
m4trace:configure.ac:63: -1- gl_POSIXVER
m4trace:configure.ac:63: -1- gl_DEFAULT_POSIX2_VERSION
m4trace:configure.ac:63: -1- m4_pattern_allow([^DEFAULT_POSIX2_VERSION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^DEFAULT_POSIX2_VERSION$])
m4trace:configure.ac:63: -1- gl_FUNC_PRINTF_FREXP
m4trace:configure.ac:63: -1- gl_FUNC_FREXP_WORKS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FREXP_IN_LIBC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LDEXP_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_FUNC_PRINTF_FREXPL
m4trace:configure.ac:63: -1- gl_CHECK_FREXPL_NO_LIBM
m4trace:configure.ac:63: -1- gl_FUNC_FREXPL_WORKS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FREXPL_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_CHECK_LDEXPL_NO_LIBM
m4trace:configure.ac:63: -1- gl_FUNC_LDEXPL_WORKS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LDEXPL_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_PRIV_SET
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETPPRIV$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_priv_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" priv.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_NAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME$])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--keyword='proper_name:1,\"This is a proper name. See the gettext manual, section Names.\"'])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--keyword='proper_name_utf8:1,\"This is a proper name. See the gettext manual, section Names.\"'])
m4trace:configure.ac:63: -1- gl_FUNC_PSELECT
m4trace:configure.ac:63: -1- gl_SYS_SELECT_H
m4trace:configure.ac:63: -1- gl_SYS_SELECT_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PSELECT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PSELECT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SELECT$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/select.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/select.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/select.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/select.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_SELECT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_SELECT_H$])
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pselect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pselect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PSELECT], [test $HAVE_PSELECT = 0 || test $REPLACE_PSELECT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PSELECT], [test $HAVE_PSELECT = 0 || test $REPLACE_PSELECT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PSELECT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PSELECT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PSELECT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PSELECT_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_SELECT_MODULE_INDICATOR([pselect])
m4trace:configure.ac:63: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PSELECT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PSELECT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SELECT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SELECT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pselect])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pselect]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([pselect])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PSELECT$])
m4trace:configure.ac:63: -1- gl_PTHREAD_COND
m4trace:configure.ac:63: -1- gl_PTHREAD_H
m4trace:configure.ac:63: -1- gl_PTHREAD_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SPINLOCK_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_CREATE_DETACHED$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_RECURSIVE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_ROBUST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_PROCESS_SHARED$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_CREATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_GETDETACHSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_SETDETACHSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SELF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_EQUAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_DETACH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_JOIN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_ONCE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_GETTYPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_SETTYPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_GETROBUST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_SETROBUST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_LOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_TRYLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_UNLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCKATTR_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCKATTR_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_RDLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_WRLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TRYRDLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TRYWRLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_UNLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_CONDATTR_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_CONDATTR_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_WAIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_TIMEDWAIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_SIGNAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_BROADCAST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_KEY_CREATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SETSPECIFIC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_GETSPECIFIC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_KEY_DELETE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_LOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_TRYLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_UNLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_CREATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_GETDETACHSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_SETDETACHSTATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_SELF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_EQUAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_DETACH$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_JOIN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_ONCE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_GETTYPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_SETTYPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_GETROBUST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_SETROBUST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_LOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_TRYLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_UNLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCKATTR_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCKATTR_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_RDLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_WRLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TRYRDLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TRYWRLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_UNLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_CONDATTR_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_CONDATTR_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_WAIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_TIMEDWAIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_SIGNAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_BROADCAST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_DESTROY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_KEY_CREATE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_SETSPECIFIC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_GETSPECIFIC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_KEY_DELETE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_INIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_LOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_TRYLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_UNLOCK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_DESTROY$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([pthread.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([pthread.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_pthread_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" pthread.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([pthread.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_PTHREAD_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_PTHREAD_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SPINLOCK_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_PTHREAD$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_COND], [test $HAVE_PTHREAD_COND_INIT = 0 || test $REPLACE_PTHREAD_COND_INIT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PTHREAD_COND], [test $HAVE_PTHREAD_COND_INIT = 0 || test $REPLACE_PTHREAD_COND_INIT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_COND_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_COND_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_COND_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_COND_FALSE])
m4trace:configure.ac:63: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-cond])
m4trace:configure.ac:63: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_THREAD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_THREAD$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_ONCE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_ONCE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_MUTEX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_RWLOCK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_RWLOCK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_COND])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_COND$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_TSS])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_TSS$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SPIN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_SPIN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX_TIMEDLOCK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-cond])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-cond]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-cond])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_COND$])
m4trace:configure.ac:63: -1- gl_PTHREAD_H
m4trace:configure.ac:63: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_PTHREAD_MUTEX
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_MUTEXATTR_ROBUST_UNIMPLEMENTED$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_MUTEX], [test $HAVE_PTHREAD_MUTEX_INIT = 0 || test $REPLACE_PTHREAD_MUTEX_INIT = 1 || test $HAVE_PTHREAD_MUTEXATTR_GETROBUST = 0 || test $REPLACE_PTHREAD_MUTEXATTR_GETROBUST = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PTHREAD_MUTEX], [test $HAVE_PTHREAD_MUTEX_INIT = 0 || test $REPLACE_PTHREAD_MUTEX_INIT = 1 || test $HAVE_PTHREAD_MUTEXATTR_GETROBUST = 0 || test $REPLACE_PTHREAD_MUTEXATTR_GETROBUST = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_MUTEX_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_MUTEX_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_MUTEX_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_MUTEX_FALSE])
m4trace:configure.ac:63: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-mutex])
m4trace:configure.ac:63: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-mutex])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-mutex]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-mutex])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_MUTEX$])
m4trace:configure.ac:63: -1- gl_PTHREAD_THREAD
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_CREATE_IS_INLINE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_THREAD], [test $HAVE_PTHREAD_CREATE = 0 || test $REPLACE_PTHREAD_CREATE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PTHREAD_THREAD], [test $HAVE_PTHREAD_CREATE = 0 || test $REPLACE_PTHREAD_CREATE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_THREAD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_THREAD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_THREAD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_THREAD_FALSE])
m4trace:configure.ac:63: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-thread])
m4trace:configure.ac:63: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-thread])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-thread]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-thread])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_THREAD$])
m4trace:configure.ac:63: -1- gl_FUNC_PTHREAD_MUTEX_TIMEDLOCK
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_MUTEX_TIMEDLOCK], [test $HAVE_PTHREAD_T = 1 && test $HAVE_PTHREAD_MUTEX_TIMEDLOCK = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PTHREAD_MUTEX_TIMEDLOCK], [test $HAVE_PTHREAD_T = 1 && test $HAVE_PTHREAD_MUTEX_TIMEDLOCK = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_MUTEX_TIMEDLOCK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_MUTEX_TIMEDLOCK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_MUTEX_TIMEDLOCK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_MUTEX_TIMEDLOCK_FALSE])
m4trace:configure.ac:63: -1- gl_PTHREAD_MODULE_INDICATOR([pthread_mutex_timedlock])
m4trace:configure.ac:63: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread_mutex_timedlock])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread_mutex_timedlock]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread_mutex_timedlock])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:63: -1- gl_FUNC_PTHREAD_SIGMASK
m4trace:configure.ac:63: -1- gl_SIGNAL_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_POSIX_SIGNALBLOCKING$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SIGMASK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGACTION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TYPE_VOLATILE_SIG_ATOMIC_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGHANDLER_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_PTHREAD_SIGMASK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_RAISE$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pthread_sigmask], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pthread_sigmask"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_PTHREAD_SIGMASK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_SIGMASK_INEFFECTIVE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_SIGMASK_FAILS_WITH_ERRNO$])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_SIGMASK_UNBLOCK_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_SIGMASK], [test $HAVE_PTHREAD_SIGMASK = 0 || test $REPLACE_PTHREAD_SIGMASK = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PTHREAD_SIGMASK], [test $HAVE_PTHREAD_SIGMASK = 0 || test $REPLACE_PTHREAD_SIGMASK = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_SIGMASK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_SIGMASK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_SIGMASK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_SIGMASK_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_PTHREAD_SIGMASK], [
    gl_PREREQ_PTHREAD_SIGMASK
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_PTHREAD_SIGMASK
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_SIGMASK$])
m4trace:configure.ac:63: -1- gl_SIGNAL_MODULE_INDICATOR([pthread_sigmask])
m4trace:configure.ac:63: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SIGMASK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_SIGMASK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAISE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RAISE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNAL_H_SIGPIPE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SIGNAL_H_SIGPIPE$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGPROCMASK])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SIGPROCMASK$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGACTION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SIGACTION$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread_sigmask])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread_sigmask]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread_sigmask])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_SIGMASK$])
m4trace:configure.ac:63: -1- gl_FUNC_PUTENV
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PUTENV], [test $REPLACE_PUTENV = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PUTENV], [test $REPLACE_PUTENV = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PUTENV_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PUTENV_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PUTENV_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PUTENV_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_PUTENV], [
    gl_PREREQ_PUTENV
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_PUTENV
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL__PUTENV$])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([putenv])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putenv])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putenv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([putenv])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PUTENV$])
m4trace:configure.ac:63: -1- gl_QUOTE
m4trace:configure.ac:63: -1- gl_QUOTEARG
m4trace:configure.ac:63: -1- gl_FUNC_RAISE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:63: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:63: -1- gl_CHECK_TYPE_SIGSET_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_RAISE], [test $HAVE_RAISE = 0 || test $REPLACE_RAISE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_RAISE], [test $HAVE_RAISE = 0 || test $REPLACE_RAISE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RAISE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RAISE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RAISE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RAISE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_RAISE], [
    gl_PREREQ_RAISE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_RAISE
m4trace:configure.ac:63: -1- gl_SIGNAL_MODULE_INDICATOR([raise])
m4trace:configure.ac:63: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([raise])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[raise]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([raise])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_RAISE$])
m4trace:configure.ac:63: -1- gl_FUNC_RAWMEMCHR
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_RAWMEMCHR], [test $HAVE_RAWMEMCHR = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_RAWMEMCHR], [test $HAVE_RAWMEMCHR = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RAWMEMCHR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RAWMEMCHR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RAWMEMCHR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RAWMEMCHR_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_RAWMEMCHR], [
    gl_PREREQ_RAWMEMCHR
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_RAWMEMCHR
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([rawmemchr])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rawmemchr])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rawmemchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([rawmemchr])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_RAWMEMCHR$])
m4trace:configure.ac:63: -1- gl_FUNC_READ
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_READ], [test $REPLACE_READ = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_READ], [test $REPLACE_READ = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READ_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READ_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READ_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READ_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_READ], [
    gl_PREREQ_READ
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_READ
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([read])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([read])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[read]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([read])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_READ$])
m4trace:configure.ac:63: -1- gl_PREREQ_READ_FILE
m4trace:configure.ac:63: -1- gl_FUNC_READDIR
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_READDIR$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_READDIR], [test $HAVE_READDIR = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_READDIR], [test $HAVE_READDIR = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READDIR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READDIR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READDIR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READDIR_FALSE])
m4trace:configure.ac:63: -1- gl_DIRENT_MODULE_INDICATOR([readdir])
m4trace:configure.ac:63: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readdir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[readdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([readdir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_READDIR$])
m4trace:configure.ac:63: -1- gl_FUNC_READLINK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_readlink], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" readlink"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^READLINK_TRAILING_SLASH_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^READLINK_TRUNCATE_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_READLINK], [test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_READLINK], [test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READLINK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READLINK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READLINK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READLINK_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_READLINK], [
    gl_PREREQ_READLINK
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_READLINK
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([readlink])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readlink])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[readlink]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([readlink])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_READLINK$])
m4trace:configure.ac:63: -1- gl_FUNC_READLINKAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_readlinkat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" readlinkat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_READLINKAT], [test $HAVE_READLINKAT = 0 || test $REPLACE_READLINKAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_READLINKAT], [test $HAVE_READLINKAT = 0 || test $REPLACE_READLINKAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READLINKAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READLINKAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READLINKAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READLINKAT_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([readlinkat])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readlinkat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[readlinkat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([readlinkat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_READLINKAT$])
m4trace:configure.ac:63: -1- gl_READTOKENS
m4trace:configure.ac:63: -1- gl_READUTMP
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_utmp_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" utmp.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_utmpx_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" utmpx.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_utmpname], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" utmpname"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_utmpxname], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" utmpxname"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETUTENT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_USER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_USER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_NAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_NAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_TYPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_TYPE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_PID$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_PID$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_ID$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_ID$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_EXIT_UT_EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_EXIT_UT_EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_EXIT_E_EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_EXIT_E_EXIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_EXIT_UT_TERMINATION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_EXIT_UT_TERMINATION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMPX_UT_EXIT_E_TERMINATION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTMP_UT_EXIT_E_TERMINATION$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_READUTMP], [test $ac_cv_header_utmp_h = yes || test $ac_cv_header_utmpx_h = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_READUTMP], [test $ac_cv_header_utmp_h = yes || test $ac_cv_header_utmpx_h = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READUTMP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_READUTMP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READUTMP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READUTMP_FALSE])
m4trace:configure.ac:63: -1- gl_FUNC_REALLOC_GNU
m4trace:configure.ac:63: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:63: -1- _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC_FOR_REALLOC_GNU=1])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([realloc-gnu])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([realloc-gnu])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[realloc-gnu]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([realloc-gnu])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_REALLOC_GNU$])
m4trace:configure.ac:63: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:63: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([realloc-posix])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([realloc-posix])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[realloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([realloc-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_REALLOC_POSIX$])
m4trace:configure.ac:63: -1- gl_FUNC_REALLOCARRAY
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_REALLOCARRAY], [test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_REALLOCARRAY], [test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_REALLOCARRAY_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_REALLOCARRAY_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REALLOCARRAY_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REALLOCARRAY_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_REALLOCARRAY], [
    gl_PREREQ_REALLOCARRAY
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_REALLOCARRAY
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_REALLOCARRAY$])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([reallocarray])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[reallocarray]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([reallocarray])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_REALLOCARRAY$])
m4trace:configure.ac:63: -1- gl_REGEX
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_malloc_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" malloc.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^_REGEX_INCLUDE_LIMITS_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^_REGEX_LARGE_OFFSETS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_syntax_options$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_set_syntax$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_compile_pattern$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_compile_fastmap$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_search$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_search_2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_match$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_match_2$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_set_registers$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_comp$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^re_exec$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^regcomp$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^regexec$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^regerror$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^regfree$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_REGEX], [test $ac_use_included_regex = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_REGEX], [test $ac_use_included_regex = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_REGEX_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_REGEX_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REGEX_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REGEX_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_REGEX], [
    gl_PREREQ_REGEX
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_REGEX
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LIBINTL_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_isblank], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" isblank"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_iswctype], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" iswctype"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ISBLANK$])
m4trace:configure.ac:63: -1- gl_FUNC_REMOVE
m4trace:configure.ac:63: -1- gl_FUNC_RMDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_FUNC_UNLINK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^UNLINK_PARENT_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_REMOVE], [test $REPLACE_REMOVE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_REMOVE], [test $REPLACE_REMOVE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_REMOVE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_REMOVE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REMOVE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REMOVE_FALSE])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([remove])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([remove])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[remove]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([remove])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_REMOVE$])
m4trace:configure.ac:63: -1- gl_FUNC_RENAME
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^RENAME_TRAILING_SLASH_DEST_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^RENAME_TRAILING_SLASH_SOURCE_BUG$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_link], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" link"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^RENAME_HARD_LINK_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^RENAME_DEST_EXISTS_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_RENAME], [test $REPLACE_RENAME = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_RENAME], [test $REPLACE_RENAME = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RENAME_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RENAME_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RENAME_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RENAME_FALSE])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([rename])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rename])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rename]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([rename])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_RENAME$])
m4trace:configure.ac:63: -1- gl_FUNC_RENAMEAT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LINUX_FS_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_renameat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" renameat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_renameat2], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" renameat2"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_RENAMEAT], [test $HAVE_RENAMEAT = 0 || test $REPLACE_RENAMEAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_RENAMEAT], [test $HAVE_RENAMEAT = 0 || test $REPLACE_RENAMEAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RENAMEAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RENAMEAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RENAMEAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RENAMEAT_FALSE])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([at-func2.c])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([renameat])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([renameat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[renameat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([renameat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_RENAMEAT$])
m4trace:configure.ac:63: -1- gl_FUNC_RENAMEAT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LINUX_FS_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_renameat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" renameat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_renameat2], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" renameat2"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([at-func2.c])
m4trace:configure.ac:63: -1- gl_FUNC_REWINDDIR
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_REWINDDIR$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_REWINDDIR], [test $HAVE_REWINDDIR = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_REWINDDIR], [test $HAVE_REWINDDIR = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_REWINDDIR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_REWINDDIR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REWINDDIR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REWINDDIR_FALSE])
m4trace:configure.ac:63: -1- gl_DIRENT_MODULE_INDICATOR([rewinddir])
m4trace:configure.ac:63: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rewinddir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rewinddir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([rewinddir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_REWINDDIR$])
m4trace:configure.ac:63: -1- gl_FUNC_RMDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_RMDIR], [test $REPLACE_RMDIR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_RMDIR], [test $REPLACE_RMDIR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RMDIR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RMDIR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RMDIR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RMDIR_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([rmdir])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rmdir])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rmdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([rmdir])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_RMDIR$])
m4trace:configure.ac:63: -1- gl_FUNC_RPMATCH
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_RPMATCH$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_RPMATCH], [test $HAVE_RPMATCH = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_RPMATCH], [test $HAVE_RPMATCH = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RPMATCH_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_RPMATCH_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RPMATCH_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RPMATCH_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_RPMATCH], [
    gl_PREREQ_RPMATCH
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_RPMATCH
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LANGINFO_YESEXPR$])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([rpmatch])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rpmatch])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rpmatch]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([rpmatch])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_RPMATCH$])
m4trace:configure.ac:63: -1- gl_PREREQ_SAFE_READ
m4trace:configure.ac:63: -1- gl_PREREQ_SAFE_WRITE
m4trace:configure.ac:63: -1- gl_PREREQ_SAFE_READ
m4trace:configure.ac:63: -1- gl_SAME
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fpathconf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fpathconf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_SAVE_CWD
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchdir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_SAVEDIR
m4trace:configure.ac:63: -1- gl_SAVEWD
m4trace:configure.ac:63: -1- gl_SCHED_H
m4trace:configure.ac:63: -1- gl_SCHED_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SCHED_YIELD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_SCHED_YIELD$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_cdefs_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/cdefs.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SCHED_H$])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([sched.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sched.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sched.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SCHED_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SCHED_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SCHED_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SCHED_PARAM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_CDEFS_H$])
m4trace:configure.ac:63: -1- gl_SCHED_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCHED_YIELD])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SCHED_YIELD$])
m4trace:configure.ac:63: -1- gl_FUNC_SELECT
m4trace:configure.ac:63: -1- gl_SOCKETS
m4trace:configure.ac:63: -1- gl_SOCKETLIB
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WINDOWS_SOCKETS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBSOCKET$])
m4trace:configure.ac:63: -1- gl_PREREQ_SOCKETS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/select.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SELECT$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SELECT], [test $REPLACE_SELECT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SELECT], [test $REPLACE_SELECT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SELECT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SELECT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SELECT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SELECT_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_SELECT_MODULE_INDICATOR([select])
m4trace:configure.ac:63: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([select])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[select]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([select])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SELECT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SELINUX_FLASK_H$])
m4trace:configure.ac:63: -1- gl_HEADERS_SELINUX_SELINUX_H
m4trace:configure.ac:63: -1- gl_LIBSELINUX
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SELINUX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SELINUX_SELINUX_H$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([selinux/selinux.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([selinux/selinux.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_selinux_selinux_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" selinux/selinux.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([selinux/selinux.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SELINUX_SELINUX_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SELINUX_SELINUX_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^getfilecon$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^lgetfilecon$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^fgetfilecon$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SELINUX_SELINUX_H$])
m4trace:configure.ac:63: -1- gl_HEADERS_SELINUX_CONTEXT_H
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SELINUX_CONTEXT_H$])
m4trace:configure.ac:63: -1- gl_HEADERS_SELINUX_LABEL_H
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SELINUX_LABEL_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([selinux/context.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SELINUX_CONTEXT_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_SELINUX_CONTEXT_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_SELINUX_CONTEXT_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_SELINUX_CONTEXT_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_SELINUX_CONTEXT_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_SELINUX_CONTEXT_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_SELINUX_CONTEXT_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([selinux/label.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SELINUX_LABEL_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_SELINUX_LABEL_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_SELINUX_LABEL_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_SELINUX_LABEL_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_SELINUX_LABEL_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_SELINUX_LABEL_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_SELINUX_LABEL_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETFILECON], [test "$with_selinux" != no && test "$ac_cv_header_selinux_selinux_h" = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETFILECON], [test "$with_selinux" != no && test "$ac_cv_header_selinux_selinux_h" = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETFILECON_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETFILECON_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETFILECON_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETFILECON_FALSE])
m4trace:configure.ac:63: -1- gl_SERVENT
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETSERVBYNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SERVENT_LIB$])
m4trace:configure.ac:63: -1- gl_FUNC_SETENV
m4trace:configure.ac:63: -1- gl_FUNC_SETENV_SEPARATE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_setenv], [_AC_CHECK_DECLS([setenv])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SETENV$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_setenv], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" setenv"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_PREREQ_SETENV
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SEARCH_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TSEARCH$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SETENV], [test $HAVE_SETENV = 0 || test $REPLACE_SETENV = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SETENV], [test $HAVE_SETENV = 0 || test $REPLACE_SETENV = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SETENV_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SETENV_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SETENV_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SETENV_FALSE])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([setenv])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([setenv])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setenv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([setenv])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SETENV$])
m4trace:configure.ac:63: -1- gl_FUNC_SETLOCALE_NULL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" threads.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SETLOCALE_NULL_ALL_MTSAFE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SETLOCALE_NULL_ONE_MTSAFE$])
m4trace:configure.ac:63: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SETLOCALE_NULL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SETLOCALE_LOCK], [test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SETLOCALE_LOCK], [test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SETLOCALE_LOCK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SETLOCALE_LOCK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SETLOCALE_LOCK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SETLOCALE_LOCK_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_SETLOCALE_LOCK], [
    gl_PREREQ_SETLOCALE_LOCK
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_SETLOCALE_LOCK
m4trace:configure.ac:63: -1- gl_VISIBILITY
m4trace:configure.ac:63: -1- m4_pattern_allow([^CFLAG_VISIBILITY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:63: -1- gl_LOCALE_MODULE_INDICATOR([setlocale_null])
m4trace:configure.ac:63: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([setlocale_null])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setlocale_null]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([setlocale_null])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SETLOCALE_NULL$])
m4trace:configure.ac:63: -1- gl_SETTIME
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_settimeofday], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" settimeofday"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_stime], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" stime"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_SIG2STR
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIG2STR$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SIG2STR], [test $ac_cv_func_sig2str = no])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SIG2STR], [test $ac_cv_func_sig2str = no])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SIG2STR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SIG2STR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIG2STR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIG2STR_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_SIG2STR], [
    gl_PREREQ_SIG2STR
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_SIG2STR
m4trace:configure.ac:63: -1- gl_SIGACTION
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_sigaction], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" sigaction"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SIGACTION], [test $HAVE_SIGACTION = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SIGACTION], [test $HAVE_SIGACTION = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SIGACTION_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SIGACTION_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGACTION_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGACTION_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_SIGACTION], [
    gl_PREREQ_SIGACTION
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_SIGACTION
m4trace:configure.ac:63: -1- gl_PREREQ_SIG_HANDLER_H
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_sigaltstack], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" sigaltstack"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_siginterrupt], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" siginterrupt"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:63: -1- gl_SIGNAL_MODULE_INDICATOR([sigaction])
m4trace:configure.ac:63: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigaction])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigaction]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigaction])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SIGACTION$])
m4trace:configure.ac:63: -1- gl_SIGNAL_H
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([signal.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([signal.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([signal.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SIGNAL_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H$])
m4trace:configure.ac:63: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SIGNBIT
m4trace:configure.ac:63: -1- gl_SIGNBIT_TEST_PROGRAM
m4trace:configure.ac:63: -1- gl_SIGNBIT_TEST_PROGRAM
m4trace:configure.ac:63: -1- gl_FLOAT_SIGN_LOCATION
m4trace:configure.ac:63: -1- gl_FLOATTYPE_SIGN_LOCATION([float], [gl_cv_cc_float_signbit], [f], [FLT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLT_SIGNBIT_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLT_SIGNBIT_BIT$])
m4trace:configure.ac:63: -1- gl_DOUBLE_SIGN_LOCATION
m4trace:configure.ac:63: -1- gl_FLOATTYPE_SIGN_LOCATION([double], [gl_cv_cc_double_signbit], [], [DBL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^DBL_SIGNBIT_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^DBL_SIGNBIT_BIT$])
m4trace:configure.ac:63: -1- gl_LONG_DOUBLE_SIGN_LOCATION
m4trace:configure.ac:63: -1- gl_FLOATTYPE_SIGN_LOCATION([long double], [gl_cv_cc_long_double_signbit], [L], [LDBL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LDBL_SIGNBIT_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LDBL_SIGNBIT_BIT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COPYSIGNF_IN_LIBC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COPYSIGN_IN_LIBC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_COPYSIGNL_IN_LIBC$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SIGNBIT3], [test $REPLACE_SIGNBIT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SIGNBIT3], [test $REPLACE_SIGNBIT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SIGNBIT3_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SIGNBIT3_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGNBIT3_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGNBIT3_FALSE])
m4trace:configure.ac:63: -1- gl_MATH_MODULE_INDICATOR([signbit])
m4trace:configure.ac:63: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([signbit])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[signbit]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([signbit])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SIGNBIT$])
m4trace:configure.ac:63: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SIGPROCMASK], [test $HAVE_POSIX_SIGNALBLOCKING = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SIGPROCMASK], [test $HAVE_POSIX_SIGNALBLOCKING = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SIGPROCMASK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SIGPROCMASK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGPROCMASK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGPROCMASK_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_SIGPROCMASK], [
    gl_PREREQ_SIGPROCMASK
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_SIGPROCMASK
m4trace:configure.ac:63: -1- gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
m4trace:configure.ac:63: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigprocmask])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigprocmask]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigprocmask])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SIGPROCMASK$])
m4trace:configure.ac:63: -1- gl_SIZE_MAX
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SIZE_MAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SMACK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SMACK$])
m4trace:configure.ac:63: -1- gl_FUNC_SNPRINTF
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SNPRINTF$])
m4trace:configure.ac:63: -1- gl_SNPRINTF_SIZE1
m4trace:configure.ac:63: -1- gl_SNPRINTF_PRESENCE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_snprintf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" snprintf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_SNPRINTF_RETVAL_C99
m4trace:configure.ac:63: -1- gl_PRINTF_POSITIONS
m4trace:configure.ac:63: -1- gl_REPLACE_SNPRINTF
m4trace:configure.ac:63: -1- gl_LIBSOURCES([snprintf.c])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_snprintf], [_AC_CHECK_DECLS([snprintf])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
m4trace:configure.ac:63: -1- gl_PREREQ_SNPRINTF
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_snprintf], [_AC_CHECK_DECLS([snprintf])])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([snprintf])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([snprintf])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[snprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([snprintf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SNPRINTF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([snprintf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_SNPRINTF$])
m4trace:configure.ac:63: -1- gl_TYPE_SOCKLEN_T
m4trace:configure.ac:63: -1- gl_SOCKET_HEADERS
m4trace:configure.ac:63: -1- m4_pattern_allow([^socklen_t$])
m4trace:configure.ac:63: -1- gt_TYPE_SSIZE_T
m4trace:configure.ac:63: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:63: -1- gl_FUNC_STAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FUNC_STAT_FILE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STAT], [test $REPLACE_STAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STAT], [test $REPLACE_STAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STAT], [
    case "$host_os" in
      mingw*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_STAT
  ])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:63: -1- gl_PREREQ_STAT
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([stat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([stat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STAT$])
m4trace:configure.ac:63: -1- gl_STAT_SIZE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_STAT_TIME
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMENSEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC$])
m4trace:configure.ac:63: -1- gl_STAT_BIRTHTIME
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMENSEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIM_TV_NSEC$])
m4trace:configure.ac:63: -1- gl_STDALIGN_H
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([stdalign.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STDALIGN_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_STDALIGN_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_STDALIGN_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_FALSE])
m4trace:configure.ac:63: -1- gl_STDARG_H
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([stdarg.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([stdarg.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([stdarg.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_STDARG_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDARG_H$])
m4trace:configure.ac:63: -1- gl_CACHE_VAL_SILENT([gl_cv_func___va_copy], [
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <stdarg.h>]],
             [[
#ifndef __va_copy
error, bail out
#endif
             ]])],
          [gl_cv_func___va_copy=yes],
          [gl_cv_func___va_copy=no])])
m4trace:configure.ac:63: -1- gl_SILENT([
    AC_CACHE_VAL([gl_cv_func___va_copy], [
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <stdarg.h>]],
             [[
#ifndef __va_copy
error, bail out
#endif
             ]])],
          [gl_cv_func___va_copy=yes],
          [gl_cv_func___va_copy=no])])
  ])
m4trace:configure.ac:63: -1- m4_pattern_allow([^va_copy$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^va_copy$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_STDARG_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([stdarg.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STDARG_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_STDARG_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_STDARG_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDARG_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDARG_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDARG_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDARG_H_FALSE])
m4trace:configure.ac:63: -1- gl_STDBOOL_H
m4trace:configure.ac:63: -1- AC_CHECK_HEADER_STDBOOL
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([stdbool.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STDBOOL_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_STDBOOL_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_FALSE])
m4trace:configure.ac:63: -1- gl_STDDEF_H
m4trace:configure.ac:63: -1- gl_STDDEF_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([stddef.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STDDEF_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_STDDEF_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_FALSE])
m4trace:configure.ac:63: -1- gl_STDINT_H
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([stdint.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STDINT_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_STDINT_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_STDINT_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL_HEADER([limits.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIMITS_H$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_GENERATE_LIMITS_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [$gl_generate_var])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:63: -1- gl_STDIO_H
m4trace:configure.ac:63: -1- m4_pattern_allow([^__USE_MINGW_ANSI_STDIO$])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([stdio.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([stdio.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([stdio.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_STDIO_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDIO_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fcloseall], [_AC_CHECK_DECLS([fcloseall])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FCLOSEALL$])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STDIO_READ], [test $REPLACE_STDIO_READ_FUNCS = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STDIO_READ], [test $REPLACE_STDIO_READ_FUNCS = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STDIO_READ_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STDIO_READ_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STDIO_READ_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STDIO_READ_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STDIO_WRITE], [test $REPLACE_STDIO_WRITE_FUNCS = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STDIO_WRITE], [test $REPLACE_STDIO_WRITE_FUNCS = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STDIO_WRITE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STDIO_WRITE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STDIO_WRITE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STDIO_WRITE_FALSE])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fscanf])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fscanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fscanf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FSCANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([scanf])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([scanf])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[scanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([scanf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SCANF$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([scanf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fgetc])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgetc])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgetc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgetc])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FGETC$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([getc])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getc])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getc])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETC$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([getchar])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getchar])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getchar])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETCHAR$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fgets])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgets])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgets]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgets])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FGETS$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fread])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fread])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fread]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fread])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FREAD$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fprintf])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fprintf])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fprintf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FPRINTF$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([printf])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([printf])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[printf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([printf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PRINTF$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([vfprintf])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vfprintf])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vfprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([vfprintf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_VFPRINTF$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([vprintf])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vprintf])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([vprintf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_VPRINTF$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fputc])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputc])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputc])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FPUTC$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([putc])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putc])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([putc])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PUTC$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([putchar])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putchar])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([putchar])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PUTCHAR$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fputs])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputs])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputs]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputs])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FPUTS$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([puts])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([puts])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[puts]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([puts])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PUTS$])
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([fwrite])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fwrite])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fwrite]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([fwrite])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_FWRITE$])
m4trace:configure.ac:63: -1- gl_STDLIB_H
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([stdlib.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([stdlib.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([stdlib.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_STDLIB_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDLIB_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_ecvt], [_AC_CHECK_DECLS([ecvt])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_ECVT$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fcvt], [_AC_CHECK_DECLS([fcvt])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FCVT$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_gcvt], [_AC_CHECK_DECLS([gcvt])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GCVT$])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_FUNC_STPCPY
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STPCPY], [test $HAVE_STPCPY = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STPCPY], [test $HAVE_STPCPY = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STPCPY_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STPCPY_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STPCPY_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STPCPY_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STPCPY], [
    gl_PREREQ_STPCPY
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STPCPY
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([stpcpy])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stpcpy])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stpcpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([stpcpy])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STPCPY$])
m4trace:configure.ac:63: -1- gl_FUNC_STPNCPY
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_stpncpy], [_AC_CHECK_DECLS([stpncpy])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STPNCPY$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_stpncpy], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" stpncpy"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STPNCPY$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STPNCPY], [test $HAVE_STPNCPY = 0 || test $REPLACE_STPNCPY = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STPNCPY], [test $HAVE_STPNCPY = 0 || test $REPLACE_STPNCPY = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STPNCPY_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STPNCPY_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STPNCPY_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STPNCPY_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STPNCPY], [
    gl_PREREQ_STPNCPY
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STPNCPY
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([stpncpy])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stpncpy])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stpncpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([stpncpy])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STPNCPY$])
m4trace:configure.ac:63: -1- gl_FUNC_STRDUP_POSIX
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_strdup], [_AC_CHECK_DECLS([strdup])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRDUP], [test $REPLACE_STRDUP = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRDUP], [test $REPLACE_STRDUP = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRDUP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRDUP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRDUP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRDUP_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRDUP], [
    gl_PREREQ_STRDUP
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRDUP
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([strdup])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strdup])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strdup]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strdup])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRDUP$])
m4trace:configure.ac:63: -1- gl_FUNC_STRERROR
m4trace:configure.ac:63: -1- gl_FUNC_STRERROR_0
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_STRERROR_0$])
m4trace:configure.ac:63: -1- gl_FUNC_STRERROR_R_WORKS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_strerror_r], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" strerror_r"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___xpg_strerror_r], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __xpg_strerror_r"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRERROR], [test $REPLACE_STRERROR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRERROR], [test $REPLACE_STRERROR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRERROR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRERROR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRERROR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRERROR_FALSE])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([strerror])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_STRERROR$])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([strerror])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strerror])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strerror]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strerror])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRERROR$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRERROR_OVERRIDE], [test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRERROR_OVERRIDE], [test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRERROR_OVERRIDE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRERROR_OVERRIDE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRERROR_OVERRIDE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRERROR_OVERRIDE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRERROR_OVERRIDE], [
    gl_PREREQ_SYS_H_WINSOCK2
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- gl_STRING_H
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([string.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([string.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([string.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_STRING_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STRING_H$])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_FUNC_STRNCAT
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRNCAT], [test $REPLACE_STRNCAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRNCAT], [test $REPLACE_STRNCAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRNCAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRNCAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRNCAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRNCAT_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRNCAT], [
    gl_PREREQ_STRNCAT
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRNCAT
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([strncat])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strncat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strncat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strncat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRNCAT$])
m4trace:configure.ac:63: -1- gl_FUNC_STRNLEN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_strnlen], [_AC_CHECK_DECLS([strnlen])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRNLEN], [test $HAVE_DECL_STRNLEN = 0 || test $REPLACE_STRNLEN = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRNLEN], [test $HAVE_DECL_STRNLEN = 0 || test $REPLACE_STRNLEN = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRNLEN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRNLEN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRNLEN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRNLEN_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRNLEN], [
    gl_PREREQ_STRNLEN
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRNLEN
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([strnlen])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strnlen])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strnlen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strnlen])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRNLEN$])
m4trace:configure.ac:63: -1- gl_FUNC_STRSIGNAL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_strsignal], [_AC_CHECK_DECLS([strsignal])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRSIGNAL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRSIGNAL], [test $HAVE_STRSIGNAL = 0 || test $REPLACE_STRSIGNAL = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRSIGNAL], [test $HAVE_STRSIGNAL = 0 || test $REPLACE_STRSIGNAL = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRSIGNAL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRSIGNAL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRSIGNAL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRSIGNAL_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRSIGNAL], [
    gl_PREREQ_STRSIGNAL
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRSIGNAL
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SYS_SIGLIST$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL__SYS_SIGLIST$])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([strsignal])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strsignal])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strsignal]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strsignal])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRSIGNAL$])
m4trace:configure.ac:63: -1- gl_FUNC_STRSTR_SIMPLE
m4trace:configure.ac:63: -1- gl_LIBSOURCES([strstr.c])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([strstr])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strstr])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strstr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strstr])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRSTR$])
m4trace:configure.ac:63: -1- gl_FUNC_STRTOD
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRTOD], [test $HAVE_STRTOD = 0 || test $REPLACE_STRTOD = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRTOD], [test $HAVE_STRTOD = 0 || test $REPLACE_STRTOD = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOD_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRTOD], [
    gl_PREREQ_STRTOD
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRTOD
m4trace:configure.ac:63: -1- gl_CHECK_LDEXP_NO_LIBM
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LDEXP_IN_LIBC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NL_LANGINFO$])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([strtod])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtod])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strtod]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strtod])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRTOD$])
m4trace:configure.ac:63: -1- gl_FUNC_STRTOIMAX
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_strtoimax], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" strtoimax"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_strtoimax], [_AC_CHECK_DECLS([strtoimax])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRTOIMAX$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRTOIMAX], [test $HAVE_DECL_STRTOIMAX = 0 || test $REPLACE_STRTOIMAX = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRTOIMAX], [test $HAVE_DECL_STRTOIMAX = 0 || test $REPLACE_STRTOIMAX = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOIMAX_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOIMAX_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOIMAX_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOIMAX_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRTOIMAX], [
    gl_PREREQ_STRTOIMAX
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRTOIMAX
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRTOLL$])
m4trace:configure.ac:63: -1- gl_INTTYPES_MODULE_INDICATOR([strtoimax])
m4trace:configure.ac:63: -1- gl_INTTYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtoimax])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strtoimax]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_FUNC_STRTOLD
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_strtold], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" strtold"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^STRTOLD_HAS_UNDERFLOW_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRTOLD], [test $HAVE_STRTOLD = 0 || test $REPLACE_STRTOLD = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRTOLD], [test $HAVE_STRTOLD = 0 || test $REPLACE_STRTOLD = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOLD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOLD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOLD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOLD_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRTOLD], [
    gl_PREREQ_STRTOLD
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRTOLD
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LDEXPL_IN_LIBC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NL_LANGINFO$])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([strtold])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtold])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strtold]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strtold])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRTOLD$])
m4trace:configure.ac:63: -1- gl_FUNC_STRTOLL
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRTOLL], [test $HAVE_STRTOLL = 0 || test $REPLACE_STRTOLL = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRTOLL], [test $HAVE_STRTOLL = 0 || test $REPLACE_STRTOLL = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOLL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOLL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOLL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOLL_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRTOLL], [
    gl_PREREQ_STRTOLL
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRTOLL
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([strtoll])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtoll])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strtoll]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strtoll])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRTOLL$])
m4trace:configure.ac:63: -1- gl_FUNC_STRTOULL
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRTOULL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRTOULL], [test $HAVE_STRTOULL = 0 || test $REPLACE_STRTOULL = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRTOULL], [test $HAVE_STRTOULL = 0 || test $REPLACE_STRTOULL = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOULL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOULL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOULL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOULL_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRTOULL], [
    gl_PREREQ_STRTOULL
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRTOULL
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([strtoull])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtoull])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strtoull]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strtoull])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRTOULL$])
m4trace:configure.ac:63: -1- gl_FUNC_STRTOUMAX
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_strtoumax], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" strtoumax"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_strtoumax], [_AC_CHECK_DECLS([strtoumax])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRTOUMAX$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_STRTOUMAX], [test $HAVE_DECL_STRTOUMAX = 0 || test $REPLACE_STRTOUMAX = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_STRTOUMAX], [test $HAVE_DECL_STRTOUMAX = 0 || test $REPLACE_STRTOUMAX = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOUMAX_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_STRTOUMAX_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOUMAX_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRTOUMAX_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_STRTOUMAX], [
    gl_PREREQ_STRTOUMAX
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_STRTOUMAX
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRTOULL$])
m4trace:configure.ac:63: -1- gl_INTTYPES_MODULE_INDICATOR([strtoumax])
m4trace:configure.ac:63: -1- gl_INTTYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtoumax])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strtoumax]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_FUNC_SYMLINK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_symlink], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" symlink"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SYMLINK], [test $HAVE_SYMLINK = 0 || test $REPLACE_SYMLINK = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SYMLINK], [test $HAVE_SYMLINK = 0 || test $REPLACE_SYMLINK = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SYMLINK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SYMLINK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SYMLINK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SYMLINK_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([symlink])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([symlink])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[symlink]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([symlink])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SYMLINK$])
m4trace:configure.ac:63: -1- gl_FUNC_SYMLINKAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_symlinkat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" symlinkat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SYMLINKAT], [test $HAVE_SYMLINKAT = 0 || test $REPLACE_SYMLINKAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SYMLINKAT], [test $HAVE_SYMLINKAT = 0 || test $REPLACE_SYMLINKAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SYMLINKAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SYMLINKAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SYMLINKAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SYMLINKAT_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([symlinkat])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([symlinkat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[symlinkat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([symlinkat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SYMLINKAT$])
m4trace:configure.ac:63: -1- gl_SYS_IOCTL_H
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_ioctl_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/ioctl.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_IOCTL_H$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/ioctl.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/ioctl.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_ioctl_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/ioctl.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/ioctl.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_IOCTL_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_IOCTL_H$])
m4trace:configure.ac:63: -1- gl_SYS_IOCTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IOCTL])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_IOCTL$])
m4trace:configure.ac:63: -1- gl_SYS_RANDOM_H
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/random.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/random.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_random_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/random.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/random.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_RANDOM_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_RANDOM_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_RANDOM_H$])
m4trace:configure.ac:63: -1- gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SYS_RESOURCE_H
m4trace:configure.ac:63: -1- gl_SYS_RESOURCE_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETRUSAGE$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/resource.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/resource.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_resource_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/resource.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/resource.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_RESOURCE_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_RESOURCE_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_RESOURCE_H$])
m4trace:configure.ac:63: -1- gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETRUSAGE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETRUSAGE$])
m4trace:configure.ac:63: -1- gl_SYS_SELECT_H
m4trace:configure.ac:63: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SOCKET])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SOCKET$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CONNECT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_CONNECT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ACCEPT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BIND])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_BIND$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPEERNAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETPEERNAME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKNAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETSOCKNAME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKOPT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_GETSOCKOPT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LISTEN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_LISTEN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECV])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RECV$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SEND])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SEND$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECVFROM])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_RECVFROM$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SENDTO])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SENDTO$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETSOCKOPT])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SETSOCKOPT$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SHUTDOWN])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_SHUTDOWN$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT4])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_ACCEPT4$])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SYS_TIME_H
m4trace:configure.ac:63: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SYS_TYPES_H
m4trace:configure.ac:63: -1- gl_SYS_TYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SYS_UIO_H
m4trace:configure.ac:63: -1- gl_SYS_UIO_H_DEFAULTS
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/uio.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/uio.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_uio_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/uio.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/uio.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_UIO_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_UIO_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_UIO_H$])
m4trace:configure.ac:63: -1- gl_SYS_UIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SYS_UTSNAME_H
m4trace:configure.ac:63: -1- gl_SYS_UTSNAME_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTSNAME$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/utsname.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/utsname.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_utsname_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/utsname.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/utsname.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_UTSNAME_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_UTSNAME_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STRUCT_UTSNAME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_UTSNAME_H$])
m4trace:configure.ac:63: -1- gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNAME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UNAME$])
m4trace:configure.ac:63: -1- gl_SYS_WAIT_H
m4trace:configure.ac:63: -1- gl_SYS_WAIT_H_DEFAULTS
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([sys/wait.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([sys/wait.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_wait_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/wait.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([sys/wait.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_SYS_WAIT_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_WAIT_H$])
m4trace:configure.ac:63: -1- gl_SYS_WAIT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WAITPID])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_WAITPID$])
m4trace:configure.ac:63: -1- gl_FUNC_GEN_TEMPNAME
m4trace:configure.ac:63: -1- gl_PREREQ_TEMPNAME
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([tempname])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEMPNAME$])
m4trace:configure.ac:63: -1- gl_TERMIOS_H
m4trace:configure.ac:63: -1- gl_TERMIOS_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_TCGETSID$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TERMIOS_H$])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([termios.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([termios.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_termios_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" termios.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([termios.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_TERMIOS_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_TERMIOS_H$])
m4trace:configure.ac:63: -1- gl_TERMIOS_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TCGETSID])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_TCGETSID$])
m4trace:configure.ac:63: -1- gl_TIME_H
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS([time.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([time.h], [assume])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([time.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_TIME_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_TIME_H$])
m4trace:configure.ac:63: -1- gl_CHECK_TYPE_STRUCT_TIMESPEC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^SYS_TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PTHREAD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UNISTD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^TIME_H_DEFINES_TIME_UTC$])
m4trace:configure.ac:63: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_TIME_R
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_LOCALTIME_R$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_localtime_r], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" localtime_r"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_TIME_R], [test $HAVE_LOCALTIME_R = 0 || test $REPLACE_LOCALTIME_R = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_TIME_R], [test $HAVE_LOCALTIME_R = 0 || test $REPLACE_LOCALTIME_R = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TIME_R_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TIME_R_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TIME_R_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TIME_R_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_TIME_R], [
    gl_PREREQ_TIME_R
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_TIME_R
m4trace:configure.ac:63: -1- gl_TIME_MODULE_INDICATOR([time_r])
m4trace:configure.ac:63: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([time_r])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[time_r]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([time_r])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_TIME_R$])
m4trace:configure.ac:63: -1- gl_TIME_RZ
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LOCALTIME_INFLOOP_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TIMEZONE_T$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_TIME_RZ], [test $HAVE_TIMEZONE_T = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_TIME_RZ], [test $HAVE_TIMEZONE_T = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TIME_RZ_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TIME_RZ_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TIME_RZ_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TIME_RZ_FALSE])
m4trace:configure.ac:63: -1- gl_TIME_MODULE_INDICATOR([time_rz])
m4trace:configure.ac:63: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([time_rz])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[time_rz]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([time_rz])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_TIME_RZ$])
m4trace:configure.ac:63: -1- gl_FUNC_TIMEGM
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_timegm], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" timegm"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_TIMEGM], [test $HAVE_TIMEGM = 0 || test $REPLACE_TIMEGM = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_TIMEGM], [test $HAVE_TIMEGM = 0 || test $REPLACE_TIMEGM = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TIMEGM_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TIMEGM_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TIMEGM_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TIMEGM_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_TIMEGM], [
    gl_PREREQ_TIMEGM
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_TIMEGM
m4trace:configure.ac:63: -1- gl_TIME_MODULE_INDICATOR([timegm])
m4trace:configure.ac:63: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([timegm])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[timegm]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([timegm])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_TIMEGM$])
m4trace:configure.ac:63: -1- gl_TIMER_TIME
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_TIMER_TIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_TIMER_SETTIME$])
m4trace:configure.ac:63: -1- gl_TIMESPEC
m4trace:configure.ac:63: -1- gl_TLS
m4trace:configure.ac:63: -1- gl_FUNC_TZSET
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_TZSET], [test $REPLACE_TZSET = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_TZSET], [test $REPLACE_TZSET = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TZSET_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TZSET_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TZSET_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TZSET_FALSE])
m4trace:configure.ac:63: -1- gl_TIME_MODULE_INDICATOR([tzset])
m4trace:configure.ac:63: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([tzset])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[tzset]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([tzset])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_TZSET$])
m4trace:configure.ac:63: -1- gl_FUNC_UNAME
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNAME$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_UNAME], [test $HAVE_UNAME = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_UNAME], [test $HAVE_UNAME = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UNAME_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UNAME_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UNAME_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UNAME_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_UNAME], [
    gl_PREREQ_UNAME
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_UNAME
m4trace:configure.ac:63: -1- gl_SYS_UTSNAME_MODULE_INDICATOR([uname])
m4trace:configure.ac:63: -1- gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([uname])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[uname]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_UNICODEIO
m4trace:configure.ac:63: -1- gl_MUSL_LIBC
m4trace:configure.ac:63: -1- m4_pattern_allow([^MUSL_LIBC$])
m4trace:configure.ac:63: -1- gl_UNISTD_H
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([unistd.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([unistd.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([unistd.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_UNISTD_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_UNISTD_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_execvpe], [_AC_CHECK_DECLS([execvpe])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_EXECVPE$])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_UNISTD_SAFER
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pipe], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pipe"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_LIBHEADER([0.9.11], [unistr.h])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_LIB_PREPARE
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_UNISTR_H$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([unistr/u8-mbtoucr])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_UNISTR_U8_MBTOUCR$])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-mbtoucr])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_FALSE])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([unistr/u8-uctomb])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_UNISTR_U8_UCTOMB$])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-uctomb])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_FALSE])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_LIBHEADER([0.9.11], [unitypes.h])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_UNITYPES_H$])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_LIBHEADER([0.9.11], [uniwidth.h])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_UNIWIDTH_H$])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_MODULE([0.9.11], [uniwidth/width])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH], [gl_LIBUNISTRING_VERSION_CMP([0.9.11])])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH], [gl_LIBUNISTRING_VERSION_CMP([0.9.11])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH_FALSE])
m4trace:configure.ac:63: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:63: -1- gl_FUNC_UNLINK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^UNLINK_PARENT_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_UNLINK], [test $REPLACE_UNLINK = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_UNLINK], [test $REPLACE_UNLINK = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UNLINK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UNLINK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UNLINK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UNLINK_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([unlink])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([unlink])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[unlink]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([unlink])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_UNLINK$])
m4trace:configure.ac:63: -1- gl_FUNC_UNLINK_BUSY_TEXT
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_FUNC_UNLINKAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_unlinkat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" unlinkat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_UNLINKAT], [test $HAVE_UNLINKAT = 0 || test $REPLACE_UNLINKAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_UNLINKAT], [test $HAVE_UNLINKAT = 0 || test $REPLACE_UNLINKAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UNLINKAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UNLINKAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UNLINKAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UNLINKAT_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([unlinkat])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([unlinkat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[unlinkat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([unlinkat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_UNLINKAT$])
m4trace:configure.ac:63: -1- gl_UNLINKDIR
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_priv_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" priv.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^UNLINK_CANNOT_UNLINK_DIR$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_STDIO_SINGLE_THREAD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^USE_UNLOCKED_IO$])
m4trace:configure.ac:63: -1- gl_FUNC_GLIBC_UNLOCKED_IO
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_clearerr_unlocked], [_AC_CHECK_DECLS([clearerr_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_CLEARERR_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_feof_unlocked], [_AC_CHECK_DECLS([feof_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FEOF_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_ferror_unlocked], [_AC_CHECK_DECLS([ferror_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FERROR_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fflush_unlocked], [_AC_CHECK_DECLS([fflush_unlocked])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fgets_unlocked], [_AC_CHECK_DECLS([fgets_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FGETS_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fputc_unlocked], [_AC_CHECK_DECLS([fputc_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FPUTC_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fputs_unlocked], [_AC_CHECK_DECLS([fputs_unlocked])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fread_unlocked], [_AC_CHECK_DECLS([fread_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FREAD_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_fwrite_unlocked], [_AC_CHECK_DECLS([fwrite_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_FWRITE_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_getc_unlocked], [_AC_CHECK_DECLS([getc_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETC_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_getchar_unlocked], [_AC_CHECK_DECLS([getchar_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_GETCHAR_UNLOCKED$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_putc_unlocked], [_AC_CHECK_DECLS([putc_unlocked])])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_putchar_unlocked], [_AC_CHECK_DECLS([putchar_unlocked])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_PUTCHAR_UNLOCKED$])
m4trace:configure.ac:63: -1- gl_FUNC_UNSETENV
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_unsetenv], [_AC_CHECK_DECLS([unsetenv])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UNSETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^VOID_UNSETENV$])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_UNSETENV], [test $HAVE_UNSETENV = 0 || test $REPLACE_UNSETENV = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_UNSETENV], [test $HAVE_UNSETENV = 0 || test $REPLACE_UNSETENV = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UNSETENV_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UNSETENV_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UNSETENV_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UNSETENV_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_UNSETENV], [
    gl_PREREQ_UNSETENV
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_UNSETENV
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([unsetenv])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([unsetenv])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[unsetenv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([unsetenv])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_UNSETENV$])
m4trace:configure.ac:63: -1- gl_SYS_PROC_UPTIME
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PROC_UPTIME$])
m4trace:configure.ac:63: -1- gl_USERSPEC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_UTIME
m4trace:configure.ac:63: -1- gl_UTIME_H_DEFAULTS
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_UTIME$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UTIME$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_FUNC_UTIME_FILE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_UTIME], [test $HAVE_UTIME = 0 || test $REPLACE_UTIME = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_UTIME], [test $HAVE_UTIME = 0 || test $REPLACE_UTIME = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UTIME_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UTIME_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UTIME_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UTIME_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_UTIME], [
    gl_PREREQ_UTIME
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_UTIME
m4trace:configure.ac:63: -1- gl_UTIME_MODULE_INDICATOR([utime])
m4trace:configure.ac:63: -1- gl_UTIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIME])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_UTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UTIME], [1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_GNULIB_MDA_UTIME$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([utime])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[utime]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([utime])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_UTIME$])
m4trace:configure.ac:63: -1- gl_UTIME_H
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_utime_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" utime.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([utime.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([utime.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_utime_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" utime.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([utime.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_UTIME_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_UTIME_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_UTIME_H$])
m4trace:configure.ac:63: -1- gl_UTIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_UTIMECMP
m4trace:configure.ac:63: -1- gl_FUNC_UTIMES
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WORKING_UTIMES$])
m4trace:configure.ac:63: -1- gl_UTIMENS
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_futimes], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" futimes"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_futimesat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" futimesat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_futimens], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" futimens"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_utimensat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" utimensat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_lutimes], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lutimes"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^FUTIMESAT_NULL_BUG$])
m4trace:configure.ac:63: -1- gl_FUNC_UTIMENSAT
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_utimensat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" utimensat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- GL_MDA_DEFINES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NEARLY_WORKING_UTIMENSAT$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_UTIMENSAT], [test $HAVE_UTIMENSAT = 0 || test $REPLACE_UTIMENSAT = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_UTIMENSAT], [test $HAVE_UTIMENSAT = 0 || test $REPLACE_UTIMENSAT = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UTIMENSAT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_UTIMENSAT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UTIMENSAT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_UTIMENSAT_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_STAT_MODULE_INDICATOR([utimensat])
m4trace:configure.ac:63: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([utimensat])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[utimensat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([utimensat])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_UTIMENSAT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_C_VARARRAYS$])
m4trace:configure.ac:63: -1- gl_FUNC_VASNPRINTF
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" vasnprintf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_REPLACE_VASNPRINTF
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" vasnprintf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([vasnprintf.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([printf-args.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([printf-parse.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([asnprintf.c])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:63: -1- gl_PREREQ_PRINTF_ARGS
m4trace:configure.ac:63: -1- gl_PREREQ_PRINTF_PARSE
m4trace:configure.ac:63: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:63: -1- gt_AC_TYPE_INTMAX_T
m4trace:configure.ac:63: -1- gl_AC_HEADER_INTTYPES_H
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_INTTYPES_H_WITH_UINTMAX$])
m4trace:configure.ac:63: -1- gl_AC_HEADER_STDINT_H
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STDINT_H_WITH_UINTMAX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_INTMAX_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^intmax_t$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL__SNPRINTF$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SNPRINTF_RETVAL_C99$])
m4trace:configure.ac:63: -1- gl_SNPRINTF_TRUNCATION_C99
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SNPRINTF_TRUNCATION_C99$])
m4trace:configure.ac:63: -1- gl_PREREQ_ASNPRINTF
m4trace:configure.ac:63: -1- gl_FUNC_VASPRINTF
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:63: -1- gl_REPLACE_VASPRINTF
m4trace:configure.ac:63: -1- gl_LIBSOURCES([vasprintf.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([asprintf.c])
m4trace:configure.ac:63: -1- gl_PREREQ_VASPRINTF_H
m4trace:configure.ac:63: -1- gl_PREREQ_VASPRINTF
m4trace:configure.ac:63: -1- gl_PREREQ_ASPRINTF
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([vasprintf])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vasprintf])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vasprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([vasprintf])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_VASPRINTF$])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=asprintf:2:c-format])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=vasprintf:2:c-format])
m4trace:configure.ac:63: -1- gl_FUNC_VASPRINTF_POSIX
m4trace:configure.ac:63: -1- gl_PRINTF_SIZES_C99
m4trace:configure.ac:63: -1- gl_PRINTF_LONG_DOUBLE
m4trace:configure.ac:63: -1- gl_PRINTF_INFINITE
m4trace:configure.ac:63: -1- gl_PRINTF_INFINITE_LONG_DOUBLE
m4trace:configure.ac:63: -1- m4_pattern_allow([^CHECK_PRINTF_SAFE$])
m4trace:configure.ac:63: -1- GL_NOCRASH
m4trace:configure.ac:63: -1- gl_PRINTF_DIRECTIVE_A
m4trace:configure.ac:63: -1- gl_PRINTF_DIRECTIVE_F
m4trace:configure.ac:63: -1- gl_PRINTF_DIRECTIVE_N
m4trace:configure.ac:63: -1- gl_PRINTF_DIRECTIVE_LS
m4trace:configure.ac:63: -1- gl_PRINTF_FLAG_GROUPING
m4trace:configure.ac:63: -1- gl_PRINTF_FLAG_LEFTADJUST
m4trace:configure.ac:63: -1- gl_PRINTF_FLAG_ZERO
m4trace:configure.ac:63: -1- gl_PRINTF_PRECISION
m4trace:configure.ac:63: -1- gl_PRINTF_ENOMEM
m4trace:configure.ac:63: -1- GL_NOCRASH
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_LONG_DOUBLE
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_INFINITE_DOUBLE$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_INFINITE_LONG_DOUBLE$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_A
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_A$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NL_LANGINFO$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_F
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_F$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_LS$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_FLAG_GROUPING
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_GROUPING$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_LEFTADJUST$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_FLAG_ZERO
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_ZERO$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_PRECISION
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_UNBOUNDED_PRECISION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DOUBLE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_ENOMEM
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_ENOMEM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DOUBLE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:63: -1- gl_REPLACE_VASNPRINTF
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" vasnprintf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([vasnprintf.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([printf-args.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([printf-parse.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([asnprintf.c])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:63: -1- gl_PREREQ_PRINTF_ARGS
m4trace:configure.ac:63: -1- gl_PREREQ_PRINTF_PARSE
m4trace:configure.ac:63: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF
m4trace:configure.ac:63: -1- gl_PREREQ_ASNPRINTF
m4trace:configure.ac:63: -1- gl_REPLACE_VASPRINTF
m4trace:configure.ac:63: -1- gl_LIBSOURCES([vasprintf.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([asprintf.c])
m4trace:configure.ac:63: -1- gl_PREREQ_VASPRINTF_H
m4trace:configure.ac:63: -1- gl_PREREQ_VASPRINTF
m4trace:configure.ac:63: -1- gl_PREREQ_ASPRINTF
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=verror:3:c-format])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=verror_at_line:5:c-format])
m4trace:configure.ac:63: -1- gl_VERSION_ETC
m4trace:configure.ac:63: -1- m4_pattern_allow([^PACKAGE_PACKAGER$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PACKAGE_PACKAGER_VERSION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^PACKAGE_PACKAGER_BUG_REPORTS$])
m4trace:configure.ac:63: -1- gl_FUNC_VFPRINTF_POSIX
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_LONG_DOUBLE
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_INFINITE_DOUBLE$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_INFINITE_LONG_DOUBLE$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_A
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_A$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NL_LANGINFO$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_F
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_F$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DIRECTIVE_LS$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_FLAG_GROUPING
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_GROUPING$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_LEFTADJUST$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_FLAG_ZERO
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_FLAG_ZERO$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_PRECISION
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_UNBOUNDED_PRECISION$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DOUBLE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF_ENOMEM
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_ENOMEM$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_DOUBLE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_PRINTF_LONG_DOUBLE$])
m4trace:configure.ac:63: -1- gl_REPLACE_VASNPRINTF
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" vasnprintf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([vasnprintf.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([printf-args.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([printf-parse.c])
m4trace:configure.ac:63: -1- gl_LIBSOURCES([asnprintf.c])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:63: -1- gl_PREREQ_PRINTF_ARGS
m4trace:configure.ac:63: -1- gl_PREREQ_PRINTF_PARSE
m4trace:configure.ac:63: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:63: -1- gl_PREREQ_VASNPRINTF
m4trace:configure.ac:63: -1- gl_PREREQ_ASNPRINTF
m4trace:configure.ac:63: -1- gl_REPLACE_VFPRINTF
m4trace:configure.ac:63: -1- gl_LIBSOURCES([vfprintf.c])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VFPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_PREREQ_VFPRINTF
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([vfprintf-posix])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vfprintf-posix])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vfprintf-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([vfprintf-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_VFPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([vfprintf-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_VFPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_FUNC_VPRINTF_POSIX
m4trace:configure.ac:63: -1- gl_REPLACE_VPRINTF
m4trace:configure.ac:63: -1- gl_LIBSOURCES([vprintf.c])
m4trace:configure.ac:63: -1- m4_pattern_allow([^REPLACE_VPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_PREREQ_VPRINTF
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([vprintf-posix])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vprintf-posix])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vprintf-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([vprintf-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_VPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([vprintf-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_VPRINTF_POSIX$])
m4trace:configure.ac:63: -1- gl_WCHAR_H
m4trace:configure.ac:63: -1- gl_CHECK_NEXT_HEADERS([wchar.h])
m4trace:configure.ac:63: -1- gl_NEXT_HEADERS_INTERNAL([wchar.h], [check])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" wchar.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_ABSOLUTE_HEADER_ONE([wchar.h])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_WCHAR_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_WCHAR_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_WCSDUP$])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([wchar-single])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_WCHAR_SINGLE$])
m4trace:configure.ac:63: -1- gl_FUNC_WCRTOMB
m4trace:configure.ac:63: -1- gl_MBSTATE_T_BROKEN
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbsinit"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrtowc"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_MBRTOWC_INCOMPLETE_STATE
m4trace:configure.ac:63: -1- gl_MBRTOWC_SANITYCHECK
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_wcrtomb], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" wcrtomb"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_WCRTOMB$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WCRTOMB_C_LOCALE_BUG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WCRTOMB_RETVAL_BUG$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WCRTOMB], [test $HAVE_WCRTOMB = 0 || test $REPLACE_WCRTOMB = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WCRTOMB], [test $HAVE_WCRTOMB = 0 || test $REPLACE_WCRTOMB = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCRTOMB_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCRTOMB_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCRTOMB_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCRTOMB_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_WCRTOMB], [
    gl_PREREQ_WCRTOMB
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_WCRTOMB
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([wcrtomb])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wcrtomb])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wcrtomb]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([wcrtomb])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_WCRTOMB$])
m4trace:configure.ac:63: -1- gl_FUNC_WCSWIDTH
m4trace:configure.ac:63: -1- gl_FUNC_WCWIDTH
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" wchar.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_wcwidth], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" wcwidth"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_WCWIDTH$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_wcswidth], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" wcswidth"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WCSWIDTH], [test $HAVE_WCSWIDTH = 0 || test $REPLACE_WCSWIDTH = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WCSWIDTH], [test $HAVE_WCSWIDTH = 0 || test $REPLACE_WCSWIDTH = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCSWIDTH_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCSWIDTH_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCSWIDTH_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCSWIDTH_FALSE])
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([wcswidth])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wcswidth])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wcswidth]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([wcswidth])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_WCSWIDTH$])
m4trace:configure.ac:63: -1- gl_WCTYPE_H
m4trace:configure.ac:63: -1- gl_WCTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_FUNC_WCWIDTH
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" wchar.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_wcwidth], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" wcwidth"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_WCWIDTH$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WCWIDTH], [test $HAVE_WCWIDTH = 0 || test $REPLACE_WCWIDTH = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WCWIDTH], [test $HAVE_WCWIDTH = 0 || test $REPLACE_WCWIDTH = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCWIDTH_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCWIDTH_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCWIDTH_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCWIDTH_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_WCWIDTH], [
    gl_PREREQ_WCWIDTH
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_WCWIDTH
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([wcwidth])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wcwidth])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wcwidth]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([wcwidth])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_WCWIDTH$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_COND], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_COND], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_COND_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_COND_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_COND_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_COND_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_MUTEX], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_MUTEX], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_MUTEX_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_MUTEX_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_MUTEX_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_MUTEX_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_ONCE], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_ONCE], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_ONCE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_ONCE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_ONCE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_ONCE_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RECMUTEX], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_RECMUTEX], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_RECMUTEX_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_RECMUTEX_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_RECMUTEX_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_RECMUTEX_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RWLOCK], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_RWLOCK], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_RWLOCK_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_RWLOCK_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_RWLOCK_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_RWLOCK_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_THREAD], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_THREAD], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_THREAD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_THREAD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_THREAD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_THREAD_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_TIMEDMUTEX], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_TIMEDMUTEX], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_TIMEDMUTEX_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_TIMEDMUTEX_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_TIMEDMUTEX_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_TIMEDMUTEX_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_TIMEDRECMUTEX], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_TIMEDRECMUTEX], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_TIMEDRECMUTEX_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_TIMEDRECMUTEX_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_TIMEDRECMUTEX_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_TIMEDRECMUTEX_FALSE])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_TLS], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_TLS], [case "$host_os" in mingw*) true;; *) false;; esac])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_TLS_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_TLS_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_TLS_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_TLS_FALSE])
m4trace:configure.ac:63: -1- gl_HEADER_TIOCGWINSZ_NEEDS_SYS_IOCTL
m4trace:configure.ac:63: -1- gl_HEADER_TIOCGWINSZ_IN_TERMIOS_H
m4trace:configure.ac:63: -1- m4_pattern_allow([^GWINSZ_IN_SYS_IOCTL$])
m4trace:configure.ac:63: -1- gl_HEADER_TIOCGWINSZ_IN_TERMIOS_H
m4trace:configure.ac:63: -1- gl_WINSIZE_IN_PTEM
m4trace:configure.ac:63: -1- m4_pattern_allow([^WINSIZE_IN_PTEM$])
m4trace:configure.ac:63: -1- gl_FUNC_WMEMCHR
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WMEMCHR], [test $HAVE_WMEMCHR = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WMEMCHR], [test $HAVE_WMEMCHR = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WMEMCHR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WMEMCHR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WMEMCHR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WMEMCHR_FALSE])
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([wmemchr])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wmemchr])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wmemchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([wmemchr])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_WMEMCHR$])
m4trace:configure.ac:63: -1- gl_FUNC_WMEMPCPY
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_wmempcpy], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" wmempcpy"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WMEMPCPY], [test $HAVE_WMEMPCPY = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WMEMPCPY], [test $HAVE_WMEMPCPY = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WMEMPCPY_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WMEMPCPY_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WMEMPCPY_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WMEMPCPY_FALSE])
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([wmempcpy])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wmempcpy])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wmempcpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([wmempcpy])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_WMEMPCPY$])
m4trace:configure.ac:63: -1- gl_FUNC_WRITE
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WRITE], [test $REPLACE_WRITE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WRITE], [test $REPLACE_WRITE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WRITE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WRITE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WRITE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WRITE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_WRITE], [
    gl_PREREQ_WRITE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_WRITE
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([write])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([write])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[write]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([write])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_WRITE$])
m4trace:configure.ac:63: -1- gl_WRITE_ANY_FILE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_priv_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" priv.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_XALLOC
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([xalloc])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_XALLOC$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([xalloc-die])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_XALLOC_DIE$])
m4trace:configure.ac:63: -1- gl_XGETCWD
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([xgetgroups])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_XGETGROUPS$])
m4trace:configure.ac:63: -1- gl_XNANOSLEEP
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pause], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pause"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=xprintf:1:c-format])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=xvprintf:1:c-format])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=xfprintf:2:c-format])
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=xvfprintf:2:c-format])
m4trace:configure.ac:63: -1- gl_XSIZE
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:63: -1- gl_XSTRTOD
m4trace:configure.ac:63: -1- gl_XSTRTOL
m4trace:configure.ac:63: -1- gl_XSTRTOLD
m4trace:configure.ac:63: -1- gl_XVASPRINTF
m4trace:configure.ac:63: -1- AM_XGETTEXT_OPTION([--flag=xasprintf:1:c-format])
m4trace:configure.ac:63: -1- gl_YEAR2038
m4trace:configure.ac:63: -1- gl_YEAR2038_BODY([require-year2038-safe])
m4trace:configure.ac:63: -1- gl_YEAR2038_TEST_INCLUDES
m4trace:configure.ac:63: -1- gl_YEAR2038_TEST_INCLUDES
m4trace:configure.ac:63: -1- m4_pattern_allow([^_TIME_BITS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:63: -1- gl_YESNO
m4trace:configure.ac:63: -1- gl_COMMON
m4trace:configure.ac:63: -1- gl_CC_ALLOW_WARNINGS
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_CFLAG_ALLOW_WARNINGS$])
m4trace:configure.ac:63: -1- gl_CXX_ALLOW_WARNINGS
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_CXXFLAG_ALLOW_WARNINGS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^gltests_WITNESS$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ACCEPT], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ACCEPT], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ACCEPT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ACCEPT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ACCEPT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ACCEPT_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_MODULE_INDICATOR([accept])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([accept])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[accept]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[accept]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([accept])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_ACCEPT$])
m4trace:configure.ac:63: -1- gl_FUNC_ATOLL
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ATOLL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_ATOLL], [test $HAVE_ATOLL = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_ATOLL], [test $HAVE_ATOLL = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ATOLL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_ATOLL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ATOLL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ATOLL_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_ATOLL], [
    gl_PREREQ_ATOLL
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_ATOLL
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([atoll])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([atoll])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[atoll]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[atoll]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([atoll])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_ATOLL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_BIND], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_BIND], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_BIND_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_BIND_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_BIND_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_BIND_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_MODULE_INDICATOR([bind])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([bind])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[bind]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[bind]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([bind])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_BIND$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_TR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_TR_UTF8$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getegid], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getegid"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_CONNECT], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_CONNECT], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CONNECT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_CONNECT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CONNECT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CONNECT_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_MODULE_INDICATOR([connect])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([connect])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[connect]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[connect]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([connect])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_CONNECT$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getegid], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getegid"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- gl_FUNC_UNGETC_WORKS
m4trace:configure.ac:63: -1- gl_FUNC_UNGETC_WORKS
m4trace:configure.ac:63: -1- gl_FUNC_UNGETC_WORKS
m4trace:configure.ac:63: -1- gl_FUNC_UNGETC_WORKS
m4trace:configure.ac:63: -1- gl_FUNC_GETRUSAGE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getrusage], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getrusage"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_GETRUSAGE], [test $HAVE_GETRUSAGE = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_GETRUSAGE], [test $HAVE_GETRUSAGE = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETRUSAGE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_GETRUSAGE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETRUSAGE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETRUSAGE_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_RESOURCE_MODULE_INDICATOR([getrusage])
m4trace:configure.ac:63: -1- gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getrusage])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getrusage]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getrusage]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([getrusage])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_GETRUSAGE$])
m4trace:configure.ac:63: -1- gl_MUSL_LIBC
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_duplocale], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" duplocale"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:63: -1- gl_FUNC_INET_PTON
m4trace:configure.ac:63: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INET_PTON$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_INET_PTON$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_netdb_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netdb.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_INET_PTON$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INET_PTON_LIB$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_INET_PTON], [test $HAVE_INET_PTON = 0 || test $REPLACE_INET_PTON = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_INET_PTON], [test $HAVE_INET_PTON = 0 || test $REPLACE_INET_PTON = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_INET_PTON_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_INET_PTON_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_INET_PTON_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_INET_PTON_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_INET_PTON], [
    gl_PREREQ_INET_PTON
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_INET_PTON
m4trace:configure.ac:63: -1- gl_ARPA_INET_MODULE_INDICATOR([inet_pton])
m4trace:configure.ac:63: -1- gl_ARPA_INET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([inet_pton])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[inet_pton]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[inet_pton]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:63: -1- gl_FUNC_IOCTL
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_IOCTL$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_IOCTL], [test $HAVE_IOCTL = 0 || test $REPLACE_IOCTL = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_IOCTL], [test $HAVE_IOCTL = 0 || test $REPLACE_IOCTL = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_IOCTL_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_IOCTL_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_IOCTL_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_IOCTL_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_IOCTL_MODULE_INDICATOR([ioctl])
m4trace:configure.ac:63: -1- gl_SYS_IOCTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([ioctl])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ioctl]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ioctl]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([ioctl])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_IOCTL$])
m4trace:configure.ac:63: -1- gl_DOUBLE_EXPONENT_LOCATION
m4trace:configure.ac:63: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^DBL_EXPBIT0_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^DBL_EXPBIT0_BIT$])
m4trace:configure.ac:63: -1- gl_FLOAT_EXPONENT_LOCATION
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLT_EXPBIT0_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^FLT_EXPBIT0_BIT$])
m4trace:configure.ac:63: -1- gl_LONG_DOUBLE_EXPONENT_LOCATION
m4trace:configure.ac:63: -1- m4_pattern_allow([^LDBL_EXPBIT0_WORD$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LDBL_EXPBIT0_BIT$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_JA
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_JA$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_JA
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_JA$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getegid], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getegid"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_LISTEN], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_LISTEN], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LISTEN_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_LISTEN_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LISTEN_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LISTEN_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_MODULE_INDICATOR([listen])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([listen])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[listen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[listen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([listen])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LISTEN$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_newlocale], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" newlocale"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_LOCALENAME
m4trace:configure.ac:63: -1- gt_LC_MESSAGES
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_LC_MESSAGES$])
m4trace:configure.ac:63: -1- gt_INTL_THREAD_LOCALE_NAME
m4trace:configure.ac:63: -1- gt_FUNC_USELOCALE
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_uselocale], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" uselocale"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_xlocale_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" xlocale.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_WORKING_USELOCALE$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_xlocale_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" xlocale.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_FAKE_LOCALES$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SOLARIS114_LOCALES$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GETLOCALENAME_L$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_NAMELESS_LOCALES$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_GOOD_USELOCALE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALENAME_ENHANCE_LOCALE_FUNCS$])
m4trace:configure.ac:63: -1- gt_INTL_MACOSX
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CFPREFERENCESCOPYAPPVALUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_CFLOCALECOPYPREFERREDLANGUAGES$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^INTL_MACOSX_LIBS$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_langinfo_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" langinfo.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_newlocale], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" newlocale"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_duplocale], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" duplocale"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_freelocale], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" freelocale"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_LOCALE_MODULE_INDICATOR([localename])
m4trace:configure.ac:63: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([localename])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[localename]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[localename]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([localename])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_LOCALENAME$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_newlocale], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" newlocale"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_semaphore_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" semaphore.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- gl_SEMAPHORE
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SEMAPHORE$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_JA
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_JA$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- gt_LOCALE_TR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_TR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_JA
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_JA$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gl_FUNC_PERROR
m4trace:configure.ac:63: -1- gl_FUNC_STRERROR_R
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_strerror_r], [_AC_CHECK_DECLS([strerror_r])])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_PERROR], [test $REPLACE_PERROR = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_PERROR], [test $REPLACE_PERROR = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PERROR_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_PERROR_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PERROR_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PERROR_FALSE])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([perror])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([perror])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[perror]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[perror]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([perror])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_PERROR$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_wait_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/wait.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_SCHED_YIELD
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SCHED_YIELD], [test $HAVE_SCHED_YIELD = 0 || test $REPLACE_SCHED_YIELD = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SCHED_YIELD], [test $HAVE_SCHED_YIELD = 0 || test $REPLACE_SCHED_YIELD = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SCHED_YIELD_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SCHED_YIELD_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SCHED_YIELD_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SCHED_YIELD_FALSE])
m4trace:configure.ac:63: -1- gl_SCHED_MODULE_INDICATOR([sched_yield])
m4trace:configure.ac:63: -1- gl_SCHED_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sched_yield])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sched_yield]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sched_yield]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([sched_yield])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SCHED_YIELD$])
m4trace:configure.ac:63: -1- gl_FUNC_SECURE_GETENV
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_secure_getenv], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" secure_getenv"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SECURE_GETENV], [test $HAVE_SECURE_GETENV = 0])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SECURE_GETENV], [test $HAVE_SECURE_GETENV = 0])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SECURE_GETENV_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SECURE_GETENV_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SECURE_GETENV_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SECURE_GETENV_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_SECURE_GETENV], [
    gl_PREREQ_SECURE_GETENV
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_SECURE_GETENV
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE___SECURE_GETENV$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_ISSETUGID$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getuid], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getuid"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_geteuid], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" geteuid"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getgid], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getgid"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_getegid], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getegid"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([secure_getenv])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([secure_getenv])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[secure_getenv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[secure_getenv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([secure_getenv])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SECURE_GETENV$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_wait_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/wait.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_SETLOCALE
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_SETLOCALE_IMPROVED$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^NEED_SETLOCALE_MTSAFE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIB_SETLOCALE$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SETLOCALE], [test $REPLACE_SETLOCALE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SETLOCALE], [test $REPLACE_SETLOCALE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SETLOCALE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SETLOCALE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SETLOCALE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SETLOCALE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_SETLOCALE], [
    gl_PREREQ_SETLOCALE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_SETLOCALE
m4trace:configure.ac:63: -1- gl_LOCALE_MODULE_INDICATOR([setlocale])
m4trace:configure.ac:63: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([setlocale])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setlocale]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setlocale]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([setlocale])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SETLOCALE$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_JA
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_JA$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SETSOCKOPT], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SETSOCKOPT], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SETSOCKOPT_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SETSOCKOPT_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SETSOCKOPT_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SETSOCKOPT_FALSE])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_MODULE_INDICATOR([setsockopt])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([setsockopt])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setsockopt]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setsockopt]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([setsockopt])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SETSOCKOPT$])
m4trace:configure.ac:63: -1- gl_FUNC_SLEEP
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_SLEEP$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_sleep], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" sleep"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SLEEP], [test $HAVE_SLEEP = 0 || test $REPLACE_SLEEP = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SLEEP], [test $HAVE_SLEEP = 0 || test $REPLACE_SLEEP = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SLEEP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SLEEP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SLEEP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SLEEP_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([sleep])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sleep])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sleep]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sleep]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([sleep])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SLEEP$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_SOCKET], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_SOCKET], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SOCKET_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_SOCKET_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SOCKET_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SOCKET_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SYS_IOCTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_MODULE_INDICATOR([socket])
m4trace:configure.ac:63: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([socket])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[socket]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[socket]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([socket])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_SOCKET$])
m4trace:configure.ac:63: -1- gl_FUNC_STRERROR_R
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_strerror_r], [_AC_CHECK_DECLS([strerror_r])])
m4trace:configure.ac:63: -1- gltests_LIBSOURCES([strerror_r.c])
m4trace:configure.ac:63: -1- gl_PREREQ_STRERROR_R
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func___xpg_strerror_r], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" __xpg_strerror_r"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_catgets], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" catgets"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_snprintf], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" snprintf"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_STRING_MODULE_INDICATOR([strerror_r])
m4trace:configure.ac:63: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strerror_r])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strerror_r]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strerror_r]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([strerror_r])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_STRERROR_R$])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR([strerror_r-posix])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_STRERROR_R_POSIX$])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mman.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mprotect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_shutdown], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" shutdown"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gl_THREAD
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_PTHREAD_ATFORK$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_SYS_SINGLE_THREADED_H$])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:63: -1- gt_TMPDIR
m4trace:configure.ac:63: -1- gl_FUNC_TMPFILE
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_TMPFILE], [test $REPLACE_TMPFILE = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_TMPFILE], [test $REPLACE_TMPFILE = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TMPFILE_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_TMPFILE_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TMPFILE_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_TMPFILE_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_TMPFILE], [
    gl_PREREQ_TMPFILE
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_TMPFILE
m4trace:configure.ac:63: -1- gl_STDIO_MODULE_INDICATOR([tmpfile])
m4trace:configure.ac:63: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([tmpfile])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[tmpfile]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[tmpfile]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([tmpfile])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_TMPFILE$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^abs_aux_dir$])
m4trace:configure.ac:63: -1- gl_FUNC_USLEEP
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_usleep], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" usleep"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^useconds_t$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_USLEEP], [test $HAVE_USLEEP = 0 || test $REPLACE_USLEEP = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_USLEEP], [test $HAVE_USLEEP = 0 || test $REPLACE_USLEEP = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_USLEEP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_USLEEP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_USLEEP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_USLEEP_FALSE])
m4trace:configure.ac:63: -1- gl_UNISTD_MODULE_INDICATOR([usleep])
m4trace:configure.ac:63: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([usleep])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[usleep]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[usleep]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([usleep])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_USLEEP$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^abs_aux_dir$])
m4trace:configure.ac:63: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_mquery], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mquery"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_pstat_getprocvm], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pstat_getprocvm"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- gt_LOCALE_FR
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:63: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:63: -1- gt_LOCALE_JA
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_JA$])
m4trace:configure.ac:63: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:63: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:63: -1- gl_FUNC_WCTOB
m4trace:configure.ac:63: -1- AC_DEFUN([_AC_Func_wctob], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" wctob"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:63: -1- m4_pattern_allow([^HAVE_DECL_WCTOB$])
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WCTOB], [test $HAVE_WCTOB = 0 || test $REPLACE_WCTOB = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WCTOB], [test $HAVE_WCTOB = 0 || test $REPLACE_WCTOB = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCTOB_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCTOB_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCTOB_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCTOB_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_WCTOB], [
    gl_PREREQ_WCTOB
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_WCTOB
m4trace:configure.ac:63: -1- gl_WCHAR_MODULE_INDICATOR([wctob])
m4trace:configure.ac:63: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wctob])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wctob]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wctob]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([wctob])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_WCTOB$])
m4trace:configure.ac:63: -1- gl_FUNC_WCTOMB
m4trace:configure.ac:63: -1- gl_CONDITIONAL([GL_COND_OBJ_WCTOMB], [test $REPLACE_WCTOMB = 1])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([GL_COND_OBJ_WCTOMB], [test $REPLACE_WCTOMB = 1])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCTOMB_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_COND_OBJ_WCTOMB_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCTOMB_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WCTOMB_FALSE])
m4trace:configure.ac:63: -1- AM_COND_IF([GL_COND_OBJ_WCTOMB], [
    gl_PREREQ_WCTOMB
  ])
m4trace:configure.ac:63: -1- gl_PREREQ_WCTOMB
m4trace:configure.ac:63: -1- gl_STDLIB_MODULE_INDICATOR([wctomb])
m4trace:configure.ac:63: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wctomb])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wctomb]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wctomb]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:63: -1- gl_MODULE_INDICATOR_FOR_TESTS([wctomb])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GNULIB_TEST_WCTOMB$])
m4trace:configure.ac:63: -1- gl_YIELD
m4trace:configure.ac:63: -1- m4_pattern_allow([^YIELD_LIB$])
m4trace:configure.ac:63: -1- gl_CC_GNULIB_WARNINGS
m4trace:configure.ac:63: -1- m4_pattern_allow([^GL_CFLAG_GNULIB_WARNINGS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBCOREUTILS_LIBDEPS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBCOREUTILS_LTLIBDEPS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBTESTS_LIBDEPS$])
m4trace:configure.ac:64: -1- coreutils_MACROS
m4trace:configure.ac:64: -1- AM_MISSING_PROG([HELP2MAN], [help2man])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HELP2MAN$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^MAN$])
m4trace:configure.ac:64: -1- gl_CHECK_ALL_TYPES
m4trace:configure.ac:64: -1- m4_pattern_allow([^volatile$])
m4trace:configure.ac:64: -1- AC_TYPE_UNSIGNED_LONG_LONG_INT
m4trace:configure.ac:64: -1- _AC_TYPE_LONG_LONG_SNIPPET
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:64: -1- gl_CHECK_ALL_HEADERS
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_hurd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" hurd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_linux_falloc_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" linux/falloc.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_linux_fs_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" linux/fs.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_paths_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" paths.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_priv_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" priv.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_stropts_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stropts.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_sys_mtio_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/mtio.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_sys_systeminfo_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/systeminfo.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_syslog_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" syslog.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_SYS_SYSCTL_H$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_AUTHOR$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^ino_t$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^major_t$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^minor_t$])
m4trace:configure.ac:64: -1- gl_CHECK_DECLS
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_grp_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" grp.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_pwd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" pwd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_DECL_GETGRGID$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_DECL_GETPWUID$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_DECL_TTYNAME$])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Check_Decl_geteuid], [_AC_CHECK_DECLS([geteuid])])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_DECL_GETEUID$])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Check_Decl_getlogin], [_AC_CHECK_DECLS([getlogin])])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Check_Decl_getuid], [_AC_CHECK_DECLS([getuid])])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_DECL_GETUID$])
m4trace:configure.ac:64: -1- gl_PREREQ
m4trace:configure.ac:64: -1- gl_FUNC_NONREENTRANT_EUIDACCESS
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_DECL_SETREGID$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^PREFER_NONREENTRANT_EUIDACCESS$])
m4trace:configure.ac:64: -1- gl_FUNC_XATTR
m4trace:configure.ac:64: -1- m4_pattern_allow([^LIB_XATTR$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_ATTR_COPY_FILE$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^USE_XATTR$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^ARGMATCH_DIE$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^ARGMATCH_DIE_DECL$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^GNULIB_NO_VLA$])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_directio], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" directio"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_MODE_TO_SECURITY_CLASS$])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_nl_langinfo], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" nl_langinfo"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_setitimer], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" setitimer"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_setrlimit], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" setrlimit"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_prctl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" prctl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_INOTIFY_INIT$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_INOTIFY$])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_endgrent], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" endgrent"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_endpwent], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" endpwent"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_fallocate], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fallocate"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_fchown], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchown"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_fchmod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchmod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_ftruncate], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" ftruncate"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_iswspace], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" iswspace"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_mkfifo], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mkfifo"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_mbrlen], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mbrlen"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_setgroups], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" setgroups"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_sethostname], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" sethostname"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_siginterrupt], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" siginterrupt"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_sync], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" sync"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_syncfs], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" syncfs"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_sysctl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" sysctl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_sysinfo], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" sysinfo"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_tcgetpgrp], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" tcgetpgrp"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_getgrgid_nomembers], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getgrgid_nomembers"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_getgrnam_nomembers], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getgrnam_nomembers"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Func_getgrent_nomembers], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getgrent_nomembers"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:64: -1- cu_PREREQ_STAT_PROG
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_OS_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" OS.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_netinet_in_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" netinet/in.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Header_sys_vfs_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/vfs.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_NFS_VFS_H$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_NFS_NFS_CLIENT_H$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STATVFS_F_BASETYPE$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STATVFS_F_FSTYPENAME$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STATVFS_F_TYPE$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STATVFS_F_NAMEMAX$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^STRUCT_STATVFS_F_FSID_IS_INTEGER$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STATFS_F_NAMELEN$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STATFS_F_NAMEMAX$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STATFS_F_TYPE$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_STRUCT_STATFS_F_FRSIZE$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^STRUCT_STATFS_F_FSID_IS_INTEGER$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^LIB_FDATASYNC$])
m4trace:configure.ac:64: -1- AC_DEFUN([_AC_Check_Decl_fdatasync], [_AC_CHECK_DECLS([fdatasync])])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_CAP$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^LIB_CAP$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^SEQ_LIBM$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^HAVE_FPSETPREC$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^TTY_GROUP_NAME$])
m4trace:configure.ac:67: -1- AM_CONDITIONAL([HAVE_PERL], [test "$gl_cv_prog_perl" != no])
m4trace:configure.ac:67: -1- m4_pattern_allow([^HAVE_PERL_TRUE$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^HAVE_PERL_FALSE$])
m4trace:configure.ac:67: -1- _AM_SUBST_NOTMAKE([HAVE_PERL_TRUE])
m4trace:configure.ac:67: -1- _AM_SUBST_NOTMAKE([HAVE_PERL_FALSE])
m4trace:configure.ac:73: -1- AC_DEFUN([gl_GCC_VERSION_IFELSE], [AC_PREPROC_IFELSE(
    [AC_LANG_PROGRAM(
      [[
#if ($1) < __GNUC__ || (($1) == __GNUC__ && ($2) <= __GNUC_MINOR__)
/* ok */
#else
# error "your version of gcc is older than $1.$2"
#endif
      ]]),
    ], [$3], [$4])
  
])
m4trace:configure.ac:115: -1- AM_CONDITIONAL([SINGLE_BINARY], [test "$gl_single_binary" != no])
m4trace:configure.ac:115: -1- m4_pattern_allow([^SINGLE_BINARY_TRUE$])
m4trace:configure.ac:115: -1- m4_pattern_allow([^SINGLE_BINARY_FALSE$])
m4trace:configure.ac:115: -1- _AM_SUBST_NOTMAKE([SINGLE_BINARY_TRUE])
m4trace:configure.ac:115: -1- _AM_SUBST_NOTMAKE([SINGLE_BINARY_FALSE])
m4trace:configure.ac:129: -1- AM_CONDITIONAL([BOLD_MAN_REFS], [test "$gl_bold_manpages" != no])
m4trace:configure.ac:129: -1- m4_pattern_allow([^BOLD_MAN_REFS_TRUE$])
m4trace:configure.ac:129: -1- m4_pattern_allow([^BOLD_MAN_REFS_FALSE$])
m4trace:configure.ac:129: -1- _AM_SUBST_NOTMAKE([BOLD_MAN_REFS_TRUE])
m4trace:configure.ac:129: -1- _AM_SUBST_NOTMAKE([BOLD_MAN_REFS_FALSE])
m4trace:configure.ac:131: -1- gl_GCC_VERSION_IFELSE([4], [6], [test -d "$srcdir"/.git \
                          && ! test -f "$srcdir"/.tarball-version \
                          && gl_gcc_warnings=yes])
m4trace:configure.ac:156: -1- gl_WARN_ADD([-Werror], [WERROR_CFLAGS])
m4trace:configure.ac:156: -1- gl_UNKNOWN_WARNINGS_ARE_ERRORS([C])
m4trace:configure.ac:156: -1- gl_UNKNOWN_WARNINGS_ARE_ERRORS_IMPL
m4trace:configure.ac:156: -1- gl_COMPILER_OPTION_IF([-Werror -Wunknown-warning-option], [gl_unknown_warnings_are_errors='-Wunknown-warning-option -Werror'], [gl_unknown_warnings_are_errors=])
m4trace:configure.ac:156: -1- gl_COMPILER_OPTION_IF([-Werror], [gl_AS_VAR_APPEND(m4_if([WERROR_CFLAGS], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[WERROR_CFLAGS]]), [" -Werror"])], [], [])
m4trace:configure.ac:156: -1- m4_pattern_allow([^WERROR_CFLAGS$])
m4trace:configure.ac:157: -1- m4_pattern_allow([^WERROR_CFLAGS$])
m4trace:configure.ac:207: -1- gl_MANYWARN_ALL_GCC([ws])
m4trace:configure.ac:208: -1- gl_MANYWARN_COMPLEMENT([ws], [$ws], [$nw])
m4trace:configure.ac:210: -1- gl_WARN_ADD([$w])
m4trace:configure.ac:210: -1- gl_COMPILER_OPTION_IF([$w], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" $w"])], [], [])
m4trace:configure.ac:210: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:212: -1- gl_WARN_ADD([-Wno-sign-compare])
m4trace:configure.ac:212: -1- gl_COMPILER_OPTION_IF([-Wno-sign-compare], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" -Wno-sign-compare"])], [], [])
m4trace:configure.ac:212: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:213: -1- gl_WARN_ADD([-Wno-unused-parameter])
m4trace:configure.ac:213: -1- gl_COMPILER_OPTION_IF([-Wno-unused-parameter], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" -Wno-unused-parameter"])], [], [])
m4trace:configure.ac:213: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:214: -1- gl_WARN_ADD([-Wno-format-nonliteral])
m4trace:configure.ac:214: -1- gl_COMPILER_OPTION_IF([-Wno-format-nonliteral], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" -Wno-format-nonliteral"])], [], [])
m4trace:configure.ac:214: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:227: -1- gl_WARN_ADD([-Wno-format-extra-args])
m4trace:configure.ac:227: -1- gl_COMPILER_OPTION_IF([-Wno-format-extra-args], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" -Wno-format-extra-args"])], [], [])
m4trace:configure.ac:227: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:228: -1- gl_WARN_ADD([-Wno-tautological-constant-out-of-range-compare])
m4trace:configure.ac:228: -1- gl_COMPILER_OPTION_IF([-Wno-tautological-constant-out-of-range-compare], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" -Wno-tautological-constant-out-of-range-compare"])], [], [])
m4trace:configure.ac:228: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:231: -1- gl_WARN_ADD([-fdiagnostics-show-option])
m4trace:configure.ac:231: -1- gl_COMPILER_OPTION_IF([-fdiagnostics-show-option], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" -fdiagnostics-show-option"])], [], [])
m4trace:configure.ac:231: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:232: -1- gl_WARN_ADD([-funit-at-a-time])
m4trace:configure.ac:232: -1- gl_COMPILER_OPTION_IF([-funit-at-a-time], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" -funit-at-a-time"])], [], [])
m4trace:configure.ac:232: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:234: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:236: -1- m4_pattern_allow([^lint$])
m4trace:configure.ac:244: -1- m4_pattern_allow([^GNULIB_PORTCHECK$])
m4trace:configure.ac:262: -1- gl_WARN_ADD([-Wno-return-local-addr])
m4trace:configure.ac:262: -1- gl_COMPILER_OPTION_IF([-Wno-return-local-addr], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[]]), [" -Wno-return-local-addr"])], [], [])
m4trace:configure.ac:262: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:264: -1- gl_MANYWARN_COMPLEMENT([GNULIB_WARN_CFLAGS], [$WARN_CFLAGS], [$nw])
m4trace:configure.ac:265: -1- m4_pattern_allow([^GNULIB_WARN_CFLAGS$])
m4trace:configure.ac:274: -1- gl_MANYWARN_COMPLEMENT([GNULIB_TEST_WARN_CFLAGS], [$GNULIB_WARN_CFLAGS], [$nw])
m4trace:configure.ac:276: -1- m4_pattern_allow([^GNULIB_TEST_WARN_CFLAGS$])
m4trace:configure.ac:279: -1- m4_pattern_allow([^HAVE_VFORK_H$])
m4trace:configure.ac:279: -1- m4_pattern_allow([^HAVE_WORKING_VFORK$])
m4trace:configure.ac:279: -1- m4_pattern_allow([^vfork$])
m4trace:configure.ac:279: -1- m4_pattern_allow([^HAVE_WORKING_FORK$])
m4trace:configure.ac:283: -2- gl_ADD_PROG([optional_bin_progs], [chroot])
m4trace:configure.ac:282: -1- m4_pattern_allow([^HAVE_CHROOT$])
m4trace:configure.ac:285: -2- gl_ADD_PROG([optional_bin_progs], [hostid])
m4trace:configure.ac:284: -1- m4_pattern_allow([^HAVE_GETHOSTID$])
m4trace:configure.ac:287: -2- gl_ADD_PROG([optional_bin_progs], [timeout])
m4trace:configure.ac:286: -1- m4_pattern_allow([^HAVE_SIGSUSPEND$])
m4trace:configure.ac:289: -1- gl_WINSIZE_IN_PTEM
m4trace:configure.ac:289: -1- m4_pattern_allow([^WINSIZE_IN_PTEM$])
m4trace:configure.ac:336: -1- m4_pattern_allow([^LOCALTIME_CACHE$])
m4trace:configure.ac:340: -1- m4_pattern_allow([^HAVE_FCLONEFILEAT$])
m4trace:configure.ac:343: -1- m4_pattern_allow([^HAVE_GETATTRAT$])
m4trace:configure.ac:346: -1- m4_pattern_allow([^LIB_NVPAIR$])
m4trace:configure.ac:350: -1- m4_pattern_allow([^HAVE_STATX$])
m4trace:configure.ac:353: -1- m4_pattern_allow([^HAVE_INITGROUPS$])
m4trace:configure.ac:355: -1- m4_pattern_allow([^HAVE_LIBOS$])
m4trace:configure.ac:358: -1- m4_pattern_allow([^HAVE_SYSLOG$])
m4trace:configure.ac:362: -1- m4_pattern_allow([^HAVE_SYSLOG$])
m4trace:configure.ac:378: -1- m4_pattern_allow([^HAVE_NICE$])
m4trace:configure.ac:382: -1- gl_ADD_PROG([optional_bin_progs], [nice])
m4trace:configure.ac:386: -1- m4_pattern_allow([^DEV_FD_MIGHT_BE_CHR$])
m4trace:configure.ac:394: -1- AC_DEFUN([coreutils_DUMMY_1], [
  AC_REQUIRE([gl_READUTMP])
  if test $ac_cv_header_utmp_h = yes || test $ac_cv_header_utmpx_h = yes; then
    gl_ADD_PROG([optional_bin_progs], [who])
    gl_ADD_PROG([optional_bin_progs], [users])
    gl_ADD_PROG([optional_bin_progs], [pinky])
  fi
])
m4trace:configure.ac:403: -1- coreutils_DUMMY_1
m4trace:configure.ac:403: -1- gl_ADD_PROG([optional_bin_progs], [who])
m4trace:configure.ac:403: -1- gl_ADD_PROG([optional_bin_progs], [users])
m4trace:configure.ac:403: -1- gl_ADD_PROG([optional_bin_progs], [pinky])
m4trace:configure.ac:416: -1- m4_pattern_allow([^HAVE_UT_HOST$])
m4trace:configure.ac:430: -1- m4_pattern_allow([^HAVE_UTMPX_H$])
m4trace:configure.ac:431: -1- m4_pattern_allow([^HAVE_UT_HOST$])
m4trace:configure.ac:435: -1- GNULIB_BOOT_TIME([gl_ADD_PROG([optional_bin_progs], [uptime])])
m4trace:configure.ac:435: -1- m4_pattern_allow([^HAVE_SYSCTL$])
m4trace:configure.ac:435: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:435: -1- m4_pattern_allow([^HAVE_SYS_SYSCTL_H$])
m4trace:configure.ac:435: -1- AC_DEFUN([_AC_Header_utmp_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" utmp.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:435: -1- AC_DEFUN([_AC_Header_utmpx_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" utmpx.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:435: -1- AC_DEFUN([_AC_Header_OS_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" OS.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:435: -1- gl_ADD_PROG([optional_bin_progs], [uptime])
m4trace:configure.ac:438: -1- gl_HEADER_TIOCGWINSZ_NEEDS_SYS_IOCTL
m4trace:configure.ac:438: -1- m4_pattern_allow([^GWINSZ_IN_SYS_IOCTL$])
m4trace:configure.ac:441: -1- gl_ADD_PROG([optional_bin_progs], [stty])
m4trace:configure.ac:457: -1- m4_pattern_allow([^TERMIOS_NEEDS_XOPEN_SOURCE$])
m4trace:configure.ac:472: -1- m4_pattern_allow([^HAVE_C_LINE$])
m4trace:configure.ac:477: -1- gl_WINSIZE_IN_PTEM
m4trace:configure.ac:477: -1- m4_pattern_allow([^WINSIZE_IN_PTEM$])
m4trace:configure.ac:479: -1- gl_HEADER_TIOCGWINSZ_IN_TERMIOS_H
m4trace:configure.ac:498: -1- m4_pattern_allow([^GWINSZ_IN_SYS_PTY$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DECL_SYS_SIGLIST$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DECL__SYS_SIGLIST$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DECL___SYS_SIGLIST$])
m4trace:configure.ac:509: -1- gl_ADD_PROG([optional_bin_progs], [df])
m4trace:configure.ac:518: -1- gl_WARN_ADD([-Werror], [CFLAGS])
m4trace:configure.ac:518: -1- gl_COMPILER_OPTION_IF([-Werror], [gl_AS_VAR_APPEND(m4_if([CFLAGS], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[CFLAGS]]), [" -Werror"])], [], [])
m4trace:configure.ac:518: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:519: -1- gl_WARN_ADD([-errwarn], [CFLAGS])
m4trace:configure.ac:519: -1- gl_COMPILER_OPTION_IF([-errwarn], [gl_AS_VAR_APPEND(m4_if([CFLAGS], [], [[WARN_]_AC_LANG_PREFIX[FLAGS]], [[CFLAGS]]), [" -errwarn"])], [], [])
m4trace:configure.ac:519: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:541: -1- gl_ADD_PROG([optional_bin_progs], [stdbuf])
m4trace:configure.ac:548: -1- m4_pattern_allow([^HAVE_CPUID$])
m4trace:configure.ac:571: -1- m4_pattern_allow([^HAVE_PCLMUL_INTRINSIC$])
m4trace:configure.ac:592: -1- m4_pattern_allow([^USE_PCLMUL_CRC32$])
m4trace:configure.ac:595: -1- AM_CONDITIONAL([USE_PCLMUL_CRC32], [test "x$cpuid_exists" = "xyes" &&
                test "x$pclmul_intrinsic_exists" = "xyes"])
m4trace:configure.ac:595: -1- m4_pattern_allow([^USE_PCLMUL_CRC32_TRUE$])
m4trace:configure.ac:595: -1- m4_pattern_allow([^USE_PCLMUL_CRC32_FALSE$])
m4trace:configure.ac:595: -1- _AM_SUBST_NOTMAKE([USE_PCLMUL_CRC32_TRUE])
m4trace:configure.ac:595: -1- _AM_SUBST_NOTMAKE([USE_PCLMUL_CRC32_FALSE])
m4trace:configure.ac:622: -1- m4_pattern_allow([^HAVE_AVX2_INTRINSIC$])
m4trace:configure.ac:643: -1- m4_pattern_allow([^USE_AVX2_WC_LINECOUNT$])
m4trace:configure.ac:645: -1- AM_CONDITIONAL([USE_AVX2_WC_LINECOUNT], [test "x$get_cpuid_count_exists" = "xyes" &&
                test "x$avx2_intrinsic_exists" = "xyes"])
m4trace:configure.ac:645: -1- m4_pattern_allow([^USE_AVX2_WC_LINECOUNT_TRUE$])
m4trace:configure.ac:645: -1- m4_pattern_allow([^USE_AVX2_WC_LINECOUNT_FALSE$])
m4trace:configure.ac:645: -1- _AM_SUBST_NOTMAKE([USE_AVX2_WC_LINECOUNT_TRUE])
m4trace:configure.ac:645: -1- _AM_SUBST_NOTMAKE([USE_AVX2_WC_LINECOUNT_FALSE])
m4trace:configure.ac:658: -1- m4_include([m4/cu-progs.m4])
m4trace:m4/cu-progs.m4:2: -1- gl_ADD_PROG([optional_bin_progs], [@<:@])
m4trace:m4/cu-progs.m4:3: -1- gl_ADD_PROG([optional_bin_progs], [b2sum])
m4trace:m4/cu-progs.m4:4: -1- gl_ADD_PROG([optional_bin_progs], [base64])
m4trace:m4/cu-progs.m4:5: -1- gl_ADD_PROG([optional_bin_progs], [base32])
m4trace:m4/cu-progs.m4:6: -1- gl_ADD_PROG([optional_bin_progs], [basenc])
m4trace:m4/cu-progs.m4:7: -1- gl_ADD_PROG([optional_bin_progs], [basename])
m4trace:m4/cu-progs.m4:8: -1- gl_ADD_PROG([optional_bin_progs], [cat])
m4trace:m4/cu-progs.m4:9: -1- gl_ADD_PROG([optional_bin_progs], [chcon])
m4trace:m4/cu-progs.m4:10: -1- gl_ADD_PROG([optional_bin_progs], [chgrp])
m4trace:m4/cu-progs.m4:11: -1- gl_ADD_PROG([optional_bin_progs], [chmod])
m4trace:m4/cu-progs.m4:12: -1- gl_ADD_PROG([optional_bin_progs], [chown])
m4trace:m4/cu-progs.m4:13: -1- gl_ADD_PROG([optional_bin_progs], [cksum])
m4trace:m4/cu-progs.m4:14: -1- gl_ADD_PROG([optional_bin_progs], [comm])
m4trace:m4/cu-progs.m4:15: -1- gl_ADD_PROG([optional_bin_progs], [cp])
m4trace:m4/cu-progs.m4:16: -1- gl_ADD_PROG([optional_bin_progs], [csplit])
m4trace:m4/cu-progs.m4:17: -1- gl_ADD_PROG([optional_bin_progs], [cut])
m4trace:m4/cu-progs.m4:18: -1- gl_ADD_PROG([optional_bin_progs], [date])
m4trace:m4/cu-progs.m4:19: -1- gl_ADD_PROG([optional_bin_progs], [dd])
m4trace:m4/cu-progs.m4:20: -1- gl_ADD_PROG([optional_bin_progs], [dir])
m4trace:m4/cu-progs.m4:21: -1- gl_ADD_PROG([optional_bin_progs], [dircolors])
m4trace:m4/cu-progs.m4:22: -1- gl_ADD_PROG([optional_bin_progs], [dirname])
m4trace:m4/cu-progs.m4:23: -1- gl_ADD_PROG([optional_bin_progs], [du])
m4trace:m4/cu-progs.m4:24: -1- gl_ADD_PROG([optional_bin_progs], [echo])
m4trace:m4/cu-progs.m4:25: -1- gl_ADD_PROG([optional_bin_progs], [env])
m4trace:m4/cu-progs.m4:26: -1- gl_ADD_PROG([optional_bin_progs], [expand])
m4trace:m4/cu-progs.m4:27: -1- gl_ADD_PROG([optional_bin_progs], [expr])
m4trace:m4/cu-progs.m4:28: -1- gl_ADD_PROG([optional_bin_progs], [factor])
m4trace:m4/cu-progs.m4:29: -1- gl_ADD_PROG([optional_bin_progs], [false])
m4trace:m4/cu-progs.m4:30: -1- gl_ADD_PROG([optional_bin_progs], [fmt])
m4trace:m4/cu-progs.m4:31: -1- gl_ADD_PROG([optional_bin_progs], [fold])
m4trace:m4/cu-progs.m4:32: -1- gl_ADD_PROG([optional_bin_progs], [ginstall])
m4trace:m4/cu-progs.m4:33: -1- gl_ADD_PROG([optional_bin_progs], [groups])
m4trace:m4/cu-progs.m4:34: -1- gl_ADD_PROG([optional_bin_progs], [head])
m4trace:m4/cu-progs.m4:35: -1- gl_ADD_PROG([optional_bin_progs], [id])
m4trace:m4/cu-progs.m4:36: -1- gl_ADD_PROG([optional_bin_progs], [join])
m4trace:m4/cu-progs.m4:37: -1- gl_ADD_PROG([optional_bin_progs], [kill])
m4trace:m4/cu-progs.m4:38: -1- gl_ADD_PROG([optional_bin_progs], [link])
m4trace:m4/cu-progs.m4:39: -1- gl_ADD_PROG([optional_bin_progs], [ln])
m4trace:m4/cu-progs.m4:40: -1- gl_ADD_PROG([optional_bin_progs], [logname])
m4trace:m4/cu-progs.m4:41: -1- gl_ADD_PROG([optional_bin_progs], [ls])
m4trace:m4/cu-progs.m4:42: -1- gl_ADD_PROG([optional_bin_progs], [md5sum])
m4trace:m4/cu-progs.m4:43: -1- gl_ADD_PROG([optional_bin_progs], [mkdir])
m4trace:m4/cu-progs.m4:44: -1- gl_ADD_PROG([optional_bin_progs], [mkfifo])
m4trace:m4/cu-progs.m4:45: -1- gl_ADD_PROG([optional_bin_progs], [mknod])
m4trace:m4/cu-progs.m4:46: -1- gl_ADD_PROG([optional_bin_progs], [mktemp])
m4trace:m4/cu-progs.m4:47: -1- gl_ADD_PROG([optional_bin_progs], [mv])
m4trace:m4/cu-progs.m4:48: -1- gl_ADD_PROG([optional_bin_progs], [nl])
m4trace:m4/cu-progs.m4:49: -1- gl_ADD_PROG([optional_bin_progs], [nproc])
m4trace:m4/cu-progs.m4:50: -1- gl_ADD_PROG([optional_bin_progs], [nohup])
m4trace:m4/cu-progs.m4:51: -1- gl_ADD_PROG([optional_bin_progs], [numfmt])
m4trace:m4/cu-progs.m4:52: -1- gl_ADD_PROG([optional_bin_progs], [od])
m4trace:m4/cu-progs.m4:53: -1- gl_ADD_PROG([optional_bin_progs], [paste])
m4trace:m4/cu-progs.m4:54: -1- gl_ADD_PROG([optional_bin_progs], [pathchk])
m4trace:m4/cu-progs.m4:55: -1- gl_ADD_PROG([optional_bin_progs], [pr])
m4trace:m4/cu-progs.m4:56: -1- gl_ADD_PROG([optional_bin_progs], [printenv])
m4trace:m4/cu-progs.m4:57: -1- gl_ADD_PROG([optional_bin_progs], [printf])
m4trace:m4/cu-progs.m4:58: -1- gl_ADD_PROG([optional_bin_progs], [ptx])
m4trace:m4/cu-progs.m4:59: -1- gl_ADD_PROG([optional_bin_progs], [pwd])
m4trace:m4/cu-progs.m4:60: -1- gl_ADD_PROG([optional_bin_progs], [readlink])
m4trace:m4/cu-progs.m4:61: -1- gl_ADD_PROG([optional_bin_progs], [realpath])
m4trace:m4/cu-progs.m4:62: -1- gl_ADD_PROG([optional_bin_progs], [rm])
m4trace:m4/cu-progs.m4:63: -1- gl_ADD_PROG([optional_bin_progs], [rmdir])
m4trace:m4/cu-progs.m4:64: -1- gl_ADD_PROG([optional_bin_progs], [runcon])
m4trace:m4/cu-progs.m4:65: -1- gl_ADD_PROG([optional_bin_progs], [seq])
m4trace:m4/cu-progs.m4:66: -1- gl_ADD_PROG([optional_bin_progs], [sha1sum])
m4trace:m4/cu-progs.m4:67: -1- gl_ADD_PROG([optional_bin_progs], [sha224sum])
m4trace:m4/cu-progs.m4:68: -1- gl_ADD_PROG([optional_bin_progs], [sha256sum])
m4trace:m4/cu-progs.m4:69: -1- gl_ADD_PROG([optional_bin_progs], [sha384sum])
m4trace:m4/cu-progs.m4:70: -1- gl_ADD_PROG([optional_bin_progs], [sha512sum])
m4trace:m4/cu-progs.m4:71: -1- gl_ADD_PROG([optional_bin_progs], [shred])
m4trace:m4/cu-progs.m4:72: -1- gl_ADD_PROG([optional_bin_progs], [shuf])
m4trace:m4/cu-progs.m4:73: -1- gl_ADD_PROG([optional_bin_progs], [sleep])
m4trace:m4/cu-progs.m4:74: -1- gl_ADD_PROG([optional_bin_progs], [sort])
m4trace:m4/cu-progs.m4:75: -1- gl_ADD_PROG([optional_bin_progs], [split])
m4trace:m4/cu-progs.m4:76: -1- gl_ADD_PROG([optional_bin_progs], [stat])
m4trace:m4/cu-progs.m4:77: -1- gl_ADD_PROG([optional_bin_progs], [sum])
m4trace:m4/cu-progs.m4:78: -1- gl_ADD_PROG([optional_bin_progs], [sync])
m4trace:m4/cu-progs.m4:79: -1- gl_ADD_PROG([optional_bin_progs], [tac])
m4trace:m4/cu-progs.m4:80: -1- gl_ADD_PROG([optional_bin_progs], [tail])
m4trace:m4/cu-progs.m4:81: -1- gl_ADD_PROG([optional_bin_progs], [tee])
m4trace:m4/cu-progs.m4:82: -1- gl_ADD_PROG([optional_bin_progs], [test])
m4trace:m4/cu-progs.m4:83: -1- gl_ADD_PROG([optional_bin_progs], [touch])
m4trace:m4/cu-progs.m4:84: -1- gl_ADD_PROG([optional_bin_progs], [tr])
m4trace:m4/cu-progs.m4:85: -1- gl_ADD_PROG([optional_bin_progs], [true])
m4trace:m4/cu-progs.m4:86: -1- gl_ADD_PROG([optional_bin_progs], [truncate])
m4trace:m4/cu-progs.m4:87: -1- gl_ADD_PROG([optional_bin_progs], [tsort])
m4trace:m4/cu-progs.m4:88: -1- gl_ADD_PROG([optional_bin_progs], [tty])
m4trace:m4/cu-progs.m4:89: -1- gl_ADD_PROG([optional_bin_progs], [uname])
m4trace:m4/cu-progs.m4:90: -1- gl_ADD_PROG([optional_bin_progs], [unexpand])
m4trace:m4/cu-progs.m4:91: -1- gl_ADD_PROG([optional_bin_progs], [uniq])
m4trace:m4/cu-progs.m4:92: -1- gl_ADD_PROG([optional_bin_progs], [unlink])
m4trace:m4/cu-progs.m4:93: -1- gl_ADD_PROG([optional_bin_progs], [vdir])
m4trace:m4/cu-progs.m4:94: -1- gl_ADD_PROG([optional_bin_progs], [wc])
m4trace:m4/cu-progs.m4:95: -1- gl_ADD_PROG([optional_bin_progs], [whoami])
m4trace:m4/cu-progs.m4:96: -1- gl_ADD_PROG([optional_bin_progs], [yes])
m4trace:m4/cu-progs.m4:108: -1- gl_INCLUDE_EXCLUDE_PROG([optional_bin_progs], [arch,coreutils,hostname])
m4trace:m4/cu-progs.m4:108: -1- gl_REMOVE_PROG([optional_bin_progs], [$gl_i])
m4trace:m4/cu-progs.m4:108: -1- gl_ADD_PROG([optional_bin_progs], [$gl_i])
m4trace:configure.ac:703: -1- gl_REMOVE_PROG([single_binary_progs], [$prog])
m4trace:configure.ac:704: -1- gl_ADD_PROG([optional_bin_progs], [$prog])
m4trace:configure.ac:727: -1- m4_pattern_allow([^single_binary_progs$])
m4trace:configure.ac:728: -1- m4_pattern_allow([^single_binary_libs$])
m4trace:configure.ac:729: -1- m4_pattern_allow([^single_binary_deps$])
m4trace:configure.ac:730: -1- m4_pattern_allow([^single_binary_install_type$])
m4trace:configure.ac:746: -1- m4_pattern_allow([^bin_PROGRAMS$])
m4trace:configure.ac:746: -1- AM_SUBST_NOTMAKE([bin_PROGRAMS])
m4trace:configure.ac:746: -1- _AM_SUBST_NOTMAKE([bin_PROGRAMS])
m4trace:configure.ac:747: -1- m4_pattern_allow([^pkglibexec_PROGRAMS$])
m4trace:configure.ac:747: -1- AM_SUBST_NOTMAKE([pkglibexec_PROGRAMS])
m4trace:configure.ac:747: -1- _AM_SUBST_NOTMAKE([pkglibexec_PROGRAMS])
m4trace:configure.ac:748: -1- m4_pattern_allow([^man1_MANS$])
m4trace:configure.ac:748: -1- AM_SUBST_NOTMAKE([man1_MANS])
m4trace:configure.ac:748: -1- _AM_SUBST_NOTMAKE([man1_MANS])
m4trace:configure.ac:749: -1- m4_pattern_allow([^EXTRA_MANS$])
m4trace:configure.ac:749: -1- AM_SUBST_NOTMAKE([EXTRA_MANS])
m4trace:configure.ac:749: -1- _AM_SUBST_NOTMAKE([EXTRA_MANS])
m4trace:configure.ac:751: -1- m4_pattern_allow([^built_programs$])
m4trace:configure.ac:753: -1- AM_CONDITIONAL([CROSS_COMPILING], [test "$cross_compiling" = yes])
m4trace:configure.ac:753: -1- m4_pattern_allow([^CROSS_COMPILING_TRUE$])
m4trace:configure.ac:753: -1- m4_pattern_allow([^CROSS_COMPILING_FALSE$])
m4trace:configure.ac:753: -1- _AM_SUBST_NOTMAKE([CROSS_COMPILING_TRUE])
m4trace:configure.ac:753: -1- _AM_SUBST_NOTMAKE([CROSS_COMPILING_FALSE])
m4trace:configure.ac:759: -1- AM_GNU_GETTEXT([external], [need-formatstring-macros])
m4trace:configure.ac:759: -1- AM_GNU_GETTEXT_NEED([need-formatstring-macros])
m4trace:configure.ac:759: -1- AM_PO_SUBDIRS
m4trace:configure.ac:759: -1- AM_NLS
m4trace:configure.ac:759: -1- m4_pattern_allow([^USE_NLS$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^GETTEXT_MACRO_VERSION$])
m4trace:configure.ac:759: -1- AM_PATH_PROG_WITH_TEST([MSGFMT], [msgfmt], [$ac_dir/$ac_word --statistics /dev/null >&5 2>&1 &&
     (if $ac_dir/$ac_word --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi)], [:])
m4trace:configure.ac:759: -1- m4_pattern_allow([^MSGFMT$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^GMSGFMT$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^MSGFMT_015$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^GMSGFMT_015$])
m4trace:configure.ac:759: -1- AM_PATH_PROG_WITH_TEST([XGETTEXT], [xgettext], [$ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >&5 2>&1 &&
     (if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi)], [:])
m4trace:configure.ac:759: -1- m4_pattern_allow([^XGETTEXT$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^XGETTEXT_015$])
m4trace:configure.ac:759: -1- AM_PATH_PROG_WITH_TEST([MSGMERGE], [msgmerge], [$ac_dir/$ac_word --update -q /dev/null /dev/null >&5 2>&1], [:])
m4trace:configure.ac:759: -1- m4_pattern_allow([^MSGMERGE$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^XGETTEXT_EXTRA_OPTIONS$])
m4trace:configure.ac:759: -1- gt_INTL_MACOSX
m4trace:configure.ac:759: -1- m4_pattern_allow([^HAVE_CFPREFERENCESCOPYAPPVALUE$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^HAVE_CFLOCALECOPYPREFERREDLANGUAGES$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^INTL_MACOSX_LIBS$])
m4trace:configure.ac:759: -1- AM_ICONV_LINK
m4trace:configure.ac:759: -1- AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCICONV])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:759: -1- m4_pattern_allow([^HAVE_ICONV$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^LIBICONV$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^LTLIBICONV$])
m4trace:configure.ac:759: -1- AC_LIB_LINKFLAGS_BODY([intl])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([
    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"
    eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
    eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
  ])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([
          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"
          eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
          eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
        ])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:759: -1- m4_pattern_allow([^ENABLE_NLS$])
m4trace:configure.ac:759: -1- AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCINTL])
m4trace:configure.ac:759: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:759: -1- m4_pattern_allow([^HAVE_GETTEXT$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^HAVE_DCGETTEXT$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^INTLLIBS$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^LIBINTL$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^LTLIBINTL$])
m4trace:configure.ac:759: -1- m4_pattern_allow([^POSUB$])
m4trace:configure.ac:760: -1- AM_GNU_GETTEXT_VERSION([0.19.2])
m4trace:configure.ac:763: -1- gt_LOCALE_FR
m4trace:configure.ac:763: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:770: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:770: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:770: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:770: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:770: -1- m4_pattern_allow([^CONFIG_INCLUDE$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^gl_LIBOBJDEPS$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^gltests_LIBOBJS$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^gltests_LTLIBOBJS$])
m4trace:configure.ac:770: -1- m4_pattern_allow([^gltests_LIBOBJDEPS$])
m4trace:configure.ac:770: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:770: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:770: -1- AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles])
